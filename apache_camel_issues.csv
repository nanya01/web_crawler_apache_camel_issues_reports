Camel Project ID,Type,Assignee,Reporter,Affected Versions,Fix Versions,Created Date,Created Epoch,Updated Date,Resolution Date,Description,Comments
21814,Improvement,Unassigned,Thomas Cunningham,None,4.11.0,2025-02-27T21:05:46+0000,1740690346,2025-02-27T21:05:46+0000,,pinecone query can take a number of arguments that camel-pinecone does not support yet :,No comments found
21813,Bug,Unassigned,David Benes,"4.6.0,4.7.0,4.10.0",None,2025-02-27T17:25:35+0000,1740677135,2025-02-27T21:10:20+0000,,"When using ProducerTemplate and sending data to ActiveMQ with InOut exchange pattern it opens a 2 threads that are still there even when response is returned and producer template is closed.
Thread names are:
If you are using this pattern to handle some requests over the time number of threads accumulates up to the number of allowed threds in the pool (if using a pool, defaults to ~1000 for ActiveMQ) and no more messages are being sent. Application has to be restarted.
Example that replicates the problem is attached. Requirements to run the example is having ActiveMQ running on localhost. Example is a simple Maven project. It contains single file that includes `main` method that replicates the problem.
This example sends messages into ActiveMQ queue in InOut exchange pattern. And another Processor is replying with slight delay.
When executed in debug mode, you will see that number of threads is only increasing. Also it prints to standard out number of threds at the beginning and in the end. At the end there is at least 2 times more threads still running as the number of messages that were send.
It behaves the same when using connection pool or not. Verified that it behaves the same with several versions of Apache Camel.
The only way found how to let those threads finish is sending the message in InOnly exchange pattern. But that is not usable as a workaround as we would not get necessary response.
Is there something that we are doing wrong when closing the producer? As it is documented that you should close the producer template and we are doing exactly that, it looks like a bug.",No comments found
21812,Improvement,Thomas Diesler,Thomas Diesler,None,None,2025-02-27T15:40:06+0000,1740670806,2025-02-27T16:26:28+0000,,"Communication with Keycloak should not happen over an insecure channel. Specifically, some OAuth/OIDC protocols require TLS before they are willing to send sensitive data across the wire.",No comments found
21811,Improvement,Thomas Diesler,Thomas Diesler,None,None,2025-02-27T10:25:34+0000,1740651934,2025-02-27T10:47:46+0000,,... this would have the benefit of not using NodePort and reuse the same TLS certificate for various services behind the SSL terminating proxy (e.g. Traefik),No comments found
21810,Task,Thomas Diesler,Thomas Diesler,None,4.11.0,2025-02-27T10:16:32+0000,1740651392,2025-02-27T10:49:54+0000,,The generated readme.md and Dockerfile are not applicable for runtimes other than Quarkus. Verify that the Dockerfile is indeed that which would come out of JKube,No comments found
21809,Improvement,Claus Ibsen,Vishesh,4.10.0,4.11.0,2025-02-27T09:56:40+0000,1740650200,2025-02-27T21:10:10+0000,,"I have observe that in camel coap library there is no way to override the these default configuration.
[] coap BlockwiseLayer uses MAX_MESSAGE_SIZE=1024, PREFERRED_BLOCK_SIZE=512, BLOCKWISE_STATUS_LIFETIME=300000, MAX_RESOURCE_BODY_SIZE=8192, BLOCKWISE_STRICT_BLOCK2_OPTION=false
Please suggest How to override the these default configuration.",No comments found
21808,Bug,Jiri Ondrusek,Jiri Ondrusek,4.11.0,4.11.0,2025-02-27T08:25:55+0000,1740644755,2025-02-27T10:48:07+0000,,"There is a code recently added (commit), which expects the `getEndpoint().getConfiguration().getCollectionDimension()` to be not null. Which might not be true. Simple code fix should be done.",No comments found
21807,Bug,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-27T08:02:35+0000,1740643355,2025-02-27T09:06:46+0000,2025-02-27T09:06:46+0000,"If you build a custom kamelet with the sql component, then this works
and this fails",No comments found
21806,Improvement,Unassigned,Thomas Cunningham,None,4.11.0,2025-02-26T20:33:58+0000,1740602038,2025-02-27T19:21:27+0000,,"camel-pinecone has the option of specifying the host to connect to for control/data plane operations :
https://github.com/pinecone-io/pinecone-java-client/blob/main/src/main/java/io/pinecone/clients/Pinecone.java#L1154-L1156
I think this would enable using camel with the Pinecone local container :
https://docs.pinecone.io/guides/operations/local-development
Add host as an endpoint parameter.",No comments found
21805,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-02-26T15:09:20+0000,1740582560,2025-02-26T17:37:35+0000,2025-02-26T17:37:35+0000,No description available,No comments found
21804,Improvement,Unassigned,Claus Ibsen,None,4.x,2025-02-26T10:30:19+0000,1740565819,2025-02-26T10:30:19+0000,,"The file component has more readLock implementations that we do not have in camel-smb.
We can take a look and see if we can port more over.",No comments found
21803,New Feature,Unassigned,Zineb Bendhiba,None,None,2025-02-26T10:16:16+0000,1740564976,2025-02-26T10:16:29+0000,,Similar to https://issues.apache.org/jira/browse/CAMEL-21718,No comments found
21802,New Feature,Nikita_Konovalov,Zineb Bendhiba,None,None,2025-02-26T10:14:56+0000,1740564896,2025-02-27T10:35:16+0000,,Similar to https://issues.apache.org/jira/browse/CAMEL-21718,No comments found
21801,New Feature,Unassigned,Claus Ibsen,None,4.x,2025-02-26T08:06:27+0000,1740557187,2025-02-26T08:06:27+0000,,"https://docs.spring.io/spring-cloud-config/docs/current/reference/html/
So you can use their config server to lookup username / password / urls to various configuration and use them as
placeholders in Camel routes.",No comments found
21800,Bug,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-26T06:34:37+0000,1740551677,2025-02-26T06:43:24+0000,2025-02-26T06:43:24+0000,No description available,No comments found
21799,Bug,Claus Ibsen,Vishesh,"4.8.0,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-26T05:43:22+0000,1740548602,2025-02-26T10:43:57+0000,2025-02-26T06:17:58+0000,"We've observed a bug in camel-coap library latest version. As per observation solution received all the packet blockwise since the payload exceed the limit. At californium library level we can clearly see that all packages received successfully. However when it delegate the response to camel we just receive the last packet instead of full payload.
The root cause of the problem in the camel-coap library is located in the class org.apache.camel.coap.CamelCoapResource where, at line 137, the method getCurrentRequest is called instead of getRequest, causing only the last packet of a blockwise transfer to be received instead of the full payload.
byte[] bytes = exchange.getCurrentRequest().getPayload();
            camelExchange.getIn().setBody(bytes);",No comments found
21798,Improvement,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-26T00:13:15+0000,1740528795,2025-02-26T19:32:44+0000,2025-02-26T19:32:44+0000,Add a proxy host / port to camel-pinecone,No comments found
21797,Improvement,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-26T00:12:30+0000,1740528750,2025-02-26T06:18:18+0000,,"While researching pinecone, I noticed a number of operations we could add to the component :",No comments found
21796,Task,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-26T00:10:19+0000,1740528619,2025-02-26T06:18:24+0000,,"In the pinecone component, collection is marked as mandatory :
https://github.com/apache/camel/blob/main/components/camel-ai/camel-pinecone/src/main/java/org/apache/camel/component/pinecone/PineconeVectorDbEndpoint.java#L47-L49
My reading of the pinecone docs is that collection is not a mandatory thing, and that collections really only apply to pod-based indexes, and not to servlerless indexes (https://docs.pinecone.io/guides/indexes/pods/understanding-collections)
https://docs.pinecone.io/reference/api/2024-10/control-plane/create_collection
I think we should remove the requirement that collection be mandatory.",No comments found
21795,Task,Andrea Cosentino,Andrea Cosentino,None,"4.10.1,4.11.0",2025-02-25T17:54:32+0000,1740506072,2025-02-26T11:16:40+0000,2025-02-26T11:16:40+0000,No description available,No comments found
21794,Bug,Claus Ibsen,Claus Ibsen,"4.8.3,4.10.0","4.10.1,4.11.0",2025-02-25T13:04:48+0000,1740488688,2025-02-25T15:04:35+0000,2025-02-25T15:04:35+0000,If you export a bean with Artemis broker then it initailizes the bean and Artemis fails when calling setBroker as it does some validation in their setter,No comments found
21793,Bug,Claus Ibsen,dvine,4.10.0,"4.10.1,4.11.0",2025-02-25T12:38:38+0000,1740487118,2025-02-27T09:32:22+0000,2025-02-27T09:32:22+0000,"When calling a route that has lots of kamelets we see that ends points fail to be created with the route cause being a concurrent java.util.ConcurrentModificationException when validateUniqueIds is called from addRouteToTemplate.
Caused by: java.util.ConcurrentModificationException
    at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)
    at java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)
    at org.apache.camel.model.RouteDefinitionHelper.validateUniqueIds(RouteDefinitionHelper.java:268)
    at org.apache.camel.impl.DefaultModel.addRouteFromTemplate(DefaultModel.java:536)
    at org.apache.camel.impl.DefaultModel.addRouteFromTemplate(DefaultModel.java:416)
    at org.apache.camel.impl.DefaultCamelContext.addRouteFromTemplate(DefaultCamelContext.java:362)
    at org.apache.camel.component.kamelet.KameletComponent$LifecycleHandler.createRouteForEndpoint(KameletComponent.java:433)
Attached is a log and a repeatable route.  I think the error could be solved with making DefaultModel.routeDefinitions a concurrent list but I cannot build this locally due to network/company setup issues to try.",No comments found
21792,Bug,Andrea Cosentino,Mark Wimpory,4.10.0,"4.10.1,4.11.0",2025-02-25T12:05:05+0000,1740485105,2025-02-25T18:57:55+0000,2025-02-25T18:57:55+0000,"The camel kinesis consumer fails when KCL is set to true.

 

 
I have isolated the issue to the below.  The kinesis client exists in the configuration according to debug but the consumer is reading from the endpoint:

The other clients (dynamodb and cloudwatch) are created withing if statements and include a reference to the configuration.",No comments found
21791,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2025-02-25T11:01:47+0000,1740481307,2025-02-25T11:01:54+0000,,"We should make it possible to use by setting transacted=true, and allow optional transaction.id prefix (need to generate uid). See for example how spring-kafka does it.
Also it may be that we need to have support for invoking being/commit/abort transaction methods, and if we can integrate this with spring-transaction / jta via Camel transacted EIP.",No comments found
21790,Bug,Claus Ibsen,Claus Ibsen,"4.8.3,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-25T08:58:36+0000,1740473916,2025-02-25T09:35:54+0000,2025-02-25T09:35:54+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/KafkaProducerMetadataCallBack.20in.20KafkaProducer,No comments found
21789,Task,Unassigned,Arvydas Sk,4.9.0,"4.10.1,4.11.0",2025-02-24T17:16:21+0000,1740417381,2025-02-24T18:38:24+0000,2025-02-24T18:38:24+0000,"We've observed that when a Gradle project includes the org.apache.camel.springboot:camel-spring-boot-starter dependency (version 4.9.0 or later) and Gradle's dependency cache is empty, the classpath resolution fails unless at least 3GB of memory (org.gradle.jvmargs=-Xmx3g) is allocated.
It can be reproduced with command:
 
./gradlew dependencies --refresh-dependencies
However, when using an older version, such as 4.8.0, the process runs smoothly with the default 512 MB memory allocation.
This could be related to
section added on
https://repo1.maven.org/maven2/org/apache/camel/camel-parent/4.9.0/camel-parent-4.9.0.pom
Also attached test project.",No comments found
21788,Improvement,Otavio Rodolfo Piske,Claus Ibsen,None,"4.10.1,4.11.0",2025-02-24T16:14:58+0000,1740413698,2025-02-25T09:33:54+0000,2025-02-25T08:18:33+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/KafkaProducerMetadataCallBack.20in.20KafkaProducer,No comments found
21787,New Feature,Unassigned,Claus Ibsen,None,4.x,2025-02-24T13:33:49+0000,1740404029,2025-02-24T13:33:49+0000,,"The source and sink kamelets are using a camel component under the hood. However the kamelet have only N options, and when you know there is a option from the component you want to use but its not in the kamelet, then its not possible today.
We should have some advanced mode, where you can then declare the option still.",No comments found
21786,New Feature,Pasquale Congiusti,Pasquale Congiusti,None,4.11.0,2025-02-24T12:03:43+0000,1740398623,2025-02-26T14:19:30+0000,2025-02-26T14:19:30+0000,The new component is based on the camel-telemetry abstraction and will replace camel-opentelemetry eventually.,No comments found
21785,Improvement,James Netherton,James Netherton,None,"4.10.1,4.11.0",2025-02-24T11:59:55+0000,1740398395,2025-02-24T14:02:23+0000,2025-02-24T14:02:23+0000,"Seems we don't currently generate configurer classes for the camel-main k8s vault configuration.
It'd be good to get this added so that we don't have to do runtime reflection in Camel Quarkus.",No comments found
21784,Improvement,Unassigned,Marco Carletti,4.10.0,None,2025-02-24T10:54:03+0000,1740394443,2025-02-24T11:50:36+0000,2025-02-24T11:16:45+0000,"Running using jbang from maven project as stated in the documentation won't load all the necessary dependencies, maybe it should support jbang generated project.
i.e. exporting to Spring Boot runtime will generate a correct Maven project but it is unable to run it:
similar commands exporting to Quarkus application has not compilation problems but the route isn't loaded as expected:",No comments found
21783,Improvement,Unassigned,Sam,None,None,2025-02-24T09:39:44+0000,1740389984,2025-02-24T12:59:19+0000,2025-02-24T10:20:38+0000,"We are using KAFKA TRANSACTION MANAGER WITH SPRING TRANSACTION POLICY.
We are adding that with .transacted() but still the camel kafka is not partificpating in it.",No comments found
21782,Improvement,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-24T09:33:40+0000,1740389620,2025-02-24T13:38:06+0000,2025-02-24T13:38:06+0000,This kind of logic should be in the doXXX methods and not in the createConsumer,No comments found
21781,Task,Jiri Ondrusek,Jiri Ondrusek,4.11.0,4.11.0,2025-02-24T09:24:57+0000,1740389097,2025-02-24T12:08:37+0000,2025-02-24T12:08:37+0000,"Recent change in Camel (commit) removed
.
The service file has to be removed as well .",No comments found
21780,Bug,Claus Ibsen,Thomas Gantenbein,4.10.0,"4.10.1,4.11.0",2025-02-22T12:52:21+0000,1740228741,2025-02-22T16:31:26+0000,2025-02-22T16:31:26+0000,"A RouteBuilder with the following routes:
results in the following Exception at startup:
Remove the .id there or downgrade to Camel 4.9.0 and the exception is gone.It seems to be something about the combination of the choice and enrich EIP: Remove the choice and things will be fine. Replace enrich with some processor and things will be fine, too.",No comments found
21779,Improvement,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-22T12:25:38+0000,1740227138,2025-02-24T15:42:53+0000,2025-02-23T09:16:59+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Camel.204.2E10.2E0.3A.20The.20file.20based.20SMB.20component,No comments found
21778,Bug,Claus Ibsen,Claus Ibsen,"4.8.3,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-22T12:24:50+0000,1740227090,2025-02-22T12:55:40+0000,2025-02-22T12:55:23+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Step.20ids.20are.20not.20properly.20used.20when.20using.20threads.2E,No comments found
21777,Improvement,Unassigned,Claus Ibsen,None,4.x,2025-02-22T08:19:46+0000,1740212386,2025-02-22T08:19:46+0000,,Add an option to show --description instead of ID in the outputs,No comments found
21776,Bug,Unassigned,Claus Ibsen,4.8.0,"4.8.4,4.10.1,4.11.0",2025-02-22T07:00:30+0000,1740207630,2025-02-22T07:01:01+0000,2025-02-22T07:00:51+0000,"Reported on user mailing list
I think there is a bug with DefaultRoute when using onException since version 4.8.
Exception route processors get never initialized which make the route fail to started later on.
I think the problem is there:
https://github.com/apache/camel/blame/fa02c9e4879fac119a7f2b4f1b4ff46f646c48eb/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultRoute.java#L701
introduce by commit:
https://github.com/apache/camel/commit/26a9aa91a2bbb741c948ca8c943a0989da2986fd
I should be ""p"" instead of ""processor"". ""processor"" have already been added at line 692.


Jonathan Simard",No comments found
21775,Bug,Claus Ibsen,Jonathan Simard,"4.8.3,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-21T21:54:43+0000,1740174883,2025-02-22T08:21:27+0000,2025-02-22T08:21:27+0000,"Using the supervised route controller,
when a split is defined in a onException of a route, the route cannot  be started.
I suspect 2 issues:
https://github.com/apache/camel/blob/fa02c9e4879fac119a7f2b4f1b4ff46f646c48eb/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultRoute.java#L700
https://github.com/apache/camel/blob/2192884d371377423dbada7f2870057cabdef8b4/components/camel-bean/src/main/java/org/apache/camel/language/bean/BeanExpression.java#L352
See included reproducer.",No comments found
21774,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-21T12:31:23+0000,1740141083,2025-02-22T06:57:00+0000,2025-02-22T06:57:00+0000,"You may connect to a kafka broker with a given topic name, and the broker is configured to not auto-create. And the consumer will then fail to subscribe, and keep looping.
We should have option topicMustExist=true|false you can set so you can tell Camel to fail if the topic does not exist.",No comments found
21773,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.8.4,2025-02-21T11:00:29+0000,1740135629,2025-02-21T11:03:29+0000,2025-02-21T11:03:29+0000,No description available,No comments found
21772,Dependency upgrade,Unassigned,Claus Ibsen,None,"4.10.1,4.11.0",2025-02-20T18:56:50+0000,1740077810,2025-02-21T11:00:00+0000,2025-02-21T11:00:00+0000,https://github.com/spring-projects/spring-boot/milestone/373?closed=1,No comments found
21771,Bug,Unassigned,James Netherton,None,None,2025-02-20T15:56:41+0000,1740067001,2025-02-20T17:45:31+0000,2025-02-20T17:45:31+0000,"Discovered when testing Kubernetes secret refreshing & context reloading on Camel Quarkus. When the context reload happens, there's a warning in the logs like:
The SecretsReloadTriggerTask service is being registered twice via different code paths.",No comments found
21770,Bug,James Netherton,James Netherton,4.10.0,"4.10.1,4.11.0",2025-02-20T14:58:29+0000,1740063509,2025-02-24T14:59:23+0000,2025-02-24T09:35:24+0000,"There's a problem with context reloading triggered from k8s secrets when using an autowired KubernetesClient.
Both SecretsReloadTriggerTask and AbstractKubernetesEndpoint close the KubernetesClient. When routes get refreshed, the closed client is wired back in an unusable state.",No comments found
21769,Bug,Claus Ibsen,Narsi Reddy Nallamilli,4.8.0,"4.8.4,4.10.1,4.11.0",2025-02-20T12:37:35+0000,1740055055,2025-02-26T09:22:35+0000,2025-02-21T09:01:20+0000,"Below scenario the processing of the message threw memory error. so further processing of the exchange aborted, however the exchange couldn't get released from Sqs2Consumer timeoutExtender, as a result the message gets visibility extended forever causing the entire aws sqs queue to get blocked.",No comments found
21768,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-02-20T09:44:31+0000,1740044671,2025-02-20T09:44:41+0000,,No description available,No comments found
21767,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-02-20T09:44:00+0000,1740044640,2025-02-20T13:38:08+0000,2025-02-20T13:38:08+0000,No description available,No comments found
21766,Bug,Unassigned,michael elbaz,4.10.0,None,2025-02-19T19:46:56+0000,1739994416,2025-02-20T09:31:06+0000,2025-02-20T09:04:17+0000,"this code not work
.transform().simple(""${jsonpath($.id)}"")
the exception:
20:35:24.994 ERROR [Blueprint Event Dispatcher: 1] Error occurred during starting CamelContext: dt-integ-dispatch-chat
org.apache.camel.FailedToCreateRouteException: Failed to create route log-route at: >>> Transform[simple\{${jsonpath($.tId)}}] <<< in route: Route(log-route)[From[direct:log-route] -> [OnException[[jav... because of Unknown function: jsonpath($.tId) at location 0
${jsonpath($.tId)}
*
at org.apache.camel.reifier.RouteReifier.doCreateRoute(RouteReifier.java:215) ~[?:?]
        at org.apache.camel.reifier.RouteReifier.createRoute(RouteReifier.java:75) ~[?:?]
        at org.apache.camel.impl.DefaultModelReifierFactory.createRoute(DefaultModelReifierFactory.java:49) ~[?:?]
        at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:937) ~[?:?]
        at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:800) ~[?:?]
        at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:3028) ~[?:?]
        at org.apache.camel.support.service.BaseService.init(BaseService.java:83) ~[?:?]
        at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2699) ~[?:?]
        at org.apache.camel.support.service.BaseService.start(BaseService.java:111) ~[?:?]
        at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2718) ~[?:?]
        at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:262) ~[?:?]
        at org.apache.camel.blueprint.BlueprintCamelContext.start(BlueprintCamelContext.java:241) ~[?:?]
        at org.apache.camel.blueprint.BlueprintCamelContext.maybeStart(BlueprintCamelContext.java:283) ~[?:?]
        at org.apache.camel.blueprint.BlueprintCamelContext.blueprintEvent(BlueprintCamelContext.java:188) ~[?:?]
        at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:197) ~[?:?]
        at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:195) ~[?:?]
        at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[?:?]
        at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[?:?]
        at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
        at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.apache.camel.language.simple.types.SimpleIllegalSyntaxException: Unknown function: jsonpath($.tId) at location 0
${jsonpath($.tId)}",No comments found
21765,Task,Unassigned,Aurélien Pupier,4.10.0,4.x,2025-02-19T15:34:36+0000,1739979276,2025-02-22T16:05:51+0000,,"Final release is planned for the 18th March
https://openjdk.org/projects/jdk/24/
this is the last release before the next Java LTS 25, planned for September 2025). it would be nice to to ensure there is no major issue before the LTS.
I guess the most impacting part is potentially the removal of the SecurityManager https://openjdk.org/jeps/486 . In case, not using the removed API, might be time to remove surrounding deprecated API (see removing related APIs in https://openjdk.org/jeps/486#Advice-to-maintainers-of-libraries-that-support-the-Security-Manager )
another interesting thing are the first Quantum-Resistant modules https://openjdk.org/jeps/496 and https://openjdk.org/jeps/497",No comments found
21764,Task,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-02-19T15:11:45+0000,1739977905,2025-02-19T15:28:21+0000,2025-02-19T15:28:21+0000,No description available,No comments found
21763,Improvement,Unassigned,Gaelle Fournier,None,None,2025-02-19T12:40:32+0000,1739968832,2025-02-19T16:51:22+0000,,"DeploymentConfig  usage has been deprecated since openshift 4.14
Jkube has not yet set Deployment as default so it's up to our code to set it as default.",No comments found
21762,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-19T11:57:28+0000,1739966248,2025-02-19T14:39:28+0000,2025-02-19T14:39:28+0000,"You may have some routes you want to start later in the test, or not to be started, but still included.
For CSB tests with annotations, we may want to have a @AutoStartupExcludePattern where you can then specify route ids, or endpoint urls that should not be automatic started. So you can do (""kafka,amqp"") to not start routes that start from kafka or amqp",No comments found
21761,Improvement,Grzegorz Grzybek,Grzegorz Grzybek,None,"4.8.4,4.10.1,4.11.0",2025-02-19T11:23:32+0000,1739964212,2025-02-19T11:52:32+0000,2025-02-19T11:52:32+0000,"Follow up of CAMEL-21750, but this time fixed the right way.",No comments found
21760,New Feature,Thomas Diesler,Thomas Diesler,None,4.11.0,2025-02-19T11:04:17+0000,1739963057,2025-02-27T10:47:57+0000,,No description available,No comments found
21759,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-19T08:22:27+0000,1739953347,2025-02-19T11:57:37+0000,2025-02-19T10:09:17+0000,"Something similar to MockEndpointsAndSkip but those only works for sending. You may have routes started from kafka, and you dont want to use kafka for an unit test, and then you would otherwise need to stub that, or remove the route, or whatever.",No comments found
21758,Bug,Claus Ibsen,Ivan Ravin,4.8.2,"4.8.4,4.10.1,4.11.0",2025-02-18T13:13:05+0000,1739884385,2025-02-18T13:23:39+0000,2025-02-18T13:23:39+0000,"TemporaryQueueReplyManager extends ReplyManagerSupport. Parent class contains method doStop(). But override method does not contains super.doStop() call:
So, TemporaryQueueReplyManager starts some services, but not stop it. This is not big problem in standalone applications, but problem in Karaf environment. If I install route with InOut jms endpoint, and then stop it or even uninstall it, camel-jms continues to use broker connections and temporary queues. Need to add super.doStop() call:",No comments found
21757,Improvement,Unassigned,Sam,4.8.0,"4.8.4,4.10.1,4.11.0",2025-02-18T12:03:12+0000,1739880192,2025-02-26T10:14:15+0000,2025-02-25T11:02:38+0000,"Kafka<-> with Kafka and with consumercount=24 So I am getting ProducerFencedException
 
And as we are using additionaProperties[transactional.id]=""transaction-producer""+UUID.randomUUID() enable.idempotence=true and retries=5 , we are also getting Invalid Transition attempted from state IN_TRANSACTION TO state IN_TRANSACTION",No comments found
21756,Task,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-18T11:55:23+0000,1739879723,2025-02-18T12:39:48+0000,2025-02-18T12:39:48+0000,We use maven 3.9.5 and there is 3.9.9 which we should upgrade,No comments found
21755,Bug,Claus Ibsen,Raymond,4.10.0,"4.10.1,4.11.0",2025-02-18T09:01:40+0000,1739869300,2025-02-24T12:08:25+0000,2025-02-24T12:08:25+0000,"I have the following routes:
I use this route with
<setExchangePattern pattern=""InOut""/>
And
<setExchangePattern pattern=""InOnly""/>
In Camel 4.9.0 both returns the following response:
After upgrading to Camel 4.10.0 the InOnly still gives this response, but the InOut returns the orginal body. I attached a reproducer.",No comments found
21754,Bug,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-18T06:19:26+0000,1739859566,2025-02-18T06:20:51+0000,2025-02-18T06:20:51+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Mail.2C.20log.20level.20DEBUG.20give.20exception.2E,No comments found
21753,Bug,Thomas Diesler,Thomas Diesler,4.10.0,"4.10.2,4.11.0",2025-02-17T14:29:08+0000,1739802548,2025-02-24T18:40:23+0000,,,No comments found
21752,Bug,Unassigned,Gianluca,4.10.0,"4.10.1,4.11.0",2025-02-17T13:34:05+0000,1739799245,2025-02-17T15:12:08+0000,2025-02-17T15:12:08+0000,"When trying to connect to a server with DFS mode enabled, a connection error appears.
To set DFS mode to true, an SmbConfig object must be created with the withDFSEnable parameter set to true.
This object allows for advanced client configuration.
Here is an example with Camel Spring Boot:
However, the configuration is not applied during the client connection. The configuration is not passed this constructor.",No comments found
21751,Bug,Thomas Diesler,Thomas Diesler,None,None,2025-02-17T12:34:52+0000,1739795692,2025-02-27T12:59:53+0000,,"I have a plugin configuration like this ...
and get
or
CrossRef: https://github.com/eclipse-jkube/jkube/issues/3672",No comments found
21750,Task,Claus Ibsen,Claus Ibsen,4.10.0,"4.8.4,4.10.1,4.11.0",2025-02-17T12:14:31+0000,1739794471,2025-02-19T11:23:53+0000,2025-02-17T18:42:51+0000,"Reported on user mailing list: https://lists.apache.org/thread/jk06xkoo33fz6zjkn7l3o66blqfz2zwl
Gregor is looking into if something can be made fast inside maven-resolver. But we should also look at not using google BOM as we only use a limited set of google services and each we can control dependencies there without BOM",No comments found
21749,New Feature,Unassigned,Mikael Koskinen,4.10.0,None,2025-02-17T09:57:34+0000,1739786254,2025-02-18T10:57:45+0000,,"Currently NATS Producer and Consumer both only use some of the headers included in the NATS msg:
This is problematic in couple of ways: NATS nowadays has quite many headers which are missing from the list. And also as NATS itself doesn't limit what headers are used, the headers often contain app specific metadata which would be helpful to have in Camel Integrations.
Does the NATS component have to limit the headers that it reads? Could it read them all? Or could we use something like headerFilterStrategy in this?
I'm happy to help with implementing the code but would appreciate if someone can provide guidance on design.",No comments found
21748,Task,Andrea Cosentino,Andrea Cosentino,None,"4.10.1,4.11.0",2025-02-17T09:14:37+0000,1739783677,2025-02-17T13:05:17+0000,2025-02-17T13:05:17+0000,No description available,No comments found
21747,Bug,Claus Ibsen,Claus Ibsen,"4.8.3,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-16T15:23:06+0000,1739719386,2025-02-16T15:29:49+0000,2025-02-16T15:29:49+0000,"If you use the backlog debugger and a suspended is timed out, because the user is not continuing after 5 minutes. Then the state of suspended should be removed. This may otherwise affect tooling that would visualze that a breakpoint is suspended.
https://github.com/hawtio/hawtio-next/issues/303#issuecomment-2660011910",No comments found
21746,Bug,Jiri Ondrusek,Jiri Ondrusek,4.10.0,"4.10.1,4.11.0",2025-02-14T14:30:53+0000,1739543453,2025-02-15T08:31:27+0000,2025-02-15T08:31:27+0000,"I was debugging some unstable tests for azure-key-vault  in CQ (tests covering context reload), which involve EventhubsReloadTriggerTask .
I noticed that the task is started twice, which is not necessary and I'd say also not intended.
The first call makes more sense, as this code block is solving related vault configurations.
I think that the second call can be removed.",No comments found
21745,Bug,Unassigned,vincenttang,4.8.2,None,2025-02-14T13:20:23+0000,1739539223,2025-02-17T00:55:13+0000,2025-02-14T19:33:52+0000,"Background:
I am upgrading an old project that uses Camel 2 in Karaf. Since it utilizes org.apache.camel.component.zookeeper.policy.ZooKeeperRoutePolicy, the Camel 3 migration guide suggests replacing it with ZooKeeperClusterService.
https://camel.apache.org/manual/camel-3-migration-guide.html
Therefore, I am attempting to use ZooKeeperClusterService with ClusteredRoutePolicy in Karaf. Attached a test.xml FYI.
Issue:
When using Karaf 4.4.7 and camel-zookeeper 4.8.2, the following component:
does not work with Blueprint.
Exception:
*java.util.concurrent.ExecutionException: java.lang.NoClassDefFoundError: org/apache/curator/shaded/com/google/common/cache/CacheLoader
    at java.util.concurrent.FutureTask.report(FutureTask.java:122) ~[?:?]
    at java.util.concurrent.FutureTask.get(FutureTask.java:191) ~[?:?]
    at java.util.concurrent.AbstractExecutorService.doInvokeAny(AbstractExecutorService.java:204) ~[?:?]
    at java.util.concurrent.AbstractExecutorService.invokeAny(AbstractExecutorService.java:235) ~[?:?]
    at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper$4.call(ScheduledExecutorServiceWrapper.java:185) ~[!/:1.10.3]
    at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper$15.call(ScheduledExecutorServiceWrapper.java:446) ~[!/:1.10.3]
    at org.apache.aries.blueprint.utils.threading.RWLock.runReadOperation(RWLock.java:33) ~[!/:1.10.3]
    at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper.runUnlessShutdown(ScheduledExecutorServiceWrapper.java:443) ~[!/:1.10.3]
    at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper.invokeAny(ScheduledExecutorServiceWrapper.java:180) ~[!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher.callListener(BlueprintEventDispatcher.java:195) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher.callListeners(BlueprintEventDispatcher.java:178) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher.blueprintEvent(BlueprintEventDispatcher.java:133) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:447) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:298) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:335) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:288) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:284) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:274) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422) [!/:1.10.3]
    at org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1384) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:730) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.EventDispatcher.fireBundleEvent(EventDispatcher.java:485) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4847) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.Felix.startBundle(Felix.java:2363) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1566) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:297) [org.apache.felix.framework-7.0.5.jar:?]
    at java.lang.Thread.run(Thread.java:840) [?:?]
Caused by: java.lang.NoClassDefFoundError: org/apache/curator/shaded/com/google/common/cache/CacheLoader
    at org.apache.curator.framework.CuratorFrameworkFactory$Builder.<init>(CuratorFrameworkFactory.java:171) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory$Builder.<init>(CuratorFrameworkFactory.java:154) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory.builder(CuratorFrameworkFactory.java:80) ~[?:?]
    at org.apache.camel.component.zookeeper.ZooKeeperCuratorHelper.createCurator(ZooKeeperCuratorHelper.java:48) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.getOrCreateCurator(ZooKeeperClusterService.java:241) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.createView(ZooKeeperClusterService.java:208) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.createView(ZooKeeperClusterService.java:32) ~[?:?]
    at org.apache.camel.support.cluster.AbstractCamelClusterService.lambda$getView$3(AbstractCamelClusterService.java:147) ~[?:?]
    at org.apache.camel.util.concurrent.LockHelper.callWithWriteLock(LockHelper.java:94) ~[?:?]
    at org.apache.camel.support.cluster.AbstractCamelClusterService.getView(AbstractCamelClusterService.java:141) ~[?:?]
    at org.apache.camel.impl.cluster.ClusteredRoutePolicy.retainClusterView(ClusteredRoutePolicy.java:225) ~[?:?]
    at org.apache.camel.util.ReferenceCount.retain(ReferenceCount.java:51) ~[?:?]
    at org.apache.camel.impl.cluster.ClusteredRoutePolicy.onInit(ClusteredRoutePolicy.java:164) ~[?:?]
    at org.apache.camel.reifier.RouteReifier.doCreateRoute(RouteReifier.java:363) ~[?:?]
    at org.apache.camel.reifier.RouteReifier.createRoute(RouteReifier.java:86) ~[?:?]
    at org.apache.camel.impl.DefaultModelReifierFactory.createRoute(DefaultModelReifierFactory.java:49) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:726) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:592) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:2433) ~[?:?]
    at org.apache.camel.support.service.BaseService.init(BaseService.java:85) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2068) ~[?:?]
    at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2087) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:211) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.start(BlueprintCamelContext.java:234) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.maybeStart(BlueprintCamelContext.java:276) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.blueprintEvent(BlueprintCamelContext.java:180) ~[?:?]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:197) ~[?:?]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:195) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
    ... 1 more
Caused by: java.lang.ClassNotFoundException: org.apache.curator.shaded.com.google.common.cache.CacheLoader not found by curator-framework [164]
    at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1591) ~[?:?]
    at org.apache.felix.framework.BundleWiringImpl.access$300(BundleWiringImpl.java:79) ~[?:?]
    at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1976) ~[?:?]
    at java.lang.ClassLoader.loadClass(ClassLoader.java:525) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory$Builder.<init>(CuratorFrameworkFactory.java:171) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory$Builder.<init>(CuratorFrameworkFactory.java:154) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory.builder(CuratorFrameworkFactory.java:80) ~[?:?]
    at org.apache.camel.component.zookeeper.ZooKeeperCuratorHelper.createCurator(ZooKeeperCuratorHelper.java:48) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.getOrCreateCurator(ZooKeeperClusterService.java:241) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.createView(ZooKeeperClusterService.java:208) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.createView(ZooKeeperClusterService.java:32) ~[?:?]
    at org.apache.camel.support.cluster.AbstractCamelClusterService.lambda$getView$3(AbstractCamelClusterService.java:147) ~[?:?]
    at org.apache.camel.util.concurrent.LockHelper.callWithWriteLock(LockHelper.java:94) ~[?:?]
    at org.apache.camel.support.cluster.AbstractCamelClusterService.getView(AbstractCamelClusterService.java:141) ~[?:?]
    at org.apache.camel.impl.cluster.ClusteredRoutePolicy.retainClusterView(ClusteredRoutePolicy.java:225) ~[?:?]
    at org.apache.camel.util.ReferenceCount.retain(ReferenceCount.java:51) ~[?:?]
    at org.apache.camel.impl.cluster.ClusteredRoutePolicy.onInit(ClusteredRoutePolicy.java:164) ~[?:?]
    at org.apache.camel.reifier.RouteReifier.doCreateRoute(RouteReifier.java:363) ~[?:?]
    at org.apache.camel.reifier.RouteReifier.createRoute(RouteReifier.java:86) ~[?:?]
    at org.apache.camel.impl.DefaultModelReifierFactory.createRoute(DefaultModelReifierFactory.java:49) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:726) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:592) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:2433) ~[?:?]
    at org.apache.camel.support.service.BaseService.init(BaseService.java:85) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2068) ~[?:?]
    at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2087) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:211) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.start(BlueprintCamelContext.java:234) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.maybeStart(BlueprintCamelContext.java:276) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.blueprintEvent(BlueprintCamelContext.java:180) ~[?:?]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:197) ~[?:?]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:195) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
    ... 1 more*
Steps to Reproduce:
in apache-karaf-4.4.7\bin
in apache-karaf-4.4.7\bin",No comments found
21744,Task,Unassigned,Federico Mariani,None,None,2025-02-14T13:06:09+0000,1739538369,2025-02-14T13:06:09+0000,,"https://swagger.io/specification/#fixed-fields
From the spec, the security field is a declaration of which security mechanisms can be used across the API. The list of values includes alternative Security Requirement Objects that can be used. Only one of the Security Requirement Objects need to be satisfied to authorize a request. Individual operations can override this definition. The list can be incomplete, up to being empty or absent. To make security explicitly optional, an empty security requirement ({}) can be included in the array.
This integration may be harder to implement, and most probably runtimes should provide custom implementations.",No comments found
21743,Task,Unassigned,Federico Mariani,None,None,2025-02-14T13:04:27+0000,1739538267,2025-02-14T13:04:27+0000,,"https://swagger.io/specification/#fixed-fields
From the spec, the webhooks field represents the incoming webhooks that MAY be received as part of this API and that the API consumer MAY choose to implement. Closely related to the callbacks feature, this section describes requests initiated other than by an API call, for example by an out of band registration. The key name is a unique string to refer to each webhook, while the (optionally referenced) Path Item Object describes a request that may be initiated by the API provider and the expected responses. An example is available.",No comments found
21742,Task,Unassigned,Federico Mariani,None,None,2025-02-14T13:03:02+0000,1739538182,2025-02-14T13:03:02+0000,,"https://swagger.io/specification/#fixed-fields
jsonSchemaDialect is a String representing the default value for the $schema keyword within Schema Objects contained within this OAS document. This MUST be in the form of a URI.",No comments found
21741,Bug,Unassigned,Thomas Diesler,None,4.11.0,2025-02-14T09:37:31+0000,1739525851,2025-02-18T08:16:53+0000,2025-02-18T08:16:53+0000,"With a simple route like this ...
I get ...
even though camel-platform-http-vertx is on the classpath.
After a little digging, I found that the MainHttpServer must be started explicitly or be registered with the CamelContext to get started implicitly.
I wonder whether this is intentional and why it cannot be done by the camel-plattform-http component internally? Related is perhaps this section in the docs
The HTTP server for camel-main is disabled by default, and you need to explicitly enable this by setting camel.server.enabled=true in application.properties.",No comments found
21740,Bug,Claus Ibsen,jubar,4.4.3,"4.8.4,4.10.1,4.11.0",2025-02-14T07:55:03+0000,1739519703,2025-02-26T10:14:22+0000,2025-02-25T08:44:02+0000,"If there are no new Change Data Capture events for more than 3 days the cached replayId in the PubSubApiClient becomes invalid. (Salesforce Docs)
It seems like the next event/reconnect then causes the client to try to resubscribe indefinitely with this invalid replay id.
I use v4.4.3 but the PubSubApiClient hasn't been changed since then.
Log snippet:",No comments found
21739,Bug,Benjamin Graf,Benjamin Graf,4.10.0,"4.10.1,4.11.0",2025-02-13T20:30:12+0000,1739478612,2025-02-14T19:45:37+0000,2025-02-14T19:45:37+0000,FileConsumer.getRelativeFilePath always returns file path with filename. SftpConsumer and FtpConsumer only returns file path. This causes that files on servers are filtered by mistake.,No comments found
21738,Improvement,Unassigned,Andrej Vano,4.10.0,4.11.0,2025-02-13T10:21:17+0000,1739442077,2025-02-25T15:07:47+0000,2025-02-25T15:07:44+0000,"Looking at the various producers in camel-kubernetes components, it seems that there is no common approach for listing the resources when it comes to namespaced resources.
If the CamelKubernetesNamespaceName header is not present, the autowired k8s client uses:
If the header CamelKubernetesNamespaceName is not present, some producers will just list in the current namespace, some list in all namespaces - these don't require the namespace header at all. but then there are some that are switching between ns/cluster based on the header.
It would be good to unify the approach.",No comments found
21737,Bug,Unassigned,Andrej Vano,4.10.0,"4.10.1,4.11.0",2025-02-12T08:35:18+0000,1739349318,2025-02-17T09:54:58+0000,2025-02-17T09:54:58+0000,"Calls such as these are not working as expected, as you need to assign the return value of .withLabel back to w - this results in the query parameters being ignored.",No comments found
21736,Improvement,Unassigned,Luis Sergio Faria Carneiro,None,4.x,2025-02-11T18:05:23+0000,1739297123,2025-02-19T11:10:37+0000,,"As I developer I would like to use the Google BigQuery SQL Standard component to fetch data from Google Big Query.
Currently, when I run an Integration with the following snippet:
I get the number of rows selected in the message body after the component runs,  but not the data.
The docs mention that we currently support only DML queries, so I'm opening this as a feature request;",No comments found
21735,Bug,Claus Ibsen,Luis Sergio Faria Carneiro,4.8.0,4.11.0,2025-02-10T17:44:50+0000,1739209490,2025-02-16T09:57:27+0000,2025-02-16T09:57:27+0000,"I'm trying to use the MongoDB component within a Camel K integration. And the code is as following:
Although the connection parameters are set, I see component trying to connect to 127.0.0.1:27017.
Debugging the source code and checking the log, I see the component is using an autowired client which is configured to localhost instead of creating a new client from my parameters.
I haven't configured any beans.
But anyways, shoudn't the endpoint parameters take precedence over any pre-configured bean which I'm not even aware of?",No comments found
21734,Improvement,Benjamin Graf,Benjamin Graf,"4.8.3,4.9.0","4.10.1,4.11.0",2025-02-08T11:06:29+0000,1739012789,2025-02-14T19:40:51+0000,2025-02-14T19:40:51+0000,Header columns defined in CsvFormat are actually not evaluated for use of FixedColumnsMarshaller causing sometimes messed output order.,No comments found
21733,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-07T15:26:04+0000,1738941964,2025-02-09T11:10:21+0000,2025-02-09T11:10:21+0000,"We have SendDynamicAware for toD. And we need a counter part for Poll and PollEnrich EIP. However this is mostly for camel-ftp if you have dynamic headers in fileName.
See GenericFileSendDynamicAware",No comments found
21732,Bug,Claus Ibsen,Claus Ibsen,4.9.0,"4.10.1,4.11.0",2025-02-07T13:40:36+0000,1738935636,2025-02-14T19:40:21+0000,2025-02-14T19:40:21+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Check.20if.20FTP.20file.20exists.20mid.20route,No comments found
21731,New Feature,Federico Mariani,John Cody,4.3.0,4.11.0,2025-02-07T13:04:54+0000,1738933494,2025-02-14T19:33:26+0000,2025-02-14T15:01:02+0000,"Part of the Open API specifications  allows for an externalDocs object with a description and a URI.
Currently the Java first implementation of the camel-openapi-java doesn't support this type of documentation when added to the REST Component.  It would be good to have this ability in our Open API specifications so that we could link to other documentation like a wiki or some sort of knowledge base for the API.
Here is an example of what it might look like.",No comments found
21730,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.4,4.10.1,4.11.0",2025-02-06T17:05:46+0000,1738861546,2025-02-19T11:32:25+0000,2025-02-19T11:32:25+0000,"With a route like this ...
on export I get ...
The issue seems to be that export is calling KameletMain.doStart() by which the referenced resources have not been copied.",No comments found
21729,Improvement,Claus Ibsen,Claus Ibsen,None,"4.10.1,4.11.0",2025-02-06T10:56:36+0000,1738839396,2025-02-14T19:39:53+0000,2025-02-14T19:39:53+0000,"To try to update the existing pom.xml by adding/remove camel dependencies.
However its a bit tricky as as the pom may use BOM or not. And the file can be formatted in a user speicific way. So we either rewrite the pom as maven would do, or try to respect the current format, and do some search/replace magic.",No comments found
21728,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-05T20:14:30+0000,1738786470,2025-02-06T09:22:53+0000,2025-02-06T09:22:53+0000,Like we have in Split EIP with onPrepare - You may want to loop and then do a deep copy of the exchange for each loop to ensure there are no side-effect from previous loop iteration. As a copy is shallow copy by default.,No comments found
21727,Task,Claus Ibsen,Claus Ibsen,None,"4.8.4,4.10.0",2025-02-05T19:21:53+0000,1738783313,2025-02-05T19:55:20+0000,2025-02-05T19:55:20+0000,The loop EIP is intended for looping a reasonable number of times. Don't loop 100.000+ as this impact performance as call traces become higher in the JVM,No comments found
21726,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-02-05T16:22:14+0000,1738772534,2025-02-06T08:19:03+0000,2025-02-06T08:19:03+0000,"Since there was some work done for similarity search and RAG embeddings for both Qdrant and Neoj camel AI components, I'd like to add some Chat models so that I could work on some kamelets for naive RAG with Camel AI components
This will serve this GH issue https://github.com/apache/camel-kamelets/issues/2247",No comments found
21725,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-05T14:54:23+0000,1738767263,2025-02-06T06:48:37+0000,2025-02-06T06:48:37+0000,"For users on maven based projects, then its a hazzle to keep updating pom.xml with new depencencies when you add new camel routes and forgot that it uses a new component or something.",No comments found
21724,Bug,Unassigned,Patricia,4.9.0,None,2025-02-05T14:25:57+0000,1738765557,2025-02-10T06:41:31+0000,2025-02-10T06:41:31+0000,"I am experiencing an issue when trying to connect to my SFTP server using a private key string. When I specify the absolute path to my private key file in the ""privateKeyFile"" parameter, the connection works correctly. However, if I attempt to use a string containing my private key in the ""privateKey"" parameter, I am unable to establish a connection.
Attempts to Resolve:
None of these methods have worked.
Additional Information:
Is there a certain way this private key has to be formatted for this ""privateKey"" parameter to work?
Thanks beforehand",No comments found
21723,New Feature,John Poth,John Poth,None,"4.10.1,4.11.0",2025-02-05T14:06:03+0000,1738764363,2025-02-15T13:18:51+0000,2025-02-14T19:47:42+0000,"It'd be cool to have an edit command in the camel-jbang shell to edit routes. Maybe something with
https://github.com/jledit/jledit + https://github.com/camel-tooling/camel-language-server",No comments found
21722,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2025-02-05T12:42:00+0000,1738759320,2025-02-05T12:42:00+0000,,"We should make it possible to enable capturing attachments details in the tracer. This can assist trouble shooting and tooling to show details.
Attachments can contain headers, and data (name, content-type) such as emails with attached files, or HTTP post with form-data etc.
The trace/debug command in jbang could also be improved to show attachment data.",No comments found
21721,Bug,Jiri Ondrusek,Jiri Ondrusek,4.10.0,4.10.0,2025-02-05T12:37:16+0000,1738759036,2025-02-05T13:52:17+0000,2025-02-05T13:52:17+0000,"Current state is that the creation of the component fails, when Identity is used without (unnecessary) credentials.
There is a validation of configuration parameters in component, see the code. This validation matters only if
in case of
None of the validated parameters are required.",No comments found
21720,Bug,James Netherton,James Netherton,None,4.10.0,2025-02-05T11:49:24+0000,1738756164,2025-02-05T13:09:15+0000,2025-02-05T13:09:15+0000,"Some more details in this Camel Quarkus issue:
https://github.com/apache/camel-quarkus/issues/6955
Seems pods that are in the failed or not ready state are considered as candidates for cluster leadership when using the camel-master component.
The issue might be here:
https://github.com/apache/camel/blob/b3e263c064018ed79f4a3572233b112cef126fa7/components/camel-kubernetes/src/main/java/org/apache/camel/component/kubernetes/cluster/lock/KubernetesLeadershipController.java#L477-L483
It grabs a list of pods but does not interrogate their status.",No comments found
21719,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-02-05T10:20:27+0000,1738750827,2025-02-06T08:27:45+0000,2025-02-06T08:27:45+0000,No description available,No comments found
21718,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-02-05T10:13:00+0000,1738750380,2025-02-05T12:45:37+0000,2025-02-05T12:45:25+0000,No description available,No comments found
21717,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-05T08:49:58+0000,1738745398,2025-02-05T14:10:57+0000,2025-02-05T14:10:57+0000,So you can easily from groovy scripts use `attachments` in the code,No comments found
21716,Improvement,Christoph Deppisch,Christoph Deppisch,4.9.0,4.10.0,2025-02-05T08:30:05+0000,1738744205,2025-02-05T17:56:59+0000,2025-02-05T17:56:59+0000,"The Kubernetes plugin project export and run uses a hardcoded container base image (eclipse-temurin). We should allow users to customize the base image with command line options.
This is valuable when customizing base images with dedicated os architecture (e.g. arm64v8/eclipse-temurin) or when using docker registry mirrors (e.g. mirror.gcr.io/eclipse-temurin)",No comments found
21715,Bug,Christoph Deppisch,Christoph Deppisch,None,4.10.0,2025-02-04T18:20:19+0000,1738693219,2025-02-06T08:49:34+0000,2025-02-06T08:49:34+0000,"With https://issues.apache.org/jira/browse/CAMEL-21452 some classes in the camel-test-infra-common have been moved from src/test/java to src/main/java so dependent modules need to switch the Maven dependency from type=test-jar to a normal dependency. The camel-jbang-plugin-kubernetes is a good example it has
but it needs to remove
So we need to go through the modules that depend on camel-test-infra-common and see if we need test-jar + normal jar dependency in Maven POMs",No comments found
21714,Improvement,Freeman Yue Fang,Freeman Yue Fang,"4.8.3,4.9.0","4.8.4,4.10.0",2025-02-04T16:52:06+0000,1738687926,2025-02-04T17:25:31+0000,2025-02-04T17:25:31+0000,"For example the exception like
is caught but ignored without a DEBUG level log, which wasn't this case in CAMEL 2.x",No comments found
21713,Bug,Unassigned,Jiri Ondrusek,None,4.10.0,2025-02-04T16:49:58+0000,1738687798,2025-02-05T12:51:18+0000,2025-02-05T06:00:23+0000,"I noticed (when extending test coverage for aws-secret-manager in camel-qurkus), that the  reload task `CloudTrailReloadTriggerTask` in aws-secret-manager is not using  url override. Without this parameter, the testing with a docker image is not possible. (the properties function of the component is using this parameter, therefore I think this is just missing code)",No comments found
21712,Improvement,Unassigned,Mikael Andersson Wigander,None,4.11.0,2025-02-04T15:33:05+0000,1738683185,2025-02-17T08:41:27+0000,2025-02-16T12:49:21+0000,"Current Oauth2 support is not supporting RFC8707 where a Resource Indicator is required as part of Oauth2 payload.
To be compliant an additional argument to the component would indicate a value to be used for the resource indicator argument in payload together with client_credentials.
https://www.rfc-editor.org/rfc/rfc8707",No comments found
21711,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-04T15:25:58+0000,1738682758,2025-02-05T05:58:27+0000,2025-02-05T05:58:27+0000,"If you do a log with ${body} and have a file attachment that is binary data such as a png then its better to load the byte array and store as string, instead of having a JDK read error due to attempt to convert to UTF-8 and have some MalformedIOException",No comments found
21710,Improvement,Claudio Miranda,Claudio Miranda,4.9.0,4.11.0,2025-02-04T14:52:58+0000,1738680778,2025-02-24T18:11:59+0000,,"When running ""camel kubernetes run file.java"" there may be many parameters to set accordingly to the cluster the user is currently connected to, so this enhancement request is to automatically detect the cluster and set the basic options to build and push the image and to deploy the kubernetes manifests.
The goal is be able to use ""camel kubernetes run file.java"" and the automatic options take care of the correct configurations. There should be a new parameter to ""camel kubernetes run --auto-disable"" to disable this automation and let the user set the desired parameters. Also, if the user sets any parameter that is set by the automation, then the automation is disabled.
As there could be many different ways to build and push the container images to the image registry we want to cover some basic scenarios to build and deploy to kubernetes.
These are examples of building and deploying images and manifest that should be simplified with this proposal.
1. minikube with docker-env
In this case when using minikube with ""eval $(minikube docker-env)"" these are the parameters to make it work
2. Openshift with S2I
3. Kind",No comments found
21709,Improvement,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2025-02-04T13:38:34+0000,1738676314,2025-02-05T14:49:29+0000,2025-02-05T14:49:29+0000,"currently, using `jbang '-Dcamel.jbang.version=4.10.0-SNAPSHOT' camel@apache/camel init demo.camel.yaml` generates:
The request is to generate:",No comments found
21708,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-04T11:44:24+0000,1738669464,2025-02-05T12:55:31+0000,2025-02-05T12:55:31+0000,The default mime-types in jakarta activation is very limited,No comments found
21707,Bug,Unassigned,Marco Carletti,4.10.0,4.11.0,2025-02-04T10:29:22+0000,1738664962,2025-02-18T10:14:05+0000,2025-02-18T10:14:05+0000,"on main branch run:
the stack trace is
or
even if this second method depends on the local environment and it may work",No comments found
21706,Improvement,Christoph Deppisch,Christoph Deppisch,4.9.0,4.10.0,2025-02-04T09:00:00+0000,1738659600,2025-02-05T05:59:56+0000,2025-02-05T05:59:56+0000,"The quiet mode in JBang Kubernetes run command is not really quiet. Still there is a lot of command output printed to the console when using --quiet option.
Also, we should not print verbose Maven build output by default even if quiet mode is disabled. Think of introducing a --verbose option that enables the Maven build output.",No comments found
21705,New Feature,Unassigned,Vincent Sevel,None,None,2025-02-03T16:36:26+0000,1738600586,2025-02-10T08:46:59+0000,,"this proposes to support quarkus-artemis-ra as a mean to connect to artemis servers using sjms or sjms2 in quarkus infused camel applications.
some context:
on our quarkus applications we have settled on quarkus-artemis-ra to access artemis servers, for the following reasons: managed listener, automatic rebalancing connections, native support for pooling
I have tried this extension with sjms end sjms2 in a camel route, but failed to do so because of forbidden methods setExceptionListener and setMessageListener
Caused by: jakarta.jms.IllegalStateException: This method is not applicable inside the application server. See the J2EE spec, e.g. J2EE1.4 Section 6.6
        at org.apache.activemq.artemis.ra.ActiveMQRASessionFactoryImpl.setExceptionListener(ActiveMQRASessionFactoryImpl.java:534)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.createConnection(SimpleMessageListenerContainer.java:307)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.doStart(SimpleMessageListenerContainer.java:228)
        at org.apache.camel.support.service.BaseService.start(BaseService.java:123)
        ... 35 more
and
Caused by: jakarta.jms.IllegalStateException: This method is not applicable inside the application server. See the J2EE spec, e.g. J2EE1.4 Section 6.6
        at org.apache.activemq.artemis.ra.ActiveMQRASession.checkStrict(ActiveMQRASession.java:1311)
        at org.apache.activemq.artemis.ra.ActiveMQRAMessageConsumer.setMessageListener(ActiveMQRAMessageConsumer.java:118)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.configureConsumer(SimpleMessageListenerContainer.java:127)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.initConsumers(SimpleMessageListenerContainer.java:258)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.doStart(SimpleMessageListenerContainer.java:229)
        at org.apache.camel.support.service.BaseService.start(BaseService.java:123)
it is interesting to note that the ra can be used ith sjms/sjms2 in a camel route if only publishing. but it is not possible to consume from jms.
it would be nice to have some alignment between quarkus and camel with respect to accessing artemis servers through the RA.
however the artemis ra can be used with the original jms connector, which has the following drawbacks: it drags some spring libraries in the quarkus app, sjms and sjms2 are said to have perf improvements compared to the jms connector.
if using sjms and sjms2 it is possible to use the other extension quarkus-artemis-jms, but it requires to add quarkus-pooled-jms to allow connection pooling, but the main drawback is that quarkus applications that want to use classic jms with the ra, plus a camel route, would have to use 2 sets of extensions to access artemis. fron a maintenance standpoint it is better if we can settle on 1 single extension. i.e. quarkus-artemis-ra
some other issues have been fixed, which could have been avoided if a sjms implementation support directly the ra:
quarkus-artemis-ra is a sophisticated and feature proof approach to allow dealing with artemis servers. it would be nice to allow using it natively in camel routes inside quarkus applications.",No comments found
21704,Bug,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-03T15:45:22+0000,1738597522,2025-02-03T19:52:31+0000,2025-02-03T19:52:31+0000,No description available,No comments found
21703,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-03T15:02:12+0000,1738594932,2025-02-05T05:59:04+0000,2025-02-05T05:59:04+0000,"It may be good if we can make some extra functions to simple via camel-attachments, so you can easily check if there are attachments, and what names they are etc.",No comments found
21702,Bug,Gaelle Fournier,Dominik Jelinek,"4.8.3,4.9.0,4.10.0",4.10.0,2025-02-03T13:59:14+0000,1738591154,2025-02-05T05:59:26+0000,2025-02-05T05:59:26+0000,"for a deployment I've used, which is working fine and route is deployed and logs are running
then I would like to delete a deployment using:
content of `.camel-jbang-run/demoroute/target/kubernetes`",No comments found
21701,Improvement,Federico Mariani,Claus Ibsen,None,4.10.0,2025-02-03T13:03:16+0000,1738587796,2025-02-04T12:44:37+0000,2025-02-04T12:44:36+0000,"If you upload file via POST multipart/form-data then you have the file as attachments and a null message body.
We should add an option to make it easy to store the file in the body and the name of the file as CamelFileName - this should only be for a single file upload. But to make this easier than working with attachments.",No comments found
21700,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-03T10:24:33+0000,1738578273,2025-02-03T20:10:53+0000,2025-02-03T20:10:53+0000,"We should make platform-http able to handle file uploads as multipart/form by default. This requires to turn it on in -vertx.
Also make configuring this easier as its on a special bodyHandler configuration currently.",No comments found
21699,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-01T15:34:21+0000,1738424061,2025-02-03T08:32:56+0000,2025-02-03T08:32:56+0000,"Added TODO in  KafkaRecordBatchingProcessor
We should make the onCompletion able to deal with this without the message body must be kept as List<Exchange>. So users can split and whatelse transformation they do in the route.",No comments found
21698,Task,Unassigned,Claus Ibsen,4.10.0,4.x,2025-02-01T10:25:36+0000,1738405536,2025-02-18T08:21:07+0000,2025-02-18T08:21:07+0000,,No comments found
21697,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-01T08:24:43+0000,1738398283,2025-02-01T10:52:19+0000,2025-02-01T10:52:19+0000,We should use the Camel standard for naming headers.,No comments found
21696,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.11.0,2025-01-31T19:44:27+0000,1738352667,2025-02-26T10:16:29+0000,,"When retrieving embeddings with similarity search, they need to be decoded back to String
This is for RAG",No comments found
21695,Improvement,Claudio Miranda,Claudio Miranda,None,4.10.0,2025-01-31T14:58:28+0000,1738335508,2025-02-03T10:39:00+0000,2025-02-03T10:39:00+0000,"The camel-jbang-plugin-k is scheduled to be removed from camel-jbang 4.10, there are many remaining traces from camel-k in camel-jbang:",No comments found
21694,Bug,Claus Ibsen,Claus Ibsen,4.10.0,4.10.0,2025-01-31T13:17:11+0000,1738329431,2025-01-31T19:13:08+0000,2025-01-31T19:13:08+0000,If you try to export to 4.8.3 with camel-main runtime then it fails etc.,No comments found
21693,Task,Unassigned,Claus Ibsen,None,4.x,2025-01-31T10:08:14+0000,1738318094,2025-02-03T08:52:26+0000,,"camel-jbang was created during v3 and we have some older code that checks for some v3 stuff.
We can remove this and make camel-jbang v4 only.",No comments found
21692,Bug,Claus Ibsen,Marco Carletti,"4.9.0,4.10.0",4.10.0,2025-01-31T09:27:01+0000,1738315621,2025-01-31T10:04:38+0000,2025-01-31T09:54:45+0000,"Running the open-api-contract-first example as explained in the README file won't work
this is the response (with unexpected body):
the response expected contains the body from the mock so",No comments found
21691,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-31T09:13:22+0000,1738314802,2025-02-12T14:59:50+0000,2025-02-03T11:28:35+0000,"To make it possible to trigger batch when either hits first
This allows to ensure batches can be processed in case there are no new messages or they are sent very slowly",No comments found
21690,Bug,Christoph Deppisch,Christoph Deppisch,4.9.0,4.10.0,2025-01-31T08:34:11+0000,1738312451,2025-02-01T08:21:29+0000,2025-02-01T08:21:29+0000,"The Camel JBang Kubernetes run command provides the option to automatically push the built container image to the Kubernetes image registry (--image-push=true)
This option has no effect. Even if set to true the exported project has the option
and the image push is skipped.
Also, the --image-push option is set to false as a default value. I'd suggest to set this to true by default as almost all Kubernetes run commands need to push the container image. Otherwise the Kubernetes Deployment will not be able to pull the container image from the registry (on Minikube, Kind, OpenShift, etc.) and the deployment is failing.",No comments found
21689,Task,Claus Ibsen,Manjunath S Horapeti,4.8.3,"4.8.4,4.10.0",2025-01-30T20:02:58+0000,1738267378,2025-01-31T09:14:04+0000,2025-01-31T09:14:04+0000,"Hi Team,
 
I'm reaching out regarding the understanding of behaviour of ""pollTimeoutMs"" and the discrepancy observed.
As per the documentation above from the camel kafka component page (https://camel.apache.org/components/4.8.x/kafka-component.html#_batching_consumer) 4.8.x version, the pollTimeoutMs works in tandem with ""maxPollRecords"", to either poll ""maxPollRecords"" or block for a maximum of ""pollTimeOutMs"".
But the behaviour observed was that the camel route kept waiting until ""maxPollRecords"" count was reached and then processed further.
 
For example: our route is as follows
This route always waits until 50000 records are present in the topic and then proceeds further and ignoring pollTimeoutMs of 10000 (10 seconds). i.e. if the producer is producing messages at a rate of 50-100 msgs per second, then application waits for nearly 500-1000 seconds before proceeding further that is until 50000 record count is met.
 
We believe that the below code mentioned in the ""KafkaRecordBatchingProcessor"" is never executed as there is always one or two messages in poll. and hence method - ""hasExpiredRecords"" with condition consumerRecords.isEmpty() is always false.
We believe this is making the application wait until maxPollRecords (50000) is reached and then proceed further.

Definition of ""hasExpiredRecords()""
Can you please help us by letting us know if the above behaviour is as expected and if so then can you let us know how to pull Y messages from the topic or write whatever messages are received within X seconds? (exact behaviour mentioned in the above Batching Consumer documentation). 
 
Thanks in advance.",No comments found
21688,Improvement,Claus Ibsen,Pasquale Congiusti,4.9.0,4.10.0,2025-01-30T16:02:06+0000,1738252926,2025-01-31T08:50:58+0000,2025-01-31T08:50:58+0000,"When you create a simple Camel application (eg, a timer to log), then, the export is not able to run properly:
Apparently the regression is caused by the fact that, previously, we always embedded some dependency that enabled a web server. This is not happening now, so, we need to find a way to keep the application running regardless the presence of a web dependency or not.",No comments found
21687,Bug,Claus Ibsen,Claus Ibsen,4.8.3,"4.8.4,4.10.0",2025-01-30T15:41:51+0000,1738251711,2025-01-30T16:14:36+0000,2025-01-30T16:14:36+0000,https://camel.zulipchat.com/#narrow/channel/257302-camel-quarkus/topic/transaction.20with.20quarkus,No comments found
21686,Bug,Thomas Diesler,Thomas Diesler,4.9.0,4.10.0,2025-01-30T15:00:45+0000,1738249245,2025-01-31T13:18:19+0000,2025-01-31T13:18:12+0000,,No comments found
21685,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-30T13:04:32+0000,1738242272,2025-01-30T15:17:06+0000,2025-01-30T15:17:06+0000,"The modeline was an experiment from camel-k for cramming everyting into a single file, and instruct the kamel cli to append args (modeline) when you type kamel run.
We should deprecate modeline we have in camel-yaml-dsl / camel-dsl-modeline and make Camel do a WARN log when starting if modeline are in use.
We do the same for the deprecated kebab-case in YAML DSL.",No comments found
21684,Bug,Claus Ibsen,Claus Ibsen,4.5.0,"4.8.4,4.10.0",2025-01-29T19:25:50+0000,1738178750,2025-01-29T19:29:12+0000,2025-01-29T19:29:12+0000,Due to optimization from CAMEL-20520 then when the api is requested later with x-forward headers then they don't change the returned data because its pre build and cached.,No comments found
21683,Improvement,Federico Mariani,Federico Mariani,None,4.10.0,2025-01-29T15:21:00+0000,1738164060,2025-01-31T06:58:51+0000,2025-01-31T06:58:51+0000,"Right now, Cxf Services (SOAP) can be configured via CxfEndpoint myEndpoint, from(""cxf:bean:myEndpoint"")...
The CxfRs follows another strategy that may break the interoperability with Cxf SOAP services, moreover, it would be nice to have the CXFs behaviour aligned.",No comments found
21682,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-29T14:06:33+0000,1738159593,2025-01-30T10:28:00+0000,2025-01-30T10:28:00+0000,No description available,No comments found
21681,Dependency upgrade,James Netherton,Claus Ibsen,None,4.10.0,2025-01-29T14:04:15+0000,1738159455,2025-01-29T15:20:55+0000,2025-01-29T15:20:55+0000,No description available,No comments found
21680,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-29T13:18:25+0000,1738156705,2025-01-29T14:49:23+0000,2025-01-29T14:49:23+0000,No description available,No comments found
21679,Improvement,James Netherton,James Netherton,None,4.10.0,2025-01-29T11:58:57+0000,1738151937,2025-01-29T13:12:21+0000,2025-01-29T13:12:21+0000,"When using a custom ServiceBus client, the configuration validation logic in ServiceBusComponent is not quite correct. It checks to see if both the senderClient and processorClient options have been provided before validating if the connectionString or fullyQualifiedNamespace options are set.
https://github.com/apache/camel/blob/557b7ff166a754dcdd34997d56648de8f78b5dcb/components/camel-azure/camel-azure-servicebus/src/main/java/org/apache/camel/component/azure/servicebus/ServiceBusComponent.java#L90-L98
However, if you're configuring the ServiceBus consumer, it only makes sense to specify the processorClient. Likewise, if you're configuring the servicebus producer, only the senderClient is relevant. You'd never supply both client options unless they get autowired.",No comments found
21678,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-29T11:06:14+0000,1738148774,2025-01-30T16:00:44+0000,2025-01-30T16:00:44+0000,Like CAMEL-20971,No comments found
21677,Improvement,Pasquale Congiusti,Pasquale Congiusti,None,4.10.0,2025-01-29T10:16:31+0000,1738145791,2025-01-31T09:39:35+0000,2025-01-31T09:39:32+0000,We should make the exception to leverage the endpoint object for a better usage of internal logging mechanisms.,No comments found
21676,Task,Claus Ibsen,Jiri Ondrusek,4.10.0,4.10.0,2025-01-29T09:46:57+0000,1738144017,2025-01-30T08:27:59+0000,2025-01-29T13:53:59+0000,"When adapting the latest bits of Camel 4.10 by camel-quarkus, NPE error was discovered when running kamelet tests.
Here is a failure in the nightly build - CI
Problem seems to be happening when kamelet is loaded as XML. Its route definition is not initialized properly and causes a NPE in
If the kamelet it rewriten into YAML, error goes away.
I think that error was introduced by this commit.",No comments found
21675,Improvement,Unassigned,Claus Ibsen,None,4.10.0,2025-01-29T09:37:02+0000,1738143422,2025-01-29T10:28:58+0000,2025-01-29T10:28:58+0000,No description available,No comments found
21674,Task,Unassigned,Otavio Rodolfo Piske,4.9.0,4.x,2025-01-29T07:17:06+0000,1738135026,2025-01-29T10:24:22+0000,,"The way we document the dependency that users have to add is not consistent in the documentation. Sometimes it appears on the top. Sometimes in a ""Dependencies"" section at the bottom. Sometimes it is not present at all.
We should make this consistent.",No comments found
21673,Task,Thomas Cunningham,Thomas Cunningham,None,4.10.0,2025-01-28T21:06:07+0000,1738098367,2025-01-30T08:38:33+0000,2025-01-30T08:38:33+0000,"OpenScanHub tool notes missing stream closes in :
components-starter/camel-platform-http-starter/src/main/java/org/apache/camel/component/platform/http/springboot/SpringBootPlatformHttpBinding.java - line 148, resource stream
tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java - line 1930 - resource is
tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootStarterMojo.java - line 120 getResourceAsStream
tooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootStarterMojo.java - line 236 getResourceAsStream
core/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/routecontroller/SupervisingRouteControllerAutoConfiguration.java - getBackOffMaxDelay wrong getter",No comments found
21672,Bug,James Netherton,James Netherton,None,4.10.0,2025-01-28T15:02:50+0000,1738076570,2025-01-29T08:07:58+0000,2025-01-29T08:07:58+0000,"If you try to configure an azure-servicebus endpoint and provide a custom client via the processorClient option, then you get a failure stating that no connectionString URI option was provided.
Seems ServiceBusConsumer will always create its own client:
https://github.com/apache/camel/blob/236adb6b0cc87d4627bb1d9f0e5d8a667919746e/components/camel-azure/camel-azure-servicebus/src/main/java/org/apache/camel/component/azure/servicebus/ServiceBusConsumer.java#L56-L62",No comments found
21671,Bug,Unassigned,Soheila Esmaeili,4.8.0,None,2025-01-28T12:37:33+0000,1738067853,2025-01-28T13:28:50+0000,,"We are currently facing an issue with a Camel route that uses a splitter with parallelProcessing. The route includes an asynchronous processor and a delay within the splitter. However, the problem is that the split threads do not wait for the asynchronous process to complete before proceeding further.
Although the max. number of threads for split processing is set to 2, we have no control over thread usage due to the async processor. In Camel 3.14 and Camel 4.8, the 2 threads will forward the message to the async processor, then continue with the next 2 split parts, which are also handed over to another thread pool and so on. This can lead to hundreds of parallel threads performing the operations defined within the split-block. If these operations are long-running and memory-intensive, this can lead to further problems. In the older (unmaintained – 2.x) Camel version, this was not the case. Although the threads changed due to the async processor, the “split-related threads” were in a blocking/waiting state (I assume). At least there was no “unbounded” upscaling in the number of threads.
Could you please confirm if this is a known issue or if there are specific configurations needed in newer Camel versions to achieve the expected behavior?
A simplified unit test can be found in the appendix.
Result in Camel 2.24:
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #1 - Split
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #1 - Split
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #1 - Split
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1
Before AsyncProcessor - Thread: Camel (camel-1) thread #1 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1
Before AsyncProcessor - Thread: Camel (camel-1) thread #1 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1
Result in 3.14 and 4.8:
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #3 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #3 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - Split
Before AsyncProcessor - Thread: Camel (camel-1) thread #3 - Split
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-6
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-3
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-5
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-10
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-8
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-9
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-7
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1
After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-4",No comments found
21670,New Feature,Pasquale Congiusti,Pasquale Congiusti,None,4.11.0,2025-01-28T12:05:38+0000,1738065938,2025-02-24T12:02:17+0000,2025-02-24T12:02:17+0000,Develop a new component as described in the Camel tracing design specification. In the first iteration we can just include the abstract component development.,No comments found
21669,Improvement,Unassigned,Christoph Deppisch,None,4.x,2025-01-28T12:03:31+0000,1738065811,2025-01-28T13:31:53+0000,,"The Camel JBang Kubernetes plugin has hit some regressions recently. The unit tests of the plugin are disabled right now, mainly because they have the requirement to access Kubernetes/Docker on the host machine. This is quite resource consuming and limits the test execution on some environments. This is why the tests are restricted to manual execution right now.
We should improve the unit tests to work with only lightweight infrastructure (e.g. using the fabric8 Kubenretes mock server and Jib) so we can run the tests also on hosts without any Kubernetes or Docker installed.
Also the tests have shown some flakiness in the past that needs to be fixed. As soon as we have some stable tests that do not require Kubernetes or Docker on the host we can (re)enable the unit tests (maybe limited to nightly execution) to ensure the stability of the plugin and avoid introducing too many regressions.",No comments found
21668,Bug,Marco Carletti,Marco Carletti,4.10.0,4.10.0,2025-01-28T09:49:07+0000,1738057747,2025-01-29T06:07:54+0000,2025-01-29T06:07:54+0000,"the error will be
the same command works with Camel Jbang 4.9.0",No comments found
21667,New Feature,Unassigned,Felix Huisinga,None,4.x,2025-01-28T08:39:50+0000,1738053590,2025-01-28T10:09:27+0000,,"Proposal: In order to use the new Spring Hot-Reload for the SSL context, we need to be able to use SSL bundle and also use the updated one after reloading in http component.
Spring Docs: https://spring.io/blog/2023/11/07/ssl-hot-reload-in-spring-boot-3-2-0",No comments found
21666,Task,Marco Carletti,Claus Ibsen,4.10.0,4.10.0,2025-01-28T08:25:28+0000,1738052728,2025-01-28T12:58:07+0000,2025-01-28T12:58:07+0000,"[INFO] — failsafe:3.5.2:integration-test (integration-test) @ camel-test-infra-cli —
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO]
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.apache.camel.test.infra.cli.it.CliConfigITCase
[INFO] o.testcontainers.images.PullPolicy.defaultPolicy - Image pull policy will be performed by: DefaultPullPolicy()
[INFO] o.t.utility.ImageNameSubstitutor.instance - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
[INFO] o.a.c.t.i.c.s.CliLocalContainerService.initialize - Trying to start the camel-cli container
[INFO] o.testcontainers.DockerClientFactory.getOrInitializeStrategy - Testcontainers version: 1.20.4
[INFO] o.t.d.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9 - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
[INFO] o.t.d.DockerClientProviderStrategy.tryOutStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
[INFO] o.testcontainers.DockerClientFactory.client - Docker host IP address is localhost
[INFO] o.testcontainers.DockerClientFactory.client - Connected to docker:
  Server Version: 27.4.0
  API Version: 1.47
  Operating System: Docker Desktop
  Total Memory: 7937 MB
  Labels:",No comments found
21665,Bug,Christoph Deppisch,Bruno Meseguer,4.9.0,4.10.0,2025-01-27T19:25:25+0000,1738005925,2025-01-28T08:44:15+0000,2025-01-28T08:44:15+0000,"Deploying an integration with version 4.9.0 in an OpenShift environment works.
(Tested in the Developer Sandbox)
However, when running the `delete` command, it seems to fail, as per the following logs:
The openshift.yml does exist",No comments found
21664,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.8.3,4.9.0","4.8.4,4.10.0",2025-01-27T13:54:23+0000,1737986063,2025-01-28T12:53:52+0000,2025-01-28T12:53:52+0000,"When recording the metadata, the body will be either an Exchange or a Message, but not both. Therefore, trying to match both may incur in a JVM's secondary super's cache miss, potentially affecting performance.",No comments found
21663,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.8.3,4.9.0","4.8.4,4.10.0",2025-01-27T13:28:07+0000,1737984487,2025-01-28T12:53:56+0000,2025-01-28T12:53:56+0000,"Lack of a null check here, makes the rather inexpressive ""getJMSCorrelationID"" quite slow as the JMS client can return null, causing the string initialization to throw an NPE.",No comments found
21662,Bug,Grzegorz Grzybek,Mikael Koskinen,"4.9.0,4.10.0","4.8.4,4.10.1,4.11.0",2025-01-27T12:03:18+0000,1737979398,2025-02-19T10:25:27+0000,2025-02-19T10:25:27+0000,"I'm trying to run a simple Camel integration using Camel JBang ""run"" command with ""runtime"" -option set to either springboot or to quarkus. It fails with a error that make it sound like that maybe it is a Windows specific problem?
Camel Main runtime works:",No comments found
21661,Improvement,Claus Ibsen,Jonas Nilsson,4.8.3,"4.8.4,4.10.0",2025-01-27T09:51:48+0000,1737971508,2025-02-01T10:21:57+0000,2025-02-01T10:21:57+0000,"Details in Zulip: https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/WARN.20log.20in.20camel-micrometer.204.2E8.2E3.3F
Simple test route:
Logging from first file (one WARN then DEBUG)
Second file and beyond:
I suspect this is not due to a change in camel-micrometer, or rather, that this ""bug"" has been there all the time.
But that Micrometer started to log this warning in the latest version, introduced in this commit: https://github.com/micrometer-metrics/micrometer/commit/12d30723e6baff46a97b1b364e3085adbed543ee
I see that Camel 4.4.4 is using 1.12.10 of io.micrometer packages, and Camel 4.8.3 is using 1.13.9 where this new warning was added.
I'm not super knowledgeable about Camel source code and how everything works behind the scenes, but I suspect it could be this ExchangeEvent handler that are trying to register the gauage over and over again? (and that this should only be done once, and then the value should be updated instead?): https://github.com/apache/camel/blob/main/components/camel-micrometer/src/main/java/org/apache/camel/component/micrometer/eventnotifier/MicrometerExchangeEventNotifier.java#L143",No comments found
21660,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-27T08:34:34+0000,1737966874,2025-01-27T13:39:03+0000,2025-01-27T13:39:03+0000,So you can use kamelet sources and turn on bridgeErrorHandler=true just as you can from regular components.,No comments found
21659,Improvement,Simon Rasmussen,Simon Rasmussen,4.8.3,"4.8.4,4.10.0",2025-01-27T08:00:38+0000,1737964838,2025-01-28T13:39:12+0000,2025-01-28T13:39:12+0000,"After upgrading to 4.8.3, we started seeing the following warnings in our logs, quite often:
The error occurs when an attempt to extend message visibility for a message that has already been deleted in SQS.
In CAMEL-19656, the implementation was switched to using the batched call, but failed to implement the proper ignore in case of above error – as the old implementation had.
I also noticed that the current implementation extends ALL messages in the queue of non-processed – not just those that are about to expire. This happens because the TimeoutExtender, currently will make a copy of all the values in the Map, and extend them, in batches.
In case of 100 messages, this will require 10 requests, even though the last messages in the queue might not need to be extended yet.
If the route is used together with the threads EIP, then the default queue size is 1000, which makes above algorithm really inefficient.
I suggest introducing a concept of a deadline to each entry in the TimeoutExtender. The deadline is set to now() plus 80% of the visibilityTimeout. When sending requests, only messages that will expire before the next execution of the TimeoutExtender will be extended. The TimeoutExtender task itself should run more frequently, but will pick up less messages each time. I suggest it running every visibilityTimeout/2. In a typical configuration, this would result in executing TimeoutExtender every 10 seconds.",No comments found
21658,New Feature,Unassigned,Claus Ibsen,None,4.x,2025-01-25T13:45:57+0000,1737812757,2025-01-25T13:45:57+0000,,"Pre build a fat-jar with all dependencies included and easy to run via java -jar / jbang or launch scripts / or similar to spring boot packaging executable=true.
camel-jbang uses its own dynamic dependency resolver (also maven) - this would be better / easier / quicker than today with first jbang running parsing the .java file and seeing the // DEPS etc and doing its ""work"" and then calling camel-jbang main class for the CLI that then does its own thing aftetwards.
The fat-jar can still be launched from jbang. Also each fat-jar is its own release so there is no complexity of mixed versions of Camel.",No comments found
21657,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-25T13:04:54+0000,1737810294,2025-01-27T17:22:40+0000,2025-01-27T17:22:40+0000,"In a newer release of jsch then they offer an API to get the config which we can use to dump to a dev console, so it can be used for troubleshooting.
jsch has a lot of security config that can be tricky to set what are in use or not.",No comments found
21656,Bug,Claus Ibsen,Raymond,4.9.0,"4.8.4,4.10.0",2025-01-24T19:53:38+0000,1737748418,2025-02-17T16:46:58+0000,2025-02-02T11:50:12+0000,"I have a customer that upgraded from an old Camel version (2.23) to 4.9.0 where the Camel 4 route returned an unexpected result. It's a bit of an edge/curious case.
It was part of a bigger route, but I tried to create a minimal example to reproduce the issue.
The following routes:
returns the result: a
expected result: b
The expected result can be shown by changing small things in the route. For example:
1. Change the endpoint ""activemq:2"" to ""direct:2""
2. Remove this line from route 2:
<to uri=""activemq:log?exchangePattern=InOnly&timeToLive=86400000""/>
3. Remove one of the parameters in route 4a of this line:
<to uri=""activemq:log?exchangePattern=InOnly&timeToLive=86400000""/>
For example, just by removing the timeToLive option returns the expected result.
----------------------------
With all of these small changes, the expected result 'b' returns. Can you check why this particular combination produces the unexpected result?
Note: I used ActiveMQ 6.1.5 for testing.",No comments found
21655,Dependency upgrade,Unassigned,Dave Riseley,4.9.0,4.10.0,2025-01-24T18:18:27+0000,1737742707,2025-01-28T07:00:54+0000,2025-01-28T07:00:54+0000,"CXF 4.1.0 has been released with Jakarta EE 10 support:  https://cxf.apache.org/cxf-410-release-notes.html
Please could camel-cxf be upgraded to this version before the next LTS release.  In particular the Jetty 12 support is required for to use the cxf jetty transport with Spring Boot 3.2.x or later",No comments found
21654,Improvement,Pasquale Congiusti,Claus Ibsen,None,4.10.0,2025-01-24T17:43:22+0000,1737740602,2025-01-31T08:33:52+0000,2025-01-31T08:33:48+0000,"For endpoint events then the tag for the uri.
The endpointName uses the toString of the endpoint which can have too many combinations with dynamic uris and dynamic query parameters.
This will however lead to different endpoints being grouped together but based on the base path.
We can maybe add an option to control this as a boolean option that can be turned on | off.
See also
https://camel.zulipchat.com/#narrow/channel/257302-camel-quarkus/topic/Stopping.20exchange.20metric.20collection",No comments found
21653,Bug,Federico Mariani,Salvatore Mongiardo,4.8.3,"4.8.4,4.10.0",2025-01-24T15:15:52+0000,1737731752,2025-01-27T13:59:21+0000,2025-01-27T13:59:21+0000,"Given a generic camel route (camel-1.yaml) as
Every attempt to pass a custom remote maven repository fails because it's completely ignored by CamelJBang runner:
i.e.:
Affected version of jbang is 4.8.3",No comments found
21652,Improvement,Unassigned,Bruno Meseguer,None,None,2025-01-24T12:53:54+0000,1737723234,2025-01-27T08:57:52+0000,,"For certain data manipulations, we need to set the type of the Variable to a particular class.
That step forces the user to add extra actions.
For XML transformations for instance, the process needs to work with `Document` when applying XLSTs.
In the old days, to get it right we needed 4 steps:
Then Variables were added to Camel Core and now we can save 1 step:
The request is to enhance the ""Receive Variable"" feature to also define the Type of the variable, to save an extra step, so the user just needs:",No comments found
21651,Dependency upgrade,Grzegorz Grzybek,Grzegorz Grzybek,None,4.10.0,2025-01-24T11:37:01+0000,1737718621,2025-01-25T07:28:11+0000,2025-01-25T07:28:11+0000,Jolokia 2.2.x changes the way properties are resolved and there's no need now to perform extra placeholder resolution.,No comments found
21650,New Feature,Federico Mariani,Federico Mariani,None,4.10.0,2025-01-24T10:45:08+0000,1737715508,2025-02-03T13:37:25+0000,2025-02-03T13:37:25+0000,"Add a new command to Camel JBang (update) that can be used to update Camel, Camel Spring Boot and Camel Quarkus applications.
The update command has two sub-commands:",No comments found
21649,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-24T07:39:54+0000,1737704394,2025-01-24T08:42:02+0000,2025-01-24T08:42:02+0000,"We have this in CEQ but not in general camel / CSB
InstrumentedThreadPoolFactory",No comments found
21648,Improvement,James Netherton,James Netherton,None,4.10.0,2025-01-23T14:09:43+0000,1737641383,2025-01-23T15:28:30+0000,2025-01-23T15:28:30+0000,"Sometimes folks have specific tracing requirements that are not easy to fulfil out of the box with the OpenTelemetry component.
So, it would be good to have a way to hook into the span creation process and have finer control over it. E.g via some kind of 'customizer' that provides access to the SpanBuilder, so that customizations could be applied.",No comments found
21647,Task,Andrea Cosentino,Federico Mariani,None,4.10.0,2025-01-23T10:59:56+0000,1737629996,2025-02-04T10:08:15+0000,2025-02-04T10:08:15+0000,"The Camel JBang IT test suite is slow to execute, therefore, by default the test execution is disabled. Having a daily Jenkins job for the supported branches that execute only this test suite would be nice.
The idea is the following:",No comments found
21646,Improvement,Unassigned,Pasquale Congiusti,4.x,None,2025-01-23T08:39:00+0000,1737621540,2025-01-23T08:39:00+0000,,"This is a minor problem I faced during the development. There is a workaround, so, no urgency to develop. If you're using a LogListener in your unit test, for example:
The expected `onLog()` event is not triggered if the unit test is missing a log4j2.properties configuration. The immediate workaround is to add such a configuration file.
Ideally, we should have it working even without the presence of that configuration, or, at least, have some documentation to state how this is working.",No comments found
21645,Improvement,Pasquale Congiusti,Pasquale Congiusti,None,4.10.0,2025-01-23T08:33:40+0000,1737621220,2025-01-23T16:05:28+0000,2025-01-23T16:05:22+0000,"We already have the `camel run --property` configuration, but we miss it in the export. We can implement it to enhance user experience.",No comments found
21644,New Feature,Tomohisa Igarashi,Claus Ibsen,None,4.x,2025-01-22T14:43:10+0000,1737556990,2025-01-22T16:14:21+0000,,Look at Apache Daffodil and see if it makes sense to have some kind of camel component for this.,No comments found
21643,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-22T10:10:09+0000,1737540609,2025-01-22T10:19:27+0000,2025-01-22T10:19:27+0000,"We should have a log4j-main.properties that just log to console so when you export you have a logger that does not log to ~/.camel that jbang does when you use camel run
For exporting to CSB or CEQ then we use their default logging settings.",No comments found
21642,Task,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-22T10:04:48+0000,1737540288,2025-01-22T17:00:53+0000,2025-01-22T17:00:53+0000,No description available,No comments found
21641,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-22T09:25:12+0000,1737537912,2025-01-23T08:54:21+0000,2025-01-23T08:54:21+0000,"You should not have component configuration code in the configure() method as this is for the DSL only.
We should have a practice where to put such code, also for users that want to cramp all together in a single file for fun and demo purposes.
So we may have a optional method on RouteBuilder for this purpose. That is triggered by camel-core and is only intended for configuration of components and others that you may otherwise do in application.properties",No comments found
21640,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-21T11:54:17+0000,1737460457,2025-01-21T13:43:30+0000,2025-01-21T13:43:30+0000,No description available,No comments found
21639,Task,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-21T11:28:49+0000,1737458929,2025-01-21T15:38:17+0000,2025-01-21T15:38:17+0000,No description available,No comments found
21638,Task,Unassigned,Anushka Juli,None,4.10.0,2025-01-21T08:07:02+0000,1737446822,2025-01-22T14:18:45+0000,2025-01-22T14:18:45+0000,"To provide ppc64le architecture support to camel-elasticsearch in the camel-component.
Updated the ElasticsearchComponent configuration to dynamically set enableSSL property based on the presence of an SSL context.",No comments found
21637,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-21T07:07:52+0000,1737443272,2025-01-21T11:03:41+0000,2025-01-21T11:03:41+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/.5Bcamel-jbang.5D.20impossible.20to.20stop.20top.20--watch.20in.20camel.20shell,No comments found
21636,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.x,2025-01-20T09:22:19+0000,1737364939,2025-02-06T10:51:33+0000,,Cover migrations described by migration guide,No comments found
21635,Dependency upgrade,Unassigned,Claus Ibsen,None,4.10.0,2025-01-20T09:11:27+0000,1737364287,2025-01-23T14:38:30+0000,2025-01-23T14:38:30+0000,To be released next week,No comments found
21634,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.4,4.10.0",2025-01-20T06:15:33+0000,1737353733,2025-01-20T09:09:13+0000,2025-01-20T09:09:13+0000,https://github.com/apache/camel-karavan/issues/1477,No comments found
21633,Task,Otavio Rodolfo Piske,Anushka Juli,None,4.10.0,2025-01-20T05:07:04+0000,1737349624,2025-01-27T18:13:12+0000,2025-01-27T18:13:12+0000,To provide ppc64le architecture support to camel-elasticesearch-rest-client in the camel-component,No comments found
21632,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-18T09:08:08+0000,1737191288,2025-01-20T15:52:04+0000,2025-01-20T15:52:04+0000,"The XSD has duplicate of
<xs:any maxOccurs=""unbounded"" minOccurs=""0"" namespace=""##other"" processContents=""skip""/>
<xs:any maxOccurs=""unbounded"" minOccurs=""0"" namespace=""##other"" processContents=""skip""/>
 
This is due to spring/blueprint parsing support for migration tools. We should see if we can avoid this or do fix the duplicate manually as part of a pre processing.",No comments found
21631,Task,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-17T09:58:55+0000,1737107935,2025-01-17T10:53:20+0000,2025-01-17T10:53:20+0000,"https://github.com/aws/aws-sdk-java-v2/blob/master/CHANGELOG.md#features-8
and tests are failing https://github.com/apache/camel/actions/runs/12824983217",No comments found
21630,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-17T07:01:32+0000,1737097292,2025-01-20T08:46:58+0000,2025-01-20T08:46:58+0000,"We can remove the option 
inheritErrorHandler which is only used in a rare situation with the failover load balancer. Then we can keep the option specially there (and maybe consider a better name).",No comments found
21629,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.10.0,2025-01-16T15:42:31+0000,1737042151,2025-01-20T08:47:20+0000,2025-01-20T08:47:20+0000,Test classes (and their method `defaults()`) have to be declared as public because Quarkus's migration project extends them.,No comments found
21628,Improvement,James Netherton,James Netherton,None,4.10.0,2025-01-16T11:17:24+0000,1737026244,2025-01-16T18:10:50+0000,2025-01-16T18:10:50+0000,"Minor thing I stumbled across while working on something in the Infinispan component.
There's some code where the CamelContext is supposed to be propagated from InfinispanRemoteAggregationRepository to InfinispanRemoteManager:
https://github.com/apache/camel/blob/401a6367aec8c311c170d127e75ec5f07f1a9de0/components/camel-infinispan/camel-infinispan/src/main/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteAggregationRepository.java#L94
getCamelContext() actually returns null because it's never been set. By chance, there's no code (yet) within InfinispanRemoteManager that actually refers to the context. But we should avoid passing in a null value.",No comments found
21627,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-16T08:13:02+0000,1737015182,2025-01-18T08:25:48+0000,2025-01-18T08:25:47+0000,https://blog.marcnuri.com/eclipse-jkube-1-18,No comments found
21626,New Feature,Andrea Cosentino,Claus Ibsen,None,4.10.0,2025-01-15T19:44:19+0000,1736970259,2025-01-21T11:53:41+0000,2025-01-21T11:53:41+0000,"Our current component is for on-prem hashicorp. If you use their cloud solution then you cannot use what we have today in Camel.
I dont know if the cloud can use the java library or something else may be needed.
But it would be good to have a security vault integration with this so you can use
placeholders in Camel routes.",No comments found
21625,Bug,Thomas Diesler,Thomas Diesler,None,4.10.0,2025-01-15T15:12:49+0000,1736953969,2025-02-03T15:19:57+0000,2025-01-16T18:11:00+0000,,No comments found
21624,Improvement,Unassigned,Nadina Florea,4.9.0,None,2025-01-15T13:09:51+0000,1736946591,2025-02-24T15:47:41+0000,2025-02-24T15:47:41+0000,"Hello,
I recently encountered an issue in my application that uses Apache Camel 4.9.0 along with the Kafka component (camel-kafka) for message processing. The issue arises due to the interaction between Camel’s Kafka configuration and Kafka Appender when bootstrap.servers is defined using a multiline syntax in a YAML configuration file.
Environment:
• Apache Camel Version: 4.9.0
• Spring Boot Version: 3.4.1
• Kafka Clients Version: 3.8.1
• Java Version: 17
Steps to Reproduce:
1. Define bootstrap.servers in application.yaml using multiline syntax:
2. Use the following setup in logback-spring.xml to configure Kafka Appender:
3. Run the application.
Observed Behavior:
The application fails to start with the following error:
org.apache.camel.RuntimeCamelException: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers:  broker2:9092
Expected Behavior:
The bootstrap.servers property should be processed correctly, even if defined in a multiline YAML syntax, as it worked with older Kafka Clients versions (e.g., 3.7.x).
After investigating, I suspect the following change in Kafka Clients 3.8.x:
• Starting with Kafka Clients 3.8.x, stricter validation for bootstrap.servers was introduced via KAFKA-17584. This validation now rejects newline characters or other formatting inconsistencies.
• While this is expected behavior, the way Camel propagates the camel.component.kafka.brokers property to Kafka Appender through logback-spring.xml seems to preserve newline characters, which results in invalid configuration values.
Additional Notes:
• When I updated my YAML configuration to write bootstrap.servers on a single line (e.g., broker1:9092,broker2:9092), the issue was resolved.
• Applications that use Spring Kafka directly without Camel are not affected by this issue.
When configuring numerous brokers in the bootstrap.servers property, it is difficult to read and manage when placed on a single line.
Is this behavior intentional or should Camel consider providing a more flexible way to handle multiline configs in the future?
Thank you!",No comments found
21623,New Feature,Federico Mariani,Federico Mariani,None,4.10.0,2025-01-14T15:16:08+0000,1736867768,2025-02-03T09:35:17+0000,2025-02-03T09:35:17+0000,"Create a new Camel JBang command that exposes test-infra Services.
The command are the following",No comments found
21622,Improvement,Marco Carletti,Marco Carletti,4.9.0,4.10.0,2025-01-14T13:30:11+0000,1736861411,2025-01-15T15:56:37+0000,2025-01-15T15:56:15+0000,it would be nice to have the route id in the trace span to easily associate the span with the route implementation,No comments found
21621,Bug,Thomas Diesler,Thomas Diesler,None,4.10.0,2025-01-14T12:53:27+0000,1736859207,2025-01-15T15:36:44+0000,2025-01-15T09:19:29+0000,,No comments found
21620,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-14T10:21:31+0000,1736850091,2025-01-17T17:50:42+0000,2025-01-17T17:50:42+0000,"Only when in choice should have outputs. The onWhen used in filter, doCatch, intercept, onCompletion should be a predicate only without outputs. However since it reused the when from choice the model has outputs. Its a bit tricky to fix due to the model being old and classic spring xml XSD.",No comments found
21619,Improvement,Unassigned,Claus Ibsen,None,4.x,2025-01-14T09:40:18+0000,1736847618,2025-01-14T09:40:18+0000,,"When using some kamelets such as database or messaging systems, then the runtime like SB or Q comes with their standard connection pooling. It may be desirable to have a way for a kamelet to adapt and use this from the same kamelet, so we do not have runtime specific kamelets. Also consider camel-main runtime should have a way for connection pooling.
This is mostly applicable to only JMS / Artemis / SQL kamelets.",No comments found
21618,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,None,4.10.0,2025-01-14T09:15:41+0000,1736846141,2025-02-06T10:54:44+0000,2025-02-06T10:54:44+0000,Usual ticket for documentation review. Please add any documentation to be reviewed in the comments.,No comments found
21617,Task,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-13T21:24:31+0000,1736803471,2025-01-14T10:21:38+0000,2025-01-14T07:17:22+0000,"The doTry.json does not include doCatch and doFinally in its json metadata file.
Lets see if we can add them.",No comments found
21616,Bug,Claus Ibsen,Claus Ibsen,4.9.0,4.10.0,2025-01-13T20:52:13+0000,1736801533,2025-01-13T20:55:30+0000,2025-01-13T20:55:30+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/The.20property.20javaRoutesExcludePattern.20doesn't.20seem.20to.20work,No comments found
21615,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-13T20:35:27+0000,1736800527,2025-01-13T21:13:39+0000,2025-01-13T21:13:39+0000,"Avoid this ugly stacktrace, but just report a nice one line error
~/workspace/deleteme/xxy ❯ camel export --dir=code --runtime=camel-main
org.apache.camel.RuntimeCamelException: Failed to resolve project name - please provide --name, --gav or source file
    at org.apache.camel.dsl.jbang.core.commands.Export.getProjectName(Export.java:180)
    at org.apache.camel.dsl.jbang.core.commands.Export.export(Export.java:61)
    at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.doCall(ExportBaseCommand.java:260)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
    at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
    at picocli.CommandLine.access$1500(CommandLine.java:148)
    at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
    at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
    at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
    at picocli.CommandLine.execute(CommandLine.java:2174)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:175)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:62)
    at main.CamelJBang.main(CamelJBang.java:36)",No comments found
21614,Bug,Nicolas Filotto,Jannik Schmeier,4.8.2,"4.8.4,4.10.0",2025-01-13T15:21:02+0000,1736781662,2025-01-22T19:22:31+0000,2025-01-15T09:04:25+0000,"This is a Follow-Up on this issue: CAMEL-21467
Unfortunately we are still experiencing the same issue with threads getting stuck in the state RUNNABLE. It seems like the frequency of the issue has greatly decreased though. We have had it twice in about a month.
Threaddump:
This is basically exactly the second case from my previous issue and seems to occur in this route:
Regarding davsclaus's question in the last issue (which apparently I have overseen):
The bean referenced via PROPERTY_REQUEST looks something like this:
// the implemented interface
Are the classes of the contained fields (RequestStatus, RequestDataType) also relevant for your question?
Regarding clear steps to reproduce, I am unsure whether I can provide. The issue appeared twice in a month within thousands of invocations of the timer route and the constellation causing it is not clear to me.",No comments found
21613,Improvement,Thomas Diesler,Gaelle Fournier,None,4.x,2025-01-13T14:58:35+0000,1736780315,2025-01-23T11:06:43+0000,,"We should be able to configure for which architecture platform(s) we cant to build the container.
Currently we build the container image (with docker, JIB or podman) for both linux/amd64 and linux/arm64. That mean we need the user to be able to do multi-platform build.
While it is available out of the box for JIB (and maybe podman), for docker it requires some specific tools like Qemu/buildx. We need to allow the user to override the default configuration.",No comments found
21612,Bug,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2025-01-13T13:58:28+0000,1736776708,2025-01-14T08:35:05+0000,2025-01-13T15:01:56+0000,"working with 4.8.2
no more working with Camel 4.9.0:
it is affecting debug functionality in VS Code",No comments found
21611,Improvement,Unassigned,Claus Ibsen,None,4.10.0,2025-01-11T13:34:42+0000,1736602482,2025-01-11T13:57:49+0000,2025-01-11T13:57:49+0000,"When using `camel shell` and pressing tab, then all the Camel commands are listed under Picocli Commands. It would be good if we can rename this to Camel or Apache Camel",No comments found
21610,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2025-01-11T13:30:05+0000,1736602205,2025-01-11T13:30:05+0000,,"Sometimes when using a kamelet you may want to debug inside the kamelet for trouble shooting if something is mysterious. Or when you build custom kamelets and want to try them.
Also for route templates in general then dynamic routes can be added from the template, so the debugger needs to know about its source location and debug in the templates.",No comments found
21609,Bug,Unassigned,Jawad Ahmad,"4.4.4,4.8.2,4.9.0",None,2025-01-10T21:15:15+0000,1736543715,2025-02-02T14:01:08+0000,,"I recently upgraded my Camel application from Camel 3.2.1 and Java 11 to Camel 4.9.0 and JDK 21.
I am now seeing a lot of blocked threads in thread monitoring. I noticed it when my application started to hang up during testing. I also tested v4.4.4, v4.8.2, and Java 17 and found the same issue. Threads are blocked in SalesforceHttpClient.
I also profiled my older Java 11 and Camel 3.21,0 instances, and there are no blocked threads.
Details:
I am subscribing to the Salesforce platform event and simply doing a query from my processor using the Producer Template.
A simple route like this blocks 2 threads on SalesforceHttpClient.",No comments found
21608,Improvement,Dylan Piergies,Dylan Piergies,4.9.0,"4.8.4,4.10.0",2025-01-10T13:25:05+0000,1736515505,2025-01-11T07:35:54+0000,2025-01-11T07:35:54+0000,Enhance to add support for message tags to the aws2-ses component. Tags are useful for providing user-defined metadata that will appear in email tracking events related to the sent email.,No comments found
21607,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,"4.8.4,4.10.0",2025-01-10T08:26:24+0000,1736497584,2025-01-10T08:26:29+0000,2025-01-10T08:26:29+0000,No description available,No comments found
21606,Bug,Adriano Machado,Adriano Machado,"4.8.0,4.9.0","4.8.4,4.10.0",2025-01-10T00:28:48+0000,1736468928,2025-01-10T08:27:22+0000,2025-01-10T08:27:22+0000,The validation mojo fails if you run the build process a second time on a project that is using external source artifacts to load routes,No comments found
21605,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-09T15:18:45+0000,1736435925,2025-01-13T14:23:29+0000,2025-01-13T14:23:29+0000,"We have a receive dev console, and we should have a new send dev console as well.",No comments found
21604,Bug,Freeman Yue Fang,Adriano Machado,4.8.2,4.x,2025-01-08T17:23:52+0000,1736357032,2025-02-02T08:19:16+0000,,"Adding the following GZIP feature to enable interceptors:
Generates the following exception when the service is called at runtime:
I'm trying to work on a reproducer at ammachado/camel at cxf-gzip-test.",No comments found
21603,Dependency upgrade,Thomas Cunningham,Claus Ibsen,4.8.3,4.8.4,2025-01-08T09:46:20+0000,1736329580,2025-01-23T15:09:22+0000,2025-01-23T14:38:40+0000,No description available,No comments found
21602,Test,Unassigned,Aurélien Pupier,4.9.0,4.10.0,2025-01-08T08:48:26+0000,1736326106,2025-01-09T06:51:34+0000,2025-01-09T06:51:34+0000,it failed 2 out of 5 times in the last 5 builds on the s390x architecture.,No comments found
21601,Test,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2025-01-08T08:46:04+0000,1736325964,2025-01-21T06:41:00+0000,2025-01-21T06:41:00+0000,"it failed on various JDk s and platform architecture. It failed 4 out 5 times on the last builds o,n Jenkins Ci.",No comments found
21600,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-01-08T06:48:17+0000,1736318897,2025-02-24T15:51:29+0000,2025-02-24T15:51:29+0000,"There is maybe a bug in ognl or something we need to change in camel-ognl
https://github.com/orphan-oss/ognl/issues/350",No comments found
21599,Bug,Claus Ibsen,Pasquale Congiusti,4.9.0,4.10.0,2025-01-07T14:42:43+0000,1736260963,2025-01-29T10:03:28+0000,2025-01-27T10:58:49+0000,"I found a faulty behavior when configuring a global error handler and the failure is caused by the execution of a Kamelet.
The following route works correctly:
It intercept the failing execution and forward the failure to the DLC. However, if the producer URI contains a failing Kamelet, then, the global error handler is not working. Wrapping the same failing logic in a local Kamelet like:
And executing a new route as:
Will act as no error handler is set at all, logging a Warn:",No comments found
21598,Task,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-01-07T11:21:34+0000,1736248894,2025-01-30T20:02:34+0000,,"Some have been removed, some got new versions.",No comments found
21597,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-01-07T11:20:59+0000,1736248859,2025-01-10T10:09:48+0000,,No description available,No comments found
21596,Improvement,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-01-06T16:02:23+0000,1736179343,2025-01-08T09:34:16+0000,2025-01-08T09:34:16+0000,No description available,No comments found
21595,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.8.2,4.9.0","4.8.3,4.10.0",2025-01-06T09:50:36+0000,1736157036,2025-01-31T08:44:08+0000,2025-01-07T08:32:38+0000,"Calls for tools:
https://github.com/apache/camel/blob/camel-4.8.2/components/camel-ai/camel-langchain4j-tools/src/main/java/org/apache/camel/component/langchain4j/tools/LangChain4jToolsProducer.java#L102
Which may return null:
https://github.com/apache/camel/blob/camel-4.8.2/components/camel-ai/camel-langchain4j-tools/src/main/java/org/apache/camel/component/langchain4j/tools/LangChain4jToolsProducer.java#L151-L154
And still be called:
https://github.com/apache/camel/blob/camel-4.8.2/components/camel-ai/camel-langchain4j-tools/src/main/java/org/apache/camel/component/langchain4j/tools/LangChain4jToolsProducer.java#L105
Which leads to dereferecing a null pointer:
https://github.com/apache/camel/blob/camel-4.8.2/components/camel-ai/camel-langchain4j-tools/src/main/java/org/apache/camel/component/langchain4j/tools/LangChain4jToolsProducer.java#L110",No comments found
21594,Bug,Unassigned,Zineb Bendhiba,"4.8.2,4.9.0","4.8.4,4.10.0",2025-01-06T09:35:40+0000,1736156140,2025-01-31T08:44:08+0000,2025-01-31T08:44:08+0000,"There's a bug in Camel Langchain4j Tools.
If the LLM doesn't require using one of the tools provided in the prompt, there's an error.",No comments found
21593,Improvement,Andrea Cosentino,Claus Ibsen,None,4.10.0,2025-01-05T09:11:52+0000,1736068312,2025-01-06T15:26:46+0000,2025-01-06T15:26:46+0000,"https://stackoverflow.com/questions/79329226/is-it-possible-to-send-a-rawmessage-using-apache-camel-aws-ses
The ses producer should check if the message body is already a `
SendRawEmailRequest` and send it as-is",No comments found
21592,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,4.10.0,2025-01-04T08:33:16+0000,1735979596,2025-01-22T06:36:46+0000,2025-01-22T06:36:46+0000,"We should investigate if we can set Awaitility globally (as we do with JUnit) to avoid duplicating that dependency. Otherwise, we risk problems like CAMEL-21591.",No comments found
21591,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,4.10.0,2025-01-04T08:20:54+0000,1735978854,2025-01-06T16:42:51+0000,2025-01-06T16:42:51+0000,"We have a few components using Awaitility from test containers instead of the actual one.
There are multiple tests in AWS2 and a few on Kafka that are using 
org.testcontainers.shaded.org.awaitility.Awaitility.await instead of .org.awaitility.Awaitility.await.",No comments found
21590,Dependency upgrade,Claus Ibsen,Claus Ibsen,"4.4.4,4.8.2","4.8.3,4.10.0",2025-01-04T08:03:23+0000,1735977803,2025-01-04T08:04:06+0000,2025-01-04T08:04:06+0000,No description available,No comments found
21589,Improvement,Unassigned,Rav Brar,None,4.10.0,2025-01-03T18:07:38+0000,1735927658,2025-01-08T08:33:41+0000,2025-01-08T08:33:41+0000,"When using the Camel MQTT5 Source Kafka Connector, messages are automatically acknowledged, which doesn't ensure they reach their final destination at least once. Enabling manual acknowledgements ensures the connector is able to provide at least once delivery to topics.
This new parameter would make it possible for the user to enable manual acknowledgements in the client. By default, the parameter is set to false and messages will be automatically acknowledged. If set to true, the acknowledgement is added in the exchange's completion callback.",No comments found
21588,Improvement,Thomas Cunningham,Zineb Bendhiba,4.8.2,4.11.0,2025-01-03T14:14:36+0000,1735913676,2025-02-26T08:12:48+0000,2025-02-26T08:12:48+0000,"While playing with Camel Pinecone, I realized that some properties are supposed to be set only by setting headers.
Some of those are kind of mandatory (index name, cloud region...). I was using a Cloud account.
These are the list headers that I wish they can be set as properties instead",No comments found
21587,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,None,2025-01-03T13:51:36+0000,1735912296,2025-02-04T10:50:47+0000,,"Problem:
Apache Camel Langchain4j and Vector databases (Qdrant/Pinecone) can't perform similarity search for RAG. This limitation hinders our ability to use Apache Camel with Vector databases with Langchain4j for robust search capabilities.
While creating an example of RAG using Apache Camel Langchain4j and Apache Camel Vector databases, I realized that the Vector databases components cannot handle similarity search for the Langchain4j scenarios.
Despite trying both Qdrant and Pinecone, I encountered issues when attempting to perform RAG (Relevance-based Active Learning) with these databases.
Research
I've analyzed various existing issues related to Search with Qdrant and Pinecone. For example, the Camel Qdrant component doesn't provide similarity search capabilities. In contrast, Pinecone allows for searching based on similarity.
However, when trying to use Pinecone with Apache Camel, I encountered a challenge: we need to convert text to Embeddings using Camel Langchain4j Embeddings Component. The resulting list of Embeddings cannot be used directly with RAG.
Proposed Solution
To address this limitation, I propose implementing a new feature (or new camel AI component) that enables easy similarity search for RAG using Apache Camel and Vector databases. This could involve leveraging the abstraction from Embedding stores in Langchain4j to provide an easy way to perform similarity searches.",No comments found
21586,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-01-03T10:37:11+0000,1735900631,2025-01-06T13:35:55+0000,2025-01-06T13:35:55+0000,"Create a HugginFace Embedding Model builder acting as Java Bean for a Kamelet.
Details :",No comments found
21585,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.4.4,4.8.2,4.10.0","4.8.3,4.10.0",2025-01-03T09:30:01+0000,1735896601,2025-01-13T06:28:39+0000,2025-01-12T18:07:58+0000,"Ref: https://github.com/apache/camel/pull/16688
We should consolidate this logic in the LocalPropertyResolver so we don't end up with multiple magic strings and duplicated code all over the place.",No comments found
21584,Task,Unassigned,Aurélien Pupier,None,4.8.5,2025-01-03T08:26:39+0000,1735892799,2025-02-27T06:00:38+0000,2025-02-27T06:00:38+0000,"It is failing at least since the 19th December. The last ""successful"" (without build error) in the CI history is the 23th September. Last release is the 4.8.2 on 1st December so I guess it broke between the 1st and 19th December",No comments found
21583,Test,Unassigned,Aurélien Pupier,4.9.0,None,2025-01-03T08:14:47+0000,1735892087,2025-01-03T08:15:29+0000,,"with the last 5 builds on CI, there was at least one Jetty tests failing with this kind of error:
It occured in different context and slightly different tests:",No comments found
21582,Improvement,Jiri Ondrusek,Jiri Ondrusek,4.10.0,4.10.0,2025-01-02T15:08:26+0000,1735830506,2025-01-03T15:49:29+0000,2025-01-03T15:49:25+0000,"Here are 2 recent fixes CAMEL-21480 and CAMEL-21480, which made properties loaded by microprofile as not loadable.
Unfortunately some parts of PropertiesComponent requires `LoadablePropertiesSource` (i.e. this code).
The issue can be simulated by running camel-quarkus test CamelAutowiredDisabledTest from branch `camel-main`.",No comments found
21581,Task,Unassigned,Anushka Juli,None,4.10.0,2025-01-02T14:19:34+0000,1735827574,2025-01-06T13:13:20+0000,2025-01-06T13:13:20+0000,"Resolved the failure of org.apache.camel.component.hashicorp.vault.springboot test case on the ppc64le architecture in camel-spring-boot by enabling support for a compatible HashiCorp Vault container image.
Solution:
Added a dynamic selection mechanism for container images based on the ppc64le architecture.
Updated HashicorpVaultLocalContainerService and container.properties to support architecture-specific configurations",No comments found
21580,Bug,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2025-01-02T10:11:43+0000,1735812703,2025-01-03T09:15:26+0000,2025-01-03T09:15:26+0000,,No comments found
21579,Improvement,Unassigned,Aurélien Pupier,4.9.0,None,2025-01-02T09:14:05+0000,1735809245,2025-01-23T08:57:00+0000,,"jbang '-Dcamel.jbang.version=4.9.0' camel@apache/camel init 'test-from-vscode.camel.yaml'
jbang '-Dcamel.jbang.version=4.9.0' camel@apache/camel kubernetes run test-from-vscode.camel.yaml --camel-version=4.9.0 --cluster-type=openshift",No comments found
21578,Improvement,Aurélien Pupier,Aurélien Pupier,4.9.0,4.10.0,2025-01-02T09:12:38+0000,1735809158,2025-01-13T12:17:44+0000,2025-01-13T12:17:44+0000,"jbang '-Dcamel.jbang.version=4.9.0' camel@apache/camel init 'test-from-vscode.camel.yaml'
jbang '-Dcamel.jbang.version=4.9.0' camel@apache/camel kubernetes run test-from-vscode.camel.yaml --camel-version=4.9.0 --cluster-type=openshift",No comments found
21577,Task,Unassigned,Otavio Rodolfo Piske,4.10.0,None,2025-01-02T09:04:29+0000,1735808669,2025-01-02T09:23:02+0000,,We have a few components that are NOT using the container properties file. This should be fixed:,No comments found
21576,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.4.4,4.8.2,4.10.0","4.4.5,4.8.3,4.10.0",2025-01-02T08:49:24+0000,1735807764,2025-01-09T11:44:03+0000,2025-01-09T11:44:03+0000,Reduce relying on docker hub:,No comments found
21575,Bug,Claus Ibsen,Otavio Rodolfo Piske,"4.9.0,4.10.0",4.10.0,2024-12-31T10:22:13+0000,1735640533,2025-01-02T08:08:43+0000,2025-01-02T08:08:43+0000,We have lots of tests failing with ConcurrentModificationException on Java 21.,No comments found
21574,Task,Unassigned,Otavio Rodolfo Piske,4.10.0,None,2024-12-30T12:40:15+0000,1735562415,2024-12-30T13:17:17+0000,2024-12-30T13:17:17+0000,"There are multiple places within the tests for Camel Infinispan where the code needs to configure the cache and manage part of its lifecycle. Not only there is duplication on this code, but also this code relies on many details handled by the test infra.
We should rework the code so that the configuration of the cache and the cache manager is done by the test infra code.",No comments found
21573,Task,Unassigned,Claus Ibsen,None,4.x,2024-12-28T17:10:17+0000,1735405817,2024-12-28T17:10:17+0000,,"When using CSB then you should use camel-platform-http-starter to integrate Camel with the HTTP server from SB.
We should deprecate 3rd party http servers like undertow and jetty.",No comments found
21572,Bug,Unassigned,Bartosz Popiela,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-27T00:31:53+0000,1735259513,2024-12-27T09:29:04+0000,2024-12-27T09:29:04+0000,SetHeader with a simple expression causes NullPointerException to be thrown because for runtime other than default (kamelet-main) JBang uses Stub instead of the actual component which produces null.,No comments found
21571,Dependency upgrade,Claus Ibsen,Claus Ibsen,"4.4.4,4.8.2","4.4.5,4.8.3,4.10.0",2024-12-26T20:02:37+0000,1735243357,2024-12-27T09:11:29+0000,2024-12-27T09:11:29+0000,"The MINA project is pleased to announce the MINA 2.2.4, 2.1.10 and 2.0.27 release. *MINA* applications using unbounded deserialization may allow *RCE* (see https://www.cve.org/CVERecord?id=CVE-2024-52046). Affected versions: - Apache MINA 2.0 through 2.0.26 - Apache MINA 2.1 through 2.1.9 - Apache MINA 2.2 through 2.2.3 Description: The ObjectSerializationDecoder in Apache *MINA* uses Java’s native deserialization protocol to process incoming serialized data but lacks the necessary security checks and defenses. This vulnerability allows attackers to exploit the deserialization process by sending specially crafted malicious serialized data, potentially leading to remote code execution (*RCE) attacks. This issue affects **MINA* core versions 2.0.X, 2.1.X and 2.2.X, and is fixed by the releases 2.0.27, 2.1.10 and 2.2.4. It's also important to note that an application using *MINA* core library will only be affected if the IoBuffer#getObject() method is called, and this specific method is potentially called when adding a ProtocolCodecFilter instance using the ObjectSerializationCodecFactory class in the filter chain. If your application is specifically using those classes, you have to upgrade to the latest version of *MINA* core library. *Upgrading will not be enough: you also need to explicitly allow the classes the decoder will accept in the *ObjectSerializationDecoder instance, using one of the three new methods:**",No comments found
21570,Task,Unassigned,Anushka Juli,None,4.10.0,2024-12-26T10:29:22+0000,1735208962,2024-12-27T09:27:05+0000,2024-12-27T09:27:05+0000,"camel-aws2-cw-starter, camel-aws2-ddb-starter, camel-aws2-kinesis-starter, camel-aws2-s3-starter, camel-aws2-sns-starter, camel-aws2-sqs-starter modules currently fails Upstream CI builds on the ppc64le architecture due to the lack of a supported aws-v2 image for ppc64le. To prevent these failures, the test cases should be disabled on this architecture",No comments found
21569,Dependency upgrade,Unassigned,Claus Ibsen,None,4.10.0,2024-12-24T08:33:56+0000,1735029236,2025-01-09T16:19:22+0000,2025-01-09T16:19:22+0000,"The APIs have changed so camel-wasm needs code changes.
lburgazzoli if you have time and want to help with this then this is much appreciated.",No comments found
21568,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.3,4.10.0",2024-12-23T13:55:19+0000,1734962119,2024-12-26T14:59:34+0000,2024-12-25T11:36:33+0000,"See CAMEL-21223
When debugging you may want to step over a big block such as entire splitter, or calling another route via direct.",No comments found
21567,Bug,Claus Ibsen,Claus Ibsen,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-22T09:44:01+0000,1734860641,2024-12-22T09:53:46+0000,2024-12-22T09:53:46+0000,For example you cannot do camel debug * --console,No comments found
21566,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.8.2,4.8.3,2024-12-21T09:54:34+0000,1734774874,2024-12-21T11:01:47+0000,2024-12-21T11:01:47+0000,No description available,No comments found
21565,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.8.2,4.8.3,2024-12-21T09:33:30+0000,1734773610,2024-12-21T11:02:25+0000,2024-12-21T11:02:25+0000,No description available,No comments found
21564,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-20T15:48:43+0000,1734709723,2024-12-20T16:11:19+0000,2024-12-20T16:11:19+0000,No description available,No comments found
21563,Improvement,Gaelle Fournier,Gaelle Fournier,None,"4.8.3,4.10.0",2024-12-20T14:17:50+0000,1734704270,2024-12-21T08:43:40+0000,2024-12-21T08:43:40+0000,Do the same thing than in https://issues.apache.org/jira/browse/CAMEL-19044 for `camel ps` command.,No comments found
21562,Bug,Andrea Cosentino,Michiel Meeuwissen,4.9.0,"4.8.3,4.10.0",2024-12-20T13:04:45+0000,1734699885,2024-12-20T14:16:34+0000,2024-12-20T14:16:34+0000,"If for some reason it is not allowed to do the HeadBucket request in doStart of
org.apache.camel.component.aws2.s3.AWS2S3Endpoint
the entire route fails. This is unreasonable if 
! (isAutoCreateBucket) because nothing would happend any way.
https://github.com/apache/camel/pull/16625",No comments found
21561,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.8.2,"4.8.3,4.10.0",2024-12-19T08:17:33+0000,1734596253,2024-12-19T08:29:04+0000,2024-12-19T08:29:04+0000,No description available,No comments found
21560,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2024-12-18T15:37:22+0000,1734536242,2025-01-06T13:35:50+0000,2025-01-06T13:35:50+0000,"Create a HugginFace Embedding Model builder acting as Java Bean for a Kamelet.
Details :",No comments found
21559,Improvement,Unassigned,Claus Ibsen,None,"4.8.3,4.10.0",2024-12-18T10:19:59+0000,1734517199,2024-12-19T08:04:51+0000,2024-12-19T08:04:51+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/mongodb.20save.20operation.20performance,No comments found
21558,Improvement,Unassigned,Martin LyKy,4.8.1,4.10.0,2024-12-18T08:28:05+0000,1734510485,2024-12-20T15:41:28+0000,2024-12-20T15:41:22+0000,"The Plugin camel-maven-package-plugin generates the Static endpoint DSL (e.g. goal generate-endpoint-dsl).
When using this plugin outside of camel (for own camel components), the packages from these generated classses are hardcoded and always
and the configuration for the plugin  is ignored:
The Problem is that the package is hardcoded in the templates 
e.g.
camel/tooling/maven/camel-package-maven-plugin/src/main/resources/velocity/endpoint-static-builders.vm at main · apache/camel · GitHub",No comments found
21557,Bug,Zheng Feng,Zheng Feng,4.8.0,4.10.0,2024-12-18T02:19:06+0000,1734488346,2024-12-18T11:26:44+0000,2024-12-18T07:04:17+0000,"Since current implementation does not use a random filename, concurrent multipart/form-data requests with the same file key id have a possibility for broken data.
https://github.com/apache/camel-spring-boot/blob/main/components-starter/camel-platform-http-starter/src/main/java/org/apache/camel/component/platform/http/springboot/SpringBootPlatformHttpBinding.java#L79",No comments found
21556,Bug,Unassigned,Darius Cooper,None,None,2024-12-17T14:30:16+0000,1734445816,2024-12-26T15:10:45+0000,2024-12-26T15:10:45+0000,"Related to: https://camel.apache.org/manual/rest-dsl.html#_inline_rest_dsl_as_a_single_route
When updating from camel 4.4 to 4.8 we encountered a DirectConsumerNotAvailableException from our timer/cron routes that share a direct route with a REST endpoint.  In this example the exception was being thrown for ""direct:process"" not being available.  The REST endpoints continued to function successfully.
I updated the property camel.rest.inline-routes = false and the timer routes began working and was able to find ""direct:process"".  It appears that when REST inlining is true it is configuring ""direct:process"" in a way that other routes cannot access it.
See attached exampleMessageProcessingRoute.groovy",No comments found
21555,Bug,Claude Mamo,Claude Mamo,4.9.0,4.10.0,2024-12-17T07:58:05+0000,1734422285,2024-12-17T11:03:58+0000,2024-12-17T11:03:58+0000,"Copying the issue from https://github.com/smooks/smooks-camel-cartridge/issues/262
I am using the Smooks Camel Cartridge together with the EDIFACT cartridge to parse EDIFACT files. I observe that the Smooks processor does not seem to be fully initialized at first. The DFDL schema is parsed only once the first EDIFACT message is processed, as can be seen in the log output below. I would expect that the processor is initialized earlier, once it is created as part of the Camel context.
Here is my relevant configuration code (Kotlin):
```kotlin
object EdifactParserFactory {
private const val schemaPostfix: String = ""EDIFACT-Messages.dfdl.xsd""
fun mkEdifactParser(
        edifactDirectory: EdifactDirectory,
        messageTypes: List<EdiEnergyMessageType>,
        camelContext: CamelContext
    ): SmooksProcessor {
        [..]
        val schemaUri = ""/${edifactDirectory/${schemaPostfix}""
        val smooks = Smooks()
        val reader = EdifactReaderConfigurator(schemaUri).setMessageTypes(messageTypeList)
        reader.cacheOnDisk = true
        smooks.setReaderConfig(reader)
        val filterSettings = FilterSettings.newSaxNgSettings().setReaderPoolSize(5)
        smooks.setFilterSettings(filterSettings)
        smooks.setExports(Exports(StringResult::class.java))
        return SmooksProcessor(smooks, camelContext)
    }
}
```
For the following (simplified) Camel route:
```kotlin
from(direct(""inbound""))
            .convertBodyTo(InputStream::class.java)
            .choice()
                .`when`(header(EDIFACT_DIRECTORY_HEADER).isEqualTo(EdifactDirectory.D04B)).to(direct(""D04B-import""))
                .`when`(header(EDIFACT_DIRECTORY_HEADER).isEqualTo(EdifactDirectory.D07B)).to(direct(""D07B-import""))
                .otherwise().to(""log:error"").stop()
            .end()
[..]
val edifactParser = EdifactParserFactory.mkEdifactParser(dir, messageTypes, camelContext)
[..]
from(direct(""D04B-import"")
      .process(edifactParser)
```
```log
[..]
  .   ____          _            __ _ _
 /
/ _{}'{} __ _ {}() __  __ _ \ \ \ \
( ( )___ | '_ | '| | ' \/ _` | \ \ \ \
 
/  _{})| |)| | | | | || (| |  ) ) ) )
  '  |__{}| .{}|| ||| |{}, | / / / /
 =========||==============|{}/=///{_}/
 :: Spring Boot ::                (v2.7.0)
2022-06-27 09:40:22 INFO  ReceiveTestInterchange:55 - Starting ReceiveTestInterchange using Java 17.0.3
[..]
2022-06-27 09:40:25 INFO  ReceiveTestInterchange:61 - Started ReceiveTestInterchange in 3.391 seconds (JVM running for 4.847)
[..]
2022-06-27 09:40:25 INFO  CamelSpringBootExecutionListener:104 - Initialized CamelSpringBootExecutionListener now ready to start CamelContext
2022-06-27 09:40:25 INFO  CamelAnnotationsHandler:404 - Starting CamelContext with name [camelContext].
2022-06-27 09:40:25 WARN  Scanner:78 - Not scanning classpath for ClassLoader 'jdk.internal.loader.ClassLoaders$AppClassLoader'.  ClassLoader must implement 'java.net.URLClassLoader'.
2022-06-27 09:40:25 WARN  Scanner:78 - Not scanning classpath for ClassLoader 'jdk.internal.loader.ClassLoaders$AppClassLoader'.  ClassLoader must implement 'java.net.URLClassLoader'.
2022-06-27 09:40:25 INFO  EdifactParserFactory:39 - Created Smooks EDIFACT parser from directory D04B for message(s) [INVOIC, CONTRL]
2022-06-27 09:40:26 WARN  Scanner:78 - Not scanning classpath for ClassLoader 'jdk.internal.loader.ClassLoaders$AppClassLoader'.  ClassLoader must implement 'java.net.URLClassLoader'.
2022-06-27 09:40:26 WARN  Scanner:78 - Not scanning classpath for ClassLoader 'jdk.internal.loader.ClassLoaders$AppClassLoader'.  ClassLoader must implement 'java.net.URLClassLoader'.
2022-06-27 09:40:26 INFO  EdifactParserFactory:39 - Created Smooks EDIFACT parser from directory D07B for message(s) [APERAK]
2022-06-27 09:40:26 INFO  AbstractCamelContext:3004 - Apache Camel 3.17.0 (camel-1) is starting
2022-06-27 09:40:26 INFO  AbstractCamelContext:3222 - Tracing is enabled on CamelContext: camel-1
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
[..]
2022-06-27 09:40:26 INFO  CamelSpringBootApplicationListener:147 - Starting CamelMainRunController to ensure the main thread keeps running
2022-06-27 09:40:26 INFO  MainSupport:68 - Apache Camel (Main) 3.17.0 is starting
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 INFO  AbstractCamelContext:3165 - Routes startup (total:6 started:6)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started D04B-import-route (direct://D04B-import)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started D07B-import-route (direct://D07B-import)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started edifact-inbound-transfer-route (direct://edifact-inbound-transfer)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started inbound-acknowledge-route (direct://inbound-acknowledge)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started inbound-route (direct://inbound)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3194 - Apache Camel 3.17.0 (camel-1) started in 1s351ms (build:78ms init:943ms start:330ms)
2022-06-27 09:40:27 INFO  Tracing:264 - *--> [inbound-rout] [from[direct://inbound]           ] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: byte[], ...]
2022-06-27 09:40:27 INFO  Tracing:264 -      [inbound-rout] [direct://edifact-inbound-transfer] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: byte[], ...]
2022-06-27 09:40:27 INFO  Tracing:264 - ---> [edifact-inbo] [from[direct://edifact-inbound-tra] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: byte[], ...]
2022-06-27 09:40:27 INFO  Tracing:264 -      [edifact-inbo] [convertBodyTo[java.io.InputStream] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: byte[], ...]
2022-06-27 09:40:27 INFO  Tracing:264 -      [edifact-inbo] [choice[when[{header(EdifactDirect] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: org.apache.camel.converter.stream.ByteArrayInputStreamCache, Body: [Body is instance of org.apache.camel.StreamCache]]
2022-06-27 09:40:27 INFO  Tracing:264 -      [edifact-inbo] [direct://D04B-import             ] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: org.apache.camel.converter.stream.ByteArrayInputStreamCache, Body: [Body is instance of org.apache.camel.StreamCache]]
2022-06-27 09:40:27 INFO  Tracing:264 - ---> [D04B-import-] [from[direct:\\{{edifactDirectory}}-] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: org.apache.camel.converter.stream.ByteArrayInputStreamCache, Body: [Body is instance of org.apache.camel.StreamCache]]
2022-06-27 09:40:27 INFO  Tracing:264 -      [D04B-import-] [ref:\\{{edifactParser}}            ] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: org.apache.camel.converter.stream.ByteArrayInputStreamCache, Body: [Body is instance of org.apache.camel.StreamCache]]
2022-06-27 09:40:27 INFO  DataProcessorFactory:106 - Compiling and caching DFDL schema...
2022-06-27 09:40:27 INFO  DfdlSchema:117 - Saving compiled DFDL schema to .smooks/dfdl-cartridge/EDIFACT-Interchange-9800488b-61fc-3578-af0d-05483fa510ef-.dfdl.xsd.dat
2022-06-27 09:40:37 INFO  Tracing:264 -      [D04B-import-] [Processor@0x22657db1             ] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: String, ...]
[..]
```
As can be observed on the previous-to-last log entry, the DFDL schema is compiled (or loaded from cache) once the first camel exchange arrives at the Smooks processor only. (Plus, there are some other irregularities that I haven't been able to diagnose yet.). I am running on Kotlin 1.6.20 with JRE 17 as compile target.",No comments found
21554,Wish,Unassigned,Chamodya Dias,None,None,2024-12-16T19:53:26+0000,1734378806,2024-12-17T07:46:59+0000,2024-12-17T07:46:59+0000,"Is there any plan to add a Gradle based version for this plugin?
We have some teams who uses Gradle and need to use the functionality provided by this plugin.",No comments found
21553,New Feature,Claus Ibsen,Andrea Cosentino,None,4.10.0,2024-12-16T16:27:18+0000,1734366438,2025-02-15T08:27:28+0000,2024-12-18T09:10:08+0000,"Here is an reproducer through camel-jbang: https://github.com/apache/camel-karavan/issues/1348#issuecomment-2545828481 in Karavan
If you run this with camel-jbang and run a local hashicorp vault instance with
You'll notice that the secret won't be resolved. The problem could be in the order we are configuring the vault and load the routes.",No comments found
21552,Bug,Claus Ibsen,Ricardo Martinez,None,"4.8.3,4.10.0",2024-12-16T14:58:04+0000,1734361084,2024-12-16T16:15:21+0000,2024-12-16T16:14:58+0000,"In the Camel YAML DSL there is a ""param"" property: https://github.com/apache/camel/blob/3c7d425dd4bfcb2db24227e1c1d70afed08e9e33/dsl/camel-yaml-dsl/camel-yaml-dsl/src/generated/resources/schema/camelYamlDsl.json#L14659-L14664
but this property it's not present in the Camel model: https://github.com/apache/camel/blob/3c7d425dd4bfcb2db24227e1c1d70afed08e9e33/catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/models/get.json",No comments found
21551,Improvement,Nikita_Konovalov,Petr Kuzel,4.9.0,4.11.0,2024-12-16T13:27:55+0000,1734355675,2025-02-21T10:09:25+0000,2025-02-21T10:09:25+0000,"For flexibility, expose a public processor that would convert the in body to the stream cache and document it.
Added flexibility is that caller can select an exact point in the route pipeline where body should be converted, so having before and after conversion options unlike with current setStreamCache(val) route instruction.",No comments found
21550,Bug,Claus Ibsen,Narsi Reddy Nallamilli,4.1.0,"4.4.5,4.8.3,4.10.0",2024-12-16T09:44:01+0000,1734342241,2025-01-27T08:01:28+0000,2024-12-18T10:39:16+0000,"Issue: sqs extender scheduler initial start is set to queues visibility timeout.  when the fifo queues in the application are couple of them it works but when its more it causes this issue.
E.g if the visibility is 10sec the extender would start around 10sec and by the time the extender changes the visibility the message's visibility in the queue would have expired and got removed. And since the extender uses the expired message receipt handle sqs server return ReceiptHandleIsInvalidException but because this exception is supressed sqs client assumes it was successful.",No comments found
21549,Improvement,Claus Ibsen,Claus Ibsen,4.9.0,4.10.0,2024-12-16T09:11:12+0000,1734340272,2024-12-16T09:40:45+0000,2024-12-16T09:40:45+0000,"When starting CSB we see this WARN
[INFO] 2024-12-16T10:09:51.392+01:00  WARN 48052 — [           main] o.a.c.i.e.DefaultCamelBeanPostProcessor  : No CamelContext defined yet so cannot inject into bean: startupConditionStrategy
Its harmless but we should find a way to avoid having this WARN",No comments found
21548,Dependency upgrade,Freeman Yue Fang,Claus Ibsen,None,4.10.0,2024-12-16T08:45:29+0000,1734338729,2025-01-28T07:00:54+0000,2024-12-16T14:55:02+0000,"This requires some test changes as some are failing during the upgrade.
Also Quarkus CXF should maybe be upgraded as well.",No comments found
21547,New Feature,Unassigned,Claude Mamo,4.9.0,4.10.0,2024-12-14T15:44:04+0000,1734191044,2024-12-17T11:04:09+0000,2024-12-16T09:48:11+0000,"Currently, the integration between Camel and Smooks is spread between two modules: the Smooks Component and the Camel Cartridge. This could be confusing from a developer's perspective (especially if running Camel JBang) since they need to worry about which module to add as a dependency based on the type of integration they need. I propose migrating the remaining code from the Camel cartridge over to the Smooks component. After completing the migration, the Smooks team will retire the cartridge.",No comments found
21546,Bug,Unassigned,Artem St,"3.22.2,4.9.0",None,2024-12-13T13:37:49+0000,1734097069,2024-12-16T14:07:50+0000,2024-12-13T14:21:32+0000,"I'm not sure if this is a bug or intended behavior, but when we search for properties on an exchange, the search only checks the internalProperties of the exchange and the properties map. It does not look into safeCopyProperties.
As a result, simple code like this stopped working after the attachments were refactored:
The current implementation of getProperty is as follows:
Shouldn't it be more like this to include safeCopyProperties in the lookup?",No comments found
21545,Bug,Claus Ibsen,Claus Ibsen,"3.17.0,4.4.4,4.8.2","3.22.3,4.4.5,4.8.3,4.10.0",2024-12-13T12:41:34+0000,1734093694,2024-12-13T12:46:44+0000,2024-12-13T12:45:42+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/jsonpath.20objectmapper,No comments found
21544,Improvement,Federico Mariani,Claus Ibsen,None,4.10.0,2024-12-13T12:28:44+0000,1734092924,2025-02-05T10:55:22+0000,2025-02-04T16:02:06+0000,"Only headers is populated with the form data, and the body is left as-is.
However in CEQ/vertx/camel-main then we use platform-http-vertx that populates both headers and body by default.
To align CSB and CEQ we would need to do the same.
So we need an option to turn this on|off. We can maybe turn this on so they are the same out of the box. And users that rely on the old behaviour can turn it off.",No comments found
21543,Bug,Claus Ibsen,Claus Ibsen,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-13T08:49:24+0000,1734079764,2024-12-13T09:17:11+0000,2024-12-13T09:17:11+0000,No description available,No comments found
21542,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-12T15:49:55+0000,1734018595,2024-12-12T19:07:28+0000,2024-12-12T19:07:28+0000,"When using Java code you may write some code that uses Camel beans such as a Kafka repository.
This code cannot compile because you need camel-kafka on classpath, and the user may need to add this manually in jbang.
We should try to detect this and auto download the JAR",No comments found
21541,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2024-12-12T15:47:25+0000,1734018445,2025-02-05T10:08:10+0000,2025-02-05T10:08:10+0000,No description available,No comments found
21540,New Feature,Unassigned,Zineb Bendhiba,None,None,2024-12-12T15:34:08+0000,1734017648,2024-12-12T15:34:53+0000,,"Implement Vector search capabilities for PostgreSQL.
Also  add the langchain4j Embeddings DataFormat for PostgreSQL + an Integration test in the langchain4j embeddings directory https://github.com/apache/camel/tree/main/components/camel-ai/camel-langchain4j-embeddings/src/test/java/org/apache/camel/component/langchain4j/embeddings",No comments found
21539,New Feature,James Netherton,Zineb Bendhiba,None,None,2024-12-12T15:30:55+0000,1734017455,2025-01-21T09:44:41+0000,,"Implement Vector search capabilities for Infinispan.
Also  add the langchain4j Embeddings DataFormat for Infinispan + an Integration test in the langchain4j embeddings directory https://github.com/apache/camel/tree/main/components/camel-ai/camel-langchain4j-embeddings/src/test/java/org/apache/camel/component/langchain4j/embeddings",No comments found
21538,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.9.0,4.10.0,2024-12-12T11:41:08+0000,1734003668,2025-02-01T08:26:43+0000,2025-02-01T08:26:32+0000,"In camel-tracing component we're supporting a custom setting of MDC trace_id and span_id. This is requiring a deep coupling between the core and the tracing component and is very error prone as it requires a proper cleaning to avoid that any traces set in the thread previously is not used afterwards. As shown in CAMEL-21472 there are inconsistencies that would suggest to deprecate this feature and favouring the specific tracing implementation (ie, Opentelemetry, Micrometer Observability) instead.
These frameworks are already providing embedded mechanisms to set and clear the MDC while they manage the related traces/spans.",No comments found
21537,Task,Unassigned,Anushka Juli,None,4.10.0,2024-12-12T07:40:45+0000,1733989245,2024-12-12T09:52:04+0000,2024-12-12T09:52:04+0000,We want to provide ppc64le arch support to camel-mongodb in the camel component,No comments found
21536,Bug,Unassigned,Bjorn Beskow,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-12T07:08:38+0000,1733987318,2024-12-12T09:29:33+0000,2024-12-12T09:29:33+0000,"If spring.threads.virtual.enabled = true, a Camel application that uses camel-platform-http-starter fails at startup with
Caused by: java.lang.RuntimeException: No ThreadPoolTaskExecutor configured
 at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration.lambda$springBootPlatformHttpEngine$1(SpringBootPlatformHttpAutoConfiguration.java:54) ~[camel-platform-http-starter-4.9.0.jar:4.9.0]
 at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
 at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration.springBootPlatformHttpEngine(SpringBootPlatformHttpAutoConfiguration.java:54) ~[camel-platform-http-starter-4.9.0.jar:4.9.0]
 at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
 at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
 at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171) ~[spring-beans-6.2.0.jar:6.2.0]
 ... 24 common frames omitted
unless a ThreadPoolTaskExecutor is explicitly configured.",No comments found
21535,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-11T14:06:39+0000,1733925999,2024-12-12T14:27:20+0000,2024-12-12T14:27:20+0000,"The Camel tool needs a bit easier way to validate that groovy scripts (and potential others) can be quickly validated - there is some APIs in camel-catalog but it does not fit as well to groovy as lack of camel context being present, and also lack of more precise line number error reporting.",No comments found
21534,Task,Thomas Diesler,Thomas Diesler,None,None,2024-12-11T11:24:50+0000,1733916290,2024-12-11T11:29:28+0000,2024-12-11T11:29:15+0000,No description available,No comments found
21533,Task,Thomas Diesler,Thomas Diesler,None,4.8.3,2024-12-11T06:20:21+0000,1733898021,2024-12-13T07:20:37+0000,2024-12-13T07:20:37+0000,"The backport for knative test coverage was not strait forward because there was no target to apply the changes too. Hence, they have been left out in the backport PR.",No comments found
21532,Bug,Unassigned,Bartosz Popiela,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-11T00:43:38+0000,1733877818,2024-12-11T06:55:48+0000,2024-12-11T06:55:48+0000,"When running Camel jBang on Windows with --logging-category set, org.apache.logging.log4j.core.util.FileUtils#fileFromUri throws
To reproduce run",No comments found
21531,Bug,Freeman Yue Fang,Freeman Yue Fang,None,"4.8.3,4.10.0",2024-12-10T17:16:15+0000,1733850975,2024-12-10T21:56:29+0000,2024-12-10T21:56:29+0000,"This line in the code
is broken for some time zones.
Like there is no timezone for the date 2023-01-01, so GMT is used by default. But in RestOpenApiSupport, the
So the local timezone where we run the test is used. Because the timezone differences with GMT, the expect return string after calling RestOpenApiSupport.getFromOpenAPI3 could be
2022-12-31 instead of 2023-01-01. Similarly for 2023-02-02 and 2023-03-03 in the test, could be one day before it.",No comments found
21530,Task,Thomas Diesler,Thomas Diesler,None,"4.8.3,4.10.0",2024-12-10T14:14:57+0000,1733840097,2024-12-13T07:20:20+0000,2024-12-13T07:20:20+0000,"Now, that every runtime and cluster-type uses JKube to generate the k8s resources. It is no longer needed to switch behaviour depending on runtime or cluster-type. Some API methods still carry those parameters.",No comments found
21529,New Feature,Thomas Diesler,Thomas Diesler,None,"4.8.3,4.10.0",2024-12-10T12:55:50+0000,1733835350,2024-12-11T06:56:02+0000,2024-12-11T06:56:02+0000,"A local mvn build does not reliably expose the camel version is such a way that it can be picked up by the VersionHelper. As a result, tests that rely on a valid camel version may see an empty string instead. JBang generated source code cannot have an empty camel version.",No comments found
21528,Bug,James Netherton,James Netherton,None,"4.8.3,4.10.0",2024-12-10T08:23:33+0000,1733819013,2024-12-10T13:43:05+0000,2024-12-10T13:43:05+0000,"Relates to this issue reported in Camel Quarkus:
https://github.com/apache/camel-quarkus/issues/6856
In this case, the event loop is blocked during message redelivery as the route has a processor that invokes some slow blocking code.",No comments found
21527,New Feature,Unassigned,Federico Mariani,4.8.0,4.x,2024-12-09T16:32:13+0000,1733761933,2024-12-10T13:39:48+0000,,"A recipe for Camel Spring Boot users can be added with the following features:
For example, a recipe for Camel Spring Boot 4.8 would be like this:
once we ship a recipe like this, the following configuration can be used in the pom.xml openrewrite plugin section:
In this case, rewrite-spring:5.24.1 will do the upgrade to the Spring Boot version supported by Camel 4.8.",No comments found
21526,Bug,Andrea Cosentino,Artem,"3.20.9,4.9.0","4.8.3,4.10.0",2024-12-09T14:51:55+0000,1733755915,2024-12-12T13:12:16+0000,2024-12-12T13:12:16+0000,"Problem
In AWS Kinesis, the iteratorType=AT_TIMESTAMP is an option that allows you to start consuming records from a stream starting at a specific point in time.
To use iteratorType=AT_TIMESTAMP, we need to request the GetShardIterator from AWS Kinesis API and specify Timestamp parameter for that request.
This message timestamp parameter must be set initially when we create AWS Kinesis Consumer.
But in current Camel implementation unfortunately we don't have such ability.
You can see in docs (https://camel.apache.org/components/next/aws2-kinesis-component.html) that all we can is to set CamelMessageTimestamp message header. This way is not suitable for initial setup of the iterator.
Apparently, the most suitable way is to set the timestamp in the URL options (like for sequenceNumber).
Steps to reproduce
You can use the example project attached to this bug.
Solution
Possible solution you can find here: https://github.com/apache/camel/commit/8772c5f2d4a57633447d2717dff53d87555b0e3b",No comments found
21525,Bug,Claus Ibsen,omar alles,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-09T09:05:42+0000,1733735142,2024-12-09T10:47:47+0000,2024-12-09T10:47:47+0000,"Hi Team,
I believe there is a bug in the camel-debezium-postgres-starter module.
This issue affects at least versions 4.8.2 and 4.9.0.
Specifically, the auto-configured bean listed in the META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports file points to:
org.apache.camel.component.debezium.springboot.DebeziumPostgresComponentAutoConfiguration
However, the correct package for DebeziumPostgresComponentAutoConfiguration should be:
org.apache.camel.component.debezium.postgres.springboot.DebeziumPostgresComponentAutoConfiguration
Due to the nature of the issue, other camel debezium spring boot starters might be affected.",No comments found
21524,Improvement,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2024-12-09T07:52:30+0000,1733730750,2024-12-09T10:59:03+0000,2024-12-09T10:59:03+0000,"currently when a Catalog is asked to be loaded and cannot be, there is no trace of this problem because Exceptions are caught and ignored (even the ones thrown in the same method few lines before).
see for instance org.apache.camel.dsl.jbang.core.common.CatalogLoader.loadSpringBootCatalog(String, String)",No comments found
21523,Test,Unassigned,Aurélien Pupier,4.9.0,4.x,2024-12-09T07:48:11+0000,1733730491,2025-01-20T13:14:53+0000,,"In Camel JBang tests, there are several assertions checking the p^resence of a specific Maven dependency. it is asserting true/false by looking for each field one by one. Only an high levvel true/false assertion is returned. it is making it hard to know what is checked without looking deepp in the code and placing breakpoints.
Providing an assertion specific for the Maven dependency and mentioning which one was expected and which one was found/not found will simplify debugging.
several of these checks are used in https://github.com/apache/camel/blob/main/dsl/camel-jbang/camel-jbang-core/src/test/java/org/apache/camel/dsl/jbang/core/commands/ExportTest.java
for instance:",No comments found
21522,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-07T09:39:07+0000,1733564347,2024-12-07T10:11:35+0000,2024-12-07T10:11:35+0000,This can make it a bit more flexible if you just want to use groovy in a specific log eip and then leave the others as default.,No comments found
21521,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2024-12-07T09:32:05+0000,1733563925,2025-01-09T09:19:09+0000,,We should make camel-jbang more for standard Camel and remove the bind command (its a camel-k feature). A normal camel route is more powerful.,No comments found
21520,Bug,Unassigned,Francois Papon,3.x,3.22.3,2024-12-06T18:35:58+0000,1733510158,2024-12-09T08:08:57+0000,2024-12-09T08:03:02+0000,"When using Camel route-show Karaf command (export a route definition in xml) with a route containing an errorHandler, we have an error from org.apache.camel.model.errorhandler package not found.
The dynamic-import Karaf command fix it.
The org.apache.camel.model.errorhandler is missing from the camel.osgi.import of the camel-xml-jaxb bundle.",No comments found
21519,Improvement,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.3,4.10.0",2024-12-06T10:32:23+0000,1733481143,2024-12-06T17:58:33+0000,2024-12-06T17:58:33+0000,"When dumping to yaml dsl then expression values should be in quoted text
Fails
- setHeader:
                  name: Exchange.HTTP_RESPONSE_CODE
                  constant:
                    expression: 404
Works
- setHeader:
                  name: Exchange.HTTP_RESPONSE_CODE
                  constant:
                    expression: ""404""",No comments found
21518,Improvement,James Netherton,James Netherton,None,4.10.0,2024-12-05T10:59:10+0000,1733396350,2025-01-06T15:00:51+0000,2025-01-06T15:00:51+0000,"E.g like how it's done in camel-elasticsearch:
https://camel.apache.org/components/next/elasticsearch-component.html#_endpoint_header_operation",No comments found
21517,Task,Unassigned,Stanislav Deviatov,None,4.10.0,2024-12-05T10:44:39+0000,1733395479,2024-12-05T15:38:57+0000,2024-12-05T15:38:57+0000,"Google has deprecated Pub/Sub Lite service (link):
so let's deprecate our component (camel-google-pubsub-lite).",No comments found
21516,Bug,Claus Ibsen,Claus Ibsen,"4.8.1,4.9.0","4.8.3,4.10.0",2024-12-05T10:27:14+0000,1733394434,2024-12-05T14:19:57+0000,2024-12-05T14:19:57+0000,"Its a bit weird but a simple route ala
Is generated as
The last to has no uri-as-parameters. As those are the in the context-path and are UriPath. Those are harder to make as parameters.",No comments found
21515,Improvement,Claus Ibsen,Sateesh Divvela,3.14.0,4.10.0,2024-12-04T17:11:26+0000,1733332286,2024-12-05T07:35:12+0000,2024-12-05T07:35:12+0000,"The current implementation of the Google Pub/Sub publisher does not allow for customization of retry settings. To address this, we propose adding a new ""retry"" option to the Google Pub/Sub endpoint that enables users to pass in their own custom RetrySettings instance. This will provide greater flexibility and control over retries.",No comments found
21514,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-04T12:07:01+0000,1733314021,2024-12-04T13:05:38+0000,2024-12-04T13:05:38+0000,"See
https://github.com/belaban/JGroups/discussions/870#discussioncomment-11460448",No comments found
21513,Improvement,Unassigned,Nathan,4.4.4,4.x,2024-12-04T11:26:22+0000,1733311582,2024-12-04T14:13:38+0000,,"Context
The CoreTypeConverterRegistry uses a map of converters to find a converter for a TypeConvertible<from,to>.
If there is no known converter it attempts to find one in the existing converter map based on the idea that an existing converter on a super class can be used.
This logic is contained in the TypeResolverHelper.tryMatch method. The tryMatch method will do an exhaustive search on the types in the converter and the super classes of the to convert value.
To do this tryMatch will iterate over all the existing converters. Each existing converter<from,to> will then be compared to the super classes of the TypeConvertible<from,to>.
Problem
The problem is that the TypeResolverHelper.tryMatch can be highly random in selecting a converter. The first converter that matches is chosen and stored for all future usage of this specific type conversion.
But the order of iteration for the converter map is not guaranteed to be the same every time. It is very likely that it is different for every load, since it depends on the order that converters have been added and there is no order guarantee on HashMap entry set iteration.
This is not only theoretical, we already had a problem with the type conversion of DeferredElementNSImpl to CxfPayload. DeferredElementNSImpl implements both org.w3c.dom.Element and org.w3c.dom.NodeList. Both of those have converters in the CxfPayloadConverterLoader.
But the converter chosen was random and often changed after application restarts. This caused problems for us since the NodeList to CxfPayload did not transform the DeferredElementNSImpl as expected.
Workaround
There is an easy workaround by defining your own converters to ensure the correct conversion happens, but this workaround can be cumbersome for applications with a lot of implicit type conversions. 
Especially if the correct conversion does exist, but is just not used.
Solution?
I do think there is a potential solution, the converter iteration is random and it would be inefficient to order it. That would also not necessarily fix anything since any order could be wrong for some specific conversion.
Instead the TypeResolverHelper.tryMatch could change things by iterating over the super classes of the from first. And try to find a converter for each super class.
The complication is that the super class iteration is done in the TypeConvertible, so it would have to be duplicated or moved into the TypeResolverHelper to do that.
The method getInterfaces that is used in the TypeConvertible is ordered by the JDK, so there would be no randomness. Instead it would select the first existing converter that is actually closest to the target class.
This is much better than just the first converter that happens to match with an interface removed 5 super classes.
For the DeferredElementNSImpl it would then go:
look for DeferredElementNSImpl -> not found
look for ElementNSImpl -> not found
look for ElementImpl -> not found
Look for Element -> found CxfPayloadConverter.elementToCxfPayload",No comments found
21512,Bug,Claus Ibsen,Claus Ibsen,None,"4.8.3,4.10.0",2024-12-04T09:55:24+0000,1733306124,2024-12-08T11:37:39+0000,2024-12-08T11:37:39+0000,If you have multiple seperated <rest> ... </rest> then it appears that the transformed output is only including the last <rest> block.,No comments found
21511,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.3,4.10.0",2024-12-04T09:51:36+0000,1733305896,2024-12-06T13:01:51+0000,2024-12-06T13:01:51+0000,"If you transform a route that uses rest-dsl then Camel will inlined routes by default, and the dump cannot have the routes included. So we need to make Camel run without inlining.",No comments found
21510,Improvement,Thomas Diesler,Bruno Meseguer,None,"4.8.3,4.10.0",2024-12-04T09:42:56+0000,1733305376,2024-12-16T16:15:49+0000,2024-12-16T16:15:49+0000,"The current implementation of the Kubernetes plugin selects as the deployment name the first file source listed in the deployment command, for example, in:
Would result in a deployment name ""main""
Adding support for a parameter --name would help gain control over the deployment name. For example:
Resulting in deploying an integration using the name ""price""",No comments found
21509,Dependency upgrade,James Netherton,Claus Ibsen,None,4.10.0,2024-12-04T09:00:23+0000,1733302823,2025-01-14T14:56:10+0000,2025-01-08T15:09:05+0000,"https://blog.marcnuri.com/fabric8-kubernetes-client-7-0
The CEQ project may need to upgrade as well to make this work on Quarkus.
A",No comments found
21508,New Feature,Tadayoshi Sato,Tadayoshi Sato,4.8.1,4.10.0,2024-12-04T05:27:01+0000,1733290021,2025-01-17T12:01:02+0000,2025-01-16T11:30:27+0000,"KServe is a standard for serving AI models on Kubernetes. Popular model servers such as OpenVINO and Triton already support KServe, so once Camel provides a component for KServe it can immediately support multiple model servers for invoking inference with different formats of AI models on Kubernetes.",No comments found
21507,Improvement,Gaelle Fournier,Gaelle Fournier,4.8.2,4.8.3,2024-12-03T14:35:55+0000,1733236555,2024-12-05T08:48:12+0000,2024-12-05T08:48:12+0000,"To avoid maintenance effort for camel-jbang kubernetes plugib on LTS 4.8.x, the current Trait model needs to be backported on 4.8.x.
This means any work from these issues compatible with 4.8.x:",No comments found
21506,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.2,"4.8.3,4.10.0",2024-12-03T13:30:35+0000,1733232635,2024-12-05T09:03:59+0000,2024-12-05T08:49:13+0000,The following route breaks the code:,No comments found
21505,Bug,Jono Morris,Meinolf S-D,4.8.1,"4.8.4,4.10.0",2024-12-03T11:38:10+0000,1733225890,2025-01-30T12:15:32+0000,2025-01-30T12:15:32+0000,"Binary files get corrupt when using base64 content transfer encoding due to String assignment of the decoded byte[]
This can easily be tested sending a .zip file to Camel AS2 listener.
After some investigation the issue seems to be in the EntityUtil.decode method.
As shown in the screenshot the decoded (binary) byte[] is assigned to a new String which result into corrupt date in case of binary content.
In addition there are new line characters in the encoded base64 encoded String data object.
In case of using transfer encoding type binary java.nio.charset.MalformedInputException: Input length = 1 it thrown which might be OK.",No comments found
21504,Bug,Claus Ibsen,Nikola Dangubic,"4.4.4,4.8.1","4.8.3,4.10.0",2024-12-03T10:49:06+0000,1733222946,2025-01-07T08:42:07+0000,2025-01-07T08:42:07+0000,"MicrometerTagsAutoConfiguration probably has copy/paste error where instead of uri it puts http method in map for metrics
and output looks like
One would expect uri value for uri tag.",No comments found
21503,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,4.10.0,2024-12-03T09:12:02+0000,1733217122,2025-01-08T14:42:02+0000,2025-01-08T14:42:02+0000,Function calling features were moved to the tools component as part of CAMEL-21153.,No comments found
21502,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.8.1,4.9.0","4.8.3,4.10.0",2024-12-03T09:10:57+0000,1733217057,2025-01-06T12:18:32+0000,2025-01-06T12:18:32+0000,"Some bits of the documentation still refer to ""langchain4j-chat"". These should be fixed to use the tools component.",No comments found
21501,Bug,Unassigned,Nathan,"4.4.4,4.8.1",None,2024-12-03T08:46:32+0000,1733215592,2024-12-03T08:49:43+0000,2024-12-03T08:49:43+0000,"There is a bug in saxon HE starting from saxon HE 10. The xslt concat function with multi parameters:  concat(s,s,...) does not correctly concat consecutive whitespaces.
concat('x', ' ', ' ', 'y') gives 'x y', it removes one of the whitespaces.
This has been documented in https://saxonica.plan.io/issues/6494
There is no release in Saxon HE yet, but once it's available a dependency upgrade should be done.",No comments found
21500,Task,Claus Ibsen,Claus Ibsen,4.9.0,4.10.0,2024-12-03T06:18:17+0000,1733206697,2024-12-03T11:40:05+0000,2024-12-03T11:40:05+0000,Should be generated as an other kind and included in the catalog,No comments found
21499,Bug,Unassigned,Adriano Machado,4.8.0,None,2024-12-02T18:25:49+0000,1733163949,2024-12-04T13:06:23+0000,2024-12-04T13:06:23+0000,The following error message is shown on a unit test after upgrading the Camel version from 4.4.0 to 4.8.0:,No comments found
21498,Bug,Unassigned,John Yeary,"4.7.0,4.8.1",None,2024-12-02T14:23:50+0000,1733149430,2024-12-02T14:28:42+0000,2024-12-02T14:28:42+0000,"The RemoteFileConfiguration contains a parameter for soTimeout with a default value of 300,000 milliseconds.  This translates to 5,000 minutes. I believe that the default value should be 30,000 milliseconds or 5 minutes.",No comments found
21497,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2024-12-02T10:43:09+0000,1733136189,2024-12-02T13:06:45+0000,2024-12-02T13:06:45+0000,No description available,No comments found
21496,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2024-12-02T09:20:47+0000,1733131247,2024-12-12T09:03:48+0000,2024-12-12T09:03:48+0000,No description available,No comments found
21495,Bug,Claus Ibsen,Sami Peltola,4.8.1,"4.8.3,4.10.0",2024-12-02T08:59:59+0000,1733129999,2024-12-26T15:10:36+0000,2024-12-26T15:09:54+0000,"Encountered when running tests, sometimes the wrong subroute gets inlined to the rest-route and causes failures.
Referring to: https://camel.apache.org/manual/rest-dsl.html#_inline_rest_dsl_as_a_single_route
I've attached an example project. When running the tests, a test called ""FailingTest"" should have ""camel.rest.inline-routes"" enabled and should fail, as opposed to ""SucceedingTest"" which has the option disabled and does not fail.
It seems like when inlining the routes, the subroute ""get-from-db-route"" gets inlined when actually route ""quarkuscamelexampleservice-http-get-route"" should be inlined as it is the subroute that is called from the REST-route.
For some reason, the tests failing also seems a bit flaky, so you might have to run all the tests in a loop to replicate the issue, i've included a script ""run-test-in-loop.sh"".
When the test fails, it only shows routes:
Sometimes it works correctly, and shows how it actually should have inlined the routes with the route ""subroute-for-get"" not being inlined to the REST-route,but instead existing as a separate route in the context:
I have not had any issues when running in quarkus dev-mode, so i am assuming this only affects testing.
For tests, disabled inlining the routes with:",No comments found
21494,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-11-30T09:33:41+0000,1732959221,2024-11-30T16:53:56+0000,2024-11-30T16:53:56+0000,The producer should be async based that works better with the routing engine.,No comments found
21493,Bug,Freeman Yue Fang,Freeman Yue Fang,None,"4.4.5,4.8.2,4.9.0",2024-11-29T16:09:28+0000,1732896568,2024-11-29T17:08:13+0000,2024-11-29T17:00:18+0000,"Because CamelContext.getEndpoint(String uri) now will throw NoSuchEndpointException but not null, while CamelContext.hasEndpoint(String uri) is more proper here",No comments found
21492,Improvement,Jiri Ondrusek,Jiri Ondrusek,4.8.0,"4.8.2,4.9.0",2024-11-29T12:08:30+0000,1732882110,2024-11-29T15:33:42+0000,2024-11-29T15:33:42+0000,"If you go through payload security documentation, you can see that there is no component listed as is i.e. in the Route security chapter.
It would be nice to list a component there, so users can see easier what to use.",No comments found
21491,Improvement,Pasquale Congiusti,Pasquale Congiusti,None,4.10.0,2024-11-29T11:00:54+0000,1732878054,2024-12-13T10:29:52+0000,2024-12-13T10:29:52+0000,"The main is automatically instrumented with a NOOP implementation for Opentelemetry, which makes it useless when used with the default. The user should add the following dependencies:
and starting with the following system properties:
We should embed this configuration in the observability services to make it run OOTB (like it happens for Springboot and Quarkus runtimes).",No comments found
21490,Bug,Claus Ibsen,Claus Ibsen,None,4.11.0,2024-11-29T10:42:07+0000,1732876927,2025-01-28T08:32:13+0000,,"This XML route converts to a bad yaml
camel transform route abc.camel.xml",No comments found
21489,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-29T09:54:36+0000,1732874076,2024-11-29T11:30:33+0000,2024-11-29T11:30:33+0000,"https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/noErrorHandler.20and.20camel-micrometer
It would be good to be able to configure route policy to skip some routes. Then you can make sub routes that are not being included.",No comments found
21488,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-28T17:19:03+0000,1732814343,2024-11-29T05:56:03+0000,2024-11-29T05:56:03+0000,When using camel 4.8.1 export with multiple custom kamelets in --local-kamelet-dir exports only one kamelet. The last in 'kamelet' property in camel-jbang-run.properties,No comments found
21487,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-28T17:15:42+0000,1732814142,2024-11-28T18:30:10+0000,2024-11-28T18:30:10+0000,"This example does not work on 4.8.2 but works in 4.9.0
https://github.com/apache/camel-kamelets-examples/tree/main/jbang/route-template",No comments found
21486,Bug,Thomas Diesler,Andrea Cosentino,4.8.1,"4.8.3,4.10.0",2024-11-28T14:41:56+0000,1732804916,2024-12-10T14:11:46+0000,2024-12-10T14:11:46+0000,No description available,No comments found
21485,Task,Marco Carletti,Claus Ibsen,4.9.0,4.9.0,2024-11-28T10:46:45+0000,1732790805,2024-11-28T17:04:59+0000,2024-11-28T14:36:56+0000,The dynamic-router-eip is failing on starting SB with some stackoverflow exception,No comments found
21484,Improvement,Claus Ibsen,Paul Blanchaert,4.8.1,4.10.0,2024-11-28T09:49:43+0000,1732787383,2024-12-28T16:59:28+0000,2024-12-28T16:59:28+0000,"While using quarkus to run camel route, all microprofile properties are loaded per lookup of a property value. So when using a modest number of 10 config values in camel routes, the current lookup loads all properties (including environment and system variables) 11 times.
This happens in the method DefaultPropertiesLookup#
doLookup(String name, String defaultValue). When a property is found (answer != null), then the source is determined: for the CamelMicroProfilePropertiesSource, the routine performs the loadProperties() function (in the block ""ps instanceof LoadablePropertiesSource"") to retrieve the ""source"" string for the retrieved value. This is set when ""
prop instanceof OrderedLocationProperties"". For this CamelMicroProfilePropertiesSource, this prop is not an instanceof OrderedLocationProperties, and so the result of the loadProperties call is never used and hence should be avoided.
This can be illustrated with the following setup with 3 mymsg properties:
route.yaml:
- from:
    uri: ""timer:myyaml""
    steps:
      - log:
          message: 'Message {{mymsg mymsg2:msg2 mymsg3:msg3 mymsg4:msg4'}}
application.properties:
quarkus.config.log.values=true
quarkus.log.level=info
quarkus.log.category.""org.apache.camel.main"".level=DEBUG
quarkus.log.category.""org.apache.camel.component.properties"".level=DEBUG
quarkus.log.category.""io.smallrye.config"".level=DEBUG
camel.main.routes-include-pattern=camel/route.yaml
mymsg=test1
mymsg2=test2
mymsg3=test3
-> % quarkus run -B | grep mymsg
2024-11-28 10:22:58,942 DEBUG [org.apa.cam.mai.RoutesConfigurer] (main) Adding templated routes into CamelContext from RoutesBuilder: Routes: [Route[From[timer:myyaml] -> [Log[Message \{{mymsg}} \{{mymsg2:msg2}} \{{mymsg3:msg3}} \{{mymsg4:msg4}}]]]]
2024-11-28 10:22:58,958 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:12 with the value test1
2024-11-28 10:22:58,960 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:12 with the value test1
2024-11-28 10:22:58,960 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg2 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:13 with the value test2
2024-11-28 10:22:58,960 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg3 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:14 with the value test3
2024-11-28 10:22:58,966 DEBUG [org.apa.cam.com.pro.DefaultPropertiesParser] (main) Found property: mymsg with value: test1 to be used.
2024-11-28 10:22:58,966 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg2 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:13 with the value test2
2024-11-28 10:22:58,966 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:12 with the value test1
2024-11-28 10:22:58,967 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg2 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:13 with the value test2
2024-11-28 10:22:58,967 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg3 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:14 with the value test3
2024-11-28 10:22:58,972 DEBUG [org.apa.cam.com.pro.DefaultPropertiesParser] (main) Found property: mymsg2 with value: test2 to be used.
2024-11-28 10:22:58,973 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg3 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:14 with the value test3
2024-11-28 10:22:58,973 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:12 with the value test1
2024-11-28 10:22:58,973 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg2 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:13 with the value test2
2024-11-28 10:22:58,973 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg3 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:14 with the value test3
2024-11-28 10:22:58,978 DEBUG [org.apa.cam.com.pro.DefaultPropertiesParser] (main) Found property: mymsg3 with value: test3 to be used.
2024-11-28 10:22:58,978 DEBUG [io.sma.config] (main) SRCFG01002: The config mymsg4 was not found
2024-11-28 10:22:58,978 DEBUG [io.sma.config] (main) SRCFG01002: The config mymsg4 was not found
2024-11-28 10:22:58,978 DEBUG [org.apa.cam.com.pro.DefaultPropertiesParser] (main) Property with key [mymsg4] not found, using default value: msg4
2024-11-28 10:22:58,990 INFO  [org.apa.cam.mai.BaseMainSupport] (main)     [MicroProfilePropertiesSource] mymsg = test1
2024-11-28 10:22:58,990 INFO  [org.apa.cam.mai.BaseMainSupport] (main)     [MicroProfilePropertiesSource] mymsg2 = test2
2024-11-28 10:22:58,990 INFO  [org.apa.cam.mai.BaseMainSupport] (main)     [MicroProfilePropertiesSource] mymsg3 = test3",No comments found
21483,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.9.0,2024-11-28T08:38:35+0000,1732783115,2024-12-05T08:51:35+0000,2024-12-05T08:51:35+0000,Cover migrations described by migration guide,No comments found
21482,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-11-28T08:06:25+0000,1732781185,2024-11-28T09:30:43+0000,2024-11-28T09:30:43+0000,We should correct this in docs and camel-catalog that its default true,No comments found
21481,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-27T20:20:00+0000,1732738800,2024-11-28T17:09:50+0000,2024-11-28T17:09:50+0000,"If you do `camel run * --dev` and do some route changes and the reload fails due to coding error etc, then you see a stracktrace in the log.
We should capture this reload error and allow jbang commands to show this status and detailed error, so you can see it via jbang commands and other tooling (such as via dev-console)",No comments found
21480,Improvement,Unassigned,Paul Blanchaert,4.8.1,4.10.0,2024-11-27T17:09:40+0000,1732727380,2024-12-28T17:04:03+0000,2024-12-28T17:04:03+0000,"Currently this PropertiesSource allows for properties that include one profile as in ""%profile1.config-key=value"".
The goal is to add support for multiple profile properties, with a comma-separated list of profile names as in ""%profile1,profile2.config-key=value"".
See also:",No comments found
21479,Improvement,Unassigned,Paul Blanchaert,4.8.1,4.10.0,2024-11-27T16:55:35+0000,1732726535,2025-01-28T06:59:47+0000,2025-01-28T06:59:47+0000,"Motivation:
1) current solr-component offers many options: 3 endpoints (solr, solrs and solrcloud) and the option to provide a solrclient: this is likely confusing for non-expert
2) many dependencies (o.a. zookeeper) of solr client make it a hard work to keep the component up to date and secure
3) solr 9.6 introduced a solr client which limits dependencies: HttpJdkSolrClient; this is a pre-requisite to revive the camel-quarkus-solr component (see quarkus issue)
4) reducing the options/scope without limiting the user's capabilities will allow easier maintenance (in all deploy options of camel)
Goal:
1) update solr-component to reduce to a single endpoint and preferably more in line with elastcsearch and opensearch component
2) use only the HttpJdkSolrClient per default; this client (new since solr-9.6.0) is expected to be sufficient for the supported operations; the current solrClient endpoint option will be kept to enable the (experienced) user to provide an alternative solrclient implementation
3) revive the camel-quarkus-solr component",No comments found
21478,Improvement,Unassigned,Chamodya Dias,"4.8.0,4.8.1",4.10.0,2024-11-27T13:20:03+0000,1732713603,2024-12-16T08:53:31+0000,2024-12-16T08:53:31+0000,"Currently, camel resolves the Java class names for RestBindingConfiguration from Schema XML attribute.
Implemented at: org.apache.camel.component.rest.openapi.RestOpenApiProcessor
```
private RestBindingConfiguration createRestBindingConfiguration(Operation o) throws Exception {
...
...
Schema s = m.getValue().getSchema();
// $ref is null, so we need to know the schema name via XML
if (s != null && s.getXml() != null) {
String ref = s.getXml().getName();
...
```
 
But the documentation says Camel can resolve the schema from the schema name: https://camel.apache.org/manual/rest-dsl-openapi.html#_binding_to_pojo_classes
 
This improvement suggests adding an `else-if` condition that to above code that uses `$ref` to resolve the schema name if available and another `else-if` condition that uses the `title` attribute (https://github.com/OAI/OpenAPI-Specification/blob/3.0.2/versions/3.0.2.md#schema-object) of the schema to get the class name if available.
 
Also, the current implementation doesn't resolve class names when using the `requestBodies` component directly in the OAS. It only uses `content` attribute.
 
example:
```
requestBody:
  $ref: '#/components/requestBodies/createProduct'
```
This improvement suggests the capability to add this also.",No comments found
21477,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-11-27T11:59:53+0000,1732708793,2024-11-28T09:46:06+0000,2024-11-28T09:46:06+0000,No description available,No comments found
21476,Improvement,Unassigned,John Zander,4.8.0,4.x,2024-11-26T15:07:41+0000,1732633661,2024-12-02T10:56:12+0000,2024-11-27T09:29:46+0000,"Hi devs,
we are using camel to call stored-procedures which return a non-standard datatype which is not handled by the framework. For this use case, it is possible to define a custom RowMapperFactory which can handle that datatype.
https://camel.apache.org/components/4.8.x/sql-stored-component.html
states ""camel.component.sql.row-mapper-factory"" as property to set.
Unfortunately, this property doesn't become active on ""sqlstored"" only on plain  ""sql"". Please fix or change the documentation with the correct property. Thank you!",No comments found
21475,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-11-26T10:55:22+0000,1732618522,2024-11-27T09:11:44+0000,2024-11-27T09:11:44+0000,"See this example
https://github.com/apache/camel-kamelets-examples/tree/main/jbang/route-template
When using hardcoded ids, (user or via tooling) then the template should self-assign unique nodeIdPrefix to avoid clashes.
org.apache.camel.FailedToCreateRouteFromTemplateException: Failed to create route two from template myTemplate because of duplicate id detected: setBody-e9c1. Please correct ids to be unique among all your routes.
    at org.apache.camel.impl.DefaultModel.addRouteFromTemplate(DefaultModel.java:539)
    at org.apache.camel.impl.DefaultModel.addRouteFromTemplate(DefaultModel.java:406)
    at org.apache.camel.impl.DefaultCamelContext.addRouteFromTemplate(DefaultCamelContext.java:355)
    at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:2450)
    at org.apache.camel.support.service.BaseService.init(BaseService.java:85)
    at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2087)
    at org.apache.camel.support.service.BaseService.start(BaseService.java:115)
    at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2106)
    at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:211)
    at org.apache.camel.main.KameletMain.doStart(KameletMain.java:385)
    at org.apache.camel.support.service.BaseService.start(BaseService.java:123)
    at org.apache.camel.dsl.jbang.core.commands.Run.runKameletMain(Run.java:1374)
    at org.apache.camel.dsl.jbang.core.commands.Run.run(Run.java:888)
    at org.apache.camel.dsl.jbang.core.commands.Run.doCall(Run.java:324)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
    at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
    at picocli.CommandLine.access$1500(CommandLine.java:148)
    at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
    at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
    at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
    at picocli.CommandLine.execute(CommandLine.java:2174)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:175)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:62)
    at main.CamelJBang.main(CamelJBang.java:36)",No comments found
21474,Improvement,Claus Ibsen,Kevin Gretener,"4.7.0,4.8.0,4.8.1","4.8.2,4.9.0",2024-11-25T21:06:31+0000,1732568791,2024-11-29T17:33:07+0000,2024-11-29T17:26:30+0000,"I'm using the SMB component as a producer, which was introduced in camel 4.7.0.
When I'm running my example route for more than 15 minutes, I noticed some exceptions in the log like this one:
I found out this is related to this issue in the SMBJ project. But at the same time I challenged why the connection is keeped open despite i'm currently not writing to the smb-fileshare. So I realized the disconnect-method on smbProducer is never called. I think it should be called from doStop(), otherwise the separated Thread of DirectTcpPacketReader.class never gets stopped.
Workarounds
First option: Call the disconnect-method manually and decrease the Logging-Level
Second Option: Use the camel-jcifs component of the camel-extra project.
Expected Behaviour
After writing a file with the smbProducer the connection should be closed and no Warning/Info logs about timeouts or unclosed sessions are written.
Additional Information
SmbConsumers SessionHandling was updated by CAMEL-21263, probably a similar solution would work for the producer.
Other improvements are planned with CAMEL-21352.",No comments found
21473,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.4.4,4.4.5,2024-11-25T15:10:24+0000,1732547424,2024-11-25T15:24:56+0000,2024-11-25T15:24:56+0000,No description available,No comments found
21472,Bug,Pasquale Congiusti,Thomas Gantenbein,4.8.1,None,2024-11-25T12:34:29+0000,1732538069,2025-01-09T12:36:08+0000,2025-01-09T12:36:08+0000,"Problem
When using a consumer like timer or file, the traceId remains the same for all messages. When using a consumer like netty (or, I assume, any other http/tcp-based consumer), every call gets its own traceId as expected.
See also https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Same.20OTEL.20trace.20for.20all.20messages.20into.20IBM.20MQ
Reproducer
https://github.com/thomas-gantenbein-tga/camel-opentelemetry/tree/main
pcongiusti, thanks for your answer on Zulip Chat. Let me know if I should further explain or minimize that reproducer.",No comments found
21471,Bug,Unassigned,Prasanth Ganesh Rao,"4.4.4,4.8.1","4.4.5,4.8.2,4.9.0",2024-11-25T11:43:55+0000,1732535035,2024-11-25T14:58:06+0000,2024-11-25T14:58:06+0000,"camel-quartz fails to start with error in below cases
The issue occurs due to the default startAt set by the underlying quartz library in the TriggerBuilder",No comments found
21470,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-25T08:52:37+0000,1732524757,2024-11-25T09:19:04+0000,2024-11-25T09:19:04+0000,No description available,No comments found
21469,Dependency upgrade,Thomas Cunningham,Claus Ibsen,None,4.8.2,2024-11-25T08:45:51+0000,1732524351,2024-11-25T15:10:06+0000,2024-11-25T15:10:06+0000,No description available,No comments found
21468,Improvement,Claus Ibsen,Raymond,4.8.1,4.10.0,2024-11-25T07:47:12+0000,1732520832,2024-12-11T19:58:41+0000,2024-12-11T19:58:41+0000,"I would like to see the raw request and response in the log when using the http component. For this, the following component options could be added:
1. logRawRequest (or showRawRequest)
2. logRawResponse (or showRawResponse)
Now this seems partly possible by setting the log file settings (for example in log4j and logback). However, I often don't have access to these files. I would like to have it similar to debugging in for example Google Chrome or Postman, to quickly enable and disable on the endpoint.
----------------------
Example of a background use case:
I have two routes, one with a Groovy script component and one that executes a http call. This works fine when there is a queue between the routes, but not when using a synchronous call with direct. My assumption is that when sending the message to a JMS (ActiveMQ) queue the headers and body objects get automatically converted, for example with a String method. I tried to find out by setting a log component before it and after the http call, however they seem to be the same. Still, one returns 200 and the other 400 (unfortunately no other info in the response, except that something is null). Logging and comparing the raw request/response would help me see the difference more easily. In this case setting the log file isn't that easy as the log file is provisioned through terraform/docker and changing it would change it also for other calls. The http endpoint is not reachable locally.",No comments found
21467,Bug,Nicolas Filotto,Jannik Schmeier,4.8.1,"4.8.2,4.9.0",2024-11-22T11:29:36+0000,1732274976,2024-12-03T09:40:12+0000,2024-11-28T09:49:45+0000,"Similar to CAMEL-21432, occasionally my camel route gets stuck on SimpleLRUCache.
The thread dump suggests, that this has to do with simple and bean expressions. I've had two encounters with this issue in two different applications:
First encounter:
""Camel (camel-1) thread #2 - JmsConsumer[<hidden>]"" - Thread t@58
   java.lang.Thread.State: RUNNABLE
    at org.apache.camel.support.cache.SimpleLRUCache$OperationContext.close(SimpleLRUCache.java:318)
    at org.apache.camel.support.cache.SimpleLRUCache.put(SimpleLRUCache.java:106)
    at org.apache.camel.support.cache.SimpleSoftCache.put(SimpleSoftCache.java:114)
    at org.apache.camel.component.bean.BeanComponent.addBeanInfoToCache(BeanComponent.java:96)
    at org.apache.camel.component.bean.BeanInfo.<init>(BeanInfo.java:169)
    at org.apache.camel.component.bean.ConstantBeanHolder.<init>(ConstantBeanHolder.java:50)
    at org.apache.camel.language.bean.BeanExpression.invokeOgnlMethod(BeanExpression.java:435)
    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:218)
    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:232)
    at org.apache.camel.language.simple.SimpleExpressionBuilder$KeyedOgnlExpressionAdapter.evaluate(SimpleExpressionBuilder.java:1253)
    at org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:45)
    at org.apache.camel.model.language.ExpressionDefinition.evaluate(ExpressionDefinition.java:252)
    at org.apache.camel.support.builder.ValueBuilder.evaluate(ValueBuilder.java:55)
    at org.apache.camel.support.builder.BinaryPredicateSupport.matchesReturningFailureMessage(BinaryPredicateSupport.java:67)
    at org.apache.camel.support.builder.BinaryPredicateSupport.matches(BinaryPredicateSupport.java:56)
    at org.apache.camel.processor.FilterProcessor.matches(FilterProcessor.java:89)
    at org.apache.camel.processor.FilterProcessor.process(FilterProcessor.java:72)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:96)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:208)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:163)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:82)
    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
    at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:132)
    at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:787)
    at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:742)
    at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:720)
    at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:333)
    at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:246)
    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1257)
    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1247)
    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1140)
    at java.base@21.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
    at java.base@21.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    at java.base@21.0.2/java.lang.Thread.runWith(Thread.java:1596)
    at java.base@21.0.2/java.lang.Thread.run(Thread.java:1583)
Second encounter:
""Camel (camel-1) thread #4 - timer://my-timer"" - Thread t@63
   java.lang.Thread.State: RUNNABLE
    at org.apache.camel.support.cache.SimpleLRUCache$OperationContext.close(SimpleLRUCache.java:318)
    at org.apache.camel.support.cache.SimpleLRUCache.put(SimpleLRUCache.java:106)
    at org.apache.camel.support.cache.SimpleSoftCache.put(SimpleSoftCache.java:114)
    at org.apache.camel.component.bean.BeanComponent.addBeanInfoToCache(BeanComponent.java:96)
    at org.apache.camel.component.bean.BeanInfo.<init>(BeanInfo.java:169)
    at org.apache.camel.component.bean.ConstantBeanHolder.<init>(ConstantBeanHolder.java:50)
    at org.apache.camel.language.bean.BeanExpression.createBeanHolder(BeanExpression.java:303)
    at org.apache.camel.language.bean.BeanExpression.init(BeanExpression.java:175)
    at org.apache.camel.language.bean.BeanLanguage.createExpression(BeanLanguage.java:148)
    at org.apache.camel.language.simple.SimpleExpressionBuilder$KeyedOgnlExpressionAdapter.evaluate(SimpleExpressionBuilder.java:1251)
    at org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:45)
    at org.apache.camel.support.builder.ExpressionBuilder$62.evaluate(ExpressionBuilder.java:2105)
    at org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:45)
    at org.apache.camel.processor.LogProcessor.process(LogProcessor.java:71)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:95)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:96)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:208)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:96)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:208)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:163)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)
    at org.apache.camel.component.timer.TimerConsumer.sendTimerExchange(TimerConsumer.java:293)
    at org.apache.camel.component.timer.TimerConsumer$1.doRun(TimerConsumer.java:164)
    at org.apache.camel.component.timer.TimerConsumer$1.run(TimerConsumer.java:136)
    at java.base@21.0.2/java.util.TimerThread.mainLoop(Timer.java:566)
    at java.base@21.0.2/java.util.TimerThread.run(Timer.java:516)
Looking at the stacktrace can't quite make out exactly where in my route this occurrs. But I think the first one occurrs here, as there is a filter and simple expression and the bean expression probably is being created implicitly by Camel under the hood?
The second one seems to be related to logging and according to the choice processor, it might happen here:",No comments found
21466,Bug,Thomas Diesler,Thomas Diesler,None,None,2024-11-21T11:33:16+0000,1732188796,2025-01-14T12:53:53+0000,2024-12-13T07:19:39+0000,--cleanup=true is the default and should delete the deployment on ctrl+c,No comments found
21465,Dependency upgrade,James Netherton,James Netherton,None,4.10.0,2024-11-21T08:50:42+0000,1732179042,2024-12-05T10:54:28+0000,2024-12-05T10:54:28+0000,"This means switching to the new org.apache.cassandra group id.
https://repo1.maven.org/maven2/org/apache/cassandra/java-driver-core/",No comments found
21464,Task,Thomas Diesler,Thomas Diesler,None,4.9.0,2024-11-20T15:41:27+0000,1732117287,2024-12-03T09:31:08+0000,2024-12-03T09:30:53+0000,,No comments found
21463,Bug,Claus Ibsen,Vidhya Sagar Jeevendran,"4.8.0,4.8.1",4.10.0,2024-11-19T13:59:34+0000,1732024774,2024-12-02T12:16:24+0000,2024-12-02T12:16:24+0000,"When I run camel integrations with jbang in background and later fetch log using ""camel log"" I am able to access the log only when the process has started successfully. But when it fails with some error, the log is empty and I am unable to find the failure reason.",No comments found
21462,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.9.0,4.9.0,2024-11-19T09:42:34+0000,1732009354,2024-11-25T10:36:33+0000,2024-11-25T10:36:33+0000,"With CAMEL-21384 we have introduced a new adapter component, camel-observability-services. The first MVP exposes metrics. We need to include more component to be complete:",No comments found
21461,New Feature,Federico Mariani,Federico Mariani,None,4.10.0,2024-11-18T14:13:08+0000,1731939188,2025-02-03T11:51:28+0000,2025-01-31T11:18:18+0000,"The platform http components starter (Camel Spring Boot) is not feature-complete.
The following features are missing:
Tests for all these features are added in the PR https://github.com/apache/camel-spring-boot/pull/1286, some features were already implemented in the PR, the features not implemented yet have a failing (disabled) test.",No comments found
21460,Bug,Pasquale Congiusti,Pasquale Congiusti,4.8.1,4.9.0,2024-11-18T09:28:31+0000,1731922111,2024-11-25T14:51:26+0000,2024-11-25T14:51:26+0000,"I'm testing the camel-opentelemetry component against Spring Boot runtime. I've followed the instructions but it seems that for some reason, the application can't start reporting the following error:",No comments found
21459,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-16T09:48:55+0000,1731750535,2024-11-16T09:52:43+0000,2024-11-16T09:52:43+0000,No description available,No comments found
21458,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-11-15T17:04:37+0000,1731690277,2024-11-18T08:54:48+0000,2024-11-18T08:54:48+0000,No description available,No comments found
21457,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,None,2024-11-15T15:33:30+0000,1731684810,2024-11-27T09:16:38+0000,2024-11-27T09:16:38+0000,"Camel jbang kubernetes plugin trait Knative service does not yet allow for configuration of the timeout, as is available in CK (https://camel.apache.org/camel-k/2.5.x/traits/knative-service.html)
The KnativeService model class is already up to date.",No comments found
21456,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.10.0,2024-11-15T15:29:31+0000,1731684571,2024-12-03T12:01:49+0000,2024-12-03T11:55:18+0000,"Camel jbang kubernetes plugin trait Ingress does not yet allow for configuration of TLS, as is available in CK (https://camel.apache.org/camel-k/2.5.x/traits/ingress.html).
The Ingress model class is already up to date.",No comments found
21455,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.8.0,"4.4.5,4.8.2,4.9.0",2024-11-15T06:53:37+0000,1731653617,2024-11-15T09:12:29+0000,2024-11-15T06:56:42+0000,No description available,No comments found
21454,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-14T15:33:04+0000,1731598384,2024-11-14T15:35:28+0000,2024-11-14T15:35:28+0000,"For example during testing camel-main you can see JVM shutdown hook because per test method can trigger this message.
However the app is shutting down cleanly so we dont need to show this logging.",No comments found
21453,Task,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-11-14T14:31:09+0000,1731594669,2024-11-18T15:52:39+0000,2024-11-18T15:52:39+0000,Related to CAMEL-21166,No comments found
21452,Task,Federico Mariani,Otavio Rodolfo Piske,4.9.0,4.10.0,2024-11-14T13:27:08+0000,1731590828,2025-01-22T11:53:57+0000,2025-01-22T11:53:57+0000,"It turns out that the test infrastructure management code on the test-infra could be useful in multiple other scenarios (i.e.: for Camel JBang). However, there's a small set of classes that are bound to the test API used by Camel. These APIs would make re-purposing the test infra harder and inelegant for users of that code.
It should be relatively simple to decouple this API (high-level steps, details may vary slightly):
1. Split 
org.apache.camel.test.infra.common.services.TestService in 2 parts: one named InfrastructureService for the infrastructure code (containing registerProperties, initialize, shutdown and close) and another retaining the TestService name (containing the beforeAll and afterAll callbacks from JUnit's BeforeAllCallback, AfterAllCallback interfaces)
2. Rename the existing <Name>Service to <Name>TestService (i.e.: ElasticSearchTestService) and make sure it implements the TestService API
3. Create a new <Name>Service and make sure it DOES NOT implement the TestService API
4. Move the infrastructure code to src/main
5. Keep the Camel-specific test infra code (i.e.:  <Name>TestService) within src/test
Repeat for all services in the test-infra.",No comments found
21451,Task,Thomas Diesler,Thomas Diesler,None,None,2024-11-14T11:11:06+0000,1731582666,2024-11-20T15:39:00+0000,2024-11-20T15:39:00+0000,"The team decided (in Brno) to commonly use JKube to generate k8s resource definitions. One set of documentation, properties, extension points for users and tools to integrate with.",No comments found
21450,Task,Thomas Diesler,Thomas Diesler,None,None,2024-11-14T11:07:39+0000,1731582459,2024-11-15T15:03:14+0000,2024-11-15T15:03:14+0000,No description available,No comments found
21449,Bug,Unassigned,Aurélien Pupier,4.8.1,None,2024-11-14T08:40:01+0000,1731573601,2024-11-29T17:26:50+0000,2024-11-29T17:26:50+0000,revealed sometimes by test org.apache.camel.main.MainThreadPoolTest.testCustomThreadPool  :,No comments found
21448,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,None,4.9.0,2024-11-13T13:26:16+0000,1731504376,2024-11-15T09:17:53+0000,2024-11-15T09:17:53+0000,"This component seems largely unmaintained and suffering from problems with testing (CAMEL-21439). As all the tests are disabled and apparently there's no interest on it, we should deprecate it.",No comments found
21447,Dependency upgrade,Thomas Cunningham,Claus Ibsen,None,4.9.0,2024-11-13T12:03:36+0000,1731499416,2024-11-25T08:45:27+0000,2024-11-25T08:45:27+0000,No description available,No comments found
21446,Bug,Marco Carletti,Filip Jalaksa,4.8.1,"4.8.2,4.9.0",2024-11-13T11:28:03+0000,1731497283,2024-11-13T18:40:20+0000,2024-11-13T18:40:20+0000,"Created a simple integration using Karavan
Output in my testing minikube container:
So when using the default in property placeholders it will take precedence even if given key is present.",No comments found
21445,Improvement,Andrea Cosentino,Claus Ibsen,None,"4.8.2,4.9.0",2024-11-13T11:06:21+0000,1731495981,2024-11-13T13:08:24+0000,2024-11-13T13:08:24+0000,"See chat
https://camel.zulipchat.com/#narrow/channel/352237-camel-jbang/topic/export.20with.20vault
Change the default to false in the camel-main vault configuration.
Add note about this change in the 4.9 upgrade guide
To enable you just set
camel.vault.kubernetes.refreshEnabled=true",No comments found
21444,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-12T19:59:59+0000,1731441599,2024-11-13T09:12:00+0000,2024-11-13T09:12:00+0000,"camel> catalog other --since-after=4
java.lang.NullPointerException: Cannot invoke ""String.length()"" because ""t1"" is null
    at org.apache.camel.dsl.jbang.core.common.VersionHelper.compare(VersionHelper.java:107)
    at org.apache.camel.dsl.jbang.core.common.VersionHelper.isGE(VersionHelper.java:55)
    at org.apache.camel.dsl.jbang.core.commands.catalog.CatalogBaseCommand.lambda$doCall$2(CatalogBaseCommand.java:137)
    at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)
    at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
    at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
    at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
    at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
    at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
    at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
    at org.apache.camel.dsl.jbang.core.commands.catalog.CatalogBaseCommand.doCall(CatalogBaseCommand.java:138)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)",No comments found
21443,New Feature,Guillaume Nodet,Guillaume Nodet,None,4.9.0,2024-11-12T15:50:56+0000,1731426656,2024-11-12T15:52:19+0000,2024-11-12T15:51:52+0000,No description available,No comments found
21442,Bug,Thomas Diesler,Aurélien Pupier,"4.8.1,4.8.2,4.9.0","4.8.4,4.10.0",2024-11-12T13:31:19+0000,1731418279,2025-01-25T07:31:18+0000,2025-01-25T07:31:18+0000,"it is a regression introduced in Camel 4.8.1, it is working fine with Camel 4.8.0
Using jbang '-Dcamel.jbang.version=4.8.0' camel@apache/camel export --runtime=quarkus --gav=com.acme:myproject:1.0-SNAPSHOT is exporting successfully and then calling mvn quarkus:dev is working fine
Potential workarounds:",No comments found
21441,Bug,Unassigned,Salvatore Mongiardo,4.8.1,None,2024-11-12T13:18:06+0000,1731417486,2024-11-12T15:23:06+0000,2024-11-12T15:18:32+0000,"Camel cli configuration steps:
Init / Export application
So, let's create a process (camel-1) using the exported project with maven:
The command:
doesn't work as expected. The behaviour is different if we run with the CLI:",No comments found
21440,Bug,Unassigned,Salvatore Mongiardo,4.8.1,None,2024-11-12T13:14:24+0000,1731417264,2024-11-12T15:18:18+0000,2024-11-12T15:18:18+0000,"Camel cli configuration steps:
Init / Export application
Let's run the CSB application and retrieve it from the active processes list:
The result is ""camel-1"", but generally it would have been named with the yaml name (""test"")
Even changing the name through the specific option:
The result is always the same:",No comments found
21439,Test,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,None,2024-11-12T09:56:08+0000,1731405368,2024-11-13T13:33:08+0000,,"Something has broken etcd3 very badly and tests are not working at all. This could indicate a serious problem with the component.
Running the tests causes these messages to be printed:
And the logs:",No comments found
21438,Test,Unassigned,Otavio Rodolfo Piske,4.9.0,None,2024-11-12T09:36:04+0000,1731404164,2025-01-31T12:30:03+0000,,"We have multiple tests that run unreliably on platforms such as ppc64le, s390x and aarch64.
At lot of these tests are related to concurrency and threading scenarios, which could indicate incorrect assumptions about the memory model behavior on these platforms.",No comments found
21437,Improvement,Unassigned,Olivier Jacquemart,"4.8.0,4.8.1",None,2024-11-12T09:29:49+0000,1731403789,2024-11-12T10:06:59+0000,,"At the moment, the DefaultRestClientRequestValidator not give any information in case of an invalid json object.
It could be nice to have more info like a log in that particular case (and maybe other cases like empty body, not allowed query params or http headers).
About the json validation, the json-validator module has another approach and allows to catch exception so we can decide what exception to log.",No comments found
21436,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-11T18:02:55+0000,1731348175,2024-11-13T11:07:16+0000,2024-11-13T11:07:16+0000,"A bean such as a database driver
Can fail during export because camel-kubernetes fail with
java.lang.IllegalArgumentException: Secrets must be configured on Kubernetes vault configuration
at org.apache.camel.component.kubernetes.secrets.vault.SecretsReloadTriggerTask.doStart(SecretsReloadTriggerTask.java:96)",No comments found
21435,Bug,Claus Ibsen,Dmitrii Kriukov,None,4.9.0,2024-11-11T17:35:04+0000,1731346504,2024-11-13T09:32:25+0000,2024-11-13T09:20:48+0000,"Retry on the onException() clause seems to be impossible for producerPoolMaxTotal=1 (leads to call of GenericObjectPoolConfig.setMaxTotal())
This causes infinite hanging in case of network IO exceptions.
Netty attempts to utilize a new connection when the old one is still unreleased.
It boils down to method org.apache.commons.pool2.impl.GenericObjectPool::borrowObject(Duration borrowMaxWaitDuration) throws Exception {}
When producerPoolBlockWhenExhausted = true (the default value), the application hangs.
When producerPoolBlockWhenExhausted = false, I get an exception 
2024-11-11 13:41:44 ERROR [com.opt.obp.ser.ada.cam.Logger] (Camel Thread #2 - NettyClientTCPWorker) <> Exception occurred: java.util.NoSuchElementException: Pool exhausted 
So, either way it's impossible to serve",No comments found
21434,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,4.9.0,2024-11-11T14:52:56+0000,1731336776,2024-12-09T08:24:25+0000,2024-11-11T16:44:22+0000,"There are a lot of references for Camel JBang in the Camel Kamelet Main module. This makes it harder to reuse this module for other tools and ideas that could benefit from the classes on that module.
We should decouple Camel JBang references from it.",No comments found
21433,Improvement,Claus Ibsen,Andrej Vano,4.8.1,4.10.0,2024-11-11T14:22:01+0000,1731334921,2025-02-02T08:16:53+0000,2025-02-02T08:16:53+0000,"I do:
1. mkdir app
2. camel init app/hello.yaml
3. camel run --runtime camel-quarkus app/hello.yaml
Also when I do camel export --runtime quarkus --dir app/export app/hello.yaml, hello.yaml is placed in src/main/resources/camel, but the content of application.properties is:",No comments found
21432,Bug,Nicolas Filotto,Abhi Ashok,4.4.3,"4.4.5,4.8.2,4.9.0",2024-11-11T14:04:21+0000,1731333861,2024-11-27T21:29:39+0000,2024-11-14T08:59:56+0000,"multicast function used in a Camel Route never returns back occasionally.
Route Code snippet: 
from(getProcessMessageURI())
.routeId(getSourceId() + "".businessRoute"")
.autoStartup(this.getConfigValue(getRouteAutoStartup()))
.transacted(this.getPropagationRequiredPolicy())
.setHeader(""DESTINATION_URI"").simple(this.getConfigValue(getOutputQueue()))
.process(new InputMessageProcessor(this.getConfigValue(getOutputQueue())))
.bean(new JTEConfigReader(getConfigXml()), ""addJTEConfig(${body})"")
.bean(DMUtilityProcessor.class) exchange
.bean(TranslatorExchangeController.class)
.removeHeaders(""JMS*"")
.multicast()
.to(directOutput(), directPersist());
Thread dump shows that the Processing Thread remains in RUNNABLE state.
All Stuck instance of Threaddump shows access to SimpleLRUCache$OperationContext.close, where it gets stuck.
Thread Dump:
Name: Camel (camelContext) thread #11 - JmsConsumer[IFM.RTR.IFM.ITE.BFM.AKNKRAW.EXPRESS]
State: RUNNABLE
Total blocked: 13,338  Total waited: 13,968
Stack trace: 
org.apache.camel.support.cache.SimpleLRUCache$OperationContext.close(SimpleLRUCache.java:318)
org.apache.camel.support.cache.SimpleLRUCache.putIfAbsent(SimpleLRUCache.java:125)
org.apache.camel.processor.MulticastProcessor.wrapInErrorHandler(MulticastProcessor.java:1074)
org.apache.camel.processor.MulticastProcessor.createProcessorExchangePair(MulticastProcessor.java:1023)
org.apache.camel.processor.MulticastProcessor.createProcessorExchangePairs(MulticastProcessor.java:990)
org.apache.camel.processor.MulticastProcessor.doProcess(MulticastProcessor.java:324)
org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:316)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:840)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:746)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:200)
org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:397)
org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:327)
org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)
org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:840)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:746)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:354)
org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:330)
org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148)
org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59)
org.apache.camel.processor.Pipeline.process(Pipeline.java:163)
org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:354)
org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:330)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:82)
org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:132)
org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:783)
org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:741)
org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:719)
org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:333)
org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:246)
org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1257)
org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1247)
org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1140)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
java.lang.Thread.run(Thread.java:840)",No comments found
21431,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-11T12:53:58+0000,1731329638,2024-11-15T10:42:07+0000,2024-11-15T10:42:07+0000,"If you use dot when exporting then jbang does not let Camel know all the files, and you have an empty project
This is wrong
camel export . --runtime=quarkus --gav=org.demo:mydemo:1.0.0 --dir=code
You should use
camel export * --runtime=quarkus --gav=org.demo:mydemo:1.0.0 --dir=code
Maybe we can detect the dot, and let camel-jbang find all the files, as then we assume you want to do this",No comments found
21430,Bug,Unassigned,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-11T12:10:47+0000,1731327047,2024-11-12T17:31:56+0000,2024-11-12T17:31:56+0000,"Reported at
https://github.com/apache/camel-quarkus/issues/6766",No comments found
21429,Dependency upgrade,Unassigned,Claus Ibsen,None,4.x,2024-11-11T12:00:37+0000,1731326437,2024-12-27T10:59:38+0000,,"There may be some new options we can include in the camel-kafka component
https://kafka.apache.org/39/documentation.html#upgrade",No comments found
21428,Bug,Unassigned,Oystein Follo,4.8.1,None,2024-11-11T11:47:46+0000,1731325666,2024-11-27T08:16:44+0000,2024-11-27T08:16:44+0000,"We are experiencing a NullPointerException within the createTempFileName method. This error occurs when tempName is evaluated as null, and later in the code, a call to tempName.length() or tempName.lastIndexOf() results in an exception. This issue can disrupt the file processing flow.
Relevant Code Segment:
File: camel-file/components/file/GenericFileProducer.java
Issue Location:
The issue occurs in the line:
If tempName is null, calling tempName.length() or tempName.lastIndexOf() will result in a NullPointerException.
Steps to Reproduce:
Expected Behavior:
The method should handle the case where tempName may be null. If tempName is null, a default value should be used or a check should be added to avoid invoking methods on a null object.
Actual Behavior:
A NullPointerException is thrown when tempName is null, which may interrupt the file creation or processing flow.
Suggested Solution:
Add a null check for tempName after it is assigned. For example:
Alternatively, consider handling null scenarios with a fallback or error-handling mechanism to avoid this exception.
Impact:
This issue disrupts file processing, potentially causing failures in downstream applications depending on file operations.",No comments found
21427,Improvement,Claus Ibsen,Adriano Machado,4.8.1,4.9.0,2024-11-10T23:03:02+0000,1731279782,2024-11-15T15:42:06+0000,2024-11-15T15:42:06+0000,Pull request contains test showing the issue,No comments found
21426,New Feature,Unassigned,Claus Ibsen,None,4.x,2024-11-10T09:28:36+0000,1731230916,2024-11-12T19:55:07+0000,,"We have a lot of mixed stuff at
https://github.com/apache/camel-kamelets-examples
We should create a new camel-jbang-examples folder with a smaller set of examples that are better documented and aimed for users new to Camel or quickly want to try and see Camel in action.
We should generate a table of content (like we do for the other examples repo) that has a summary and category so users can better find what they are looking for.",No comments found
21425,New Feature,Unassigned,Claus Ibsen,None,4.11.0,2024-11-10T06:40:00+0000,1731220800,2025-01-09T09:19:38+0000,,"Installing camel jbang CLI is done the standard jbang way, but then you get the lastest release, and jbang has this auto-update checker that calls the internet which you may not want. We should have some camel command that can upgrade or dowgrade the CLI. Then users can be in more control and only use one CLI tool (not need to learn jbang first).",No comments found
21424,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2024-11-10T06:36:21+0000,1731220581,2025-01-09T09:19:42+0000,,This can be needed when users want to trouble shoot and something does not work as expected then they can try to export in verbose mode that can help clarify where the problem is.,No comments found
21423,Bug,Zheng Feng,Zheng Feng,"4.4.4,4.8.1","4.4.5,4.8.2,4.9.0",2024-11-08T00:01:00+0000,1731024060,2024-11-09T07:57:39+0000,2024-11-09T07:57:39+0000,"Will not work, but with ""AES/GCM/NoPadding"", it expects to configure a GCMParamSpec.
The related codes are in CryptoDataFormat.java
I think it could check (parameterSpec != null) at first.",No comments found
21422,Improvement,Claus Ibsen,Raymond,4.8.1,4.9.0,2024-11-06T12:31:50+0000,1730896310,2024-11-10T06:43:13+0000,2024-11-10T06:43:13+0000,"The ManagedRoute class (https://www.javadoc.io/doc/org.apache.camel/camel-management/latest/org/apache/camel/management/mbean/ManagedRoute.html) has three methods to get the CPU Usage:
getLoad01()
getLoad05()
getLoad15()
I noticed a bug and maybe also things that could be improved:
1. Empty string
The methods sometimes return an empty string. As I like to do calculations and tried to convert it to a BigDecimal I sometimes got:
Probably better to always at least return 0

Note that statistics are enabled:
But sometimes it still gives an empty (as like if it suddenly turned off). I don't know how to properly reproduce it, but I started like 100 routes, and measure the CPU. At first, it goes well, but after a while it returns empty values. According to a check, the statistics is still enabled at the time. 

2. Return type

The default return type is a String. As I understand this is a percentage, I would expect a return type that match that, like a BigDecimal (or a two decimal Double)

3. Method name

The name of the method is getLoad01(). This seems unclear:

What does load mean (cpu, network, memory)? And what does 01 mean?

Maybe 

BigDecimal cpuLoad = managedRoute.getCPULoad(LoadInterval.1minute)

Where loadInterval is an enumeration with all possible (int) values.

4. Time interval

If possible, that time interval could have more options between 1 minute to 1 hour.

5. Three decimals

To really get fine-grained statistics (especially on very powerful machine), a CPU stastics on three decimals would be helpful


--------------------------------------",No comments found
21421,Improvement,Andrea Cosentino,Adriano Machado,None,4.9.0,2024-11-06T08:52:32+0000,1730883152,2024-11-06T11:29:39+0000,2024-11-06T11:29:39+0000,No description available,No comments found
21420,Bug,Claus Ibsen,Adriano Machado,4.8.1,4.9.0,2024-11-05T23:19:07+0000,1730848747,2024-11-11T11:16:30+0000,2024-11-11T11:13:23+0000,Here's a unit test showing the problem:,No comments found
21419,Bug,Federico Mariani,Felix Huisinga,4.8.1,"4.8.2,4.9.0",2024-11-05T14:25:24+0000,1730816724,2024-11-11T11:22:39+0000,2024-11-11T11:22:39+0000,"On upgrading from Camel 4.8.0 to 4.8.1, the app is resulting in application startup failure. The root cause is a conflict between two beans: applicationTaskExecutor and taskScheduler, both of which are being detected by org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration.
Removing the @EnableScheduling fixes is as there will no longer be two Executor Beans. However, this will result in us not being able to use Spring scheduler.
Below is the Log:
2024-11-05T15:24:21.657+01:00  WARN 89193 — [service-name] [           main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration': Unsatisfied dependency expressed through field 'executor': No qualifying bean of type 'java.util.concurrent.Executor' available: expected single matching bean but found 2: applicationTaskExecutor,taskScheduler
2024-11-05T15:24:21.659+01:00  INFO 89193 — [service-name] [           main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-11-05T15:24:21.669+01:00  INFO 89193 — [service-name] [           main] .s.b.a.l.ConditionEvaluationReportLogger : 
 
Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-05T15:24:21.675+01:00 ERROR 89193 — [service-name] [           main] o.s.b.d.LoggingFailureAnalysisReporter   : 
 
***************************
APPLICATION FAILED TO START
***************************
 
Description:
 
Field executor in org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration required a single bean, but 2 were found:",No comments found
21418,Bug,Claus Ibsen,Olivier Jacquemart,"4.8.1,4.9.0","4.8.3,4.10.0",2024-11-05T13:39:03+0000,1730813943,2024-12-02T15:30:19+0000,2024-12-02T15:30:12+0000,"I have a problem regarding a rest route and a client sending multiple values in the Accept header. The route has the client request validation enabled.
After a quick debug, I ended up in the RestUtil  class that returns false by default. It considers the accept header like invalid then and gives the 406.",No comments found
21417,Test,Unassigned,Otavio Rodolfo Piske,4.9.0,4.9.0,2024-11-04T14:01:08+0000,1730728868,2024-11-28T10:35:19+0000,2024-11-28T10:35:19+0000,Various tests are broken for a long time:,No comments found
21416,Bug,Unassigned,Andrej Vano,4.8.1,None,2024-11-04T12:45:57+0000,1730724357,2024-11-11T14:11:16+0000,2024-11-11T14:11:16+0000,"What I did:
1. jbang app install --force camel@apache/camel
2. camel init hello.yaml
3. camel run --runtime camel-quarkus hello.yaml
the same issues can be observed with runtime camel-spring-boot, with runtime camel-main it works.",No comments found
21415,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-11-04T12:20:45+0000,1730722845,2024-11-14T06:35:09+0000,2024-11-14T06:35:09+0000,"The configuration for Prometheus endpoint is hardcoded: https://github.com/apache/camel/blob/c7385e3e0542b8b754691d5015936c040c1cdf8d/components/camel-micrometer-prometheus/src/main/java/org/apache/camel/component/micrometer/prometheus/MicrometerPrometheus.java#L390
We should add a configuration on the component to let the user configure.",No comments found
21414,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-11-04T12:20:45+0000,1730722845,2024-11-12T17:41:49+0000,2024-11-12T17:41:42+0000,"The configuration for Prometheus endpoint is hardcoded: https://github.com/apache/camel/blob/c7385e3e0542b8b754691d5015936c040c1cdf8d/components/camel-micrometer-prometheus/src/main/java/org/apache/camel/component/micrometer/prometheus/MicrometerPrometheus.java#L390
We should add a configuration on the component to let the user configure.",No comments found
21413,Wish,Unassigned,Raymond,None,None,2024-11-01T11:57:00+0000,1730462220,2024-11-09T21:23:36+0000,2024-11-09T07:48:25+0000,"Wish
The wish is for a transaction log store in Camel to provide detailed tracking and performance metrics on end-to-end transactions across multiple exchanges/routes, storing metadata, exchange data, and performance metrics in a configurable, persistent registry to better monitor business processes.
Background
A lot of data in tracing and observability is on the exchange level. How many exchanges are completed or failed, for example. In many cases, what I really want to know if a transaction is successful or failed.
With a transaction I mean that the complete lifecycle of a message on Camel, this 
may contain many routes and exchanges. For example, when Seda or ActiveMQ is used 
a new exchange is created, but it's still the same transaction.
 
To have metrics and more insights on transactions, I would like to have a transaction log (through a separate registry?). This is a separate store with information about the transaction.
Implementation ideas
Below are few ideas to implement this wish:
1. Initialize the store
Setup a transaction log/store (either in memory or external store) through a registry. This is to enable it and to configure the store.
2. Transaction item
A transaction item is a definition of a specific transaction. It may contain the following items:
3. Tracking transactions
A transaction is probably best tracked by something like a breadcrumbId. Preferably a transactionId. At least something that cannot be edited by users (I sometimes see people change the breadcrumbId, to separate transactions into multiple segments).
By default, only the start and end of a transaction is tracked. To get more fine-grained control, one could also track intermediate points like a route, a step, or a node.
The transaction is tracked during processing, and then finished on completion. The whole counts as one ""UnitOfWork"".
4. The transaction store
The transaction store contains all the tracked items. Maybe there could be divided into separate segments like:
- name (name of the transaction)
    - description (description of type of transaction)
    - transactionId
    - transactionHistory (similar to messageHistory)
    - correlationId(s)
    - timestamps
    - exceptions
- headers, properties, variables
    - bodyType
    - body
    etc
- load (CPU), memory (RAM), threads
    - number of transactions (completed, pending, failed)
    - throughput
    - response time
    - total process time of an transaction
    - average
    - etc
It should be possible to configure which of these items the user what want to store. By default, only metadata.
5. Transaction API's
There need to be an API to configure and operate the transaction store. (including JMX), similar to backlogtracer.
Production
Some of the solutions I saw are only available during development or test, but the need is especially big for production environment. A solution needs to keep in mind that this would run for billion of messages. The flexibility to turn it easily on and off.
For example, by default, the body of a message doesn't need to be stored. Or only the first 32kb need to be stored. But for specific case users, one to enable this on the fly for a specific transaction.
Transactions are probably needed persistent, so either need a messagestore (disk) similar to brokers or an external database. I'm not sure what the best stores are for this kind of data. A normal SQL database like Postgres, a search database like Elastic, a metrics database like Prometheus or key/value store like Redis?
End users
The idea is that end users have a good insight in what is going on in the integration layer. So that they can question like the following:
Conclusion
This is just an idea/wish, but something I see coming back from the start of my career as integration specialist (around 2007), until today.
Most consultancy firms or end customers have built something themselves, I see with names like ""Track & Trace"", ""MessageStore"", ""ESB Collector"", ""Transactions"", ""Control center"".
I also built a solution myself, and are happy to share this solution, or others I saw. A more generic solution to monitor (track & trace) transactions of business processes would be very welcome.",No comments found
21412,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-31T15:57:46+0000,1730390266,2024-10-31T18:20:28+0000,2024-10-31T16:06:16+0000,The LanguageBuilderFactory makes it possible to do fluent builder to setup any kind of language with any of its supported options. This is part of RouteBuilder. But you may want to do the same in your test method with the mock to set expectations etc.,No comments found
21411,Improvement,Unassigned,Claus Ibsen,None,4.9.0,2024-10-31T15:25:07+0000,1730388307,2024-11-28T09:54:00+0000,2024-11-28T09:54:00+0000,"Both when using camel-jbang and for CSB/CEQ etc
You need to use classpath to make it work",No comments found
21410,Task,Thomas Cunningham,Thomas Cunningham,None,4.9.0,2024-10-31T12:34:41+0000,1730378081,2024-11-14T06:35:36+0000,2024-11-14T06:35:36+0000,"jamesnetherton pointed out that UTF_VALIDATOR is the default validation mode for Avro https://github.com/apache/avro/blob/release-1.12.0/lang/java/avro/src/main/java/org/apache/avro/Schema.java#L1433-L1435
and that STRICT_VALIDATOR was more restrictive.    Change our use of NameValidator to use UTF_VALIDATOR rather than STRICT_VALIDATOR.",No comments found
21409,New Feature,Unassigned,Claus Ibsen,None,4.x,2024-10-31T11:19:12+0000,1730373552,2024-12-27T11:04:08+0000,2024-12-27T11:04:08+0000,We should add this connector,No comments found
21408,Task,Unassigned,Aurélien Pupier,4.8.1,None,2024-10-31T08:40:43+0000,1730364043,2024-11-12T09:06:23+0000,,"when calling something like:
The genrated project is invalid.
The camel file is copied in src/main/resources/camel/democamel.yaml
The application.properties file contains:
which is leading to this kind of error at runtime:
Note that it also affects the Camel Kubernetes run as it is reusing the export.",No comments found
21407,Bug,Steve Storck,Steve Storck,4.8.0,"4.8.2,4.9.0",2024-10-30T21:31:06+0000,1730323866,2024-10-31T07:55:23+0000,2024-10-31T07:55:23+0000,"A user reported a problem with unsubscribing from dynamic router by using a control message, and it wasn't working.  However, unsubscribing with headers works as expected.",No comments found
21406,Bug,Claus Ibsen,Claus Ibsen,"4.4.0,4.8.0","4.4.5,4.8.2,4.9.0",2024-10-30T11:57:38+0000,1730289458,2024-10-30T12:02:51+0000,2024-10-30T12:01:32+0000,"Reported on SO
https://stackoverflow.com/questions/79137624/apache-camel-configuring-endpoints-using-class-or-bean",No comments found
21405,Improvement,Thomas Diesler,Gaelle Fournier,4.x,None,2024-10-30T11:04:03+0000,1730286243,2025-01-13T12:25:47+0000,2025-01-13T12:25:47+0000,"In Kubernetes plugin, Ingress trait (service exposure) is only available through the generated kubernetes manifest.
To leverage quarkus cloud readyness we should add for quarkus runtime cases the use of : https://quarkus.io/guides/deploying-to-kubernetes#exposing-your-application-in-kubernetes
There is a bug on quarkus kubernetes extension that needs to be fixed before this can be done for non ""Prefix"" type-path route to work : https://github.com/quarkusio/quarkus/issues/43783",No comments found
21404,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-10-30T10:36:13+0000,1730284573,2024-10-30T11:15:14+0000,2024-10-30T11:15:14+0000,https://camel.zulipchat.com/#narrow/channel/352237-camel-jbang/topic/IllegalArgumentException.20for.20files.20without.20extension,No comments found
21403,Bug,Unassigned,Mateusz Poncyliusz,4.8.1,"4.8.2,4.9.0",2024-10-30T09:07:25+0000,1730279245,2024-11-09T13:20:46+0000,2024-11-09T07:51:34+0000,"When I receive an EDI message Camel tries to generate MIC (Message Integrity Code) and calls public static byte[] getContent(HttpEntity entity) in EntityUtils, which then executes entity.writeTo(os) in ApplicationEntity.
In line 67 [see code|https://github.com/apache/camel/blob/camel-4.8.x/components/camel-as2/camel-as2-api/src/main/java/org/apache/camel/component/as2/api/entity/ApplicationEntity.java] , the library incorrectly calculates the message length, which causes it to truncate the content. Here is the relevant line:
In this line, this.ediMessage.getBytes(this.getCharset())
retrieves the message content as a byte array, but this.ediMessage.length() returns the length of the String in characters rather than in bytes. If the ediMessage contains any multi-byte characters (e.g., ""ó""), the length method returns the count in characters, not in bytes, which leads to truncation.
For instance, in UTF-8, a character like ""ó"" uses two bytes, but ediMessage.length() will return 1, not 2. This discrepancy causes write() to only transfer part of the byte array, leading to an incorrect MIC calculation and potential verification issues on the receiving end.
A potential fix is to use:
instead of",No comments found
21402,Improvement,Dmitrii Kriukov,Dmitrii Kriukov,None,4.9.0,2024-10-29T20:12:42+0000,1730232762,2024-11-14T17:55:09+0000,2024-11-14T17:55:09+0000,"My test case was: partially random value in an added header. It's difficult to test the exact value with existing API, so I was thinking about verifying against a regex. This option requires usage of Expressions.",No comments found
21401,Bug,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-10-29T14:12:33+0000,1730211153,2024-10-29T19:57:30+0000,2024-10-29T19:57:21+0000,This can happen if custom beans are using factory-method and has not set a factory-class and uses the type name for that; which leads to ClassCastException as the result of the factory method can be any kind of Object.,No comments found
21400,Bug,Claus Ibsen,Antoine DESSAIGNE,4.7.0,4.10.0,2024-10-29T11:41:46+0000,1730202106,2024-12-13T08:30:04+0000,2024-11-30T16:53:48+0000,"Hello everyone,
I just discovered a StackOverflowError when using reading files. Here's the smallest reprocase I could find.
As mentioned in the example, it only seems to fail if the processor in the aggregation is a DefaultProcessor and not a DefaultAsyncProcessor
It still fails after converting my component to DefaultAsyncProcessor, so it's unrelated.
Can you have a look? Thank you",No comments found
21399,Bug,Unassigned,Bruno Meseguer,4.8.1,"4.8.2,4.9.0",2024-10-29T10:44:10+0000,1730198650,2024-11-26T17:39:10+0000,2024-11-26T17:39:10+0000,"All seems to work well in 4.8.0
Operating the same commands using 4.8.1 fails.
Create a Camel route, for example, with:
Then using the commands below to deploy on OpenShift (tested in Developer Sandbox) run
The execution fails with:",No comments found
21398,New Feature,Unassigned,Claude Mamo,None,4.9.0,2024-10-29T08:54:57+0000,1730192097,2024-12-17T11:04:19+0000,2024-10-30T08:23:33+0000,Migrate the Smooks Data Format from https://github.com/smooks/smooks-camel-cartridge/ to the Apache Camel code base (see https://github.com/smooks/smooks-camel-cartridge/issues/211).,No comments found
21397,Bug,Unassigned,Sven,4.8.1,"4.8.2,4.9.0",2024-10-29T08:39:17+0000,1730191157,2024-10-30T09:54:18+0000,2024-10-30T09:54:18+0000,"2 issues were found when testing this new feature on Windows with SMB shares:
In short: enabling autoCreateStepwise will always fail to create files on Windows environments (SMB or not).",No comments found
21396,New Feature,Zheng Feng,Zheng Feng,None,4.9.0,2024-10-29T07:42:53+0000,1730187773,2024-10-30T08:18:19+0000,2024-10-30T08:18:19+0000,Apache Fury (incubating) is a blazingly-fast multi-language serialization framework powered by JIT (just-in-time compilation) and zero-copy,No comments found
21395,Task,Nicolas Filotto,Nicolas Filotto,4.8.1,"4.8.2,4.9.0",2024-10-28T13:49:46+0000,1730123386,2024-10-30T17:20:39+0000,2024-10-30T17:20:39+0000,"The project camel-debezium-common shares the same package with the other camel-debezium sub-projects, which causes issues on environments like OSGI. The goal of this task is to avoid the split packages issue",No comments found
21394,Bug,Unassigned,anas oufdou,4.8.0,None,2024-10-28T12:50:40+0000,1730119840,2024-10-28T13:03:01+0000,2024-10-28T13:02:30+0000,"Executing camel with camel-jbang docker doesn't work any more (it was working last week for me)
I have the following Error :
xxxxxxxxxxxxx:~$ docker run  --rm apache/camel-jbang:4.8.0 version --verbose
[jbang] [ERROR] *Could not download https://github.com/apache/camel/blob/HEAD/dsl/camel-jbang/camel-jbang-main/dist/CamelJBang.java*
[jbang] Run with --verbose for more details
xxxxxxxxxxxxx:~$ wget https://github.com/apache/camel/blob/HEAD/dsl/camel-jbang/camel-jbang-main/dist/CamelJBang.java
-2024-10-28 13:44:10-  https://github.com/apache/camel/blob/HEAD/dsl/camel-jbang/camel-jbang-main/dist/CamelJBang.java
Resolving github.com (github.com)... 140.82.121.4
Connecting to github.com (github.com)|140.82.121.4|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [text/html]
Saving to: ‘CamelJBang.java’
CamelJBang.java                                                 [ <=>                                                                                                                                      ] 169.39K   919KB/s    in 0.2s
2024-10-28 13:44:11 (919 KB/s) - ‘CamelJBang.java’ saved [173459]
xxxxxxxxxxxxx:~$ cat CamelJBang.java
<!DOCTYPE html>
<html
  lang=""en""
  
  data-color-mode=""auto"" data-light-theme=""light"" data-dark-theme=""dark""
  data-a11y-animated-images=""system"" data-a11y-link-underlines=""true""
  
  >
<head>
    <meta charset=""utf-8"">
  <link rel=""dns-prefetch"" href=""https://github.githubassets.com"">
  <link rel=""dns-prefetch"" href=""https://avatars.githubusercontent.com"">
  <link rel=""dns-prefetch"" href=""https://github-cloud.s3.amazonaws.com"">
  <link rel=""dns-prefetch"" href=""https://user-images.githubusercontent.com/"">
  <link rel=""preconnect"" href=""https://github.githubassets.com"" crossorigin>
  <link rel=""preconnect"" href=""https://avatars.githubusercontent.com"">",No comments found
21393,Dependency upgrade,Unassigned,Federico Mariani,4.9.0,4.9.0,2024-10-28T11:02:25+0000,1730113345,2024-10-30T12:41:18+0000,2024-10-30T12:41:18+0000,"JsonAnySetter is broken in Jackson 2.18, and we have a failing test in camel-salesforce-component, we should upgrade as soon as Jackson 2.18 is released.
fyi jeremyross",No comments found
21392,New Feature,Thomas Diesler,Thomas Diesler,None,4.9.0,2024-10-28T10:29:25+0000,1730111365,2024-11-14T10:52:14+0000,2024-11-14T10:52:14+0000,"K3S is a popular Kubernetes distribution built for IoT & Edge computing.
https://k3s.io",No comments found
21391,New Feature,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-28T09:59:58+0000,1730109598,2024-10-29T17:40:58+0000,2024-10-29T17:40:58+0000,"In the old OSGi blueprint/spring xml via <beans> they had special support for configuring data formats globally in <dataFormats>. This is not in the DSL model of camel-core.
We could considering add this, so its out of the box in xml-io and yaml DSL as well.
However you would then refer to these global dataformats using <custom ref=""xxx""> style such as:",No comments found
21390,Task,Unassigned,Claus Ibsen,None,4.x,2024-10-28T08:28:48+0000,1730104128,2025-01-20T13:20:05+0000,,No description available,No comments found
21389,New Feature,Unassigned,Claus Ibsen,None,4.9.0,2024-10-27T13:32:27+0000,1730035947,2024-10-28T12:06:57+0000,2024-10-28T12:06:57+0000,https://github.com/apache/camel/pull/15911,No comments found
21388,Bug,Unassigned,Dominik Jelinek,"4.8.1,4.9.0",None,2024-10-25T11:31:56+0000,1729855916,2024-10-27T16:17:20+0000,2024-10-27T16:17:01+0000,"Following docs at https://camel.apache.org/manual/camel-jbang-kubernetes.html#_auto_reload_with_dev_option
Consider this command as reproducer
The '--dev' parameter was working as expected for Camel version 4.8.0 in combination with OpenShift cluster (but it was not working for a deployment into eg local Minikube cluster)
Camel 4.8.1, the '--dev' stopped to work and it is failing with same error as when you try with local Minikube (see error below)
interesting is that if I copy failed command from stack-trace above and execute manually, it is working just fine
Camel 4.9.0 (4.9.0-SNAPSHOT), the '--dev' is ""working"", it will automatically spawn logs of running integration, BUT after termination of the process it should also remove deployment automatically, which unfortunately fails with another error (see below)
.. again, that was working fine in Camel 4.8.0",No comments found
21387,Improvement,John Poth,John Poth,4.8.0,4.9.0,2024-10-24T14:48:38+0000,1729781318,2024-11-25T13:34:27+0000,2024-10-28T10:46:48+0000,"Let's add spring-boot-starter-actuator to camel-opentelemetry-starter (as we do for camel-micrometer-starter) which will set up the Otel Tracer. Among other things, this has the added benefit of adding HTTP context propagators by default which is useful. Let's also add 
micrometer-tracing-bridge-otel which is also needed [1]. Thanks !
[1] https://docs.spring.io/spring-boot/reference/actuator/tracing.html",No comments found
21386,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.2,4.9.0",2024-10-24T13:20:07+0000,1729776007,2024-10-28T11:10:28+0000,2024-10-28T11:10:28+0000,No description available,No comments found
21385,Improvement,Andrea Cosentino,Andrea Cosentino,None,None,2024-10-24T12:28:12+0000,1729772892,2024-11-27T11:58:43+0000,2024-11-27T11:58:43+0000,"This is something useful because otherwise the application will fail, because spring datasource will do autoconfiguration.",No comments found
21384,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-10-24T08:34:43+0000,1729758883,2024-11-19T09:40:48+0000,2024-11-19T09:40:48+0000,"I've been testing the Camel-micrometer component with the different runtimes we have. So far, each of the runtime requires a different set of configuration and it exposes the metrics in a different endpoint:
We should understand if it is feasible to harmonize somehow the configuration to be able to spit the metrics to the same endpoint OOTB.",No comments found
21383,Improvement,Christoph Deppisch,Christoph Deppisch,None,4.9.0,2024-10-24T07:17:27+0000,1729754247,2024-10-28T13:34:09+0000,2024-10-28T13:34:09+0000,"The Knative eventing broker may use OIDC (OpenID Connect) as an authorization protocol. Clients need to use the respective tokens to authenticate via Https when connecting to the Knative broker in order to produce events.
OpenID Connect (OIDC) is an identity authentication protocol that works with OAuth 2.0 to standardize the process for authenticating and authorizing users.
Knative eventing supports OIDC access tokens that get injected as part of a SinkBinding resource. The injection is done in the form of a volume mount on the sink binding subject (usually the app deployment). This means the OIDC access token is mounted as a file into the application container so Camel client may read the token and set proper Authorization Http headers on each request.
 
The OIDC tokens may expire and get renewed by Knative eventing. The renewal means that the volume mount is updated with the new token automatically.
In order to refresh the token the Camel Knative client must read the token again. The Knative client options supports the token renewal on a `401 forbidden` response from the Knative broker. Once the client has received the forbidden answer it automatically reloads the token from the volume mount to perform the renewal.
As an alternative to that you may disable the token cache on the client so the token is always read from the volume mount for each request.",No comments found
21382,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.2,4.9.0",2024-10-24T07:12:49+0000,1729753969,2024-10-24T08:21:16+0000,2024-10-24T08:21:16+0000,"A header may be Collection type and we call this code on JsonObject that throws a ClassCastException
 
String value = jo.getString(""value"");",No comments found
21381,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.2,4.9.0",2024-10-24T05:54:51+0000,1729749291,2024-10-28T11:10:11+0000,2024-10-28T11:10:11+0000,,No comments found
21380,Improvement,Jeremy Ross,Jeremy Ross,4.8.0,"4.8.2,4.9.0",2024-10-23T17:10:21+0000,1729703421,2024-10-24T14:27:56+0000,2024-10-23T20:01:06+0000,By default the underlying grpc implementation automatically uses any detected proxy server. Need the ability to override this and not use a proxy.,No comments found
21379,Bug,Jeremy Ross,Jeremy Ross,4.8.0,"4.8.2,4.9.0",2024-10-23T16:33:32+0000,1729701212,2024-10-23T20:01:01+0000,2024-10-23T20:01:01+0000,"Currently enters a tight, infinite loop of reconnect attempts.",No comments found
21378,Improvement,John Poth,John Poth,4.8.0,4.9.0,2024-10-23T13:33:38+0000,1729690418,2024-10-24T07:48:09+0000,2024-10-24T07:48:09+0000,"When camel-opentelemetry-starter is on the classpath, camel-opentelemetry should be setup by default.",No comments found
21377,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-23T12:31:07+0000,1729686667,2024-11-13T06:43:37+0000,2024-11-13T06:43:37+0000,You cannot automatic have picolli output the default values for each option. We need to add this via some special token in the description text for each option.,No comments found
21376,Bug,Unassigned,Grzegorz Rozanski,4.8.0,"4.8.2,4.9.0",2024-10-23T09:54:25+0000,1729677265,2024-10-27T11:46:43+0000,2024-10-27T11:46:43+0000,"I found a case when NullPointerException occurs in 
UseOriginalAggregationStrategy's aggregate method.
 
I have this route configuration:
and in the DIRECT_ROUTE2 there is:
When the zip file is invalid there's exception handling in UseOriginalAggregationStrategy::aggregate method:
I checked javadoc about this aggregate method it says that:
Params:
oldExchange - the oldest exchange (is null on first aggregation as we only have the new exchange)
 
and I think this is what happens in my case when I get NullPointerException in line 78 (oldExchange is null):
When I create my own aggregation strategy based on UseOriginalAggregationStrategy and modify this `else` part everything works properly:
I see that similar null check already exists in checkCaughtException method.
 
 The full stack trace can be found as attachment to this ticket.
This error does not happen on Camel 4.4.0.",No comments found
21375,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-23T09:35:20+0000,1729676120,2024-10-23T10:25:14+0000,2024-10-23T10:25:14+0000,No description available,No comments found
21374,Bug,Claus Ibsen,Bruno Meseguer,"4.8.1,4.9.0","4.8.2,4.9.0",2024-10-23T08:54:01+0000,1729673641,2024-11-28T18:59:15+0000,2024-10-23T11:19:13+0000,"Running a Pipe using local kamelets seems to work well using the command:
Then, the export command seems not able to find the kamelets when running the following command:
Find attached the source files used to reproduce the problem.
Read Environment details (top) to read how to reproduce the problem.",No comments found
21373,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-22T13:03:58+0000,1729602238,2024-10-23T07:09:25+0000,2024-10-23T07:09:25+0000,No description available,No comments found
21372,Bug,Claus Ibsen,Salvatore Mongiardo,4.8.0,"4.8.2,4.9.0",2024-10-22T12:27:06+0000,1729600026,2024-10-23T14:30:41+0000,2024-10-23T14:30:41+0000,"The export/run command doesn't work when a ""custom"" camel-version is set:
camel config set deps=org.apache.camel.springboot:camel-timer-starter,camel:management,camel:cli-connector
camel config set runtime=spring-boot
camel config set gav=com.foo:acme:1.0-SNAPSHOT
camel config set camel-version=4.8.x-y
camel config set additional-properties=openshift-maven-plugin-version=1.17.0.y
camel config set camel-spring-boot-version=4.8.0.y
camel init test.yaml --directory=app
Executing:
This exception is raised.
The same happens with:
If we unset the camel-version:
camel config unset camel-version
then
works fine.
I guess the issue could be the way how the method Run.runCustomCamelVersion is called, basically loosing every previous relationship with the spec object",No comments found
21371,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-10-22T11:33:29+0000,1729596809,2024-11-14T15:52:45+0000,2024-10-22T11:56:39+0000,We have BufferedReader but we need for plain Reader,No comments found
21370,Task,Unassigned,Aurélien Pupier,4.x,None,2024-10-22T09:25:12+0000,1729589112,2025-01-08T14:43:46+0000,2025-01-08T14:43:46+0000,"it regularly fails build on CI (failed 2 out the last 5 builds). it seems somethign which happens regularly since several years https://camel.zulipchat.com/#narrow/channel/364655-camel-core-dev/topic/Build.20failure.20Could.20not.20parse.20metadata.20on.20Jenkins.20CI/near/477219535
It sounds an issue with the infrastructure.
Are there ways to access the mentioned files on Jenkins to check their content? It might help on investigation to detect what is the root issue.
i suspect that one file was badly downloaded and contains completely unrelated content. This could help report back to correct infra problem.",No comments found
21369,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,"4.8.2,4.9.0",2024-10-22T09:16:16+0000,1729588576,2024-11-27T09:12:04+0000,2024-11-27T09:11:56+0000,"In Kubernetes plugin, Route trait (service exposure) are only available through the generated openshift manifest.
To leverage quarkus cloud readyness we should add for quarkus runtime cases the use of  openshift: https://quarkus.io/guides/deploying-to-openshift#exposing_routes",No comments found
21368,Bug,Unassigned,Claude Mamo,"4.8.0,4.9.0",4.x,2024-10-21T12:07:47+0000,1729512467,2025-01-06T14:03:16+0000,,"When generating REST routes from the attached OpenAPI spec using Camel JBang, I get the following error:
In version 4.5.0, I was able to generate the routes but something broke in 4.8.0. The command I'm running is: jbang ""-Dcamel.jbang.version=4.8.0"" camel@apache/camel generate rest --input us-core-server.openapi.json --output api.yaml . I've observed that the command works when there's a single path in the spec.",No comments found
21367,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-21T11:52:59+0000,1729511579,2024-12-17T11:04:28+0000,2024-10-22T07:41:06+0000,They did breaking API changes from RC4 to 2.0.1.,No comments found
21366,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-10-20T07:16:08+0000,1729408568,2024-10-28T09:44:49+0000,2024-10-28T09:44:49+0000,No description available,No comments found
21365,Bug,Gaelle Fournier,Christoph Deppisch,4.8.0,4.x,2024-10-18T09:22:40+0000,1729243360,2025-02-04T09:05:11+0000,2025-02-04T09:05:11+0000,"When using cluster-type=openshift for the Camel JBang Kubernetes plugin export the resulting Kubernetes manifest is missing some information that causes apps to fail on OpenShift.
We suppose that this is due to a slightly different behavior of the Quarkus Kubernetes extension compared to the Quarkus OpenShift extension when it comes to reading and merging the generated Kubernetes manifest pieces.
This is presumably the root cause for several issues with the Camel JBang Kubernetes plugin when targeting OpenShift as a cluster.
Let's make sure that the Camel JBang Kubernetes plugin generates the proper Kubernetes manifest so that it works with the OpenShift Quarkus extension just like it does with the Kubernetes Quarkus extension.",No comments found
21364,Task,Unassigned,Rhuan Rocha,None,None,2024-10-18T02:55:26+0000,1729220126,2024-10-18T05:57:38+0000,2024-10-18T05:57:38+0000,I'm trying to open an issue to camel-whatsapp component but it does not appear as an option.,No comments found
21363,Bug,Unassigned,Roberto Viani Junior,None,"4.8.1,4.9.0",2024-10-18T02:50:41+0000,1729219841,2024-10-19T07:51:22+0000,2024-10-19T07:51:22+0000,"There was no registered Camel WhatsApp component in the list of components for this Jira, so I went ahead and created it in the camel-core module
According to the WhatsApp Cloud API documentation, the message_status field is expected in the successful response. However, the MessageResponse object fails to deserialize this field because it is not currently mapped in the Message class. This results in an UnrecognizedPropertyException. The Message class needs to be updated to include this field to ensure proper deserialization. This error occurs while sending a template message
Error description:",No comments found
21362,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.1,4.9.0",2024-10-17T14:44:16+0000,1729176256,2024-10-19T07:47:58+0000,2024-10-19T07:47:58+0000,The k8s plugin uses the camel integration label instead of the standard `app.kubernetes.io/name`,No comments found
21361,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.2,4.9.0",2024-10-17T13:35:05+0000,1729172105,2024-11-26T14:14:10+0000,2024-10-23T08:46:27+0000,"This happens with the latest io.fabric8:kubernetes-client-6.13.4
https://mvnrepository.com/artifact/io.fabric8/kubernetes-client/6.13.4",No comments found
21360,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-17T11:05:10+0000,1729163110,2024-10-17T13:25:08+0000,2024-10-17T13:25:08+0000,No description available,No comments found
21359,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-10-17T10:25:43+0000,1729160743,2025-01-23T10:40:47+0000,2025-01-23T10:40:47+0000,We support this in camel-main/jbang and CEQ. But this could be missing in CSB,No comments found
21358,Improvement,Christoph Deppisch,Christoph Deppisch,None,4.9.0,2024-10-17T07:52:14+0000,1729151534,2024-10-24T07:14:43+0000,2024-10-24T07:14:43+0000,"Knative brokers may use TLS encrypted transport options as described in https://knative.dev/docs/eventing/features/transport-encryption/#overview
This means that event producers need to use proper SSL authentication to connect to Https Knative broker endpoints with cluster-internal CA certificates.
 
Users need configuration options to enable SSL options on the Knative Http client that connects with the Knative broker endpoint.
 
System property and environment variable based configuration, something like",No comments found
21357,Improvement,James Netherton,James Netherton,None,"4.8.1,4.9.0",2024-10-16T15:46:05+0000,1729093565,2024-10-16T18:37:12+0000,2024-10-16T18:37:12+0000,"Relates to this Camel Quarkus issue:
https://github.com/apache/camel-quarkus/issues/6651
In CQ, there's already an existing scope where most JQ functions are already resolved at build time. So it'd be better for Camel to reuse it and then augment with its own custom functions.",No comments found
21356,Task,Unassigned,Aurélien Pupier,4.8.0,4.x,2024-10-16T14:49:48+0000,1729090188,2024-10-23T05:58:43+0000,,"currently the doclint is deactivated, which means that there are some wrong or badly displayed Javadoc in several places.
To be able to reativate it (here https://github.com/apache/camel/blob/0c63d15314d90e03da251214c7f9e12bf0f938dd/pom.xml#L714 and in some other places), we need to fix these Javadoc issues",No comments found
21355,Bug,Otavio Rodolfo Piske,Bruno Meseguer,4.8.0,"4.8.2,4.9.0",2024-10-16T08:24:54+0000,1729067094,2024-11-04T12:02:55+0000,2024-11-04T12:02:55+0000,"The Tools component is designed to provide functions to the LLM. However the LLM may decide not to invoke any of the given tools.
In that scenario, the LLM replies directly instead of requesting the execution of a tool/function. The Camel Tools components seems unable to handle such use case and throws an exception.",No comments found
21354,Bug,Unassigned,John Yin,4.4.3,4.8.0,2024-10-15T19:09:29+0000,1729019369,2024-11-29T17:33:44+0000,2024-11-29T17:33:44+0000,Any custom setting of camel.main.shutdown-timeout is ignored when running 4.4.3.  The default 45s is used.  But it works correctly in 4.8.0.,No comments found
21353,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-15T15:58:17+0000,1729007897,2024-10-19T09:23:06+0000,2024-10-19T09:22:56+0000,"We should have some kind of API for end users to plugin custom code, and also have out of the box easy configurations to set some condition before Camel continue booting. This should happen very early.
For example to wait for a ENV variable to exist or match a value. Or to wait for a file to exist, etc.
And there should be a timeout value and fail if not meet.
This should be configurable something easily in camel.main.xxx,  maybe such as
camel.main.boot-condition.environment-variable=FOO_BAR
camel.main.boot-condition-timeout=10000",No comments found
21352,Improvement,Jono Morris,Claus Ibsen,None,4.10.0,2024-10-15T15:35:51+0000,1729006551,2025-01-06T12:17:20+0000,2025-01-06T12:17:20+0000,Maybe we could let camel-smb extend camel-file (like camel-ftp / camel-jsch) and then have a lot more file related features out of the box.,No comments found
21351,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-15T14:46:08+0000,1729003568,2024-10-16T07:08:55+0000,2024-10-16T07:08:55+0000,We need a header filter strategy that does not filter anything that can be used for trouble shooting or testing where you do not want Camel to drop some specific headers.,No comments found
21350,Task,Marco Carletti,Claus Ibsen,None,4.10.0,2024-10-15T11:22:29+0000,1728991349,2024-12-02T06:52:39+0000,2024-12-02T06:52:39+0000,"We have old versions in this pom.xml (see properties)
https://github.com/apache/camel-spring-boot-examples/blob/main/pom.xml",No comments found
21349,Improvement,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-10-15T11:12:18+0000,1728990738,2024-10-16T10:11:49+0000,2024-10-16T10:11:49+0000,"Currently, we only support ...
This should work for OpenShift as well. Perhaps like this ...",No comments found
21348,Improvement,Marco Carletti,Marco Carletti,None,4.9.0,2024-10-15T10:15:47+0000,1728987347,2024-10-15T12:43:13+0000,2024-10-15T12:43:13+0000,Add an example to explain how to monitor a Camel on Spring Boot application with Jolokia and Hawtio,No comments found
21347,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-15T05:59:12+0000,1728971952,2024-10-15T11:19:24+0000,2024-10-15T11:19:24+0000,"See the S3HeadBucketIT
We can add an option you can send with headBucket operation to return a true or false value, then you can use that more easily in routing. As you can store the result in a variable.",No comments found
21346,Test,Unassigned,Aurélien Pupier,4.9.0,4.10.0,2024-10-14T12:55:07+0000,1728910507,2025-01-08T14:46:22+0000,2025-01-08T14:46:22+0000,since build 460,No comments found
21345,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.1,4.9.0",2024-10-14T10:43:04+0000,1728902584,2024-10-14T13:43:50+0000,2024-10-14T13:43:50+0000,`jbang camel k8s ... --cluster-type openshift` generates duplicate `deployment` sections in manifest,No comments found
21344,Dependency upgrade,Adriano Machado,Adriano Machado,"4.4.0,4.8.0","4.4.4,4.8.1,4.9.0",2024-10-13T13:21:43+0000,1728825703,2024-10-14T05:40:32+0000,2024-10-14T05:40:32+0000,"This is a follow-up of CAMEL-21202, by updating the OpenTelemetry dependencies and replacing the classes added on the original issue with classes from the OpenTelemetry SDK.",No comments found
21343,Task,Nicolas Filotto,Antoine DESSAIGNE,4.7.0,"4.8.1,4.9.0",2024-10-11T13:11:20+0000,1728652280,2024-10-11T16:44:53+0000,2024-10-11T16:44:53+0000,"Hello,
Since this commit related to CAMEL-20934, it's no longer possible to recreate camel-vm because the prepareExchange method no longer returns an Exchange.
Previously it was possible to write code like this one:
Would it be possible to add back the ability to return the Exchange in the prepareExchange method?
Thank you",No comments found
21342,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-11T11:50:21+0000,1728647421,2024-10-11T14:13:26+0000,2024-10-11T14:13:26+0000,To avoid this dependency we can make the openapi generator optional and dynamic when its really in use. This reduces dependency tree.,No comments found
21341,Bug,Unassigned,carsten madsen,4.8.0,None,2024-10-11T09:26:26+0000,1728638786,2024-10-16T10:29:00+0000,2024-10-16T09:19:30+0000,"The following will make spring boot 3.3.4/camel 4.8.0 report this cycle
camel
↑ ↓
org.apache.camel.impl.health.DefaultHealthCheckRegistry
Content of XmlConfigCircular.xml:
Is this a bug or a faulty configuration issue?
Using spring.main.allow-circular-references=true does allow my application to run.
Looks like CAMEL-17220",No comments found
21340,Bug,Claus Ibsen,Olivier Jacquemart,4.8.0,"4.8.1,4.9.0",2024-10-11T07:37:37+0000,1728632257,2024-10-15T15:48:51+0000,2024-10-14T07:56:13+0000,"If a Camel 4.8.0 using Spring Boot is deployed in a standalone Tomcat with JNDI enabled an exception is thrown at startup:
According to Spring boot #35091, one solution is to add a spring.properties file in the src/main/resoures folder with the content:
Is there any other workaround solution?
The problem seems to come from the ObjectMapper field from the JsonValidatorComponentAutoConfiguration configuration.
Here is a repo to reproduce the problem: camel-reproducer, if it can help.",No comments found
21339,Bug,Claus Ibsen,Olivier Jacquemart,4.8.0,"4.8.1,4.9.0",2024-10-11T07:11:53+0000,1728630713,2024-10-14T07:08:53+0000,2024-10-12T08:14:38+0000,"If you enable the client request validation at a global level, and have a GET rest endpoint, there is no need for a body validation.
The problem is if the client sends the Content-type aplication/json. The Content-Type is not needed tbut I got the issue because a client sends this header all the time and I can't change it.
I faced the issue while upgrading an application from 3.20.6 to 4.8.0. I
Here are curl examples:
In the problematic case, the DefaultRestClientRequestValidator will try to deserialize the json against an empty string and will fail because it's not a valid json.",No comments found
21338,Task,Claus Ibsen,Claus Ibsen,4.9.0,4.9.0,2024-10-10T15:45:18+0000,1728575118,2024-11-28T09:54:36+0000,2024-11-28T08:52:09+0000,"We see this when running jbang locally, where it says 2.3 sec to load Java DSL, that should be faster as its local JAR",No comments found
21337,Bug,Claus Ibsen,Tomas Veskrna,4.8.0,"4.8.1,4.9.0",2024-10-10T09:27:10+0000,1728552430,2024-10-10T13:25:35+0000,2024-10-10T13:25:35+0000,"Camel CLI use default group-id.
Steps to reproduce:
Have jbang and camel cli installed. Then
Similar issue is reported here: https://issues.apache.org/jira/browse/CAMEL-20816. Export on other hand works fine (it uses group-id as expected)",No comments found
21336,Improvement,Christoph Deppisch,Christoph Deppisch,4.8.0,"4.8.1,4.9.0",2024-10-10T09:17:36+0000,1728551856,2024-10-11T14:12:24+0000,2024-10-11T14:12:24+0000,"Kamelets may be configured via environment variables following the property component syntax like CAMEL_KAMELET_AWS_S3_SOURCE_BUCKET_NAME_OR_ARN=myArn
Apparently the Kamelet property validation for required parameters raises exceptions when initializing the Kamelet. This is because the config properties configured via environment variables are not considered in the validation process.
The raised exception looks like this:
As a workaround users need to set an empty Kamelet property value e.g.g via application.properties to pass the Kamelet validation and then overwrite the value with the environment variable.",No comments found
21335,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-09T19:32:11+0000,1728502331,2024-10-10T16:02:16+0000,2024-10-10T16:02:16+0000,We should a summary when stopping routes. We should add this for starting routes as well.,No comments found
21334,Task,Andrea Cosentino,Anushka Juli,None,4.9.0,2024-10-09T09:01:32+0000,1728464492,2024-10-17T06:35:34+0000,2024-10-17T06:35:34+0000,,No comments found
21333,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-09T08:25:16+0000,1728462316,2024-10-09T12:44:01+0000,2024-10-09T10:40:51+0000,Today users need to use * to remove everything. We should make it default.,No comments found
21332,Test,Unassigned,Aurélien Pupier,4.9.0,4.9.0,2024-10-08T12:40:51+0000,1728391251,2024-10-09T09:31:05+0000,2024-10-09T09:31:05+0000,"they failed 7 times in a row (but we already no more hae the changeset on the CI)
they all have a connection refused like:",No comments found
21331,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.9.0,2024-10-08T08:27:46+0000,1728376066,2024-10-21T05:18:08+0000,2024-10-21T05:18:08+0000,"The --trait-profile command parameter is used to select some default values for the kubernetes manifest.
It contains some issues:
It needs to be removed as a command parameter and the code using it adapted (especially knative code).",No comments found
21330,New Feature,Andrea Cosentino,Lukas Lowinger,None,4.9.0,2024-10-08T08:12:12+0000,1728375132,2024-10-23T10:45:00+0000,2024-10-23T10:26:30+0000,"To make Localstack work we need to set correct endpointOverride which is done in the common aws client used in Camel. The problem is PropertiesFunction doesn't provide such option.
Just for reference, here is code which sets it in Camel Quarkus project.",No comments found
21329,Bug,Claus Ibsen,Claus Ibsen,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-10-08T07:31:48+0000,1728372708,2024-10-08T08:57:45+0000,2024-10-08T08:57:45+0000,"We should backport this commit to LTS branches
https://github.com/apache/camel/commit/469f4229e2ba2920d14af5304b64965bc5a9ee20",No comments found
21328,Bug,Claus Ibsen,RAVI,4.8.0,"4.8.1,4.9.0",2024-10-07T17:39:58+0000,1728322798,2024-10-08T14:06:16+0000,2024-10-08T13:55:55+0000,"Hi Team,
I currently don't have a workaround for this issue and would appreciate your insights.
In my AS2 receiver application, which uses the Camel-AS2 dependency, we receive messages with micalg=sha-256 from the sender. However verification at sender is failing though the latest 4.8.0 Camel-AS2 code is referring all possible algorithms which were not in previous versions, as shown in the attached files.
Is there a need to add another entry in constants file with sha-256 ( - in between)
String SHA_256_AS2_ALGORITHM_NAME = ""sha-256"";",No comments found
21327,Improvement,Unassigned,RAVI,4.5.0,4.x,2024-10-07T14:57:02+0000,1728313022,2025-01-09T09:19:53+0000,,"Hi Team,
We are working on a POC using the Camel-AS2 project (version 4.5.0) to establish communication with OpenText/Boomi, as both tools utilize the AS2 protocol. Our goal is to eventually extend this setup for communication with trading partners.
In our scenario, we have an application acting as a Camel-AS2 receiver that listens for incoming messages and uses Camel-AS2 for decryption, verification, and MDN handling. On the other side, Boomi/OpenText acts as the AS2 sender.
When our Camel-AS2 receiver processes incoming messages, it successfully decrypts them but encounters a failure during verification with the error: ""message-digest attribute value does not match the calculated value."" After debugging the code, we observed that the ""writeTo"" method in the ApplicationEntity class utilizes the CanonicalOutputStream, which forces CRLF line endings as defined here:
 
java
Copy code
{{static
}}
While this works fine for messages terminated with CRLF from OpenText, we encounter digest calculation errors when handling LF-terminated messages. After adjusting the code to accommodate both CRLF and LF line endings, the issue was resolved, and we can now process both types of messages successfully.
However, we would prefer not to customize the Camel-AS2 code. Could you provide insights or suggest an alternative approach? We’ve noticed that the same line-ending standardization exists in the latest version within the CanonicalOutputStream class.
Thank you for your help.",No comments found
21326,Improvement,Thomas Diesler,Claus Ibsen,None,4.9.0,2024-10-07T13:14:44+0000,1728306884,2024-10-23T09:18:43+0000,2024-10-23T09:18:43+0000,"When you run with kubernetes then the run command may take some time to export, build and run and whatelse happens. On a slow box it may take 2 mins to build and deploy and image due to downloading everything scratch from the internet.
We should have a --verbose flag that details more what happens.
And then use that to see if any of that information should also be shown by default without --verbose",No comments found
21325,Improvement,Thomas Diesler,Claus Ibsen,None,4.10.0,2024-10-07T13:10:07+0000,1728306607,2024-12-04T12:14:35+0000,2024-12-04T12:14:35+0000,"camel kubernetes run, stores temp data in .camel-jbang-run/NNNNNNN folder where NNNNN is some random numbers.
We should cleanup old folders when they are not in use anymore",No comments found
21324,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-07T09:35:12+0000,1728293712,2024-10-07T13:24:35+0000,2024-10-07T13:24:35+0000,"This is true for both the approach, the cloud trail one and the eventbridge one.",No comments found
21323,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-07T09:31:35+0000,1728293495,2024-10-07T11:54:25+0000,2024-10-07T11:54:25+0000,No description available,No comments found
21322,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-06T08:12:21+0000,1728202341,2024-10-06T16:38:01+0000,2024-10-06T16:38:01+0000,It would be good to have a specific event for routes being restarted by supervised route controller which happens on startup and a route cannot start.,No comments found
21321,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-10-05T08:14:41+0000,1728116081,2024-10-05T08:17:10+0000,2024-10-05T08:17:10+0000,So you can use underscore in the long names such as:,No comments found
21320,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-10-04T16:30:56+0000,1728059456,2024-10-05T08:15:12+0000,2024-10-05T06:12:16+0000,"ENV variables should be able to configure camel.server and some other configurations on bootstrap. It may be a bit chicken and egg where some are initialized early vs having ENV able to override configuration.
This ticket is to check out the situation",No comments found
21319,Bug,Unassigned,Simon Alexander,4.4.1,None,2024-10-04T15:44:59+0000,1728056699,2024-10-08T08:20:38+0000,2024-10-07T17:46:56+0000,"Say I have two routes in a RouteBuilder:
(in practice you would populate your message body - and read from an MQ Queue or whatever)
When I start the application up, if either route can't connect to its producer, then the application will shut down - fine.
SupervisingRouteController (See Docs) is intended to overcome this limitation - ""This controller is able to retry starting failing routes"".
So I then configure my application.yaml to use this:
However, if the first SMS-C is not running, the application won't start! It just shuts down after an attempt to start the route.
Some digging showed me that the ""warmup"" that the camel context does starts the processors (i.e. calling startup in SmppProducer.java to open the connection to the SMS-C) before the SupervisingRouteController kicks in and takes over control of the route.
In my mind, this shouldn't happen. If the Producer can't connect, it should either retry until it can (or at least that should be a configurable option); or the SRC should be able to take control (by not starting the endpoint on warmup, but rather on route startup).
Additionally, and weirdly, with my example above, if the second SMS-C (on port 2776) is down, but the one on port 2775 is up, then the application behaves exactly as I would expect – the SRC takes over and retries the second route until the connection is available again. It's almost like Camel is only warming up the first route? But I'm not 100% sure on that point.
Anyway, the DefaultSupervisingRouteController code is working as intended - it only kicks in after warmup. But the camel-smpp code isn't allowing it to do its job because the warmup kills the application too soon.",No comments found
21318,Bug,Federico Mariani,Federico Mariani,4.8.0,"4.8.1,4.9.0",2024-10-04T09:46:07+0000,1728035167,2024-10-04T12:33:24+0000,2024-10-04T12:33:24+0000,"The actual implementation of camel-platform-http-starter is not working as expected, in particular, when using undertow for example, after a couple of request the following exception is thrown:
The route to reproduce this issue is the following, a really trivial one:
Analyzing the stacktrace you can notice that we are mixing Async execution via CompletableFuture and non-Async Spring Boot code, therefore a single request is executed on multiple threads not handled by the underlying server or spring boot, that causes the concurrent modification exception.",No comments found
21317,Task,Gaelle Fournier,Gaelle Fournier,"4.8.0,4.x","4.8.1,4.x",2024-10-04T07:54:40+0000,1728028480,2024-10-07T17:46:43+0000,2024-10-07T17:46:43+0000,"This is a follow up from this fix : https://github.com/apache/camel/pull/15450.
The behavior of route (the openshift resource) should be the same as ingress.
The documentation needs to be updated.",No comments found
21316,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-10-04T07:27:00+0000,1728026820,2024-10-04T11:40:20+0000,2024-10-04T11:40:20+0000,When using secret then export will not include camel-kubernetes. This is likely the same for other property placeholder functions / vaults,No comments found
21315,Improvement,Claus Ibsen,Shawn Fu,4.8.0,4.9.0,2024-10-03T19:54:03+0000,1727985243,2024-10-07T10:18:13+0000,2024-10-07T10:18:13+0000,"Most of the route builder configurations allow multiple ToDefinitions, e.g.:
But the Rest DSL only supports the last defined ""to"" component, any other ""to"" components are overwritten silently by Camel.
Is it possible to add a mechanism in the Rest component to let the user know only the last ""to"" will be in use? Like in the org.apache.camel.model.rest.VerbDefinition#setTo method can an Assert being added to make sure this.to is null before the assignment?",No comments found
21314,Task,Andrea Cosentino,Aurélien Pupier,4.8.0,4.x,2024-10-03T14:10:03+0000,1727964603,2024-10-31T07:59:31+0000,,"it is currently not possible. There is this test in error:
Tried with localstack/localstack:3.7.0 and localstack/localstack:3.7.2
to investigate if it is just a matter of test update or there is a real breakage with latest version of AWS",No comments found
21313,Test,Unassigned,Otavio Rodolfo Piske,4.9.0,None,2024-10-03T13:35:49+0000,1727962549,2024-10-03T13:41:41+0000,,"The tests do too much. Ideally, each test should test one thing and only one.
The actual test code should NOT:
1. Setup the environment, routes or the test itself
2. Manage the context lifecycle (unless the context lifecycle is primarily relevant to the test itself)
3. Should not isolate the test in an anonymous code block
Ideally, the test should do one thing and one thing only: assert that the condition under test pass or fail. Everything else is either setup, cleanup or management and should not be in the test method.",No comments found
21312,Dependency upgrade,Andrea Cosentino,Claus Ibsen,None,4.9.0,2024-10-03T11:47:17+0000,1727956037,2024-10-04T10:23:45+0000,2024-10-04T10:23:45+0000,No description available,No comments found
21311,Improvement,Andrea Cosentino,Mikael Koskinen,4.8.0,4.9.0,2024-10-03T08:49:59+0000,1727945399,2024-10-08T09:53:44+0000,2024-10-08T09:53:44+0000,"The current code in NatsConfiguration.java adds the nats:// -prefix automatically to the server connection string:
String prefix = ""nats://"";
This causes issues, because NATS supports other protocols like Websockets, where the prefix is ws:// or wss:// instead of nats://
Looking at the examples provided by NATS, the prefix is something that the user of the NATS should provide as it defines the protocol between the client and the server. For example: https://natsbyexample.com/examples/messaging/pub-sub/java
I was wondering if the auto-prefixing could be removed but then that would be a breaking change.
Maybe a new configuration parameter could be added for defining the prefix (the protocol) and that could default to nats:// like currently?",No comments found
21310,Dependency upgrade,Radovan Netuka,Claus Ibsen,None,4.9.0,2024-10-03T07:12:09+0000,1727939529,2024-10-22T05:23:52+0000,2024-10-22T05:23:52+0000,"There is a new feature in jackson to better support 4-byte unicode chars uses by asian languages.
We should add information about this option and make it easier to configure.",No comments found
21309,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-10-03T05:21:29+0000,1727932889,2024-10-03T11:23:02+0000,2024-10-03T11:23:02+0000,"Due to CAMEL-21302 then camel-cxf does not work out of the box with camel-opentelemetry / opentelemtry, when using CXF async client mode.
So we should automatic run the synchronous client (like we do for transactions).",No comments found
21308,Task,Unassigned,Claus Ibsen,None,None,2024-10-03T05:12:48+0000,1727932368,2024-12-21T08:52:44+0000,2024-12-21T08:52:44+0000,"[ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 10.02 s <<< FAILURE! – in sample.camel.MyCamelApplicationTest
[ERROR] sample.camel.MyCamelApplicationTest.shouldPushConvertedHl7toFhir – Time elapsed: 10.01 s <<< FAILURE!
java.lang.AssertionError: mock://fhir:transaction/withResources Received message count. Expected: <1> but was: <0>
at org.apache.camel.component.mock.MockEndpoint.fail(MockEndpoint.java:2015)
at org.apache.camel.component.mock.MockEndpoint.assertEquals(MockEndpoint.java:1950)
at org.apache.camel.component.mock.MockEndpoint.doAssertIsSatisfied(MockEndpoint.java:453)
at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:431)
at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:421)
at sample.camel.MyCamelApplicationTest.shouldPushConvertedHl7toFhir(MyCamelApplicationTest.java:46)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
 
[INFO]
[INFO] Results:
[INFO]
[ERROR] Failures:
[ERROR] sample.camel.MyCamelApplicationTest.shouldPushConvertedHl7toFhir
[ERROR]   Run 1: MyCamelApplicationTest.shouldPushConvertedHl7toFhir:46 mock://fhir:transaction/withResources Received message count. Expected: <1> but was: <0>
[ERROR]   Run 2: MyCamelApplicationTest.shouldPushConvertedHl7toFhir:46 mock://fhir:transaction/withResources Received message count. Expected: <1> but was: <0>
[ERROR]   Run 3: MyCamelApplicationTest.shouldPushConvertedHl7toFhir:46 mock://fhir:transaction/withResources Received message count. Expected: <1> but was: <0>",No comments found
21307,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-10-02T17:52:06+0000,1727891526,2024-10-03T17:05:42+0000,2024-10-03T17:05:42+0000,The component should provide the file name using the Exchange.FILE_NAME header.,No comments found
21306,Bug,Claus Ibsen,Claus Ibsen,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-10-02T17:47:32+0000,1727891252,2024-10-03T04:56:45+0000,2024-10-03T04:56:45+0000,https://camel.zulipchat.com/#narrow/stream/257298-camel/topic/jsonpath.20to.20null.20value.20throws.20exception,No comments found
21305,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-10-02T16:24:31+0000,1727886271,2024-10-03T17:02:13+0000,2024-10-03T17:02:13+0000,"When using the stream cache, converting the byte array to a document causes a silent failure due to missing converter from InputStream.",No comments found
21304,Improvement,Thomas Diesler,Aurélien Pupier,4.8.0,4.9.0,2024-10-02T15:45:21+0000,1727883921,2025-01-02T09:10:17+0000,2025-01-02T09:10:17+0000,"leads to have this message:
Tried also with cluster-type openshift
it would be better if the AnsiLooger Stream is correctly configured out of the box",No comments found
21303,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-10-02T09:49:27+0000,1727862567,2024-10-02T12:36:30+0000,2024-10-02T12:36:22+0000,"When closing streams then it may already be closed or something. We should just log this at DEBUG level by default as WARN is too noisy.
And you may end up with double loggings and whatnot
2024-10-02T11:46:19.545+02:00  WARN 44994 — [onPool-worker-1] org.apache.camel.util.IOHelper           : Cannot close. Reason: Response not usable after response errors.
 
org.springframework.web.context.request.async.AsyncRequestNotUsableException: Response not usable after response errors.
at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleHttpServletResponse.obtainLockOrRaiseException(StandardServletAsyncWebRequest.java:335) ~[spring-web-6.1.13.jar:6.1.13]
at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleServletOutputStream.close(StandardServletAsyncWebRequest.java:424) ~[spring-web-6.1.13.jar:6.1.13]
at org.apache.camel.util.IOHelper.close(IOHelper.java:421) ~[camel-util-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.util.IOHelper.close(IOHelper.java:481) ~[camel-util-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.util.IOHelper.close(IOHelper.java:491) ~[camel-util-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.http.common.DefaultHttpBinding.copyStream(DefaultHttpBinding.java:489) ~[camel-http-common-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.http.common.DefaultHttpBinding.doWriteDirectResponse(DefaultHttpBinding.java:552) ~[camel-http-common-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.http.common.DefaultHttpBinding.doWriteResponse(DefaultHttpBinding.java:451) ~[camel-http-common-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.http.common.DefaultHttpBinding.writeResponse(DefaultHttpBinding.java:371) ~[camel-http-common-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpConsumer.afterProcess(SpringBootPlatformHttpConsumer.java:135) ~[camel-platform-http-starter-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpConsumer.handleService(SpringBootPlatformHttpConsumer.java:124) ~[camel-platform-http-starter-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpConsumer.lambda$service$0(SpringBootPlatformHttpConsumer.java:75) ~[camel-platform-http-starter-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796) ~[na:na]
at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373) ~[na:na]
at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182) ~[na:na]
at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655) ~[na:na]
at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622) ~[na:na]
at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165) ~[na:na]",No comments found
21302,Bug,Freeman Yue Fang,John Poth,None,"4.4.5,4.8.2,4.9.0",2024-10-02T09:08:51+0000,1727860131,2024-10-24T15:46:03+0000,2024-10-24T15:45:43+0000,"There seems to be a Otel context leak when using a CXF producer in async mode. This causes different requests to have the same traceId. As a workaround, setting synchronous=true on the CXF producer resolves the issue. Here's a reproducer:
I've added the complete unit here: https://github.com/apache/camel/blob/7d83a62b8e442dc9ac6fd79b153192add940301e/components/camel-opentelemetry/src/test/java/org/apache/camel/opentelemetry/AsyncCxfTest.java",No comments found
21301,Bug,Pasquale Congiusti,Pasquale Congiusti,4.8.0,"4.8.1,4.9.0",2024-10-02T08:55:13+0000,1727859313,2024-10-03T13:03:23+0000,2024-10-03T11:56:49+0000,"Camel Jbang version:
Camel Main OK:
Camel Quarkus KO:
Camel Spring Boot KO:",No comments found
21300,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-10-02T07:54:51+0000,1727855691,2024-10-02T12:36:30+0000,2024-10-02T11:09:21+0000,"When Camel route is done and platform-http consumer (vertx / spring-boot) is writing a response, then this can fail due to networking issues. In those causes a LOG is written but the Exchange in Camel is completed succesfully.
If you use onCompletion in routes then this is completed succesfully. You may want to get the caused exxeption from vertx / SB instead. So in other words Camel route is okay, but vertx/SB failed during writing response on network level.",No comments found
21299,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.4.3,4.4.4,2024-10-02T07:18:32+0000,1727853512,2024-10-02T07:24:17+0000,2024-10-02T07:24:17+0000,No description available,No comments found
21298,Improvement,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-10-02T07:04:13+0000,1727852653,2024-10-02T07:15:04+0000,2024-10-02T07:15:04+0000,This makes it possible to get this released version information in json format that makes it easier to 3rd party tooling to use.,No comments found
21297,Test,Andrea Tarocchi,Andrea Tarocchi,4.8.0,"4.4.4,4.8.1,4.9.0",2024-10-01T16:08:50+0000,1727798930,2024-10-03T14:10:24+0000,2024-10-03T14:10:24+0000,"camel-test-infra-dispatch-router not working due to SEGFAULT in running qdrouterd in the container.
I fear is a general fedora issue and I opened a bug there as well https://bugzilla.redhat.com/show_bug.cgi?id=2315943
we might use in the meantime just a simple generic container with this image quay.io/interconnectedcloud/qdrouterd:latest",No comments found
21296,Bug,Unassigned,RAVI,4.5.0,4.8.0,2024-10-01T15:24:48+0000,1727796288,2024-10-04T11:41:03+0000,2024-10-04T11:41:03+0000,"Hi Team,
 
We are conducting a POC using the Camel-AS2 project (version 4.5.0) to facilitate communication with the OpenText tool, with plans to extend this setup for communication with our trading partners in the future.
 
We’ve implemented a Camel-AS2 sender application, which has been configured to send EDI messages to the OpenText AS2 receiver. The OpenText AS2 receiver successfully receives the messages and sends back a signed MDN. However, our Camel-AS2 sender application encounters the following exception during MDN validation.
 
Based on the Camel documentation, it appears that MDN verification on the client side isn’t fully supported by Camel. To address this, we are utilizing the org.apache.camel.component.as2.api.util.SigningUtils.isValid() method, but this is where the exception arises.
 
We’ve identified that the message digest value computed on the MDN by OpenText (included in the Signature object) doesn’t match the one computed by the Camel-AS2 sender application upon receiving the MDN.
 
We suspect this discrepancy may be related to line separator differences in the MDN message. Could you provide further insights or guidance on this issue?
 
Here’s the relevant code snippet we are using to validate after recieving response from Open text:
 
if (exchange.getMessage().getBody() instanceof MultipartSignedEntity)
org.bouncycastle.cms.CMSSignerDigestMismatchException: message-digest attribute value does not match calculated value
at org.bouncycastle.cms.SignerInformation.verifyMessageDigestAttribute(SignerInformation.java:550) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.bouncycastle.cms.SignerInformation.doVerify(SignerInformation.java:452) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.bouncycastle.cms.SignerInformation.verify(SignerInformation.java:659) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.bouncycastle.cms.CMSSignedData.verifySignatures(CMSSignedData.java:436) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.bouncycastle.cms.CMSSignedData.verifySignatures(CMSSignedData.java:411) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.apache.camel.component.as2.api.util.SigningUtils.isValidSigned(SigningUtils.java:155) ~[classes/:na]
at org.apache.camel.component.as2.api.util.SigningUtils.isValid(SigningUtils.java:191)",No comments found
21295,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.x,2024-10-01T13:29:20+0000,1727789360,2024-10-03T11:32:00+0000,2024-10-03T11:31:50+0000,"Following the removal of CK CRD dependency, we can now implements knative traits options `knative.filters` and `knative.filter-event-type` in the kubernertes plugin.
The expected behavior is decribed here: https://camel.apache.org/camel-k/next/traits/knative.html.
Some existing code is already there:
https://github.com/apache/camel/blob/d3142c3611d11c95fcc9c3bf8407c7ee0682097b/dsl/camel-jbang/camel-jbang-plugin-kubernetes/src/main/java/org/apache/camel/dsl/jbang/core/commands/kubernetes/traits/knative/KnativeTrait.java#L291-L303",No comments found
21294,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-10-01T09:39:18+0000,1727775558,2024-10-03T08:20:56+0000,2024-10-03T08:20:56+0000,"The run/export is hardcoding the dependency for platform-http when using either runtime Quarkus or Spring Boot. I think we need to let the CLI to include it or not based on the real presence of such a component.
I am working to fix this, however I am not sure if by any chance there is a reason why we need to keep it hardcoded and always exported in those runtimes.",No comments found
21293,Bug,Claus Ibsen,Claus Ibsen,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-10-01T09:17:08+0000,1727774228,2024-10-01T09:47:17+0000,2024-10-01T09:47:17+0000,https://camel.zulipchat.com/#narrow/stream/364655-camel-core-dev/topic/Unmarshaller.20does.20not.20close.20the.20stream,No comments found
21292,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-30T10:26:34+0000,1727691994,2024-10-01T09:01:51+0000,2024-10-01T09:01:51+0000,"When using 3rd party JARs like pooled-jms, then it should be mapped to quarkus-pooled-jms. So we need to have a mapping file for this, to maintain versions. To have this convenient out of the box.",No comments found
21291,Bug,Jiri Ondrusek,Jiri Ondrusek,4.8.0,"4.8.1,4.9.0",2024-09-30T10:23:54+0000,1727691834,2024-09-30T14:41:38+0000,2024-09-30T14:41:38+0000,"There are 2 bugs in ""smb"" producer.",No comments found
21290,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-30T10:17:38+0000,1727691458,2024-09-30T10:19:36+0000,2024-09-30T10:19:36+0000,https://camel.zulipchat.com/#narrow/stream/352237-camel-jbang/topic/Run.20with.20camel-activemq,No comments found
21289,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-30T09:05:15+0000,1727687115,2024-09-30T09:47:14+0000,2024-09-30T09:47:14+0000,"If you use custom kamelets from some local-dir then during export they are not copied over to src/main/resources/kamelets folder.
Also the pom.xml includes ASF kamelets JARs which would not be needed.",No comments found
21288,Bug,Unassigned,Michal Stepan,4.1.0,4.2.0,2024-09-30T08:09:09+0000,1727683749,2024-10-03T06:46:43+0000,2024-10-03T06:46:43+0000,"Given random data generator function:
And two processors - first generates 20 batches and second would generate 20k rows in each batch (tweak as you want):
And a route:
The processing would fail on OOM when used limited memory setting ( -Xmx512m in my case of macbook m1 pro 16Gb ram).
The problem is on the line:
Where upon analysis, the expression evaluation stores the content of the body into memory (ok), but keep it referrenced even after leaving the split. This is happening only when the generated data are objects (Random usage in this case) - when using unboxed int values, the problem is not there. Our original case was using sql component, that returned database data (boxed in objects).
You can mitigate the problem by using external processor instead of log:
or using groovy:
In both cases, referrences are cleaned up - not causing OOM.
This behavior seems very unexpected.",No comments found
21287,Bug,Unassigned,Sven,4.8.0,"4.8.1,4.9.0",2024-09-30T07:51:17+0000,1727682677,2024-09-30T09:48:00+0000,2024-09-30T09:48:00+0000,"The API calls to azure fileshares using a bearer token (credentialType=AZURE_IDENTITY) requires the header x-ms-file-request-intent to be set. Currently it seems the API only supports the value 'backup'.
I'll create a PR.",No comments found
21286,Improvement,Claus Ibsen,Adriano Machado,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-09-27T16:31:46+0000,1727454706,2024-10-02T06:35:22+0000,2024-10-02T06:35:22+0000,Camel is calling `JaxbHelper.getJaxbElementFactoryMethod` and the result is not being cached. This expensive call on apps with schemas deployed on nested jars on Spring Boot apps running on Openshift.,No comments found
21285,Bug,Pasquale Congiusti,Pasquale Congiusti,4.9.0,4.9.0,2024-09-27T10:41:38+0000,1727433698,2024-09-27T14:14:42+0000,2024-09-27T14:14:42+0000,"While working on some strengthening export test to validate the output I bumped into this bug:
would produce a wrong export as it correctly set the route into src/main/resources/camel but it wrongly set the application.properties with camel.main.routes-include-pattern=camel/tmp/test.yaml
The result is an application that fails to execute.
The same problem happens with Java which are distributed to a different folder and a different application properties configuration.",No comments found
21284,Improvement,Unassigned,Nicolò Scarpa,4.9.0,4.x,2024-09-27T09:34:40+0000,1727429680,2025-01-09T09:19:58+0000,,"The new camel-clickup component relies on the camel-webhook (meta-)component for providing webhook functionality. This is actually the encouraged design for implementing new webhooks capable components, but it's a bit hacky since the specialized component won't be actually used as an endpoint, but it would be rather used as the delegate for the camel-webhook component (i.e. the URI for creating a camel-clickup endpoint is ""webhook:clickup:<workspaceId>"", instead of ""clickup:<workspaceId>"").
See if it's possibile to make camel-webhook reusable by other components, so no code duplication is needed to implement webhook functionality.
Its fine to have camel-webhook in pom.xml, but make the clickup as a pure component without the ""webhook:xxx"" prefix in its URI.
In other words, the goal is to make clickup a first-class component that is like others and also tooling/dsl friendly.",No comments found
21283,Bug,Aurélien Pupier,Aurélien Pupier,4.8.0,4.8.1,2024-09-27T07:04:43+0000,1727420683,2024-09-27T11:36:09+0000,2024-09-27T11:36:09+0000,"using camel-version and a providing a specific Maven repository is no more posible with Camel JBang CLI when camel-version and is 4.7- included.
This is due to the renaming of --repos transfomed to --repository without transforming the parameter when the new process for another camel-version is used.
It is affecting only Run and export as they are the only commands for which it was renamed, all other commands remained with --repos (which is leading to not coherent naming between commands).
This renaming was initially done in an effort to be able to provide parameter using style --repository=xxx --repository=yyy instead of --repos=xxx,yyy but it was already reverted during 4.8 development, so we need to use --repository=xxx,yyy making the singular instead of plural not a good fit anymore.",No comments found
21282,Improvement,Claus Ibsen,Sven,4.8.0,"4.8.1,4.9.0",2024-09-26T16:00:15+0000,1727366415,2024-09-30T12:28:07+0000,2024-09-30T12:26:07+0000,"We are using camel-file to write to an Azure File Share, but this fails sometimes because our routes can create files in nested folders.
This works fine for a Windows share but Azure shares apparently don't support creating multiple folders at once.
The code shows it only does this iteratively if there are permissions set but the file share doesn't support Posix (we're running in Windows), setting permissions throws an UnsupportedOperationException.
From org.apache.camel.component.file.FileOperations:
would it be possible to add a parameter to have autoCreate create folders in parts, as is done when a permission is set?",No comments found
21281,Task,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-09-26T14:23:05+0000,1727360585,2024-12-05T06:19:26+0000,2024-12-05T06:19:26+0000,No description available,No comments found
21280,Bug,Unassigned,Sven,"4.7.0,4.8.0","4.8.1,4.9.0",2024-09-26T14:19:37+0000,1727360377,2024-09-26T17:29:21+0000,2024-09-26T17:29:21+0000,"In FilesOperations the client builder only handles the SHARED_ACCOUNT_KEY CredentialType, the others are misplaced under that if:
Fix should be easy:",No comments found
21279,Improvement,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-26T13:32:48+0000,1727357568,2024-09-27T13:40:13+0000,2024-09-27T13:40:13+0000,"There seems to be that camel-kamelets-catalog and camel-kamelets-util JARs are added even if they are not in use due to using custom kamelets.
We should trim down.",No comments found
21278,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.11.0,2024-09-26T13:11:43+0000,1727356303,2025-02-13T10:24:57+0000,,"This is a follow-up from https://issues.apache.org/jira/browse/CAMEL-21152.
Clean-up identified:",No comments found
21277,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,4.9.0,2024-09-26T12:02:38+0000,1727352158,2024-10-03T17:03:06+0000,2024-10-03T17:03:06+0000,This is a follow up from CAMEL-21264. The SMB component should use be using WrappedFile to avoid leaking implementation details and integrate well with Camel JBang.,No comments found
21276,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-09-26T10:39:58+0000,1727347198,2024-10-11T14:12:04+0000,2024-09-27T16:03:51+0000,"This is only about kamelets (not general bootstrap configuration when using SB/Q or camel-main) as that depends on how those runtimes behave.
CAMEL_KAMELET_AWS_S3_SOURCE_BUCKETNAMEORARN
The last option is bucketNameOrArn in the kamelet. But for readability we may improve camel-kamelet to support both naming styles
CAMEL_KAMELET_AWS_S3_SOURCE_BUCKET_NAME_OR_ARN
CAMEL_KAMELET_AWS_S3_SOURCE_BUCKETNAMEORARN",No comments found
21275,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-26T09:44:33+0000,1727343873,2024-10-02T09:10:26+0000,2024-10-02T09:10:26+0000,No description available,No comments found
21274,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-09-26T08:06:04+0000,1727337964,2024-12-31T13:19:09+0000,2024-12-31T13:19:09+0000,"When running unit tests you may want to tell Camel to dump routes to XML or YAML in the log (or files).
This should be configurable in test-class / annotation / and also as JVM system property so you can do this via command line.
You can configure setDumpRoutes(xml | yaml) on camel context.",No comments found
21273,Improvement,Zheng Feng,Zheng Feng,4.8.0,"4.8.1,4.9.0",2024-09-26T08:03:31+0000,1727337811,2024-09-26T13:22:46+0000,2024-09-26T13:22:46+0000,It could be similar with jta issue CAMEL-21117 and need to detect the saga() dsl,No comments found
21272,Task,Unassigned,Claus Ibsen,None,4.9.0,2024-09-26T07:30:35+0000,1727335835,2024-09-26T14:23:11+0000,2024-09-26T14:22:42+0000,"The new camel kubernetes plugin has superceded the older camel-k jbang plugin.
This should be moved over to the camel-k project for maintenance or the plugin should be removed.",No comments found
21271,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-26T05:31:34+0000,1727328694,2024-09-26T07:32:33+0000,2024-09-26T07:32:33+0000,"jbang  export does not work for properties configured as custom.number=env:CUSTOM_NUMBER:12345 and injected as
    @PropertyInject(""custom.number"")
    private Integer number;
Error:
Caused by: org.apache.camel.TypeConversionException: Error during type conversion from type: java.lang.String to the required type: java.lang.Integer with value @@CamelMagicValue@@ due to java.lang.NumberFormatException: For input string: ""@@CamelMagicValue@@""",No comments found
21270,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,4.8.0,2024-09-25T19:57:46+0000,1727294266,2025-01-09T10:28:55+0000,2025-01-09T10:28:55+0000,"We have a few tests creating lots of files in the $TMP directory of the build host during tests. This can cause instability for nodes that are not transient. Temporary files should be created, ideally, in the target directory ... so that they are cleaned by Jenkins (or by mvn clean).",No comments found
21269,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-09-25T19:32:33+0000,1727292753,2024-10-01T12:26:22+0000,2024-10-01T12:25:49+0000,"byCharacter, byLine, byWord, bySentence, byParagraph are not part of the Camel catalog for langchain4j tokenizer
https://github.com/apache/camel/blob/bd427fb7b288011aafafce88076e7792168f8da7/catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/models/langChain4j.json#L15
There is an incomplete definition of the tokenizer DSL that prevents it from being used in YAML.",No comments found
21268,Improvement,Unassigned,Kurt Schoovaerts,None,None,2024-09-25T16:31:59+0000,1727281919,2024-10-16T10:04:08+0000,,"The Camel JMS transfers the message headers from sender to receiver. This enables for example end-to-end use of the same breadcrumbId across all routes processing data in the integration environment.
Proposal is to align functioning of the Camel Google PubSub component with the functioning of the Camel JMS component in passing the message headers as attributes on the Google PubSub message when publishing a message. Likewise, on receipt of a message by a subscriber, copy all pubsub message attributes to camel message headers.",No comments found
21267,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-25T14:39:38+0000,1727275178,2024-09-26T05:07:54+0000,2024-09-26T05:07:54+0000,"Since we are now creating unique/indexed export directories for k8s run, the existing k8s delete command may not see those export dirs.
This did not show in tests because of a stale .jbang-camel-run dir",No comments found
21266,Task,Claus Ibsen,Otavio Rodolfo Piske,None,4.10.0,2024-09-25T13:53:50+0000,1727272430,2024-12-19T08:50:05+0000,2024-12-19T08:50:05+0000,"We are creating the SmbClient in the SmbConsumer constructor, whereas our pattern is to create them in the doStart. Although this has the (pretty bad) downside of causing it to not be final anymore, it may be better to follow the existing convention. This could avoid problems for tooling and others that rely on this pattern.",No comments found
21265,New Feature,Andrea Cosentino,Federico Mariani,None,4.9.0,2024-09-25T13:26:56+0000,1727270816,2024-10-17T13:25:16+0000,2024-10-17T13:25:12+0000,"As a user, I would like to use vaults and easily resolve properties as I do in Camel routes, but during Spring startup, setting a property like spring.datasource.password=aws:... should be possible.
This is the list of the components that may benefit from it:
Something similar was done for the camel-jasypt-starter component https://github.com/apache/camel-spring-boot/commit/18116fc727d747b3ecd63586f64d21b452deb03c#diff-ca96b9726dc6672f349a50ca707d332d93aa716def7a553948b4622a9912ae57R21
So far it was done for Camel Spring Boot only, but it would be nice to investigate if something similar can be done for Camel Quarkus.",No comments found
21264,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-09-25T11:41:52+0000,1727264512,2024-10-02T17:52:06+0000,2024-09-26T12:04:35+0000,"The component leaks implementation details by letting users handle smbj file types. Our code already provides a good way to avoid that and we should use it.
Ideally we should be using WrappedFile to avoid this problem (and integrate well with Camel JBang)",No comments found
21263,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-09-25T11:40:54+0000,1727264454,2024-09-26T12:05:23+0000,2024-09-26T12:05:23+0000,The consumer is recreating the connection for every poll. This causes problems because  consumers cannot read the files after the connection has been closed.,No comments found
21262,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-25T10:29:58+0000,1727260198,2024-10-09T14:26:01+0000,2024-10-09T14:26:01+0000,No description available,No comments found
21261,Improvement,John Poth,John Poth,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-09-25T10:02:50+0000,1727258570,2024-09-25T13:47:16+0000,2024-09-25T13:47:16+0000,The OpenTelemetryTracer should use it's own ContextPropagators and not rely on the global ones,No comments found
21260,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-09-25T08:38:38+0000,1727253518,2024-09-25T09:35:04+0000,2024-09-25T09:34:52+0000,CXF behaves differently in async (default) vs sync mode. And it may be desirable to configure sync=true globally for all of CXF WS / RS,No comments found
21259,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-09-25T08:13:24+0000,1727252004,2024-10-11T07:22:01+0000,2024-10-11T07:22:01+0000,"As in $summary. We should have a similar experience like the one offered for Camel Quarkus, having the prototype with Dockerfile also for the other runtimes.",No comments found
21258,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-25T05:10:47+0000,1727241047,2024-09-25T13:50:29+0000,2024-09-25T13:50:29+0000,"Related to CAMEL-21255
We should make it easier to have custom logic in before/after Executor methods in thread pools that is needed by opentelemtry and other libraries that needs to do instrumentation on tasks executed that are thread bound.",No comments found
21257,Improvement,Claus Ibsen,Chris Slater,4.8.0,4.10.0,2024-09-24T20:17:19+0000,1727209039,2025-02-02T08:09:20+0000,2025-02-02T08:09:20+0000,"In the GitHub consumer documentation, https://camel.apache.org/components/4.8.x/github-component.html#_consumer_endpoints, the body type for the commit endpoint is listed as a org.eclipse.egit.github.core.RepositoryCommit.  However, it is not.  It is a String with the commit message.
I'm not sure if this is a problem with the documentation or the code.  Changing the body to a RepositoryCommit would be consistent with the other consumers.  For example, the tag consumer does provide a body type of RepositoryTag.  Additionally, more information would be available from a RepositoryCommit object compared to the commit message and a few headers with some of the other information.",No comments found
21256,Bug,Unassigned,Chris Slater,4.8.0,"4.8.1,4.9.0",2024-09-24T18:17:02+0000,1727201822,2024-09-26T14:34:47+0000,2024-09-26T14:34:47+0000,"I encountered an issue using startingSha=last with a repository with a large history.  The last sha is not correctly resolved.   CAMEL-17473 did not resolve this issue.  I am putting together a pull request with a possible solution.
The following issues were discovered from real-world testing and a unit test:",No comments found
21255,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-09-24T07:23:05+0000,1727162585,2024-09-25T11:40:45+0000,2024-09-25T11:40:45+0000,This is needed to allow to trap when a ThreadFactory is created to be able to control some custom behavior needed by camel-opentelemetry.,No comments found
21254,Improvement,Andrea Cosentino,Andrea Cosentino,None,None,2024-09-24T07:15:21+0000,1727162121,2024-11-25T07:58:25+0000,,"https://camel.zulipchat.com/#narrow/stream/257301-camel-spring-boot/topic/camel.20google-biqquery
The use case is particular, the user needs to move stuff from one GCP project to another one, in Kubernetes environment.",No comments found
21253,Improvement,Andrea Cosentino,Andrea Cosentino,4.8.0,"4.8.1,4.9.0",2024-09-23T19:32:50+0000,1727119970,2024-09-26T17:40:36+0000,2024-09-24T13:45:11+0000,"KCL Consumers, make the ConfigsBuilder for metrics of the Scheduler enable/disable",No comments found
21252,Task,Thomas Cunningham,Thomas Cunningham,4.8.0,"4.8.1,4.9.0",2024-09-23T17:54:15+0000,1727114055,2024-10-11T14:04:06+0000,2024-10-11T14:04:06+0000,"sync-properties-maven-plugin only synchronizes properties that fit the pattern
which means that properties like
https://github.com/apache/camel/blob/main/parent/pom.xml#L504C9-L504C45
are allowed but do not get synced to camel-dependencies.     I'd like to add a check for properties not meeting that pattern and fix the zeebe.version-> zeebe-version so that it gets generated in camel-dependencies.",No comments found
21251,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-23T15:57:11+0000,1727107031,2024-09-25T09:50:36+0000,2024-09-25T09:50:36+0000,https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-reads.html,No comments found
21250,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-09-23T13:35:08+0000,1727098508,2025-01-02T13:27:09+0000,2025-01-02T13:27:09+0000,"When using camel-report:route-coverage and you have many routes in XML files without route ids, then they are not correlated in coverage data. Maybe we can find a wat to make this possible for anonymous routes.",No comments found
21249,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-23T09:01:27+0000,1727082087,2024-10-11T12:44:51+0000,2024-10-10T19:46:21+0000,No description available,No comments found
21248,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-23T08:29:41+0000,1727080181,2024-09-23T16:11:28+0000,2024-09-23T16:11:28+0000,https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-writes.html,No comments found
21247,Improvement,Unassigned,Claus Ibsen,None,4.9.0,2024-09-21T08:09:42+0000,1726906182,2025-01-21T07:42:48+0000,2024-09-22T06:39:56+0000,"In CamelThreadFactory then we use new Thread... code.
However to prepare for JDK21 virtual threads, we should create it via Thread.platformOf vs Virtual Threads. (require JDK21 runtime)",No comments found
21246,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-09-20T15:18:55+0000,1726845535,2024-09-21T06:44:38+0000,2024-09-21T06:44:38+0000,"Enabling via
camel.main.devConsoleEnabled = true
camel.server.devConsoleEnabled = true
Should add dependency
camel-console
camel-management",No comments found
21245,Bug,Unassigned,Aurélien Pupier,None,None,2024-09-20T09:22:21+0000,1726824141,2024-09-25T19:32:33+0000,2024-09-25T13:58:24+0000,"byCharacter, byLine, byWord, bySentence, byParagraph are not part of the Camel catalog for langchain4j tokenizer
https://github.com/apache/camel/blob/bd427fb7b288011aafafce88076e7792168f8da7/catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/models/langChain4j.json#L15
Or they are missing because the Yaml language is not supporting to specify them?",No comments found
21244,New Feature,Andrea Cosentino,Nicolò Scarpa,None,4.9.0,2024-09-19T12:18:09+0000,1726748289,2024-09-26T09:40:52+0000,2024-09-26T09:40:51+0000,"A new Camel component to receive events from webhooks by adopting the camel-webhook meta-component.
ClickUp developer guide for webhooks: https://clickup.com/api/developer-portal/webhooks/
The component may be further extended to support read/write to ClickUp REST APIs.",No comments found
21243,Bug,Thomas Cunningham,Thomas Cunningham,4.8.0,"4.8.1,4.9.0",2024-09-19T11:56:00+0000,1726746960,2024-09-20T17:55:18+0000,2024-09-20T17:55:18+0000,"I get the following error trying to build camel-braintree-starter
It looks like org.osgi:org.osgi.core:8.0.0 does not exist - the last version was 6.0.0, and then it was renamed to org.osgi:osgi.core - https://mvnrepository.com/artifact/org.osgi/osgi.core
com.braintreepayments.gateway:braintree-java:3.35.0 uses org.osgi:org.osgi.core:4.2.0 https://repo1.maven.org/maven2/com/braintreepayments/gateway/braintree-java/3.35.0/braintree-java-3.35.0.pom but my guess is something wrong with the manifest settings?    I'd like to add a dependencyManagement entry to force use of org.osgi:org.osgi.core:4.2.0 so that camel-braintree-starter compiles.",No comments found
21242,New Feature,Marco Carletti,Marco Carletti,None,"4.8.1,4.9.0",2024-09-19T08:27:05+0000,1726734425,2024-10-09T09:38:30+0000,2024-10-09T09:38:30+0000,"In order to monitor Camel on Spring Boot applications it would be useful to have a configurable starter that make the configuration easy and to allow a Jolokia agentless solution, based on existing  Support for Jolokia in Spring Boot
This library already exposes (optionally) the Jolokia endpoint using Spring Boot Actuator, but it would be more configurable having a separated endpoint dedicated to Jolokia, completely separated from actuator and running on separated thread(s) according to Jolokia server specifications.
Moreover it prepares a basic setup on Kubernetes platform",No comments found
21241,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-19T05:19:11+0000,1726723151,2024-09-19T14:23:53+0000,2024-09-19T14:23:53+0000,"When you use property placeholders with ENV, or other functions then you would like to know the actual value, and be able to show that in dev console. We should capture this details.",No comments found
21240,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-19T05:13:07+0000,1726722787,2024-09-19T05:14:24+0000,2024-09-19T05:14:24+0000,No description available,No comments found
21239,Bug,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-09-18T13:30:46+0000,1726666246,2024-09-23T07:27:05+0000,2024-09-18T13:39:47+0000,"Caused by: java.lang.NullPointerException: Cannot invoke ""org.w3c.dom.Node.getNodeValue()"" because the return value of ""org.w3c.dom.NamedNodeMap.getNamedItem(String)"" is null
    at org.apache.camel.parser.helper.RouteCoverageHelper.parseDumpRouteCoverageByRouteId (RouteCoverageHelper.java:70)
    at org.apache.camel.maven.RouteCoverageMojo.grabDumpData (RouteCoverageMojo.java:263)
    at org.apache.camel.maven.RouteCoverageMojo.execute (RouteCoverageMojo.java:228)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:126)",No comments found
21238,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-18T11:21:14+0000,1726658474,2024-09-26T05:06:32+0000,2024-09-25T12:01:08+0000,"When running a project with `--dev` like this ...
I see ...
without image re-build/deploy",No comments found
21237,Improvement,Claus Ibsen,Calle Andersson,None,4.9.0,2024-09-18T05:46:16+0000,1726638376,2024-09-18T10:58:18+0000,2024-09-18T10:58:18+0000,Rest DSL should allow the usage of Endpoint DSL in 'to'. E.g:,No comments found
21236,Task,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-17T12:29:42+0000,1726576182,2024-09-26T05:06:12+0000,2024-09-18T11:10:14+0000,"The quarkus default seems to push by default when `-Dquarkus.container-image.push` is not set. For a local closter (e.g. DockerDesktop K8s) this would not be necessary.
The default setting for `camel k8s run` is not to push - this should be passed on to quarkus properties",No comments found
21235,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-17T12:14:16+0000,1726575256,2024-09-26T14:36:36+0000,2024-09-26T14:36:36+0000,No description available,No comments found
21234,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-17T11:56:44+0000,1726574204,2024-09-18T07:13:40+0000,2024-09-18T07:13:40+0000,https://camel.zulipchat.com/#narrow/stream/257298-camel/topic/Log.20messages/near/470945409,No comments found
21233,Task,Unassigned,Otavio Rodolfo Piske,None,None,2024-09-17T09:28:41+0000,1726565321,2024-09-17T09:31:42+0000,2024-09-17T09:31:29+0000,We had to rollback the upgrade as it seems to break camel-http.,No comments found
21232,Dependency upgrade,Andrea Cosentino,Claus Ibsen,None,4.9.0,2024-09-17T08:52:56+0000,1726563176,2024-09-25T13:47:54+0000,2024-09-25T13:47:54+0000,"The 5.3 release causes some test failures. We would need to investigate why and if something needs to be changed in camel-http, or its some new bugs in http 5.3.",No comments found
21231,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-09-17T08:36:30+0000,1726562190,2024-09-30T07:07:17+0000,2024-09-30T07:07:17+0000,"camel-jq uses this library
https://github.com/eiiches/jackson-jq
And its not so active maintained. And last release is a -preview release and it would be good to get it active and do a 1.0 ga release.
If it stays inactive we may consider deprecating this in Camel.",No comments found
21230,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.4.4,2024-09-17T07:46:45+0000,1726559205,2024-09-24T05:16:12+0000,2024-09-24T05:16:12+0000,No description available,No comments found
21229,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-09-17T07:46:05+0000,1726559165,2024-09-20T05:02:48+0000,2024-09-20T05:02:48+0000,To be released later this week,No comments found
21228,Bug,Unassigned,Andrias Sundskarð,4.8.0,None,2024-09-16T14:11:27+0000,1726495887,2024-09-16T15:00:04+0000,2024-09-16T15:00:04+0000,"I have created a demo project on github showing my issue: https://github.com/minteo-as/camel-missing-routes-bug
When I set Camel version to 4.6.0 in gradle/libs.versions.toml all routes are starting. However in 4.8.0 only some routes are starting.
Please see README.md for details.
Am I doing something wrong? The idea of having an abstract class for global exception handling has been taken directly from the documentation.",No comments found
21227,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-16T11:02:02+0000,1726484522,2024-09-26T05:05:59+0000,2024-09-18T04:37:14+0000,`camel k8s run --output=json` ignores output format and prints yaml instead,No comments found
21226,New Feature,Federico Mariani,Federico Mariani,4.8.0,4.9.0,2024-09-16T09:30:57+0000,1726479057,2024-09-16T09:34:32+0000,2024-09-16T09:34:32+0000,"Currently, the camel-jasypt-starter can successfully encrypt/decrypt properties inside or outside the camel context, as seen in the documentation examples
But.. when I try to use it as a source for other SpringBoot properties, it does not decrypt.
For example, I have this plain property for SSL certs on the server, the example runs
server.ssl.key-store-password=temporal
But using the encrypted value, the example fails with a ""Caused by: java.io.IOException: Keystore was tampered with, or password was incorrect""
exception
server.ssl.key-store-password=ENC(9Orox+Cq+.../dF/3h4fb)
We can hook into Spring Boot lifecycle, and decrypt properties earlier into the life cycle, before Spring Boot context initialization.",No comments found
21225,Dependency upgrade,Claus Ibsen,Claus Ibsen,3.22.2,3.22.3,2024-09-16T07:56:07+0000,1726473367,2024-09-16T10:55:13+0000,2024-09-16T10:55:13+0000,No description available,No comments found
21224,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-16T07:11:29+0000,1726470689,2024-09-16T07:22:24+0000,2024-09-16T07:22:24+0000,"Instead of having total with two digits, for combined/remote then lets use a boolean option to show remote only. And let is show total as before (by default)",No comments found
21223,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.3,4.10.0",2024-09-14T14:19:05+0000,1726323545,2024-12-26T14:59:29+0000,2024-12-23T15:39:53+0000,"It may not work with the split eip to go into the sub route of the splitter.
Ideally we would have ""step in"" and ""step over"" so you can debug quicker. However the CLI only accept ENTER as to continute (we cannot trap Fn keys). So it may be that you type something and press ENTER.",No comments found
21222,New Feature,Unassigned,Claus Ibsen,None,4.x,2024-09-14T13:09:59+0000,1726319399,2024-09-14T13:09:59+0000,,"https://www.linkedin.com/posts/herve-ciaravolo-silvain-ab453b2_etl-dataprocessing-dataengineering-activity-7239918712500232192-PMYf/
We could consider a new EIP that can be configured to keep only N top or bottom records. Where N can be defined via some logic (correlation key) etc.",No comments found
21221,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-14T13:07:56+0000,1726319276,2024-09-15T17:39:44+0000,2024-09-15T17:39:44+0000,The CamelXXX headers are not end-user headers and we should skip these by default like happening in other components.,No comments found
21220,Improvement,Claus Ibsen,Claus Ibsen,None,None,2024-09-14T10:00:14+0000,1726308014,2024-10-09T12:05:53+0000,2024-10-09T12:05:53+0000,"Lets see if we can just make it default split the body, otherwise people need to undertand this and fiddle with simple = ${body}",No comments found
21219,Bug,Claus Ibsen,Claus Ibsen,4.0.6,"4.8.1,4.9.0",2024-09-14T09:29:17+0000,1726306157,2024-09-16T05:04:11+0000,2024-09-16T05:04:11+0000,Reported on user mailing list,No comments found
21218,Bug,Unassigned,Bruno Meseguer,None,4.x,2024-09-13T13:23:40+0000,1726233820,2024-09-18T11:26:43+0000,2024-09-18T11:26:43+0000,"It seems Camel Quarkus is not able to pick up beans defined with:
When defined outside a RouteBuilder.
However, if ported inside a RouteBuilder all seems good.
Developers may want to define Beans outside the RouteBuilder class, it makes sense Camel Quarkus finds them when starting up.
Find attached a reproduceable.
If started with:
it will fail.
Then try uncommenting the ""myProcessor"" code inside the RouteBuilder in the file ""routes.java""/
Camel Quarkus the starts and succeeds to execute.",No comments found
21217,Improvement,Unassigned,Giacomo Carnevale,"4.7.0,4.8.0",4.9.0,2024-09-13T13:11:22+0000,1726233082,2024-09-16T07:41:53+0000,2024-09-16T07:41:53+0000,"Creation of the Java class OpenApiUtils for handling request and response types.
For media types of application/json, type and outType are set. Arrays and primitive types are also handled.
This change allows for the automatic unmarshalling of request bodies if bindingPackageScan is defined.",No comments found
21216,Bug,Zheng Feng,Dirk Fiedler,4.7.0,"4.8.1,4.9.0",2024-09-13T13:07:24+0000,1726232844,2024-09-25T05:13:13+0000,2024-09-25T05:13:13+0000,"Hi Team,
we are using the Apache Camel LRA components within Java Springboot projects to implement saga services.
Till now, we are using Narayana as an LRA-Coordinator. Now we want to switch to Oracl MicroTX 
(https://docs.oracle.com/en/database/oracle/transaction-manager-for-microservices/24.2/tmmdg/lra-transaction-protocol.html).
After configuring Oracle MircoTX instead of Narayana, we are facing two problems within the 
Apache Camel LRA component code.
1) While joining an LRA Transaction, the payload sent by Apache Camel is URL encoded
2) The Query parameter sent by Oracle LRA coordinator are url encoded, but will not be decoded by Apache Camal LRA (see also: CAMEL-21197)
I will set up a branch with my suggested code changes and link this afterwards to this jira bug.
The code changes are completely backwards compatible with Narayana (already tested).
1) Joining an LRA Transaction
The class 'LRAClient' is using 'LRAUrlBuilder' inside Method 'join'. All parts of the http put body are url encoded. 
Within Oracle LRA Coordinator log i can see the incomming request from Apache Camel:
This url encoded query param 'Camel-Saga-Complete=direct%3A%2F%2Fsaga1_sagaService_complete' will be encoded again on Oracle LRA Coordinator side.
This is causing the error message within Apache Camel LRA:
When logging the result http code and body
i am getting this:
The problem can be solved by not url encoding the given urls within the joinLRA payload.
 
org.apache.camel.service.lra.LRAUrlBuilder -> query:
 
This code should not be executed:
2) Decode given query parameter from Oracle LRA-Coordinator call
After solving 1), i am getting a new exception:
After finalizing the saga, the Oracle LRA-Coordinator is calling the 'onComplete' for all participants and the service.
Within o.a.c.s.l.LRASagaRoutes.verifyRequest(LRASagaRoutes.java:107) the extracted query param 'Camel-Saga-Compensate' is still url encoded:
Therefore the check within LRASagaRoutes.verifyRequest fails, because the valid (indexed) uri is
The problem can completely solved by CAMEL-21197. In the meantime in will provide a suggestion for an workaround.
best regards
Dirk",No comments found
21215,Bug,Unassigned,Otavio Rodolfo Piske,4.8.0,4.9.0,2024-09-13T09:52:39+0000,1726221159,2024-09-18T11:01:17+0000,2024-09-18T11:01:17+0000,"Trying to export a java file with beans annotated with @BindToRegistry to a CEQ project, causes it to fail with:
Caused by: org.apache.camel.NoSuchBeanException: No bean could be found in the registry for: createChatMessage of type: org.apache.camel.Processor
This error is sporadic and doesn't happen 100% of the time (it seems to be more reproducible on shared cloud environments).
To reproduce: save the model.java and the route-main.yaml files and run:
camel export * --runtime=quarkus --gav=org.demo:agent:1.0.0 --dep=io.quarkiverse.langchain4j:quarkus-langchain4j-core:0.17.2,io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.17.2 --ignore-loading-error
Adding @BindToRegistry(lazy=true) makes the export work reliably, but that generates a project that is non-buildable.",No comments found
21214,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-13T07:44:13+0000,1726213453,2024-09-13T15:57:46+0000,2024-09-13T15:57:46+0000,"Today you get all the data when you just want to count the size.
Also for count size we need a time for first/last messages to make it easier to know when the messages was created.",No comments found
21213,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-13T06:21:38+0000,1726208498,2024-09-13T07:48:52+0000,2024-09-13T07:48:52+0000,"ExchangeHelper.populateVariableMap uses a slightly different naming style than simple language, so its harder to learn and use both styles. Lets harmonize.",No comments found
21212,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-13T04:34:11+0000,1726202051,2024-09-13T08:14:42+0000,2024-09-13T08:14:42+0000,"To make it possible to do log.info(""hey i am inside groovy"") in a groovy script",No comments found
21211,Bug,Dylan Piergies,Dylan Piergies,"4.4.2,4.4.3,4.6.0,4.7.0,4.8.0","4.4.4,4.8.1,4.9.0",2024-09-12T16:41:11+0000,1726159271,2024-09-16T04:46:00+0000,2024-09-16T04:46:00+0000,"The default HeaderFilterStrategy created when automatic header propagation was implemented for the Service Bus did not take steps to ensure that propagated headers are of a Java type that can be encoded as an application property by the underlying client libraries.
This would lead to errors of the form: com.azure.messaging.servicebus.ServiceBusException: No encoding is known for map entry value of type: <unmappable class name>",No comments found
21210,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-12T12:30:04+0000,1726144204,2024-09-16T05:06:10+0000,2024-09-16T05:06:10+0000,No description available,No comments found
21209,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-09-12T12:00:00+0000,1726142400,2024-09-16T05:07:04+0000,2024-09-16T05:07:04+0000,The enums parameter on the LangChain4jToolsEndpoint class makes it much harder for tooling to generate valid YAML out of it.,No comments found
21208,Improvement,Unassigned,Otavio Rodolfo Piske,"4.7.0,4.8.0",None,2024-09-12T08:01:20+0000,1726128080,2024-09-13T09:53:33+0000,,"We have several places were we create the export files by code. Not only this bug-prone, but this is also extremely hard to read, test, maintain and evolve. The code on Camel JBang is full of code like this.
Using a template engine allow us to separate the template source, from the text/code generation logic, resulting in a code that is easier to maintain.
We should pick a template engine, convert the all that code to the appropriate format and cleanup the code generation.",No comments found
21207,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-12T06:03:10+0000,1726120990,2024-09-12T13:25:09+0000,2024-09-12T13:25:09+0000,No description available,No comments found
21206,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-12T05:15:13+0000,1726118113,2024-09-12T05:58:57+0000,2024-09-12T05:58:57+0000,No description available,No comments found
21205,Task,Claus Ibsen,Aurélien Pupier,None,4.9.0,2024-09-11T18:37:46+0000,1726079866,2024-10-07T17:44:10+0000,2024-10-07T17:44:10+0000,"it was experimental butnot marked as deprecated,, maybe need to state it as experimental for 4.9 and remove in 4.10 only?
Note: take care to remove only the DSL part, not the language expression part.",No comments found
21204,Task,Claus Ibsen,Aurélien Pupier,None,4.9.0,2024-09-11T18:36:51+0000,1726079811,2024-10-07T15:19:34+0000,2024-10-07T15:19:34+0000,JavaScript DSl was deprecated in 4.6,No comments found
21203,Task,Claus Ibsen,Aurélien Pupier,None,4.9.0,2024-09-11T18:36:03+0000,1726079763,2024-10-07T15:05:22+0000,2024-10-07T15:05:22+0000,JavaShell DSL was deprecated in 4.6,No comments found
21202,New Feature,Adriano Machado,Adriano Machado,4.4.0,"4.4.4,4.8.1,4.9.0",2024-09-11T13:51:02+0000,1726062662,2024-10-13T13:21:43+0000,2024-10-03T08:46:45+0000,"Add a ThreadPoolFactory to propagate OpenTelemetry contexts, as per OpenTelemetry's documentation:
https://opentelemetry.io/docs/languages/java/instrumentation/#context-propagation-between-threads",No comments found
21201,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-11T12:39:07+0000,1726058347,2024-09-11T13:17:28+0000,2024-09-11T13:17:28+0000,"You see a generic exception such as
ileOperationFailedException - Error writing file [ID-2925776a-703a-11ef-9df5-3ab92e8528c7]]
org.apache.camel.component.file.GenericFileOperationFailedException: Error writing file [ID-2925776a-703a-11ef-9df5-3ab92e8528c7]
But the FTP client has status code and text which we should include so the user can understand the error better.",No comments found
21200,Bug,Unassigned,Francois Papon,3.22.0,3.22.3,2024-09-11T12:09:07+0000,1726056547,2024-09-12T06:53:16+0000,2024-09-11T18:03:01+0000,"The OSGi range of the javax.jms is not correct and break the installation of the bundle in Karaf.
The range is define is javax.jms;version=""[1.1,2)"" but the bundle depend on camel-jms which the range is javax.jms;version=""[1.1,3)""
We should align the range of camel-activemq to the camel-jms one.",No comments found
21199,Bug,Radovan Netuka,Radovan Netuka,None,4.9.0,2024-09-11T11:40:46+0000,1726054846,2024-10-17T13:30:13+0000,2024-09-25T14:19:57+0000,"Camel-jackson doesn't handle 4-byte characters well. Marshalling a 4-byte Japanese kanji character results in two UTF-16 escapes to be written instead of the character itself. While this is ok for emoji an such, it's not for natural languages.
Jackson issue: FasterXML/jackson-core#223
Reproducer:
with the file input.txt containing:
Expected output seen in the log: ""システム𩸽""
Actual output seen in the log: ""システム\uD867\uDE3D""",No comments found
21198,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2024-09-11T08:51:46+0000,1726044706,2025-02-19T15:28:34+0000,2025-02-19T15:28:34+0000,https://github.com/IBM/secrets-manager-java-sdk,No comments found
21197,Bug,Unassigned,Dirk Fiedler,4.7.0,None,2024-09-11T08:39:52+0000,1726043992,2024-09-19T08:06:11+0000,2024-09-16T12:16:08+0000,"Hi team,
while using URISupport.parseQuery the given query was not correctly decoded:
Sample JUnit test (org.apache.camel.util.URISupportTest):
If i handover the query 'Camel-Saga-Complete=direct%3A%2F%2Fsaga1_sagaService_complete' 
i expect the decoded value for 'Camel-Saga-Complete' as 'direct://saga1_sagaService_complete'.
I am wrong? Did i understand the utility class wrong?
Within the code i can see, that the string was adjusted to replace '%', this is 
causing the issue:
URIScanner.addParameter:
best regards
Dirk",No comments found
21196,Test,Nikita_Konovalov,Otavio Rodolfo Piske,4.8.0,4.x,2024-09-11T08:30:30+0000,1726043430,2024-09-26T17:21:16+0000,,"Code like the one below should be modified to use modern JUnit 5 assertions:
This should be replaced with Assertions.assertDoesNotThrow and Assertions.assertThrows as needed.",No comments found
21195,Test,Unassigned,Otavio Rodolfo Piske,4.8.0,4.x,2024-09-11T08:06:57+0000,1726042017,2025-01-31T08:49:27+0000,,"Fix flaky tests for Camel 4.9.
Some flakies: https://ge.apache.org/scans/tests?search.rootProjectNames=Camel&search.tasks=verify&search.timeZoneId=Europe%2FParis",No comments found
21194,Bug,Claus Ibsen,Claus Ibsen,4.8.0,4.8.0,2024-09-10T12:09:58+0000,1725970198,2024-09-11T04:44:07+0000,2024-09-11T04:44:07+0000,"The camel run unfortuantely has a bug that causes it to not detect file extensions correctly for yaml kamelets and routes, and will fail.
For example this example
https://github.com/apache/camel-kamelets-examples/tree/main/jbang/hello-yaml
camel run *
or
camel run hello.camel.yaml
All causes failure
org.apache.camel.RuntimeCamelException: Failed to resolve source file: hello.camel.yaml
    at org.apache.camel.dsl.jbang.core.common.SourceHelper.resolveSource(SourceHelper.java:46)
    at org.apache.camel.dsl.jbang.core.commands.Run.knownFile(Run.java:1544)
    at org.apache.camel.dsl.jbang.core.commands.Run.run(Run.java:645)
    at org.apache.camel.dsl.jbang.core.commands.Run.doCall(Run.java:310)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
    at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
    at picocli.CommandLine.access$1500(CommandLine.java:148)
    at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
    at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
    at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
    at picocli.CommandLine.execute(CommandLine.java:2174)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:173)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:62)
    at main.CamelJBang.main(CamelJBang.java:36)",No comments found
21193,New Feature,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-10T11:50:57+0000,1725969057,2024-10-10T13:11:25+0000,2024-10-10T13:11:25+0000,"You can send via `camel cmd send` but we need a `camel cmd receive` so you can just listen to new messages from a system such as kafka, jms, sql, file etc.",No comments found
21192,Bug,Thomas Diesler,Thomas Diesler,None,None,2024-09-10T09:52:05+0000,1725961925,2024-09-11T11:50:30+0000,2024-09-11T11:50:24+0000,,No comments found
21191,Bug,Claus Ibsen,Claus Ibsen,4.8.0,4.8.0,2024-09-10T07:41:02+0000,1725954062,2024-09-11T04:44:43+0000,2024-09-11T04:44:40+0000,No description available,No comments found
21190,Task,Aurélien Pupier,Claus Ibsen,None,4.x,2024-09-09T07:37:15+0000,1725867435,2025-01-27T13:58:11+0000,,"There is some cruft that says java 8 and so on.
We had trouble with the CSB release and its outdated javadoc plugin",No comments found
21189,Improvement,Claus Ibsen,Pascal Schumacher,None,4.9.0,2024-09-08T20:23:48+0000,1725827028,2024-09-10T06:34:45+0000,2024-09-09T20:03:17+0000,Spring 5.3.5 added DefaultMessageListenerContainer#idleReceivesPerTaskLimit in https://github.com/spring-projects/spring-framework/issues/26195 as a better way than DefaultMessageListenerContainer#maxMessagesPerTask to control the number of dynamic concurrent consumers. It would be great to have this be supported by camel-jms.,No comments found
21188,Bug,Claus Ibsen,Pascal Schumacher,4.7.0,4.9.0,2024-09-08T20:16:47+0000,1725826607,2024-09-10T06:57:32+0000,2024-09-09T14:26:39+0000,"For Camel 4.7.0 camel-activemq was reverted to Active MQ 5.x and camel-activemq6 was created for Active MQ 6.x, but there is no EndpointBuilder for camel-activemq6, so the Java DSL can not be used to configure endpoints for this component.",No comments found
21187,Test,Unassigned,Claus Ibsen,None,4.x,2024-09-08T18:52:16+0000,1725821536,2024-09-11T11:31:07+0000,2024-09-11T11:31:07+0000,"[INFO] Running org.apache.camel.component.disruptor.vm.DisruptorVmInOutChainedTest
Exception in thread ""Camel (camel-84) thread #391 - disruptor-vm://a"" java.lang.RuntimeException: java.lang.InterruptedException
    at com.lmax.disruptor.FatalExceptionHandler.handleEventException(FatalExceptionHandler.java:45)
    at com.lmax.disruptor.dsl.ExceptionHandlerWrapper.handleEventException(ExceptionHandlerWrapper.java:18)
    at com.lmax.disruptor.BatchEventProcessor.handleEventException(BatchEventProcessor.java:257)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:187)
    at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
    at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.InterruptedException
    at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1640)
    at com.lmax.disruptor.BlockingWaitStrategy.waitFor(BlockingWaitStrategy.java:47)
    at com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(ProcessingSequenceBarrier.java:56)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:159)
    ... 4 more
Exception in thread ""Camel (camel-84) thread #392 - disruptor-vm://b"" java.lang.RuntimeException: java.lang.InterruptedException
    at com.lmax.disruptor.FatalExceptionHandler.handleEventException(FatalExceptionHandler.java:45)
    at com.lmax.disruptor.dsl.ExceptionHandlerWrapper.handleEventException(ExceptionHandlerWrapper.java:18)
    at com.lmax.disruptor.BatchEventProcessor.handleEventException(BatchEventProcessor.java:257)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:187)
    at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
    at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.InterruptedException
    at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1640)
    at com.lmax.disruptor.BlockingWaitStrategy.waitFor(BlockingWaitStrategy.java:47)
    at com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(ProcessingSequenceBarrier.java:56)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:159)
    ... 4 more
Exception in thread ""Camel (camel-84) thread #393 - disruptor-vm://c"" java.lang.RuntimeException: java.lang.InterruptedException
    at com.lmax.disruptor.FatalExceptionHandler.handleEventException(FatalExceptionHandler.java:45)
    at com.lmax.disruptor.dsl.ExceptionHandlerWrapper.handleEventException(ExceptionHandlerWrapper.java:18)
    at com.lmax.disruptor.BatchEventProcessor.handleEventException(BatchEventProcessor.java:257)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:187)
    at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
    at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.InterruptedException
    at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1640)
    at com.lmax.disruptor.BlockingWaitStrategy.waitFor(BlockingWaitStrategy.java:47)
    at com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(ProcessingSequenceBarrier.java:56)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:159)
    ... 4 more
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 40.05 s – in org.apache.camel.component.disruptor.vm.DisruptorVmInOutChainedTest",No comments found
21186,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-06T16:08:59+0000,1725638939,2024-09-11T08:44:32+0000,2024-09-11T08:44:32+0000,"https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_BatchGetSecretValue.html
This will help on the cost side.",No comments found
21185,Bug,Claus Ibsen,Mark Wimpory,4.7.0,4.8.0,2024-09-06T08:07:55+0000,1725610075,2024-09-07T07:25:02+0000,2024-09-07T07:25:02+0000,The docs state that the shutdown timeout can be set via JMX.  However I cannot find this setting on the bean.  I will attach a screenshot,No comments found
21184,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-09-06T05:39:16+0000,1725601156,2025-01-06T13:35:26+0000,2025-01-06T13:35:26+0000,Lets see if we can make more components support BrowseableEndpoint,No comments found
21183,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-06T05:38:17+0000,1725601097,2024-09-09T11:10:21+0000,2024-09-09T11:10:21+0000,"The method currently
List<Exchange> getExchanges();
 
Should have a limit and filter predicate so you can filter first",No comments found
21182,Bug,Claus Ibsen,Claus Ibsen,4.7.0,4.8.0,2024-09-06T05:21:25+0000,1725600085,2024-09-06T05:24:18+0000,2024-09-06T05:24:18+0000,"ERROR StatusConsoleListener Unable to locate appender ""out"" for logger config ""loggingJson""",No comments found
21181,Improvement,Unassigned,Otavio Rodolfo Piske,None,None,2024-09-05T13:59:36+0000,1725544776,2024-09-12T08:02:54+0000,,"Currently our code has a very rudimentary way to generate String-based output (i.e.: such as those used for the DevConsole). 
Typically, we generate those strings appending code using a StringBuilder over multiple append calls, spawning several lines of code and, in many cases, generating transient objects in the process.
In some other (much worse) cases, we concatenate them.
The code snippets below present some examples of the kind of thing we do.
JvmDevConsoleFile:
...
DefaultAsyncProcessorAwaitManager:
BacklogTracer:
This approach has several problems:
1. Maintenance hell: this approach leads to code that is hard to read, modify and maintain. It is also usually hard to test due to tightly coupling the String generation with the data sources.
2. It leads to performance degradation if the underlying buffer is not properly sized. 
3. It can also lead to performance degradation due to increased GC pressure caused by an excessive creation of transient objects. 
4. Typically, the methods generating the objects are so large that they are not inlinable by JIT.
-In particular, problem number 3 makes the whole set of *Console classes entirely unsuitable for high-performing / low-latency integrations. -
Update: I had originally singled out console code as a pain point, but looking further, there are other places that could lead to code like this in production (i.e.: the code in camel-management is also badly affected by this).",No comments found
21180,Bug,Unassigned,Harish Annamalai,3.22.0,None,2024-09-05T13:49:09+0000,1725544149,2024-09-07T06:59:21+0000,2024-09-05T14:12:54+0000,"We have come across a special case when Simple Expression is used to invoke OGNL replaceAll of String method with regex. The expression evaluation fails when the replaceAll is called with a regular Expression with only Special Character such as \\r\\n .
Examples 1:
from(""timer:getter?period=1000&repeatCount=1"")
                .setBody(constant(""foobar\nfoobar""))
                .setBody(simple(""${body.replaceAll('[o\\r\\n]','')}""))
                .to(""log://expr"")
                .end();
Output:
[ timer://getter] expr                                     : Exchange[ExchangePattern: InOnly, BodyType: String, Body: fbarfbar]
Here the replaceAll works correctly.
However, in Example 2:
from(""timer:getter?period=1000&repeatCount=1"")
                .setBody(constant(""foobar\nfoobar""))
                .setBody(simple(""${body.replaceAll('\\r\\n','')}""))
                .to(""log://onlyspecial"")
                .end();
The Example 2 fails with expression:
Caused by: java.lang.IllegalArgumentException: name must be specified and not empty
We find it strange because when the replaceAll Simple expression itself creates a new line in case of \\r\\n while it handles it correctly if the expression is r
n.
using a valid regular expression \\r\\n fails, while `\r\n' works correctly.
We are using Camel 3.x and we have used bodyOneLine as an alternative. However, the OGNL expression seems to behave weirdly when it is used within Square Brackets , for example \\t also fails in ${body.replaceAll('\\t','')}
It appears simple expression parser is unable to handle only Escape Sequences, even [o\\t] works.",No comments found
21179,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-05T13:41:50+0000,1725543710,2024-09-11T06:07:52+0000,2024-09-11T06:07:52+0000,"There was a question about Hashicorp Vault support in Camel-Karavan
https://github.com/apache/camel-karavan/issues/1348
As of today, this is not feasible, mainly because the ""/"" symbol is used to distinguish between the secret name and the subkey you want to resolve.
To complete this issue we might need to review the syntax, so something like this should be done
This could extended to the other functions, but since it is a breaking change it won't go in 4.8.0 and it will need to be documented in the migration guide.
Essentially we'll need to introduce a different symbol for prefixing the subkey.",No comments found
21178,New Feature,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-05T12:39:16+0000,1725539956,2024-09-05T17:22:24+0000,2024-09-05T17:22:24+0000,Lets see if we can make a camel cmd browse --endpoint=activemq:cheese --limit=10 to browse pending messages on the queue and so forth,No comments found
21177,Improvement,James Netherton,James Netherton,None,4.8.0,2024-09-05T09:22:38+0000,1725528158,2024-09-05T09:45:04+0000,2024-09-05T09:45:04+0000,"The main motivation here is for Camel Quarkus. It'd be nice to avoid doing resource discovery in a static initializer within DatasonnetLanguage and allow any discovered resources to be passed in via a constructor.
On CQ, this avoids the need for classgraph since resource discovery can be done at build time.",No comments found
21176,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-04T18:48:14+0000,1725475694,2024-09-05T04:35:47+0000,2024-09-05T04:35:47+0000,exchange variables are new to Camel and we can add support for this in DefaultExchangeHolder. It would be similar to exchange properties.,No comments found
21175,Improvement,Aurélien Pupier,Aurélien Pupier,None,4.8.0,2024-09-04T14:49:19+0000,1725461359,2024-09-05T07:22:04+0000,2024-09-05T07:22:04+0000,"I think it would be convenient to automatically add package name when creating a Camel route with Java DSL in a src/main/java subfolder.
it will allow to use it directly inside Camel Quarkus and Camel Spring Boot projects.
Having a package name still allow to launch with Camel Jbang directly.",No comments found
21174,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-04T13:38:51+0000,1725457131,2024-09-13T11:49:18+0000,2024-09-13T11:49:18+0000,"When users just want to log message body or header with a little bit of their own text, then groovy sometimes is easier as you dont need to use ${ } placeholders,
We can have some kind of option to enable using groovy for the log EIP.",No comments found
21173,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T13:26:01+0000,1725456361,2024-09-05T09:59:43+0000,2024-09-05T09:59:43+0000,No description available,No comments found
21172,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T13:25:47+0000,1725456347,2024-09-05T13:59:49+0000,2024-09-05T13:59:49+0000,No description available,No comments found
21171,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T10:46:42+0000,1725446802,2024-09-04T13:50:36+0000,2024-09-04T13:50:36+0000,No description available,No comments found
21170,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-04T10:15:03+0000,1725444903,2024-09-04T14:14:24+0000,2024-09-04T14:14:24+0000,"When you use camel run and that it may immedietely start processing messages or if you use kafka then the logs get spammed by kafka on startup.
Then its easy to miss what happened on startup, and you would need to scroll up, or something.
We can make the camel log command easy to just show the startup logs
camel log --startup
And if we have a dev console that can capture this then its also easier available for other tooling.",No comments found
21169,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T09:07:02+0000,1725440822,2024-09-04T12:40:52+0000,2024-09-04T12:40:52+0000,No description available,No comments found
21168,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-04T07:22:48+0000,1725434568,2024-09-04T13:34:49+0000,2024-09-04T13:34:49+0000,"Camel makes it possible to configure via properties file / JVM sys / ENV variable and so on. And users can override these values which is common in docker containers / k8s etc. However you may not always easily know what the actual value used by Camel really is.
We print this in a startup summary in camel-main, and we should have this information as a dev console and jbang cli command as well. This makes it accessible for wider tooling also.",No comments found
21167,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T06:18:14+0000,1725430694,2024-09-04T08:29:09+0000,2024-09-04T08:29:09+0000,No description available,No comments found
21166,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-04T06:17:47+0000,1725430667,2024-11-18T08:54:53+0000,2024-11-18T08:54:53+0000,No description available,No comments found
21165,Bug,Unassigned,Nilanjan Gogoi,4.7.0,None,2024-09-04T06:00:23+0000,1725429623,2024-09-04T06:23:00+0000,2024-09-04T06:15:20+0000,"Hi,
I am trying to connect to EventHub Emulator and Azurite storage blob container emulator from my Springboot service which is using the latest Azure SDK BOM(1.2.26) to support azure test containers and Apache Camel v4.7.0 (primarily for Azure Endpoint route builder configurations). I am seeing 403 Blob storage authentication failures due to signature mismatch. Could you kindly suggest which version of Azure SDK bom and Apache Camel are compatible for recent Emulators to unblock this issue ? Let me know if any more details are needed from my end.
Below is the snippet from my error stacktrace:
Error occurred in partition processor for partition NONE, com.azure.storage.blob.models.BlobStorageException: If you are using a StorageSharedKeyCredential, and the server returned an error message that says 'Signature did not match', you can compare the string to sign with the one generated by the SDK
Below are the properties my application.yaml using azure event hub emulator configurations
azure:
container-name: ""static-container""
event-hub-connection-string: ""Endpoint=sb://localhost;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SAS_KEY_VALUE;UseDevelopmentEmulator=true;""
inbound-event-hub-consumer-group: cg1
inbound-event-hub-name: ev1
namespace: emulatorns1
outbound-event-hub-consumer-group: cg2
outbound-event-hub-name: ev2
storage-account-name: devstoreaccount1
storage-connection-string: ""AccountName=devstoreaccount1;AccountKey=accountkey;DefaultEndpointsProtocol=http;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;""
Thanks,
Nilanjan Gogoi",No comments found
21164,Bug,Unassigned,Claus Ibsen,"4.4.3,4.7.0","4.4.4,4.8.0",2024-09-04T04:52:28+0000,1725425548,2024-09-07T06:12:47+0000,2024-09-07T06:12:47+0000,But when access http://localhost:8080/restContext/api the OpenApi json doesn't present the resolved placeholders:,No comments found
21163,Bug,Zheng Feng,Zheng Feng,None,4.8.0,2024-09-04T00:07:45+0000,1725408465,2024-09-04T08:42:11+0000,2024-09-04T08:42:11+0000,"Currently this does not work OOTB. The problem is that the ConnectionFactory and DataSource are synthetic ClientProxy beans. When you do reflection on them, the methods that get returned are those of the generated proxy and not the actual target type.
We could maybe investigate doing ClientProxy.unwrap before beans get returned from RuntimeBeanRepository.",No comments found
21162,Bug,Claus Ibsen,Cristian,"4.4.0,4.5.0,4.6.0,4.7.0",4.8.0,2024-09-03T12:30:39+0000,1725366639,2024-09-05T07:13:40+0000,2024-09-05T07:13:40+0000,"During a migration path that will take us from Camel 3.x to Camel 4.x we encountered a problem with one of our Routes.
Our Route tries to save the body of an http request to disk.
The raised error preventing the correct execution of the route is the following: ""Cannot reset stream from file /tmp/camel-cache/cos7703786668416470635.tmp"".
After debugging to understand the reason, I noticed that the execution flow compared to version 3 has changed with the introduction of the change that leads the WrappedInputStream class to implement the StreamCache -> Var headers interface (#12960).
In fact, a downgrade to version 4.3.0, the version prior to the introduction of the change, solved our problem and the route started working again.
The problem, which occurs when streamcaching spools to disk, is due to the fact that in the convertToStreamCache method of the StreamCachingHelper class the body of the message enters the else because it is an instance of StreamCache and does not continue towards the tryStreamCache method as in previous versions.
In our case, when we save the body of the http request to disk, the temp file used for spooling is deleted (FileInputStreamCache.cleanUpTempFile) before all StreamCache resets are performed (StreamCachingAdvice.after).
At that point, during the StreamCache reset, the code finds that the temp file has been deleted and raises the reported RuntimeCamelException exception.
I attached an example that reproduces the problem.",No comments found
21161,Bug,Andrea Cosentino,Guillem Folch,"4.4.0,4.7.0","4.4.4,4.8.0",2024-09-03T10:52:46+0000,1725360766,2024-09-04T06:52:37+0000,2024-09-04T06:50:04+0000,"The Camel component camel-aws2-s3 has a producer boolean option called multiPartUpload.
Based on the documentation, when this attribute is set to true, the upload will be with multipart format in case the file is larger than the partSize (another attribute). 
This is not happening, when multiPartUpload is set to true, the upload is always in multipart format unless the fileSize is 0, which is a corner case.
The root cause of the problem is in the  AWS2S3Producer code around line 151.
        long partSize = getConfiguration().getPartSize();
        if (contentLength == 0 && contentLength < partSize) {
            // optimize to do a single op if content length is known and < part size
            LOG.debug(""File size < partSize. Uploading file in single operation: {}"", filePayload);
            processSingleOp(exchange);
            return;
        }
If the contentLength is not 0, the condition ""contentLength < partSize"" is never met so the upload is always done as multipart.
This is really affecting performance upload when files are below the partSize.
The proposed fix is just to change the condition to: 
if (contentLength == 0 || contentLength < partSize) {
...",No comments found
21160,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-09-03T09:42:20+0000,1725356540,2024-09-03T11:05:14+0000,2024-09-03T11:05:14+0000,"The consumer is not being properly configured after creation, which may lead to problems with error handling and API misuse.",No comments found
21159,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-09-03T09:11:25+0000,1725354685,2024-09-03T09:45:00+0000,2024-09-03T09:45:00+0000,This generated invalid metadata in the catalog.,No comments found
21158,Wish,Claus Ibsen,Raymond,4.7.0,4.9.0,2024-09-03T08:34:46+0000,1725352486,2024-09-17T11:09:07+0000,2024-09-17T11:09:07+0000,"Currently, the simple language has ${exception} available as variable. When checking other expression languages like Groovy, JavaScript, Velocity etc. these are often not available.
I tried to get the exception in those languages through the exchange variable which is mostly available, something like:
exchange.getException()
or
exchange.exception
But these returned null.
It would be more convenient when the exception is directly available as a predefined variable.",No comments found
21157,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-03T07:53:52+0000,1725350032,2024-09-03T09:19:22+0000,2024-09-03T09:19:22+0000,You may want to start a task that keeps running forever instead of small period tasks.,No comments found
21156,Improvement,James Netherton,James Netherton,None,4.8.0,2024-09-03T06:42:14+0000,1725345734,2024-09-03T07:06:51+0000,2024-09-03T07:06:51+0000,Currently you can use the SecretPath header on the getSecret operation. It'd be nice if you could do likewise for createSecret & deleteSecret.,No comments found
21155,Bug,Unassigned,Ricardo Martinez,4.8.0,4.8.0,2024-09-02T15:01:51+0000,1725289311,2024-09-02T15:23:02+0000,2024-09-02T15:23:02+0000,"In the model json for the poll eip there's no `parameters` option, whereas in the Camel YAML DSL schema there is",No comments found
21154,Bug,James Netherton,James Netherton,None,"4.4.4,4.8.0",2024-09-02T13:42:01+0000,1725284521,2024-09-02T14:25:16+0000,2024-09-02T14:25:16+0000,"It can happen that the REST invocation for fetching secrets returns a 404. Internally, spring-vault will return null from VaultTemplate.read.
This is not handled in HashicorpVaultProducer, so an NPE is thrown when the secret data is attempted to be extracted from the VaultResponse object.",No comments found
21153,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-09-02T13:32:21+0000,1725283941,2024-12-03T09:14:44+0000,2024-09-03T11:05:34+0000,"Currently, our implementation of function calling requires potential consumers of those routes to be directly linked to those producers. This means that there is an exclusive 1-to-MANY relationship between the producer and the consumers.
This implementation brings limitations and problems:",No comments found
21152,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.9.0,2024-09-02T08:25:10+0000,1725265510,2024-12-03T08:59:07+0000,2024-09-26T13:38:09+0000,"The Camel Jbang kubernetes plugin use the maven org.apache.camel.k:camel-k-crds for the traits.
It does not make sense to have Camel K dependency in the Kubernetes plugin. We need to remove this dependency
https://github.com/apache/camel/blob/9214670e640d7b3df39be2aa2d4f48ede2ce8ee4/dsl/camel-jbang/camel-jbang-plugin-kubernetes/pom.xml#L64-L70",No comments found
21151,Test,Unassigned,Adriano Machado,4.8.0,None,2024-09-01T23:42:28+0000,1725234148,2025-01-03T10:40:47+0000,,"Multiple tests are failing on MacOS using Java 21.0.4 on the main branch.
For `camel-openapi-java`, it seems that there's a problem with timezones on my machine, I'm checking what's happening.
For `camel-jms`, it is apparently failing due to connection issues to the container used in the test.
For `camel-opentelemetry`, I think the issue is related to CAMEL-19667, which https://github.com/apache/camel/pull/15182 introduced test improvements.",No comments found
21150,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-30T15:17:14+0000,1725031034,2024-09-01T05:51:36+0000,2024-09-01T05:51:36+0000,"So the camel trace command will then enable tracing on-demand, where you can also use it to start/stop tracing.
camel trace --start
camel trace
camel trace --stop
This avoids doing tracing when its not really going to be in use.",No comments found
21149,Bug,Unassigned,Aurélien Pupier,4.7.0,4.8.0,2024-08-30T12:11:15+0000,1725019875,2024-09-02T07:56:45+0000,2024-09-02T07:56:45+0000,"When using the the environment variable CAMEL_DEBUGGER_SUSPEND or the system property org.apache.camel.debugger.suspend to true (see https://camel.apache.org/manual/debugger.html#_camel_route_debugger_through_jmx ), the route is awaiting at start but when attach is called, the route stays blocked.
When setting to false, the route is started and the debug is working fine.",No comments found
21148,Bug,Claus Ibsen,Bruno Meseguer,4.8.0,4.8.0,2024-08-30T08:21:15+0000,1725006075,2024-08-31T08:53:12+0000,2024-08-31T08:52:22+0000,"Running the following commands:
also with:
It seems to get Camel JBang in a loop, stuck at startup time. This is the output:",No comments found
21147,Test,Unassigned,Aurélien Pupier,4.8.0,4.8.0,2024-08-30T07:47:14+0000,1725004034,2024-09-13T07:04:27+0000,2024-09-13T07:04:27+0000,it has failed on the last 5 builds on all platforms:,No comments found
21146,Test,Aurélien Pupier,Aurélien Pupier,4.8.0,4.8.0,2024-08-30T07:43:48+0000,1725003828,2024-08-30T12:41:48+0000,2024-08-30T12:41:48+0000,they failed on all platforms 8 times in a row:,No comments found
21145,Test,Unassigned,Aurélien Pupier,4.8.0,4.10.0,2024-08-30T07:40:34+0000,1725003634,2025-01-09T09:20:23+0000,2025-01-09T09:20:23+0000,it failed 10 times in a row:,No comments found
21144,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-29T17:48:50+0000,1724953730,2024-08-30T15:17:27+0000,2024-08-30T12:57:34+0000,"When you split big data, and use group exchange (bad as its in-memory too).",No comments found
21143,Test,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,4.8.0,2024-08-29T12:44:43+0000,1724935483,2024-08-31T07:51:32+0000,2024-08-31T07:51:32+0000,"I have noticed that Tahu tests sometimes block my own test systems and cause the build to hang for an indefinite amount of time.
A thread dump is attached for reference.",No comments found
21142,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-29T12:34:30+0000,1724934870,2024-09-04T08:29:04+0000,2024-09-04T08:29:04+0000,"We have already reload tasks in AWS, GCP and Azure Key Vault for triggering a context reload on particular events. The aim of this issue is to do the same in a cloud context, when we are using a particular secret or configmap from the Kubernetes environment.",No comments found
21141,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-08-29T10:18:49+0000,1724926729,2024-08-30T13:29:14+0000,2024-08-30T13:28:53+0000,"With the lazy = true|false on @BindToRegistry then we could also have lazy in beans created in xml/yaml DSL in the model.
This may be more complicated when they use builder/factory methods and other means. So this is just to see how complex it may be, and if not, then we can consider having lazy. As users can then declare beans that would only be created if in-use.",No comments found
21140,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-29T10:16:18+0000,1724926578,2024-08-30T13:27:17+0000,2024-08-30T13:27:17+0000,"You may want to just create a class and have it automatic register with id, and then also have lifecycle methods invoked.
We have init and destroy methods on beans created in yaml/xml DSL.
We can also consider if the class is a Camel `org.apache.camel.Service` then it would automatic use this for init / destroy methods so users can rely on this.",No comments found
21139,Bug,Claus Ibsen,Claus Ibsen,4.7.0,4.8.0,2024-08-29T08:55:40+0000,1724921740,2024-08-29T09:04:05+0000,2024-08-29T09:04:05+0000,This works for camel-main but not for SB or Q,No comments found
21138,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-08-29T06:47:25+0000,1724914045,2024-09-16T12:15:37+0000,2024-09-16T12:15:31+0000,When using beans via @BindToRegistry we should make these lazy as we don't need to create these beans when discovering dependencies and doing export,No comments found
21137,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-28T19:13:01+0000,1724872381,2024-08-29T10:19:06+0000,2024-08-29T08:32:55+0000,"You may want to lazy bind beans so they are only created / started on-demand, such as when its used on class or method.",No comments found
21136,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-28T12:04:59+0000,1724846699,2024-09-05T11:33:11+0000,2024-09-05T11:33:11+0000,This can help with the `camel cmd send` command to be able to send to running Camel via HTTP,No comments found
21135,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-28T11:45:51+0000,1724845551,2024-08-28T12:44:45+0000,2024-08-28T12:44:45+0000,No description available,No comments found
21134,Bug,Claus Ibsen,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-28T11:29:21+0000,1724844561,2024-08-29T09:54:12+0000,2024-08-29T09:24:41+0000,"Related to CAMEL-21133.
Some users might be inclined to try generating the project with the correct dependencies in one shot as a way to try to work-around the problem:
camel export --dependency=io.quarkiverse.langchain4j:quarkus-langchain4j-core:0.16.4 --dependency=io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.16.4 --runtime=quarkus Weather.java
However, that fails with:
java.lang.IllegalStateException: Unable to locate CDIProvider)",No comments found
21133,Bug,Unassigned,Otavio Rodolfo Piske,4.7.0,4.9.0,2024-08-28T11:24:01+0000,1724844241,2024-09-17T11:10:19+0000,2024-09-17T11:10:19+0000,"When trying to export a project using the export feature, the resulting project does not compile due to the following error (see build.log attachment for details).
Step 1: export the project
camel export --dependency=dev.langchain4j:langchain4j-core:0.33.0 --dependency=dev.langchain4j:langchain4j-open-ai:0.33.0 --runtime=quarkus Weather.java
Step 2: try to build the generated project
mvn verify
Result:
Compilation fails with the following error:
[error]: Build step io.quarkiverse.langchain4j.deployment.BeansProcessor#handleProviders threw an exception: io.quarkus.runtime.configuration.ConfigurationException: A ChatLanguageModel or StreamingChatLanguageModel bean was requested, but no langchain4j providers were configured. Consider adding an extension like 'quarkus-langchain4j-openai'
The problem is that the generated project should be using io.quarkiverse.langchain4j:quarkus-langchain4j-core:0.16.4 and io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.16.4 instead.
Adjusting the pom.xml file to manually replace the dependencies solve the problem.",No comments found
21132,Task,Unassigned,Jiri Ondrusek,None,None,2024-08-28T10:45:06+0000,1724841906,2024-08-28T10:45:06+0000,,Automatic CLI tests are missing in https://github.com/apache/camel-upgrade-recipes/,No comments found
21131,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.9.0,2024-08-28T10:38:13+0000,1724841493,2024-12-05T08:50:28+0000,2024-12-05T08:50:28+0000,"Test camelAPIsPropertiesTest is wrongly defined (default method uses wrong active recipe).
If the issue is fixed, it uncovers a missing recipe in the list of 4.0.yaml recipe.",No comments found
21130,Improvement,Zheng Feng,Claus Ibsen,None,4.8.0,2024-08-28T10:35:26+0000,1724841326,2024-08-29T14:12:27+0000,2024-08-29T14:12:26+0000,Lets see if we can have .java supported as well. Currently it works for xml/yaml routes. But java are added package name during export. In dev mode we can avoid this and copy to root so the source can copy via symbolic link for supporting reload on save.,No comments found
21129,Bug,Claus Ibsen,Thomas Jodes,4.7.0,4.8.0,2024-08-28T10:05:09+0000,1724839509,2024-08-28T10:51:55+0000,2024-08-28T10:41:16+0000,"Rest Route creation fails with a NPE, setup using
restConfiguration().clientRequestValidation(true)
with a JSON-binding to a Java type like:
rest(""/foo"").get(""/bar"").outType(MyType.class).to(""bean:one?method=baz"").
Root cause:  Changes from 4.6 to 4.7 in RestBindingAdvisorFactory#build(...)
local variable ""outJson"" is always null, leading to the NPE for sure at the line seen in the exception trace below.
In 4.6, ""outJson"" is created for sure here
In 4.7, ""outJson"" remains null here (because of the new if-else) and will lead to the NPE here.
Caused by: java.lang.NullPointerException: Cannot invoke ""Object.getClass()"" because ""target"" is null
    at org.apache.camel.impl.engine.IntrospectionSupport.setProperty(IntrospectionSupport.java:551)
    at org.apache.camel.impl.engine.IntrospectionSupport.setProperty(IntrospectionSupport.java:691)
    at org.apache.camel.impl.engine.DefaultBeanIntrospection.setProperty(DefaultBeanIntrospection.java:220)
    at org.apache.camel.support.processor.RestBindingAdviceFactory.setupJson(RestBindingAdviceFactory.java:174)
    at org.apache.camel.support.processor.RestBindingAdviceFactory.build(RestBindingAdviceFactory.java:80)
Setting restConfiguration().clientRequestValidation(false) will overgo the critical unit of code.",No comments found
21128,Improvement,Saravanakumar Selvaraj,Claus Ibsen,None,4.9.0,2024-08-28T09:18:38+0000,1724836718,2024-10-17T12:09:02+0000,2024-10-16T19:25:56+0000,"The SSL in camel-core allows to setup trust store and certifcates and all of that. However sometimes you just need to have a trust all (for development purpose) and that is harder to do.
https://github.com/apache/camel-karavan/discussions/1366
We should have a way to make this easier, and also make some WARN logging that this is for development only.",No comments found
21127,Task,Adriano Machado,Aurélien Pupier,4.7.0,4.9.0,2024-08-28T09:11:44+0000,1724836304,2024-09-09T10:28:39+0000,2024-09-09T10:28:39+0000,"it is used in several places https://github.com/search?q=repo%3Aapache%2Fcamel%20%22import%20org.apache.maven.plugins.annotations.Component%22&type=code
it was deprecated in org.apache.maven.plugins:maven-plugin-plugin  3.15.0 , see MPLUGIN-530",No comments found
21126,Bug,Claus Ibsen,Claus Ibsen,4.7.0,4.8.0,2024-08-28T08:08:42+0000,1724832522,2024-08-28T08:55:14+0000,2024-08-28T08:55:14+0000,"2024-08-28 09:54:16.095  INFO 25130 — [ ReloadOnDemand] camel.support.RouteWatcherReloadStrategy : Reloading properties: file:reload-csv2/application.properties. (Only Camel routes and components can be updated with changes)
2024-08-28 09:54:16.103  WARN 25130 — [ ReloadOnDemand] amel.support.RouteOnDemandReloadStrategy : Error reloading routes due to Cannot find RoutesBuilderLoader in classpath supporting file extension: csv. This exception is ignored.
java.lang.IllegalArgumentException: Cannot find RoutesBuilderLoader in classpath supporting file extension: csv
	at org.apache.camel.impl.engine.DefaultRoutesLoader.resolveRoutesBuilderLoader(DefaultRoutesLoader.java:319) ~[camel-base-engine-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.impl.engine.DefaultRoutesLoader.findRoutesBuilders(DefaultRoutesLoader.java:124) ~[camel-base-engine-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.impl.engine.DefaultRoutesLoader.findRoutesBuilders(DefaultRoutesLoader.java:101) ~[camel-base-engine-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.impl.engine.DefaultRoutesLoader.updateRoutes(DefaultRoutesLoader.java:292) ~[camel-base-engine-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.support.RouteWatcherReloadStrategy.onRouteReload(RouteWatcherReloadStrategy.java:290) ~[camel-support-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.support.RouteOnDemandReloadStrategy.doOnReload(RouteOnDemandReloadStrategy.java:114) ~[camel-support-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.support.RouteOnDemandReloadStrategy.onReload(RouteOnDemandReloadStrategy.java:74) ~[camel-support-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.impl.console.ReloadDevConsole.lambda$doCallJson$1(ReloadDevConsole.java:102) ~[camel-console-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) [?:?]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]
	at java.base/java.lang.Thread.run(Thread.java:840) [?:?]",No comments found
21125,Test,Unassigned,Aurélien Pupier,4.8.0,4.8.0,2024-08-27T14:42:43+0000,1724769763,2024-09-18T13:18:23+0000,2024-09-18T13:18:19+0000,"they are often failing, both in opentelemetry and observation (for instance failed in the last 3 run)",No comments found
21124,Bug,Unassigned,Marco Carletti,4.7.0,4.8.0,2024-08-27T14:31:56+0000,1724769116,2024-08-28T07:24:23+0000,2024-08-28T07:24:23+0000,"As documented, the properties can be loaded from the application.properties file
In the current version, it is not possible anymore. Downgrading the Camel JBang version to 4.6.0 it works
Steps to reproduce (to be executed in an empty folder):
expected message:
current message:",No comments found
21123,Test,Unassigned,Aurélien Pupier,4.8.0,4.8.0,2024-08-27T12:30:46+0000,1724761846,2024-09-13T07:05:19+0000,2024-09-13T07:05:19+0000,"This test is often failing (and often with all the parameterized tests when it happens):
it failed on ubuntu and ppc64le
in the last 5 builds, there was at least one failure of these parameterized tests
the timeout mentioned was already doubled recently from 10 to 20 seconds. This is suspicious and given that iti related to a ""concurrent"" access, there might be a real problem in th elogic.
I wasn't able to reproduce locally even after launching a lot of times",No comments found
21122,Improvement,Unassigned,Otavio Rodolfo Piske,4.7.0,4.x,2024-08-27T12:07:51+0000,1724760471,2024-08-27T12:33:46+0000,,"Currently, AvailablePort only works when defined as a static field. Some components, such as Jetty, need them to be transient (i.e.: regenerated after every test), as such the current implementation is not compatible (it causes flakiness on camel-jetty).",No comments found
21121,Test,Unassigned,Claus Ibsen,None,4.x,2024-08-27T08:48:38+0000,1724748518,2025-01-03T10:43:29+0000,2025-01-03T10:43:29+0000,No description available,No comments found
21120,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-26T17:13:11+0000,1724692391,2024-08-30T15:08:13+0000,2024-08-30T15:08:13+0000,"When using inlined groovy script in camel-jbang, then on reload (such as --dev) then the cache should be flushed so groovy is recompiled and updated.",No comments found
21119,New Feature,Guillaume Nodet,Guillaume Nodet,None,4.8.0,2024-08-26T14:09:56+0000,1724681396,2024-08-26T14:11:14+0000,2024-08-26T14:11:14+0000,Provides better support for conveying java.nio.file.Path objects in messages with the same converters that are registered for java.io.File objects.,No comments found
21118,Improvement,Marco Carletti,Marco Carletti,None,4.8.0,2024-08-26T08:12:14+0000,1724659934,2024-08-28T13:29:37+0000,2024-08-28T13:29:37+0000,"Add an example to show how to work with Camel CXF and OpenTelemetry, using cxf-integration-tracing-opentelemetry module",No comments found
21117,Improvement,Zheng Feng,Zheng Feng,None,4.8.0,2024-08-26T07:20:34+0000,1724656834,2024-09-05T14:58:28+0000,2024-09-05T14:58:28+0000,No description available,No comments found
21116,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-26T06:17:25+0000,1724653045,2024-08-26T07:19:28+0000,2024-08-26T07:19:28+0000,No description available,No comments found
21115,Bug,Unassigned,Eugene Berman,4.7.0,None,2024-08-23T15:07:57+0000,1724425677,2024-08-23T18:50:33+0000,2024-08-23T18:50:33+0000,"I have a custom unit test which requires access to Camel context. My code is as simple as:
@QuarkusTest
public class MyCustomTest {
@Inject
protected CamelContext camelContext;
It worked just fine prior to upgrading to Camel 4.7.0 and Quarkus 3.13.0 but now I'm getting error: java.lang.NullPointerException: Cannot invoke ""org.apache.camel.CamelContext.getCamelContextExtension()"" because ""camelContext"" is null and running the code in the debug mode confirms that the camelContext is indeed null. Is it a known bug?",No comments found
21114,Bug,Claus Ibsen,Andre Weickel,"3.14.10,3.22.2",4.8.0,2024-08-23T12:36:15+0000,1724416575,2024-09-02T11:14:09+0000,2024-09-02T11:14:09+0000,"A transacted route with ZipSplitter and Aggregation Strategy does not aggregate the last zip file entry. The issue only occurs for transacted routes.
Example:
Zip Archive
Both splits are processed but only for the first exchange (A.xml) the aggregate method is called.
For a zip archive with two entries the doRun() method of MulticastTransactedTask is called three times. The third time iterator.next() returns null although hasNext() was true. As a result the doDone() method is called but there is still a task in the queue (with the second exchange). This task is processed after doDone() was executed but it’s not aggregated because of a done check in aggregate() of MulticastTransactedTask.
We found the problem in Camel 3.14, but it is still present in Camel 3.22.
It can be reproduced with the following test (it works if you remove the transacted tag from the route)",No comments found
21113,Dependency upgrade,Unassigned,Claus Ibsen,None,4.4.4,2024-08-23T07:57:22+0000,1724399842,2024-08-26T08:08:29+0000,2024-08-26T08:08:29+0000,No description available,No comments found
21112,Bug,Claus Ibsen,Alexander Zobkov,"3.22.1,4.7.0","3.22.3,4.4.4,4.8.0",2024-08-22T13:14:16+0000,1724332456,2024-08-27T13:11:25+0000,2024-08-26T13:36:47+0000,"It seems there is an issue when using simple language to lookup parameters on producer endpoint in batch mode, like the following:
DefaultSqlPrepareStatementStrategy and particular method lookupParameter(…)  in class PopulateIterator tries to evaluate the specified simple expression on a body of the exchange. However when body is iterator that contains the parameter iterators for batch mode (as told in the doc: https://camel.apache.org/components/4.4.x/sql-component.html#_treatment_of_the_message_body) then simple language expression written for an object to be returned by the parameter iterator makes no sense and will always fail.
It seems when batch mode is enabled than DefaultSqlPrepareStatementStrategy.PopulateIterator needs to create a kind of fake Exchange from an object to be returned by the parameter iterator and pass to the simple language engine.
Vanilla code
https://github.com/apache/camel/blob/0e6dd1ea1ddb566fc4ee4eb4757d4a3c703ca06f/components/camel-sql/src/main/java/org/apache/camel/component/sql/DefaultSqlPrepareStatementStrategy.java#L262
Suggested code change:",No comments found
21111,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.x,2024-08-22T13:00:31+0000,1724331631,2024-12-16T08:54:20+0000,,"Upgrade tests are currently resolving all camel-dependencies required for the test from the highest version defined by the recipe. This brings a lot of dependencies (with recipes 4.6->4.7 the number of test dependencies is 50+)
The highest possible version might not be neccessary.
Let say change in camel-api is happening between version 4.7.0 and 4.6.0. Current junit test would load dependency camel-api:4.6.0 (eventhough camel-ap:4.5.0 might be already loaded and would satisfy the recipe test)
I think that it should be possible to change resolving so the number of dependencies would stay lower.",No comments found
21110,New Feature,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-22T11:10:23+0000,1724325023,2024-09-03T11:05:01+0000,2024-09-03T11:05:01+0000,"Lets make it easy to have some camel routes and html/js/png files so you can have a web front page and let Camel automatic service this via its embedded http server (platform-http).
And then when export to Q/SB then these files should be in src/main/resources (and whatever folder they may have for html stuff).
And the files should not be cached so you can update and reload the webpage for updates.
This makes it easier to build prototypes with camel and web apps.
Its just for serving those files, not for a template library like thymaleaf or qute etc.",No comments found
21109,Bug,Claus Ibsen,Harish Annamalai,3.x,"3.22.3,4.4.4,4.8.0",2024-08-22T10:47:04+0000,1724323624,2024-08-26T07:51:54+0000,2024-08-26T07:51:54+0000,"Choice evaluation works inconsistently if the condition contains Predicates with String, but the value is float.
Consider the choice expression:
${exchangeProperty.left} >= ${exchangeProperty.right}
If the both the properties are 'left' and 'right', but value contained in them is float like '4.0' '7.5' etc, the expression is compared as Strings and returns false. However, if the value contained in them is ""Pure"" Integer, then they are compared as ""Numbers"" and Comparision returns true.
Please see the Examples:
Example 1:
from(""timer:getter?period=1000&repeatCount=1"")
                .setProperty(""left"", simple(""40""))
                .setProperty(""right"", simple(""7.5""))
                .choice()
                .when(simple(""${exchangeProperty.left} >= ${exchangeProperty.right}""))
                .to(""log://match"")
                .otherwise()
                .to(""log://otherwise"")
                .end();
                
The Predicate in Example 1, evaluation returns false for the case above as it compares 40 and 7.5 as Strings.
Example 2:                
        from(""timer:getter?period=1000&repeatCount=1"")
                .setProperty(""left"", simple(""40""))
                .setProperty(""right"", simple(""7""))
                .choice()
                .when(simple(""${exchangeProperty.left} >= ${exchangeProperty.right}""))
                .to(""log://match"")
                .otherwise()
                .to(""log://otherwise"")
                .end();
                
The Predicate in Example 2, evaluation returns true for the case above as it compares 40 and 7 as Numbers.
We debugged the Camel Code, and compared the behavior against Camel 2x, we can see that the predicate evaluation takes ""Double"" also into consideration.
Camel 2x Code:
ObjectHelper.java
public static int typeCoerceCompare(TypeConverter converter, Object leftValue, Object rightValue) {
// if both values is numeric then compare using numeric
        Long leftNum = converter.tryConvertTo(Long.class, leftValue);
        Long rightNum = converter.tryConvertTo(Long.class, rightValue);
        if (leftNum != null && rightNum != null)
// also try with floating point numbers
        Double leftDouble = converter.tryConvertTo(Double.class, leftValue);
        Double rightDouble = converter.tryConvertTo(Double.class, rightValue);
        if (leftDouble != null && rightDouble != null)
Camel 3x Code:
ObjectHelper.java
public static int typeCoerceCompare(TypeConverter converter, Object leftValue, Object rightValue) {
// optimize for common combinations of comparing numbers
        if (leftValue instanceof String && rightValue instanceof String) {
            String leftNum = (String) leftValue;
            String rightNum = (String) rightValue;
            if (isNumber(leftNum) && isNumber(rightNum))
return leftNum.compareTo(rightNum);
        } else if (leftValue instanceof Integer && rightValue instanceof Integer) {",No comments found
21108,Test,Aurélien Pupier,Aurélien Pupier,4.8.0,4.8.0,2024-08-22T08:47:47+0000,1724316467,2024-08-22T10:36:07+0000,2024-08-22T09:57:05+0000,"after a bisect, it started to fail with Junit upgrade https://github.com/apache/camel/commit/89e67f210aa4e1d81c0f984d6fbe7df8a639ff25",No comments found
21107,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2024-08-22T07:57:08+0000,1724313428,2025-01-29T09:12:54+0000,2025-01-29T09:12:54+0000,No description available,No comments found
21106,Task,Claus Ibsen,Claus Ibsen,4.8.0,4.8.0,2024-08-22T07:05:55+0000,1724310355,2024-08-22T10:35:13+0000,2024-08-22T10:35:13+0000,"Recent refactorings removed this which we should add back, so you can easily build and package docker based apps on pure camel.",No comments found
21105,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-22T05:58:48+0000,1724306328,2024-08-22T07:56:26+0000,2024-08-22T07:56:26+0000,No description available,No comments found
21104,Improvement,Claus Ibsen,Aurélien Pupier,None,4.9.0,2024-08-21T13:34:30+0000,1724247270,2024-09-18T10:36:32+0000,2024-09-18T10:36:32+0000,"currently when creating a Camel project , the used files are copied to th enew project;
When it is exported to another folder that sounds fine but when creating in-place, the files sounds as duplicated.
it will facilitate this important use case:",No comments found
21103,New Feature,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-21T11:55:20+0000,1724241320,2024-08-21T13:59:31+0000,2024-08-21T13:59:31+0000,"To make it easier to browse and download the Camel routes and other resource files, that can be used for troubleshooting, and better tooling.",No comments found
21102,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-08-21T11:36:09+0000,1724240169,2024-12-27T12:50:07+0000,,https://aws.amazon.com/about-aws/whats-new/2024/08/amazon-s3-conditional-writes/,No comments found
21101,Bug,Andrea Cosentino,Andrea Cosentino,None,"4.4.4,4.8.0",2024-08-21T07:21:30+0000,1724224890,2024-08-21T09:01:41+0000,2024-08-21T09:01:41+0000,Only the header.,No comments found
21100,Bug,James Netherton,James Netherton,None,4.8.0,2024-08-20T14:16:03+0000,1724163363,2024-08-21T04:19:09+0000,2024-08-21T04:19:09+0000,"Unless I misunderstand something, if you choose to use AZURE_IDENTITY as the credentialType option, then there should be no need to supply either a sharedAccessName or sharedAccessKey. Those are only required when the component automatically builds a connection string (E.g CONNECTION_STRING credentialType option).
But when AZURE_IDENTITY is used, you get a validation error:
I think we can skip this validation for AZURE_IDENTITY, given that all of the authentication info should get discovered by the azure-identity internals.",No comments found
21099,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-20T13:56:58+0000,1724162218,2024-08-21T13:59:24+0000,2024-08-21T13:59:24+0000,"A way to only list files.
And then to load a file in raw mode",No comments found
21098,Task,Otavio Rodolfo Piske,Claus Ibsen,4.8.0,4.8.0,2024-08-20T05:28:25+0000,1724131705,2024-08-21T08:50:10+0000,2024-08-21T08:50:10+0000,"This causes camel-ftp tests to fail, but would fail for other kind of test-infra that would use global store from junit to store values that Camel access.",No comments found
21097,Improvement,Unassigned,Claus Ibsen,None,4.8.0,2024-08-19T14:27:53+0000,1724077673,2024-10-08T10:22:23+0000,2024-08-21T08:50:21+0000,https://stackoverflow.com/questions/78887678/apache-camel-as2-mic-algorithms-restricted-to-md5-and-sha1,No comments found
21096,Bug,Claus Ibsen,Tomek,"4.5.0,4.6.0,4.7.0",4.8.0,2024-08-19T08:29:28+0000,1724056168,2024-08-21T07:14:10+0000,2024-08-19T16:26:52+0000,"In our application we have a base rout builder class in which we would like to intercept all REST routes executions (REST requests)
All our routes extend this class and are constructed like the code below:
This approach worked fine in Camel 3., but in Camel 4. my processor is not executed.
I've made some investigation and:
, but still my processor is not executed after REST request.
Could you please check this issue?",No comments found
21095,New Feature,Unassigned,Claus Ibsen,None,4.x,2024-08-18T08:58:36+0000,1723971516,2025-01-02T16:29:31+0000,,"You can configure this in classic XML DSL (spring) (see CAMEL-20774) and in camel-main/SB you can configure this via properties in camel.ssl.
However it would be great to have it first-class in XML IO and YAML DSL as well so its easier to configure there also and for tooling. Configure SSL is complex and this can help with better tooling assistance.",No comments found
21094,New Feature,Unassigned,ALEXANDRE DAVI ZANELATTO,None,4.8.0,2024-08-16T21:25:59+0000,1723843559,2024-08-20T09:54:28+0000,2024-08-20T09:54:28+0000,Use the PDFMergerUtility from Apache PDFBox to be able to merge multiple PDF files into a single one,No comments found
21093,Bug,Aurélien Pupier,Aurélien Pupier,4.7.0,4.8.0,2024-08-16T14:17:10+0000,1723817830,2024-09-04T15:21:06+0000,2024-08-19T16:35:56+0000,"https://github.com/apache/camel-spring-boot-examples/tree/main/fhir-auth-tx
Uncheck class was added in commons-io 2.12.0 https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/function/Uncheck.html so between the 2 conflicting versions.",No comments found
21092,Bug,Aurélien Pupier,Aurélien Pupier,4.7.0,None,2024-08-16T13:04:19+0000,1723813459,2024-08-19T13:51:19+0000,2024-08-19T13:51:19+0000,"when using Camel JBang init to genrate an xml file, it genrates:
which is giving this xsd validation:",No comments found
21091,Bug,Unassigned,Dylan Piergies,"3.x,4.x",None,2024-08-16T09:57:59+0000,1723802279,2024-08-19T19:39:54+0000,2024-08-19T19:39:46+0000,"The Azure Service Bus consumer makes a call to complete messages even when the receive mode is RECEIVE_AND_DELETE. Messages do not require acknowledgement in this receive mode and the Service Bus client throws an exception when attempting to complete messages:
java.lang.UnsupportedOperationException: 'COMPLETED' is not supported on a receiver opened in ReceiveMode.RECEIVE_AND_DELETE.",No comments found
21090,Bug,Claus Ibsen,Claude Mamo,4.7.0,4.8.0,2024-08-15T07:31:53+0000,1723707113,2024-08-15T13:25:05+0000,2024-08-15T13:25:05+0000,Docs in https://camel.apache.org/components/next/as2-component.html are saying that AS2 endpoint parameters can be set with the header name pattern CamelAs2.parameter but parameters can only be set with the header name pattern CamelAS2.parameter as shown in https://github.com/apache/camel-examples/blob/camel-examples-4.4.0/as2/src/main/resources/META-INF/spring/camel-context.xml#L72,No comments found
21089,Improvement,James Netherton,James Netherton,None,"4.4.4,4.8.0",2024-08-15T07:04:30+0000,1723705470,2024-08-15T09:07:16+0000,2024-08-15T07:59:15+0000,"Relates to an issue reported in Camel Quarkus where a user was trying to configure a byte component option for SMPP.
https://github.com/apache/camel-quarkus/issues/6350
Seems that CamelBaseBulkConverterLoader does not have a condition to match the conversion type on primitive byte.class.
https://github.com/apache/camel/blob/e5ab1649bdb5c5a9c332af2c5b201c143f611539/core/camel-base/src/generated/java/org/apache/camel/converter/CamelBaseBulkConverterLoader.java#L202-L216
Indeed the Maven mojo that generates the bulk converter does not handle byte as a primitive option.
https://github.com/apache/camel/blob/e5ab1649bdb5c5a9c332af2c5b201c143f611539/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/TypeConverterLoaderGeneratorMojo.java#L220-L240",No comments found
21088,Improvement,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-08-15T06:02:51+0000,1723701771,2024-09-04T10:47:30+0000,2024-09-04T10:47:30+0000,"The Camel JBang Kubernetes run command is based on the export command. Some of the options available on the export are not available in the run command.
We should aim to have almost identical configuration options for export and run because run can be seen as a export + automatic deployment.
Some of the export options (e.g. --quiet) may be set statically in the run command though because it does not make sense to have these options configurable on the run command.",No comments found
21087,New Feature,Thomas Diesler,Christoph Deppisch,None,4.x,2024-08-15T05:49:08+0000,1723700948,2025-01-13T20:00:44+0000,,The jolokia/prometheus trait seems to be valuable for users. Add them to the Kubernetes plugin for Camel JBang,No comments found
21086,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-14T15:37:06+0000,1723649826,2024-08-15T08:12:29+0000,2024-08-15T08:12:29+0000,"Some complex functions was not possible to generate as java source, but due to CAMEL-21081 we have improved the code generator that should make it possible to add more of the functions into csimple.",No comments found
21085,Improvement,Claus Ibsen,Aurélien Pupier,4.7.0,4.9.0,2024-08-14T14:28:02+0000,1723645682,2024-09-18T15:27:12+0000,2024-09-18T15:27:12+0000,currently it is failing with this kind of error:,No comments found
21084,Improvement,Unassigned,Ivan Kulaga,None,None,2024-08-14T13:04:21+0000,1723640661,2024-08-14T13:59:50+0000,,"See CAMEL-20237
We need to configure an auto-discovery for users' own org.apache.camel.component.platform.http.vertx.auth.AuthenticationConfig.AuthenticationConfigEntry definitions or something similar to this. So that users can write their own auth logic and have it auto-discovered.",No comments found
21083,Improvement,Unassigned,Ivan Kulaga,None,None,2024-08-14T12:57:02+0000,1723640222,2024-08-14T14:00:56+0000,,"See CAMEL-20237
We should add more http authentication options that can be configured via properties.
Here are lists of currently existing Vert.x AuthenticationHandlers and AuthenticationProviders:
https://vertx.io/docs/apidocs/io/vertx/ext/web/handler/AuthenticationHandler.html
https://vertx.io/docs/apidocs/io/vertx/ext/auth/authentication/AuthenticationProvider.html
Think we want to be able to configure via properties at least these:",No comments found
21082,Bug,Aurélien Pupier,Aurélien Pupier,4.7.0,4.8.0,2024-08-14T12:51:01+0000,1723639861,2024-08-17T07:22:30+0000,2024-08-17T07:22:30+0000,"the firstone.camel.yaml file is created
the firstone.camel.yaml file is deleted (without warning) and secondone.camel.yaml is created",No comments found
21081,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-14T11:52:20+0000,1723636340,2024-08-15T08:12:33+0000,2024-08-15T08:12:33+0000,"https://github.com/apache/camel/pull/14888
The ternary function:
predicate ? value1 : value2
Would be nice to have in simple language. However the predicate vs expression mode means that the language is optimized differently.
So using a function is better as this is possible in both modes.",No comments found
21080,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.x,2024-08-14T08:31:10+0000,1723624270,2024-10-23T11:05:49+0000,,Create a few legacy interfaces for code that relies on deprecated methods.,No comments found
21079,Bug,Unassigned,Petr Kuzel,3.22.2,None,2024-08-14T07:16:36+0000,1723619796,2024-09-17T11:16:02+0000,2024-09-17T11:16:02+0000,"I have observed following, if an exchange carries
an exception, like in the onException() block, then:
.log(...)
  .doTry()
  .removeProperty(...)
behaves very differently from:
// .log(...)
  .doTry()
  .removeProperty(...)
If the exchange carries an exception, then with log(),
the doTry() block body executes. Without log(),
the doTry() block body does not execute.
I'd expect that doTry() should not consider the prior exception
but it should rather consider only exceptions thrown
in the doTry() block itself, like the regular Java try block.
(A check at the mailing list if it was a design intent has been inconclusive so following common sense and classifying as a bug.)",No comments found
21078,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-13T14:55:00+0000,1723560900,2024-08-14T04:55:41+0000,2024-08-14T04:55:41+0000,"This has been reported both on StackOverflow as well as on the users' mailing list.
Looking more closely, enabling/disabling the adviceWith is totally within the expectations of what users of the CamelTestSupport class are expected to do, therefore having it as protected is incorrect: it prevents enabling a user-related feature.",No comments found
21077,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.7.0,2024-08-13T14:09:40+0000,1723558180,2024-12-13T13:18:35+0000,2024-12-13T13:18:35+0000,"Cover migrations described by  migration guide
(Only a few of migration can be covered by recipes)",No comments found
21076,Bug,Claus Ibsen,Iliya Grushevskiy,"3.x,4.x",4.8.0,2024-08-12T21:55:04+0000,1723499704,2024-08-13T15:49:18+0000,2024-08-13T15:49:08+0000,"When specifying an array of objects as a request type (in PUT/POST methods), the generated OpenAPI schema does not match the expected result.
For example:
Will generate:
While expected schema should be:",No comments found
21075,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-12T15:38:38+0000,1723477118,2024-08-13T06:40:28+0000,2024-08-13T06:13:47+0000,"The LangChain4J Chat component fails to cleanup the cached consumers. In some circumstances (such as when restarting the route), it may cause the code to try to use a reference to an outdated consumer.
This is particularly problematic for function calling / tools, as it may cause and wrong tool to be called.",No comments found
21074,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-12T13:16:12+0000,1723468572,2024-08-23T05:04:08+0000,2024-08-23T05:04:08+0000,SB is released later this month.,No comments found
21073,Task,Unassigned,Aurélien Pupier,4.7.0,None,2024-08-12T12:20:04+0000,1723465204,2024-08-14T07:57:45+0000,,"there is several times the error:
```
package com.google.protobuf does not exist
```
building camel-salesforce locally with `mvn clean install` is working fine",No comments found
21072,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-12T09:12:18+0000,1723453938,2024-09-05T08:25:37+0000,2024-09-05T08:25:37+0000,Testcontainers now provide a container for Ollama. We should adjust the code to use that one instead.,No comments found
21071,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-10T08:10:37+0000,1723277437,2024-08-10T10:34:32+0000,2024-08-10T10:34:32+0000,We do this for RestConsumerFactory and we should do the same for RestApiConsumerFactory,No comments found
21070,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-10T07:25:58+0000,1723274758,2024-08-11T09:09:49+0000,2024-08-11T09:09:49+0000,If you export then rest and rest-openapi-java are included because we configure them with some special options in KameletMain. But we should only include them if needed. And also include this configuration in application.properties for the export,No comments found
21069,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-10T05:53:17+0000,1723269197,2024-09-05T13:16:52+0000,2024-09-05T13:16:52+0000,"We have multiple components referencing outdated stuff:
Details such as these should be removed from the code
.",No comments found
21068,Improvement,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-08-09T19:09:12+0000,1723230552,2024-09-26T05:05:46+0000,2024-09-11T11:48:27+0000,`camel kubernetes run ...` is currently limited to `--runtime=quarkus`,No comments found
21067,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-09T12:01:37+0000,1723204897,2024-08-11T05:58:16+0000,2024-08-11T05:58:07+0000,"The project univocity-parsers is now deprecated an unmaintained. It should be marked as deprecated and removed in the future.
https://github.com/uniVocity/univocity-parsers/issues/534",No comments found
21066,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-09T09:48:43+0000,1723196923,2024-09-05T13:14:49+0000,2024-09-05T13:14:49+0000,"We have multiple components referencing outdated stuff:
Details such as these should be removed from the documentation.",No comments found
21065,Improvement,Aurélien Pupier,Aurélien Pupier,None,4.8.0,2024-08-09T09:45:45+0000,1723196745,2024-08-10T07:01:52+0000,2024-08-10T07:01:52+0000,similar to CAMEL-20947,No comments found
21064,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.0",2024-08-09T09:24:22+0000,1723195462,2024-08-12T10:45:21+0000,2024-08-10T08:03:58+0000,https://stackoverflow.com/questions/78826002/apache-camel-as2-error-disposition-modifier-in-mdn-is-not-recognized-due-to-wro,No comments found
21063,Improvement,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-08-09T08:44:05+0000,1723193045,2024-09-26T05:05:35+0000,2024-09-10T11:33:35+0000,"`camel export` used to provide a health endpoint for all runtimes (i.e. main, quarkus, spring boot) - this is no longer the case for main.
I suppose a health endpoint is useful in the context of cloud deployments and should therefore always be generated through `camel kubernetes export`",No comments found
21062,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-09T08:12:30+0000,1723191150,2024-08-19T09:39:56+0000,2024-08-19T09:14:06+0000,No description available,No comments found
21061,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-09T08:12:14+0000,1723191134,2024-08-19T09:24:40+0000,2024-08-19T09:04:33+0000,No description available,No comments found
21060,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-09T08:11:57+0000,1723191117,2024-08-19T08:52:05+0000,2024-08-19T08:52:05+0000,No description available,No comments found
21059,Bug,Claudio Miranda,Claudio Miranda,4.7.0,4.8.0,2024-08-08T14:51:01+0000,1723128661,2024-08-09T11:43:51+0000,2024-08-09T11:43:51+0000,"A bug when trying to run or export an integration with the last parameter before the file name is set with arity=*.
See Conversation in zulip chat about the reproducer and context.",No comments found
21058,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.8.0,2024-08-08T13:38:14+0000,1723124294,2024-09-05T14:58:07+0000,2024-09-05T14:58:07+0000,"Cover migrations described by https://camel.apache.org/manual/camel-4x-upgrade-guide-4_6.html#_upgrading_camel_4_5_to_4_6
(Only a few of migration can be covered by recipes)",No comments found
21057,Bug,Zheng Feng,Lukas Lowinger,"3.18.8,4.7.0","4.4.4,4.8.0",2024-08-08T13:07:53+0000,1723122473,2024-08-19T11:08:13+0000,2024-08-19T11:08:13+0000,"Given simple route
I get
Reproducer:",No comments found
21056,Bug,Claus Ibsen,Stephan Balmer,3.20.6,3.22.3,2024-08-07T15:33:28+0000,1723044808,2024-08-09T11:08:53+0000,2024-08-08T09:40:24+0000,"When using the file component with the readLockMinAge setting, consuming each file incurs a delay the length of readLockMinAge . So when `readLockMinAge=5s` and there are 1000 files, it takes 5000 seconds to consume all files.
Example route URL: file:/tmp/test?readLock=changed&amp;readLockMinAge=5s&amp;recursive=true&amp;delete=true
This has two disadvantages:
Camel up to version 3.20.5 processes files instantly as soon as the min age is reached. Since version 3.20.6 files are not processed instantly even if they are older than min age. Instead, the file component will wait for readLockMinAge for each file individually.
This regression was introduced in commit https://github.com/apache/camel/commit/5459f1da2673205a6c24041a8631ac99088b5eae I can sympathize with the goal of that change, as I've experienced that problem as well because file-managers preserve last-changed dates when copying files to new places. However I do judge the importance of throughput in the usual case higher than avoiding premature processing of files in the edge case. I think the change should be reverted. A separate strategy or option for that use-case could be introduced.",No comments found
21055,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-07T14:58:12+0000,1723042692,2024-08-09T11:16:43+0000,2024-08-09T11:16:43+0000,These 2 EIPs do not have disabled. We should have them on all EIPs so its easy to turn them on|off during development.,No comments found
21054,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-07T14:56:55+0000,1723042615,2024-08-13T15:41:48+0000,2024-08-13T15:41:48+0000,"When using pollEnrich EIP / enrich EIP then they use a language for URI. However we may want to have a variation that are like `to` with a static uri.
This makes it easier for tooling so they can have a UI that works better. So pollEnrich can be either in static or dynamic mode, and in static mode the UI tooling can be more powerful as it would be able to have a component specific UI instead of just a dynamic form for typing in a simple uri language.",No comments found
21053,Improvement,Claus Ibsen,Claus Ibsen,None,"3.22.3,4.4.4,4.8.0",2024-08-07T12:49:44+0000,1723034984,2024-08-08T05:03:47+0000,2024-08-08T05:03:47+0000,"Reported in user mailing list
we migrate from Camel 2.x to 3.x. and figured out that since Camel 3.9 the method getProperties() only returns user properties but no more internal properties. To get all properties the method getAllProperties() has to be used.",No comments found
21052,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-07T12:46:26+0000,1723034786,2024-08-08T15:04:34+0000,2024-08-08T15:04:34+0000,"When you export then camel-jbang is not as much in use anymore. We should possible avoid including camel-cli-connector JAR as when its present then it runs in developer mode that enables all sort of extra details.
Users can include the JAR if they want camel jbang CLI to still work with their Q/SB apps.",No comments found
21051,Bug,Claus Ibsen,Manuel Hartl,"4.5.0,4.7.0",4.8.0,2024-08-07T10:43:32+0000,1723027412,2024-08-08T07:08:00+0000,2024-08-08T07:08:00+0000,"The Method
org.apache.camel.component.file.remote.SftpOperations#retrieveFileToStreamInBody executed operations in finally-block which potentially hides exceptions from try-block.
In my case i have an out of memory exception happening during reading the sftp-data, but i dont see it because changeCurrentDirectory() in the finally block throws another exception.",No comments found
21050,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.8.0,2024-08-07T08:53:56+0000,1723020836,2024-09-05T14:57:59+0000,2024-09-05T14:57:59+0000,"Cover migrations described by https://camel.apache.org/manual/camel-4x-upgrade-guide-4_5.html#_upgrading_camel_4_4_to_4_5
(Only a few of migration can be covered by recipes)",No comments found
21049,Improvement,Unassigned,Christoph Deppisch,None,4.x,2024-08-06T13:17:25+0000,1722950245,2024-08-12T07:29:26+0000,,"Kamelets represent declarative route templates in Apache Camel. The Kamelets were born out of Camel K but soon became part of the Apache Camel project, too. This means today you can use Kamelets in Apache Camel also without Camel K being involved.
Kamelets are still kind of separated from the Camel core project. The Kamelets live in a separate GitHub project repository (https://github.com/apache/camel-kamelets) and follow a separate release lifecycle. This means we do a follow-up release of the Kamelet catalog after each Apache Camel release in order to keep the Kamelets aligned with the most recent Camel versions.
In addition to that, writing and maintaining Kamelets is no fun as it boils down to writing YAML files manually. Testing and verifying the Kamelets is separated from the Camel core project, too.
Problems that arise due to separate GitHub repositories for Apache Camel and Kamelets:
Problems with YAML as Kamelet definition:
The proposal is to bring Kamelets to the Camel core project in order to make them a natural part of the Camel components.",No comments found
21048,Bug,Unassigned,David Eibl,4.7.0,"4.4.4,4.8.0",2024-08-06T12:35:58+0000,1722947758,2024-08-06T15:02:50+0000,2024-08-06T15:02:50+0000,"When receiving a HL7 Message via Camel MLLP an ACK (see: https://hl7-definition.caristix.com/v2/HL7v2.5.1/TriggerEvents/ACK) is being sent.
The Header contains a timestamp in MSH-7.1 (see: https://hl7-definition.caristix.com/v2/HL7v2.5.1/Fields/MSH.7.1).
Unfortuantelly this timestamp is using an invalid format, missing dot after seconds.
It is using yyyyMMddHHmmssSSSZZZZ instead of yyyyMMddHHmmss.SSSZZZZ
Missing dot is invalid, see: https://hl7-definition.caristix.com/v2/HL7v2.5.1/DataTypes/DTM
To fix this, timestamp in org.apache.camel.component.mllp.internal.Hl7Util needs to be changed.",No comments found
21047,Task,Jiri Ondrusek,Jiri Ondrusek,4.8.0,4.8.0,2024-08-06T09:34:00+0000,1722936840,2024-08-06T11:10:13+0000,2024-08-06T11:10:13+0000,"PgpDataFormat was extracted from crypto component (see CAMEL-20922)
Therefore bouncycastle dependencies can be removed from `camel-crypto`.",No comments found
21046,Improvement,Unassigned,Kartik,3.22.2,None,2024-08-06T08:48:27+0000,1722934107,2024-08-06T09:02:19+0000,2024-08-06T09:02:19+0000,"Currently, the camel component if it is non lenient will throw an exception when unknown properties are passed when creating an endpoint.
Considering multi-tenant cloud environments, there can be cases with the same endpoints. For example, take a Kafka endpoint, 2 tenants can create a camel route having the same localhost broker with the same topic and group id which results in an error.
To overcome this the component should expose certain APIs to filter & ignore unknown properties.
I do see that in DefaultComponent#validateParameters function takes""
optionPrefix"" which ignores the properties starting with the provided prefix, This should be exposed to users.",No comments found
21045,Bug,Claus Ibsen,Claus Ibsen,4.8.0,4.8.0,2024-08-06T05:15:26+0000,1722921326,2024-08-06T11:09:35+0000,2024-08-06T11:09:35+0000,You then have to type 'q' to quit the quarkus app for the export to complete,No comments found
21044,Bug,Unassigned,Dylan Piergies,"3.x,4.x","4.4.4,4.8.0",2024-08-05T21:04:49+0000,1722891889,2024-08-06T07:29:44+0000,2024-08-06T07:29:43+0000,"The Azure Service Bus client requires a fully qualified namespace (FQNS) to be specified when a connection string is not used.
The configuration logic does not currently set the FQNS when the credentialType option is set to AZURE_IDENTITY.",No comments found
21043,Improvement,James Netherton,James Netherton,None,4.8.0,2024-08-05T11:17:11+0000,1722856631,2024-08-05T12:40:34+0000,2024-08-05T12:40:34+0000,"I was digging into why Dependabot is not updating some Maven plugins in CQ and it turns out it's because camel-dependencies has an old org.apache:apache parent.
https://github.com/apache/camel/blob/main/tooling/maven/sync-properties-maven-plugin/src/main/resources/camel-dependencies-template.xml#L27
It should be aligned with whatever Camel has in its root pom.xml. E.g this
https://github.com/apache/camel/blob/main/pom.xml#L24-L28
We should be able to get the sync-properties-maven-plugin to figure out the correct version instead of hard coding it.",No comments found
21042,Task,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-05T06:29:16+0000,1722839356,2024-08-08T10:09:08+0000,2024-08-08T10:09:08+0000,https://github.com/google/guava/wiki/EventBusExplained,No comments found
21041,Bug,Unassigned,Mohanavalli A,3.22.3,None,2024-08-02T04:55:13+0000,1722574513,2025-02-02T08:17:25+0000,2025-02-02T08:17:25+0000,"camel-azure-files
In camel-azure-files, if the path specified for moveFailed is not already present on the AFS share, the camel-azure-files moveFailed operation takes too long to complete.
It is so long that we suspect a thread leak.
If the path is already present on the AFS share, the operation completes without any delay.
Can you please fix this.
Thanks,
Mohanavalli A",No comments found
21040,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-01T14:43:17+0000,1722523397,2024-09-05T13:15:11+0000,2024-09-05T13:15:11+0000,"In CAMEL-20410 we did a comprehensive review of the documentation for multiple components. Since 4.5.0 we added a few more. This is a ticket for the documentation review of those components.
Components:
---------- Original text from CAMEL-20410.
The documentation for our components is full of minor mistakes that can be easily found using IntelliJ's grammar tool.
To fix this issue, open the full project on IntellIj and follow these steps:
1. Choose a component and go to src/main/docs/
2. Open the file with the extension adoc. 
3. On Intellij, in the problems tab, it will list several errors and problems 
4. Ignore the errors (the items with the red icon) 
5. Look for the grammar warnings (the ones with the green check icon underlined with red).
Note 1: See the attachment named ""grammar-problems"" for an example. 
Note 2: Make sure to check what components have been already fixed. Use the following command to do so:
Note 3: Make sure the commit follows this pattern:",No comments found
21039,Improvement,Thomas Diesler,Thomas Diesler,None,None,2024-08-01T08:28:19+0000,1722500899,2024-09-06T12:38:21+0000,2024-09-06T12:38:13+0000,"Currently, we use different techniques for generating k8s resources depending on -runtime. Although very similar, the result is not identical. Check, whether it makes sense to use JKube for -runtime=quarkus too.",No comments found
21038,Task,Thomas Cunningham,Thomas Cunningham,None,4.8.0,2024-07-31T20:08:13+0000,1722456493,2024-08-08T09:58:12+0000,2024-08-08T09:58:12+0000,"From Zineb :
I was wondering if I'm the only one that gets this file catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/schemas/camel-spring.xsd updated every time I build the camel project
I have been seeing this too and it looks to me like the cause is EipDocumentationEnricherMojo - it uses a set of json files to enrich the xsd, but there are actually two ""bean.json"" files that get pulled into the set of files used for enrichment.     I'd like to fix this so that we consistently choose the correct bean.json and the results of enrichment are consistent and this file is not constantly updated by the build somewhat randomly.",No comments found
21037,Improvement,Thomas Diesler,Andrea Cosentino,None,None,2024-07-31T13:15:47+0000,1722431747,2024-08-05T08:17:50+0000,2024-08-05T08:17:50+0000,"I guess this needs to be addressed. By following the documentation, deploying on OCP doesn't work with the current POM template.",No comments found
21036,New Feature,Pasquale Congiusti,Pasquale Congiusti,None,4.8.0,2024-07-31T08:08:27+0000,1722413307,2024-08-13T14:08:40+0000,2024-08-13T14:08:40+0000,"When we run a Camel application on the cloud we may leverage the cloud native way of setting configuration. For example, when running on Kubernetes we may leverage the configmap and secret which are typically mounted as a key/value files.
Given the following Secret:
and the following Camel application Deployment volume mounted leveraging such a secret:
We may expect that at startup, the application scans a given directory (ie /etc/camel/conf.d/_configmaps|_secrets/) and add the parameter to the regular properties available to the context. From that moment onward, the application could leverage the properties placeholder, ie using org.acme.my-key.
Ideally we should have a couple of properties to control the behavior, ie:
cloud.config.scan=false (not sure if enable this by default)
cloud.config.location=/etc/camel/conf.d",No comments found
21035,Bug,Christoph Deppisch,Christoph Deppisch,4.x,4.8.0,2024-07-30T19:34:05+0000,1722368045,2024-08-06T13:00:18+0000,2024-08-06T13:00:18+0000,"The property binding support for the ceOverride option on the Knative component always misses the first value that is being set via component/endpoint configurer.
The ceOverride option is a map typed setting and users are able to set these values with OGNL style property keys (e.g. in application.properties).
The 1st key-value pair initializes the ceOverride map during property binding but the value is missing in the resulting configuration map. The property binding support assumes that the target component uses the same map instance that is being initialized by the property binding support. But the Knative component configuration uses its on map instance in the setter with the given map instance as a parent
This makes the 1st value set via property binding disappear in the component configuration because the map instances are not the same.
The 2nd value set via property binding support uses the right map instance of the component because it has already been initialized.",No comments found
21034,Bug,Claus Ibsen,Claude Mamo,4.6.0,4.8.0,2024-07-30T15:45:12+0000,1722354312,2024-08-05T15:25:24+0000,2024-08-05T15:25:24+0000,"I'm referencing a custom model reifier factory in META-INF/services/org/apache/camel/model-reifier-factory which is causing DefaultInjector to be used instead of the expected SpringInjector.
SpringCamelContext creates the injector when loading a custom ModelReifierFactory. SpringInjector requires the application context, but since the application context hasn't yet been set on SpringCamelContext, the SpringInjector cannot be created so SpringCamelContext falls back to DefaultInjector.  I've attached the call stack of this behaviour.",No comments found
21033,Bug,Gaelle Fournier,Gaelle Fournier,"4.4.3,4.7.0","4.4.4,4.x",2024-07-30T13:49:07+0000,1722347347,2024-07-30T14:12:09+0000,2024-07-30T14:12:09+0000,The parsing oo run command trait does snake case to kebab case. As such it transforms `cpu`to `Cpu` when it should be `CPU` in the model : request-cpu shoudl match requestCPU.,No comments found
21032,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-30T12:53:13+0000,1722343993,2024-08-05T08:52:32+0000,2024-08-05T08:18:23+0000,"A plain jbang export comes with a health endpoint at 8080. In k8s export, we currently only generate a service when the route exposes an http service. Because we (currently) always have the health endpoint, we should also always have a service for it.",No comments found
21031,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-07-30T08:26:33+0000,1722327993,2025-01-27T08:01:28+0000,2024-07-30T08:27:58+0000,"Quoting Jakub from the PR:
??Hi,
I'm using camel-aws-sqs-source-kafka-connector, and recently I've found that I'm unable to poll all the messages from SQS queue in time.
At first I wanted to increase the maximum number of messages polled in a single request.
By default the client is configured to receive only 1 message and the maximum messages allowed by AWS is 10.
Here I had to add maxMessagesPerPoll parameter to the Kamelet in order to configure it for the connector.
I'm mentioning the Kamelet because the parameter there has maximum: 10 but this change renders that constraint obsolete.
Without the Kamelet there is a workaround to configure the queueNameOrArn with ?maxMessagesPerPoll=10& suffix, to sneak in the parameter to the endpoint.
But even with that and enabled greedy polling I was unable to keep up, and poll all messages in time.
Increasing the number of concurrent polling threads is an option here, but I'm interested in processing the messages in the correct order.
Looking at the Spring implementation, I've found that they are invoking receive requests with multiple threads and then merging the results together:
https://github.com/awspring/spring-cloud-aws/blob/a81b879d1a6b46f8a26794b98a601f7450d84907/spring-cloud-aws-sqs/src/main/java/io/awspring/cloud/sqs/listener/source/AbstractSqsMessageSource.java#L194-L198
I think a similar approach could be applied in Apache Camel, where the number of concurrent requests is calculated from ceil(maxMessagesPerPoll / 10D) formula.??",No comments found
21030,New Feature,Guillaume Nodet,Guillaume Nodet,None,None,2024-07-30T07:34:49+0000,1722324889,2024-08-08T11:32:08+0000,,The java.io.File class should really only be used for compatibility.,No comments found
21029,New Feature,Guillaume Nodet,Guillaume Nodet,None,None,2024-07-30T06:56:08+0000,1722322568,2024-09-13T07:07:08+0000,2024-09-13T07:07:08+0000,"Both SFTP and SCP protocols are built on top of SSH, but sftp is provided by camel-ftp (the FTP and SFTP protocols have nothing in common but their name), scp is provided by camel-jsch (both components leverage JSch).
It may be worth extending the camel-ssh component to provide support for SFTP and SCP protocols, leveraging Apache Mina SSHD instead.",No comments found
21028,New Feature,Guillaume Nodet,Guillaume Nodet,None,None,2024-07-30T06:41:47+0000,1722321707,2024-12-28T17:05:45+0000,,No description available,No comments found
21027,Improvement,Guillaume Nodet,Guillaume Nodet,None,4.x,2024-07-30T06:39:05+0000,1722321545,2024-12-28T17:06:08+0000,,The library (org.eclipse.mylyn.github:org.eclipse.egit.github.core) used by the camel-github component has not had any releases since 2013...,No comments found
21026,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-07-29T11:36:22+0000,1722252982,2024-10-02T16:24:43+0000,2024-07-30T08:18:34+0000,"When receiving a PDF document as a byte array, users need to convert the data manually to a PDF document. For instance, consider a route like:
Then, the convertBytesToPDFFile should contain something like:
This makes designing routes that consume PDFs harder.",No comments found
21025,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-29T10:33:31+0000,1722249211,2024-07-31T05:36:58+0000,2024-07-31T05:36:58+0000,No description available,No comments found
21024,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-29T10:32:00+0000,1722249120,2024-07-29T14:22:08+0000,2024-07-29T14:06:15+0000,No description available,No comments found
21023,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-29T06:12:50+0000,1722233570,2024-08-05T04:52:18+0000,2024-08-05T04:52:18+0000,They're missing in the set.,No comments found
21022,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-29T05:48:55+0000,1722232135,2024-07-29T06:13:10+0000,2024-07-29T06:13:10+0000,Website is failing the build,No comments found
21021,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-27T16:35:21+0000,1722098121,2024-07-31T05:37:12+0000,2024-07-31T05:37:12+0000,"Eventbridge could send events to SQS or SNS, we can choose SQS for convenience as default. It's far more reliable than waiting for events publish on Cloudtrail and we could be able to refresh the context faster.",No comments found
21020,Task,Karen Lease,Karen Lease,4.7.0,4.8.0,2024-07-26T14:55:42+0000,1722005742,2024-08-05T10:44:20+0000,2024-08-05T10:44:20+0000,"Some integration tests for the plugin use swagger (openapi 2.0) specs which are no longer supported after CAMEL-20547. Remove these and fix a couple of v3 tests.
Note: integration tests are currently disabled in the pom.xml.",No comments found
21019,New Feature,Tadayoshi Sato,Tadayoshi Sato,4.7.0,4.10.0,2024-07-26T08:42:08+0000,1721983328,2024-12-05T11:23:13+0000,2024-12-05T05:19:48+0000,"Running a TensorFlow model is already supported through Camel DJL component. However, Camel users might prefer to externalise inferencing to an external server instead of running it inside the Camel route. For TensorFlow models, it is generally done with TensorFlow Serving, which is a REST API server for inferencing with TensorFlow. Camel should provide a producer component that makes it easy to invoke the TensorFlow specific REST API from the routes.",No comments found
21018,New Feature,Tadayoshi Sato,Tadayoshi Sato,4.7.0,4.9.0,2024-07-26T08:38:40+0000,1721983120,2024-10-09T05:08:16+0000,2024-10-04T08:25:26+0000,"Running a PyTorch model is already supported through Camel DJL component. However, Camel users might prefer to externalise inferencing to an external server instead of running it inside the Camel route. For PyTorch models, it is generally done with TorchServe, which is a REST API server for inferencing with PyTorch. Camel should provide a producer component that makes it easy to invoke the PyTorch specific REST API from the routes.",No comments found
21017,Improvement,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-25T17:14:05+0000,1721927645,2024-07-30T19:09:31+0000,2024-07-30T19:09:19+0000,"The export command defines the --open-api option to add OpenAPI specification to the exported project.
In addition to this option the Kubernetes plugin export command provides the --open-api-spec option with a different behavior to configure a ConfigMap volume in the generated Kubernetes manifest.
We should consolidate the options because having multiple options for OpenAPI is confusing.
We should only have one --open-api option and the Kubernetes plugin may handle values with configmap: prefix and delegate other values to the parent export command.",No comments found
21016,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-25T12:21:15+0000,1721910075,2024-07-30T12:48:22+0000,2024-07-30T12:48:22+0000,"In camel-jbang export, I noticed that --additional-properties is a rather clumsy name for build time properties. How about --build-properties?
Similar to --dep, I'd actually prefer []String (i.e. arity=0-N), in which case it could be called --build-property.
Generally, should we always aim for []String rather then comma separated?",No comments found
21015,Improvement,Claus Ibsen,Aurélien Pupier,4.7.0,4.8.0,2024-07-25T09:23:10+0000,1721899390,2024-08-08T09:57:14+0000,2024-08-08T09:57:14+0000,"When a plugin has been installed but is no more vailable (for instance when trying to use an older version of Camel Jbang), there is currently an error and the command is failing even if this plugin is not used.",No comments found
21014,Bug,Unassigned,Giacomo Carnevale,4.7.0,4.8.0,2024-07-24T15:38:47+0000,1721835527,2024-08-05T07:01:55+0000,2024-08-05T07:01:55+0000,"The doFinally clause with a route template always generates an exception.
Route template uses TryDefinition.copyDefinition method  that uses this constructor:
The checkInitialized always fails on this control:
Using copyDefinition method output and finallyClause are always differnt.
I created this pull request: https://github.com/apache/camel/pull/14913
{{}}
c446202
commit to reproduce the bug with TryDefinitionTest
a1144f1
commit to fix the bug with a finally clause counter",No comments found
21013,New Feature,Thomas Diesler,Thomas Diesler,4.8.0,None,2024-07-24T10:56:58+0000,1721818618,2024-10-23T09:03:27+0000,2024-10-23T09:03:27+0000,No description available,No comments found
21012,Task,Andrea Cosentino,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-07-24T09:59:25+0000,1721815165,2024-08-07T12:36:55+0000,2024-08-07T12:36:55+0000,"The embedding component and the Milvus component in Camel have different behaviors when it comes to handling actions
The embedding component requires the action name to be specified as a header:
However, this causes problems when using in combination with the Milvus embedding, because the transformer creates a InsertParam object.
The problem is in the `private void upsert(Exchange exchange)` method from MilvusProducer.java. When we try to get the body of the message, we look for an `UpsertParam.class`.",No comments found
21011,Improvement,Aurélien Pupier,Aurélien Pupier,4.7.0,4.8.0,2024-07-24T09:55:46+0000,1721814946,2024-08-21T10:17:54+0000,2024-08-21T08:30:09+0000,"currently the error message is:
It is not suggesting that i might be a plugin that must be installed",No comments found
21010,Task,Andrea Cosentino,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-07-24T09:42:43+0000,1721814163,2024-08-07T13:07:59+0000,2024-08-07T13:07:59+0000,"The embedding component and the Milvus component in Camel have different behaviors when it comes to handling collection names.
The embedding component requires the collection name to be specified as a header, while the Milvus component allows for a different collection name to be used.
For instance:
This inconsistency can lead to confusion and errors when trying to use both components together. It would be beneficial to standardize the behavior of these components so that they can work seamlessly with each other.",No comments found
21009,Bug,Andrea Cosentino,Andrea Cosentino,4.7.0,4.8.0,2024-07-24T09:30:09+0000,1721813409,2024-07-24T12:54:20+0000,2024-07-24T12:54:20+0000,No description available,No comments found
21008,Improvement,Unassigned,Aurélien Pupier,None,None,2024-07-23T13:52:55+0000,1721742775,2024-11-27T09:13:20+0000,,"DJL component is supporting several engine https://camel.apache.org/components/next/djl-component.html#_djl_engine_implementation 
An end-user might search for them instead of DJL when looking for the component.
It would be nice to have a way to find DJL component when searching for pytorch, tensorflow or mxnet in the various tooling.
this is a very similar issue with https://issues.apache.org/jira/browse/CAMEL-20871 but for another component.",No comments found
21007,Improvement,Thomas Diesler,Thomas Diesler,None,None,2024-07-23T12:36:21+0000,1721738181,2024-07-23T15:31:13+0000,2024-07-23T15:31:13+0000,"Currently we build a multiarch image like this ...
and later reference it in JKube like this ...
We also need to explicitly set property `jkube.generator.name`, otherwise kubernetes.yml may not reference the correct image name.
Perhaps this would better all be done by the JKube plugin",No comments found
21006,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-23T07:00:56+0000,1721718056,2024-07-23T12:56:06+0000,2024-07-23T12:56:06+0000,"Kubernetes export has an `--image-registry` parameter which defaults to `quay.io`. It is currently not possible to export a k8s project that uses an image name without registry prefix.
I suggest to remove the arbitrary default and instead require this to be set explicitly when needed.",No comments found
21005,Task,Thomas Diesler,Thomas Diesler,None,None,2024-07-23T06:23:32+0000,1721715812,2024-08-05T08:47:40+0000,2024-08-05T08:47:40+0000,https://github.com/fabric8io/fabric8-maven-plugin?tab=readme-ov-file#deprecation-note,No comments found
21004,Bug,Claus Ibsen,Marat Gubaidullin,4.7.0,4.8.0,2024-07-22T14:50:24+0000,1721659824,2024-08-28T07:14:54+0000,2024-08-05T16:00:16+0000,In camel-jbang 4.7.0 export throws output The runtime option must be specified event runtime is specified in application.properties,No comments found
21003,Bug,James Netherton,James Netherton,4.7.0,4.8.0,2024-07-22T13:43:04+0000,1721655784,2024-07-23T13:03:23+0000,2024-07-23T13:03:23+0000,"Something I came across when working on this task:
https://github.com/apache/camel-quarkus/issues/6083
In Camel Quarkus we have some logic to suppress Camel resolving properties from property sources other then those used by MicroProfile Config:
https://github.com/apache/camel-quarkus/blob/803e96645110ac555bec08e96d6723521c5487bf/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/main/CamelMainRecorder.java#L46-L48
And there's a check for it in camel-main here:
https://github.com/apache/camel/blob/f911e2c1d6fa4561ffb88019889b2d530dd5a2b2/core/camel-main/src/main/java/org/apache/camel/main/BaseMainSupport.java#L398
However, when the 'dev' profile is activated, this check fails because the locations string is concatenated with other info. It'd probably be enough to tweak the if condition to also check if locations ends with ',false'.",No comments found
21002,Dependency upgrade,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-22T12:50:57+0000,1721652657,2024-07-22T13:14:06+0000,2024-07-22T13:14:06+0000,No description available,No comments found
21001,New Feature,Gaelle Fournier,Gaëlle Fournier,None,4.8.0,2024-07-22T12:34:35+0000,1721651675,2024-09-02T12:07:08+0000,2024-09-02T12:07:08+0000,We should enhance Camel JBang Kubernetes plugin with an Route trait that is capable of configuring the Kubenetes Route resource (from apiVersion route.openshift.io/v1) that should be part of the Kubernetes manifest.,No comments found
21000,New Feature,Gaelle Fournier,Gaëlle Fournier,None,4.8.0,2024-07-22T12:27:17+0000,1721651237,2024-08-13T06:52:23+0000,2024-08-13T06:52:23+0000,We should enhance Camel JBang Kubernetes plugin with an Ingress trait that is capable of configuring the Kubenetes Ingress resource that should be part of the Kubernetes manifest.,No comments found
20999,Bug,Unassigned,John Yin,4.4.2,4.x,2024-07-19T22:06:49+0000,1721426809,2024-08-08T11:42:21+0000,2024-08-08T11:42:21+0000,"Run the following route, the onException handler would be executed twice.  The counter will be 2.
int counter = 0
from(""timer://testRoute2?repeatCount=1"").routeId('testRoute_timer2').autoStartup(true)
.onException(IllegalArgumentException).onWhen({it.getException().toString().contains('foo')})
.process(
).handled(false)
.end()
.log('in testRoute2')
.process(
)
This would generate the following:
2024-07-19 17:46:11.711 [Camel (camel-1) thread #31 - timer://testRoute2] testRoute_timer2 - in testRoute2
before throwing exception
print in onException foo 1
print in onException foo 2
If the handled(true) is used, the handler would only run once.",No comments found
20998,Bug,Unassigned,Brice Frisco,"3.18.3,3.22.2,4.7.0",4.8.0,2024-07-19T20:46:27+0000,1721421987,2024-08-08T16:30:13+0000,2024-08-08T16:30:13+0000,"When using the Consumer and the Producer within the same route, the objectName can conflict with each other. Consider the following example:
The expectation would be that the file `hello.txt` would be read, and then a separate file `hello2.txt` would be written. However, what actually happens is that the original file `hello.txt` is overwritten.
Workaround
A workaround is to add .removeHeaders(""*"") before writing the new file:
Reproducer
I have built a simple reproducer and steps to run it here: https://github.com/bricefrisco/camel-google-storage-bug-reproducer",No comments found
20997,Task,Unassigned,Otavio Rodolfo Piske,4.8.0,None,2024-07-19T08:15:27+0000,1721376927,2024-07-19T08:15:45+0000,,"We have some tests blocking indefinitely by doing things like:
Tests like this should be reviewed and adjusted to ensure that they don't block forever (or for very long). Other tests (manual, ""performance"", etc) should be reviewed and dealt accordingly (moved to camel-performance-tests, removed, etc).",No comments found
20996,New Feature,Otavio Rodolfo Piske,Otavio Rodolfo Piske,None,4.8.0,2024-07-19T07:56:51+0000,1721375811,2024-07-22T09:04:06+0000,2024-07-22T09:00:55+0000,"As part of CAMEL-19290, we have removed camel-solr. But recent updates on the libraries used to implement it now allow us to have this component in a way that is compatible with Camel 4. As such, this is a ticket for reviving the component and aligning it with Camel 4.",No comments found
20995,Bug,Andrea Cosentino,Hareesh Billa,"4.0.0,4.4.0,4.7.0","4.0.6,4.4.4,4.8.0",2024-07-19T03:45:26+0000,1721360726,2024-07-23T13:45:57+0000,2024-07-23T13:28:16+0000,"camel-azure-storage-blob uploadBlockBlob retry operation fails due to mark and reset issue / Flux
Due to some of the issues Azure blob storage retrying for upload again, but it is failed to upload due to the input stream length is 0 which is not expected.
As per the azure core/common bode Flux code suggestion it is suggested to make markAndreset request parameter to true, But the out camel component always send the parameter value as false.
Solution: Instead of sending the default value to false, we can use inputStream.markSupported() method.
Here I am adding traces and screenshots, for easy understanding.
Thanks.",No comments found
20994,Bug,Claus Ibsen,Claudio Miranda,None,4.8.0,2024-07-18T18:35:18+0000,1721327718,2024-08-09T15:26:38+0000,2024-08-08T09:51:29+0000,"Given the following integration route.
There is no camel-quarkus-direct component in the generated pom.xml
I noticed it's related to the rest component. Replace it with timer then the export command adds the camel-quarkus-direct dependency to the pom.xml",No comments found
20993,Bug,Luigi De Masi,Luigi De Masi,4.7.0,4.8.0,2024-07-18T15:07:00+0000,1721315220,2024-08-05T07:17:48+0000,2024-08-05T07:17:48+0000,"When a route fails, the route should be visible in the actuator/camelroutes endpoint and marked with the current status.  Currently it is not visible.
For example the following routes:
The ""bar"" route fails to start, but is not registered in the camelroutes endpoint.  Only the ""foo"" route is listed:",No comments found
20992,Bug,Dylan Piergies,Romain Pfund,"4.5.0,4.6.0,4.7.0",4.8.0,2024-07-18T09:20:08+0000,1721294408,2024-08-20T07:47:09+0000,2024-08-20T05:30:07+0000,"Here's the error message I get from camel 4.5.0 and above (tested with 4.7.0) in RECEIVE_AND_DELETE mode:
Route end without failure, so the onComplete method is called:
Route end with failure, so the onFailure method is called
enableDeadLettering: false:
same with enableDeadLettering: true:
There is no functional problem with that, the message is correctly consume from the subscription.
But we should avoid unnecessarily ERROR level log, so the abandon|complete|deadletter should not be call in RECEIVE_AND_DELETE mode",No comments found
20991,Bug,Claus Ibsen,Claudio Miranda,None,4.8.0,2024-07-17T23:08:10+0000,1721257690,2024-08-07T11:18:47+0000,2024-08-07T11:18:47+0000,"Trying to export the following route, with --ignore-loading-error
There is an error
Somehow the --ignore-loading-error doesn't influence the KameletMain loading the kamelet.
The workaround is to replace the placeholders in the kamelet endpoint with any value, then export, then add the placeholder back in the route in the exported file in src/main/java.",No comments found
20990,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-17T10:36:02+0000,1721212562,2024-07-25T12:17:13+0000,2024-07-25T12:17:13+0000,In kubernetes quarkus we have,No comments found
20989,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-17T09:19:31+0000,1721207971,2024-07-23T14:12:27+0000,2024-07-23T14:11:54+0000,Add support for this type of selector in kubernetes spring-boot ...,No comments found
20988,Bug,Nikita_Konovalov,Otavio Rodolfo Piske,"4.4.3,4.7.0","4.0.6,4.4.4,4.8.0",2024-07-17T08:48:37+0000,1721206117,2024-07-24T08:05:00+0000,2024-07-24T08:05:00+0000,"This is caused by incorrectly getting the value of an optional without checking if it is indeed present.
Services with this problem:",No comments found
20987,New Feature,Unassigned,Ryan Highley,None,4.8.0,2024-07-16T14:20:16+0000,1721139616,2024-08-26T08:44:04+0000,2024-08-26T08:44:04+0000,"Create a new component wrapping the Eclipse Tahu library to support the Sparkplug B specification.
https://projects.eclipse.org/projects/iot.sparkplug
https://projects.eclipse.org/projects/iot.tahu
I have come across a few client use cases requiring Sparkplug B compatibility on top of MQTT. While MQTT handles the messaging transport, the additional Sparkplug semantics are not addressed. The Eclipse Tahu library addresses these, both for edge nodes and a host applications.
My intent is to wrap the Eclipse Tahu library as a Camel Component using a Producer to support edge nodes and a Consumer to support host applications. The Sparkplug TCK is used to verify specification compliance wherever possible for Component unit tests.",No comments found
20986,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.x,4.8.0,2024-07-16T07:45:53+0000,1721115953,2024-09-03T13:31:47+0000,2024-09-03T13:31:47+0000,"Currently, when loading data into a VectorDB, applications have to implement chunking on their own. This is typically done as a processor (which then uses LangChain4J Document Splitter features or implement their own).
We could make this simpler by implementing a specialized chunking DSL that abstracts this process and simplify loading the data to those databases.",No comments found
20985,New Feature,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-16T07:27:39+0000,1721114859,2024-07-30T19:09:42+0000,2024-07-18T07:26:09+0000,"The Camel JBang Kubernetes plugin is able to leverage the trait configuration options to generate a Kubernetes manifest during export.
The plugin should support Camel K integrations and pipe resources as source of export. The integration and pipe may use trait configuration as part of the specification. These trait config options can be directly used to generate the Kubernetes manifest.
This way users should be able to generate an arbitrary Quarkus/SpringBoot project with a normal Kubernetes manifest from the Camel K integration or pipe. The result can be deployed to a cluster where the Camel K operator is not present for some reason.",No comments found
20984,New Feature,Gaelle Fournier,Christoph Deppisch,None,4.8.0,2024-07-16T07:22:20+0000,1721114540,2024-07-30T19:09:56+0000,2024-07-26T07:39:25+0000,"The Camel JBang Kubernetes plugin already configures the image container that is part of the Deployment in the Kubernetes manifest.
We should enhance the container trait configuration with more options. As a reference see the Camel K container trait options.",No comments found
20983,New Feature,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-16T07:20:23+0000,1721114423,2024-07-30T19:10:15+0000,2024-07-25T17:14:59+0000,"When creating the Kubernetes manifest for Camel JBang export users should be able to choose and configure Knative service, trigger and sinkbinding resources.
By default the manifest will create an arbitrary service but users should be able to choose a Knative service instead. Also when the Camel route connects to a Knative broker users should be able to automatically create Knative trigger and sinkbinding resources as part of the Kubernetes manifest.",No comments found
20982,New Feature,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-16T07:15:27+0000,1721114127,2024-07-30T19:10:25+0000,2024-07-22T11:53:08+0000,Service trait in Camel JBang Kubernetes plugin is capable of configuring the Kubenretes service resource that should be part of the Kubernetes manifest,No comments found
20981,Bug,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-15T19:02:44+0000,1721070164,2024-07-16T07:10:09+0000,2024-07-16T07:10:09+0000,"The Knative component provides the option to override the CloudEvent attributes like ce-type or ce-source.
Usually these attributes are set on the component configuration, endpoint URI or environment setting.
When setting this ceOverride option via YAML DSL (e.g. in a Pipe) the problem arises that the CloudEvent attribute names are supposed to use dash style keys. The YAML DSL automatically converts key to camelCase style.
This results in the situation that YAML DSL Pipe is not able to set ceOverride option for the Knative component.
Also property placeholders are not resolved when setting these CloudEvent attributes.",No comments found
20980,New Feature,Unassigned,Alvin Kwekel,4.7.0,4.8.0,2024-07-15T17:41:24+0000,1721065284,2024-07-17T09:46:33+0000,2024-07-17T09:24:43+0000,"To be able to validate a very large (over 20.000.000 character) JSON string the Jackson object mapper needs to be configured with a custom `JsonFactory` with a `StreamReadConstraints` with a higher `maxStringLength`.
The string length can't be configured via the Jackson deserialization features that are settable via the query parameters of the validator. There is a new ObjectMapper constructed in the doInit method of the `JsonValidatorEndpoint` so there is not way to override that.
This feature is discussed in chat: 
https://camel.zulipchat.com/#narrow/stream/257301-camel-spring-boot/topic/Custom.20Jackson.20object.20mapper.20on.20the.20JSON.20Schema.20Validator",No comments found
20979,Improvement,Karen Lease,Federico Mariani,4.7.0,4.8.0,2024-07-15T10:16:23+0000,1721038583,2024-08-22T06:39:11+0000,2024-08-22T06:39:11+0000,"When using contract first rest dsl openapi the following yaml open api (taken from https://swagger.io/docs/specification/basic-structure/)
generate the following log if missing routes are ignored
in particular, direct:null route has to be created, given that openrationId is not provided, is it expected? can route name be dynamically generated via $path + $verb?",No comments found
20978,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-12T15:50:07+0000,1720799407,2024-07-12T16:09:55+0000,2024-07-12T16:09:55+0000,"When a route fails for some reason to start/stop etc then we store last error. We should also store the timestamp. This allows tooling to know this, and can say how long ago this happened.",No comments found
20977,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-12T14:59:29+0000,1720796369,2024-07-12T15:10:26+0000,2024-07-12T15:10:26+0000,"Its a bit harder to see why it failed. So lets WARN log this.
The jbang command can show the error via
camel get route --error",No comments found
20976,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-12T14:12:21+0000,1720793541,2024-07-17T09:28:26+0000,2024-07-17T09:28:26+0000,"Currently we have --dep, --deps and --dependency (in kubernetes). It should be possible to consolidate this to multiple --dep options. For backward compatibility, we could keep --deps which then internally maps to String[]",No comments found
20975,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-12T13:02:07+0000,1720789327,2024-07-22T07:37:50+0000,2024-07-22T07:37:50+0000,"Currently, we need to define the image group explicitly ...
This could be derived from a given gav",No comments found
20974,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-12T08:47:04+0000,1720774024,2024-07-12T08:47:04+0000,,"When using netty as consumer (server vs client-mode) then it would be good to have a dev console that can show the state, such as the low-level connection channel is active / reconnecting or what happens.",No comments found
20973,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-11T19:26:22+0000,1720725982,2024-07-12T08:35:23+0000,2024-07-12T08:35:23+0000,"Today if you run in dev mode then it uses the source name:line. But we may want to be able to fully configure it globally via some configuration
camel.logger.format=${routeId}
camel.logger.format=${source}:${line}
camel.logger.format=${routeId}/${nodeId}",No comments found
20972,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-11T18:42:18+0000,1720723338,2024-07-11T18:43:28+0000,2024-07-11T18:43:28+0000,"If a route fails to start such as when being manually started, then the camel get route shows Error as status.
To see full details you then need to use camel get route --error that will show only error details incl stacktrace.",No comments found
20971,New Feature,Claus Ibsen,Mark Wimpory,4.6.0,4.8.0,2024-07-11T15:38:33+0000,1720712313,2024-07-15T07:26:04+0000,2024-07-15T07:26:04+0000,"I have spent some time trying to build a route that will read a message from SQS and then based on the content of the message read a file from S3.  This is a fairly typical triggering mechanism for S3 and we use it a lot.  So when a file arrives in S3 we trigger an SQS message that will process said file.
With the keyname as a constant this works fine and I can retrieve a stream from S3.  However whenever I switch the keyname to a variable value I get a 'key not found' error.
I will attach a route class as a reproducer.  Its worth noting that I have tried several approaches which will be commented out in the reproducer.",No comments found
20970,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-11T12:01:44+0000,1720699304,2024-07-11T12:56:25+0000,2024-07-11T12:56:25+0000,"The listener is kicked in early so you have callbacks during bootstrap. It would be good to be able to configure a classname via camel.main.MainListener=com.foo.MyClass so it can be created early on startup, and you can do this without registering the listener via java code.",No comments found
20969,Bug,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-11T11:31:52+0000,1720697512,2024-07-17T08:53:51+0000,2024-07-17T08:53:51+0000,"We currently use `quarkus-container-image-jib` by default. When a user (for some reason) wants to use `quarkus-container-image-docker` instead, it creates a mutually exclusive dependencies problem.
Try this ...
https://github.com/tdiesler/camel-cloud-examples/tree/main/timer-log",No comments found
20968,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.9.0,2024-07-11T07:59:42+0000,1720684782,2025-01-03T10:35:25+0000,2025-01-03T10:35:25+0000,I was thinking of adding an option to enrich the prompt properly with content retrieved via a custom Camel RAG pipeline,No comments found
20967,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-10T17:31:58+0000,1720632718,2024-07-11T05:22:00+0000,2024-07-11T05:22:00+0000,"camel.variable.sequence=0
should be an interger/long
and true|false as boolean
and everything else string",No comments found
20966,Bug,Claus Ibsen,Bartosz Popiela,None,4.8.0,2024-07-10T14:27:45+0000,1720621665,2024-08-19T16:55:04+0000,2024-08-19T16:55:04+0000,"When calling a templated route (e.g. kamelet) and there is an environment property with the same name as a parameter, it will take precedence.",No comments found
20965,Bug,Unassigned,Bartosz Popiela,"4.4.3,4.6.0",4.7.0,2024-07-10T14:26:52+0000,1720621612,2024-07-17T01:42:41+0000,2024-07-17T01:42:41+0000,"InputStreamCache is reset after each step (org.apache.camel.impl.engine.CamelInternalProcessor.StreamCachingAdvice#after), and if there are two threads processing the same InputStreamCache (e.g. Seda), there may be a case where one thread invokes InputStreamCache#reset (org.apache.camel.support.MessageHelper#resetStreamCache) while another thread converts this InputStreamCache to String (org.apache.camel.util.IOHelper#toString(java.io.BufferedReader, long). It leads to java.io.ByteArrayInputStream#pos being reset and the target String having duplicate entries.",No comments found
20964,New Feature,Gaelle Fournier,Christoph Deppisch,None,4.x,2024-07-10T08:48:29+0000,1720601309,2024-08-07T08:55:23+0000,2024-08-07T08:55:23+0000,"The Camel JBang Kubernetes plugin provides traits to easily configure the Kubernetes manifest (kubernetes.yml) that is used to build and deploy the application on Kubernetes.
The traits are configured via command line options (e.g. --trait container.port=8088)
We should also support trait configuration via profile properties (e.g. application.properties) that get loaded during the export command.
Properties may use a common prefix like camel.jbang.trait.* (e.g. camel.jbang.trait.container.port=8088)",No comments found
20963,Improvement,Thomas Diesler,Christoph Deppisch,None,4.8.0,2024-07-10T08:41:39+0000,1720600899,2024-07-30T19:10:51+0000,2024-07-25T12:17:38+0000,"Camel JBang export with camel-main runtime already provides a Kubernetes support to run the application on Kubernetes.
The camel-main export adds and configures the JKube with resource fragments to build and deploy to Kubernetes.
Recently we have added a Camel JBang Kubernetes plugin that deals with running Camel applications on Kubernetes. We should consolidate the export functionality and maybe move the camel-main Kubernetes support to the plugin.",No comments found
20962,New Feature,Thomas Diesler,Christoph Deppisch,None,4.8.0,2024-07-10T08:33:58+0000,1720600438,2024-07-22T07:38:00+0000,2024-07-22T07:38:00+0000,"The Camel JBang Kubernetes plugin is able to run Camel applications on Kubenretes with Quarkus export, build and deploy.
The user should be able to also select SpringBoot as a runtime.
The Kubernetes plugin should also support SpringBoot export, build and deploy where users set runtime=spring-boot for the export/run command.
Quarkus provides a Kubernetes extension that allows to configure and deploy the Kubernetes manifest (kubernetes.yml). A possible solution for SpringBoot would be JKube with resource fragments",No comments found
20961,Bug,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-10T08:20:48+0000,1720599648,2024-07-10T08:33:44+0000,2024-07-10T08:33:44+0000,"~/.camel ❯ camel log --grep=chuck
java.lang.NullPointerException: Cannot invoke ""java.lang.CharSequence.length()"" because ""this.text"" is null
	at java.base/java.util.regex.Matcher.getTextLength(Matcher.java:1769)
	at java.base/java.util.regex.Matcher.reset(Matcher.java:415)
	at java.base/java.util.regex.Matcher.<init>(Matcher.java:252)
	at java.base/java.util.regex.Pattern.matcher(Pattern.java:1134)
	at org.apache.camel.dsl.jbang.core.commands.action.CamelLogAction.isValidGrep(CamelLogAction.java:485)
	at org.apache.camel.dsl.jbang.core.commands.action.CamelLogAction.tailLogFiles(CamelLogAction.java:429)
	at org.apache.camel.dsl.jbang.core.commands.action.CamelLogAction.doCall(CamelLogAction.java:152)
	at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
	at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
	at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
	at picocli.CommandLine.access$1500(CommandLine.java:148)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
	at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
	at picocli.CommandLine.execute(CommandLine.java:2174)
	at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:169)
	at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:61)
	at main.CamelJBang.main(CamelJBang.java:36)
~/.camel ❯",No comments found
20960,Bug,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-10T08:16:17+0000,1720599377,2024-07-10T11:08:41+0000,2024-07-10T11:08:41+0000,The last row with log1 is actually from the producer camel (pid = 53948),No comments found
20959,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.x,2024-07-10T08:04:31+0000,1720598671,2024-07-23T08:01:56+0000,,"TBH I'm not sure what has to be done next.
Here is the initial commit for the camel-upgrade-recipes repo.
I think that we should release this library when this commit is merged.
Why?
Once released, I can update draft PR for  quarkus-updates project  and leverage the camel-upgrade-recipes dependency.
With some guiding from someone I can try to achieve some of the task.
(It would be nice to have component in jira, which would represent upgrade-recipes.
The affects version/fix version does not make sense in the camel project, as the versioning might be different)",No comments found
20958,Bug,Claus Ibsen,Mark Wimpory,4.6.0,4.8.0,2024-07-10T07:16:05+0000,1720595765,2024-08-21T06:23:40+0000,2024-08-21T06:23:40+0000,"When shards are merged the consumer reads any remaining messages from those shards and then notes that the shard has closed.  However it continuously loops as in the log exert below.  This continues on a restart.
Note this occurs no matter what type of failure option (silent, fail etc)
I have not tested so far what happens when the shard reaches its expired state (due to a localstack bug)
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-4] WARN o.a.c.c.a.k.Kinesis2Consumer - The shard with id=shardId-000000000000 on stream ingestion-death-stream reached CLOSE status
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-3] WARN o.a.c.c.a.k.Kinesis2Consumer - The shard with id=shardId-000000000001 on stream ingestion-death-stream reached CLOSE status
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-4] INFO o.a.c.c.a.k.c.KinesisDefaultResumeAdapter - Resuming from offset 49653759514412492265585802359002135113225509352150925314 for key ingestion-death-stream
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-3] INFO o.a.c.c.a.k.c.KinesisDefaultResumeAdapter - Resuming from offset 49653759514434793010784332982141252979858928386588016658 for key ingestion-death-stream
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-4] DEBUG o.a.c.c.a.k.Kinesis2Consumer - Obtained new ShardIterator AAAAAAAAAAFhGdwQ2Ac96sw4ScfsOEaTn+V+4vvB9RE9cnHLqD+s4rLMSSioedJLXVbHf47GfSV8ktk53sJmQXMFb+EZOOA/PaByEh66RTC7iBK+8BCZrrL5wb4wNHV7M1qtua1Cu7NrsqEZli3+HgagoG4V7bopK5xPcezzfDN9EWclJRCnlq3Z9nJRSmB4JCmIweWsX8VrM7SHnaVabQ3Kd8l9zoj7 for shard shardId-000000000000 on stream ingestion-death-stream
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-3] DEBUG o.a.c.c.a.k.Kinesis2Consumer - Obtained new ShardIterator AAAAAAAAAAEGg3GnGpu+nfbhufxJ7/V1iSjlD7G24d03xeQATtF9pV1dK21qLxxKpdS8g/CLPdV3MZaJaZoXkthM0J4xNvLOAkCwPpEsl9ympInzr/3QgNqFHqhGopNBlGKMyCdQUYi0UErBuUJ8dPKCq+IYRNVQvhSGg4fF4zXAlDi7jsXC7HZ2X9Xo3Q4XF/E7yEhi1YnFKAmMOmzstDkUtJd+U3MO for shard shardId-000000000001 on stream ingestion-death-stream",No comments found
20957,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.x,2024-07-10T06:42:15+0000,1720593735,2024-07-10T06:42:43+0000,,"This was discussed in these tickets:
Basically, we should investigate adding pausable consumers support via RoutePolicy instead of reinventing the wheel (as the API is not very easy to use, inadequate for low-code tools, etc).",No comments found
20956,New Feature,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-09T07:49:15+0000,1720511355,2024-07-10T10:20:48+0000,2024-07-10T09:44:58+0000,So we can see some kafka details more easily and also add a jbang command for this.,No comments found
20955,Task,Claus Ibsen,Christoph Deppisch,4.7.0,4.8.0,2024-07-09T07:11:18+0000,1720509078,2024-07-10T10:47:11+0000,2024-07-10T10:47:11+0000,Consider adding Camel JBang plugin modules to the Camel BOM. Current plugin modules are,No comments found
20954,Bug,Claus Ibsen,Antoine DESSAIGNE,3.20.0,"3.22.3,4.0.6,4.4.4,4.8.0",2024-07-08T16:32:15+0000,1720456335,2024-07-09T06:34:29+0000,2024-07-09T04:37:35+0000,"Hello everyone,
Since CAMEL-18665, it's no longer possible to share a SSLContextParameters configuration between camel-kafka and other components.
Now that the underlying JsseParameters uses the ResourceLoader you need to prefix your path with a ""file:"" and have something like
But as camel-kafka copies the parameters directly it needs the path without the ""file:"" prefix, see extract from KafkaConfiguration.applySslConfigurationFromContext()
I don't know what is the right move. Is it to change the JsseParameters class and try to read a file before asking the ResourceLoader or is it to modify the camel-kafka configuration to be able to handle resources?
I appreciate your help on this matter and have a nice day,
Antoine",No comments found
20953,Bug,Claus Ibsen,Tadayoshi Sato,4.7.0,4.8.0,2024-07-08T08:26:34+0000,1720427194,2024-07-09T04:37:55+0000,2024-07-09T04:37:55+0000,"When we'd like to run a Camel script once and then immediately self-terminate it, we'd run the command:
and it works just as expected. However, when we add --dev to the above command, it starts to fail to terminate the context and thus the process.
The same issue goes for --max-idle-seconds and --max-seconds as well.
Normally it wouldn't be an issue because it doesn't make much sense to use --max-* and --dev at the same time, but it becomes an issue when we run a Camel script on VS Code, where the Debug Adapter for Apache Camel always attaches --dev to the launcher command.",No comments found
20952,Task,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-08T08:09:34+0000,1720426174,2024-07-08T08:18:26+0000,2024-07-08T08:18:26+0000,"[INFO] [ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.7.0:jar (attach-javadocs) on project camel-spring-xml: MavenReportException: Error while generating Javadoc:
[INFO] [ERROR] Exit code: 1
[INFO] [ERROR] warning: URL https://docs.oracle.com/javase/7/docs/api/element-list was redirected to https://docs.oracle.com/en/java/javase/22/ – Update the command-line options to suppress this warning.
[INFO] [ERROR] error: Error fetching URL: http://static.springsource.org/spring/docs/6.1.10/javadoc-api/ (java.io.IOException: Server returned HTTP response code: 504 for URL: https://static.springsource.org/spring/docs/6.1.10/javadoc-api/package-list)
[INFO] [ERROR] /Users/davsclaus/workspace/camel/components/camel-spring-xml/src/main/java/org/apache/camel/spring/xml/CamelContextFactoryBean.java:1245: warning: invalid usage of tag {@link org.apache.camel.spi.TypeConverterRegistry#getStatistics()#setTypeConverterStatisticsEnabled(Boolean)
[INFO] [ERROR]      *
[INFO] [ERROR]        ^
[INFO] [ERROR] 1 error",No comments found
20951,Task,Unassigned,Samhitha,3.22.1,None,2024-07-08T07:28:51+0000,1720423731,2024-08-05T07:25:18+0000,2024-08-05T07:25:18+0000,"Observing performance degradation around 20% with Splitter EIP, once we have upgraded from camel 3.18.7 to camel 3.22.1. We are having similar implementation as below, where in data will be split by our logic in ""executeSplitter"".
 
from(""direct:source"")
.routeGroup(""group"")
.routeId(""splitterId"")
.split()
.method(splitter, ""executeSplitter"")
.shareUnitOfWork()
.stopOnException()
.toD(""direct:destination"");",No comments found
20950,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-06T08:28:23+0000,1720254503,2025-01-08T14:49:06+0000,2025-01-08T14:49:06+0000,"We have internal vs external counters. For example a timer is internal, and kafka is external. We should have this information in micrometer metrics so monitoring systems also would know this information.
For example suppose you have a small Camel integration with 2 routes: (timer and kafka).
The timer is triggering every second, and kafka is remote and thus will only trigger when a message is received from Kafka.
If you use `camel-jbang` you can easily see this information as follows:
```bash
$ camel get
  PID   NAME    CAMEL  PLATFORM        PROFILE  READY  STATUS   RELOAD  AGE   ROUTE  MSG/S  TOTAL  FAIL  INFLIGHT  LAST  DELTA  SINCE-LAST
 42240  cheese  4.7.0  JBang v0.116.0  dev       1/1   Running       0  1m8s    2/2   1.01   1/65   0/0       0/0     0     1     1s/1s/
```
Here the TOTAL, FAIL, INFLIGHT columns have been updated to show two numbers separated by slash.
The number `1/65` means that there has been only 1 remote message, and 65 in total, so that means the internal timer has triggered 64 times.",No comments found
20949,Bug,Claus Ibsen,Claus Ibsen,"4.5.0,4.6.0,4.7.0",4.7.0,2024-07-06T07:17:52+0000,1720250272,2024-07-07T10:25:30+0000,2024-07-06T08:58:43+0000,Reported on user mailing list,No comments found
20948,Improvement,Grzegorz Grzybek,Grzegorz Grzybek,4.7.0,4.7.0,2024-07-05T14:49:38+0000,1720190978,2024-07-09T11:35:05+0000,2024-07-05T15:11:31+0000,"I was checking Jolokia with different JSON libraries:
and I decided to check davsclaus suggestion.
I am using Artemis instance with Hawtio 4, Jolokia 2 and different JSON libraries. I have 10K queues (which means 20K MBeans for the queues alone) and I check Jolokia list() operation. Initially I got:
but I quickly realized there's a problem about String / Writer handling in camel-util-json. PR pending.",No comments found
20947,Improvement,Aurélien Pupier,Aurélien Pupier,None,4.8.0,2024-07-05T13:04:15+0000,1720184655,2024-08-09T11:07:02+0000,2024-08-09T11:07:02+0000,"What do you think about enabling Jolokia in the camel.debug profile of the generated project with Camel JBang?
it will allow to do remote Camel debugging, so for instance with project deployed on Kubernetes or OpenShift
For Quarkus project, this could be done with:",No comments found
20946,Bug,Aurélien Pupier,Aurélien Pupier,4.6.0,4.7.0,2024-07-05T12:20:47+0000,1720182047,2024-07-07T10:25:55+0000,2024-07-05T13:59:29+0000,"there are 2 new parameters required compared to initial implementation: 
-Dcamel.main.shutdownTimeout=30 -Dquarkus.camel.source-location-enabled=true
Without the shutdown strategy, the suspend method is not working (even from jconsole)
Without the source-location-enabled, the breakpoints are not working (at least with Debug Adapter for Camel)
see also https://github.com/apache/camel-quarkus/issues/6256",No comments found
20945,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-04T10:51:58+0000,1720090318,2024-07-07T10:25:23+0000,2024-07-06T09:43:50+0000,"Lets make it possible to run java code without having to put public class XXXX.
This allows to quickly copy paste some sample java code route you find, and try and edit it also. If you want real java development with IDE support then of course it must be a public class.",No comments found
20944,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-04T08:01:49+0000,1720080109,2024-07-05T05:16:55+0000,2024-07-05T05:16:55+0000,"You get a stracktrace, lets improve this to a nicer system error instead
~/workspace/camel-kamelets-examples/jbang/open-api main *1 ❯ camel generate rest --input=greeting.json --output=code --dto
java.lang.IllegalArgumentException: document must be specified
	at org.apache.camel.util.ObjectHelper.notNull(ObjectHelper.java:153)
	at org.apache.camel.generator.openapi.RestDslGenerator.<init>(RestDslGenerator.java:54)
	at org.apache.camel.generator.openapi.RestDslYamlGenerator.<init>(RestDslYamlGenerator.java:65)
	at org.apache.camel.generator.openapi.RestDslGenerator.toYaml(RestDslGenerator.java:240)
	at org.apache.camel.dsl.jbang.core.commands.generate.CodeRestGenerator.doCall(CodeRestGenerator.java:86)
	at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
	at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
	at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
	at picocli.CommandLine.access$1500(CommandLine.java:148)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
	at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
	at picocli.CommandLine.execute(CommandLine.java:2174)
	at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:168)
	at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:61)
	at main.CamelJBang.main(CamelJBang.java:36)",No comments found
20943,Test,Marco Carletti,Claus Ibsen,None,4.7.0,2024-07-04T07:55:53+0000,1720079753,2024-07-07T10:25:46+0000,2024-07-05T14:45:12+0000,"The camel-jbang has a generate plugin (need to install) that can generate java source classes from an openapi spec.
Having an integration test we can run in camel-jbang-it would be really good",No comments found
20942,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-04T07:49:49+0000,1720079389,2024-08-18T09:35:13+0000,,"The exchange may have a pre-configured avro schema then we should use this.
And as well set the schema on the exchange.
Related to
https://camel.zulipchat.com/#narrow/stream/352237-camel-jbang/topic/parquetAvro.20format.20marshal.2Funmarshal",No comments found
20941,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-03T17:43:07+0000,1720028587,2024-07-03T17:44:29+0000,2024-07-03T17:44:29+0000,No description available,No comments found
20940,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-03T14:17:04+0000,1720016224,2024-08-18T09:35:04+0000,,"Currently its hardcoded to a List
List<?> list = (List<?>) graph;
It should instead be more accepting input as it can be a string/stream/byte[] of json data or something. Or something that can be iterated.",No comments found
20939,Bug,Claus Ibsen,Marco Carletti,4.6.0,4.7.0,2024-07-03T12:55:59+0000,1720011359,2024-07-03T13:42:38+0000,2024-07-03T13:38:32+0000,"According to documentation it is possible to select profile and to use a specific configuration file but currently the command
fails with",No comments found
20938,Bug,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.0",2024-07-03T06:53:59+0000,1719989639,2024-08-21T11:32:38+0000,2024-08-21T11:32:38+0000,"Reported in mailing list.
When running",No comments found
20937,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-03T06:42:57+0000,1719988977,2024-07-03T06:43:03+0000,,No description available,No comments found
20936,New Feature,Unassigned,Zineb Bendhiba,None,None,2024-07-02T15:15:47+0000,1719933347,2024-07-03T06:33:01+0000,,"We have the opportunity to run Ollama test containers using a Hugging Face LLM model as a file, rather than continuously pulling the model. This change could facilitate running tests on our CI environment.
Here's an example
Before implementing this change, please verify which small model we can use or embed and ensure it complies with the Apache 2 license.",No comments found
20935,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.8.0,2024-07-02T14:45:49+0000,1719931549,2024-08-06T12:52:42+0000,2024-08-06T12:52:42+0000,"Create a new component to be able to perform a web search.
It will use under the hood the langchain4j websearchEngine
This feature will benefit us from the possibility of creating a tool that could search additional information for the RAG pipeline",No comments found
20934,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-02T12:42:00+0000,1719924120,2024-07-02T16:01:45+0000,2024-07-02T16:01:45+0000,"Related to CAMEL-20493
It seems that if the seda consumer is doing async processing, then the copy results is triggered before the exchange is done, and this can explain some concurrency issues in that linked jira.",No comments found
20933,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-02T11:07:56+0000,1719918476,2024-07-02T11:15:16+0000,2024-07-02T11:15:16+0000,Reported on user mailing list,No comments found
20932,Bug,Claus Ibsen,Claus Ibsen,4.4.3,"4.4.4,4.7.0",2024-07-02T05:03:24+0000,1719896604,2024-07-02T06:55:52+0000,2024-07-02T06:55:52+0000,"The reifiers for error handler need to do template parameters in more places such as redelivery options.
Report in chat at: https://camel.zulipchat.com/#narrow/stream/257301-camel-spring-boot/topic/templateParameter.20broken.20in.20OnExceptionDefinition",No comments found
20931,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-30T11:14:45+0000,1719746085,2024-07-01T06:02:51+0000,2024-07-01T06:02:51+0000,"Its common to clip in start or end of a payload, like first and last char or something.
We can add a substring command to make this easier, and make it much easier to clip N last elements than today in pure Java String.
substring(1) // clip first char
substring(-1) // clip last char
substring(1,-1) // clip first and last char
So numbers that are negative are from the tail end
And it should silently ignore if the string is empty or shorter etc.",No comments found
20930,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-30T08:00:40+0000,1719734440,2024-07-01T19:42:11+0000,2024-07-01T19:42:11+0000,"When you use bean DSL in yaml/xml to define beans for low-code integrations then these beans are configured via properties. And those can be from ENV / placeholders and whatnot.
It would be good to have a dev console that shows the actual values of those beans so you can easily see ""how they are configured at runtime""",No comments found
20929,Bug,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-29T06:42:17+0000,1719643337,2024-06-30T05:56:54+0000,2024-06-30T05:56:54+0000,"camel.component.properties.ignore-missing-property=true
Should also ignore if its a function such as ENV or VAULT etc",No comments found
20928,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-29T05:59:05+0000,1719640745,2024-06-30T07:29:44+0000,2024-06-30T07:29:44+0000,"You should be able to run export where some ENV configuration is specific to where you run the app, and that the export is part of a ci/cd pipeline and thus does not have those ENVs
For example a SQL database bean that we need for the SQL component",No comments found
20927,Improvement,Unassigned,Claus Ibsen,None,Future,2024-06-28T09:41:28+0000,1719567688,2024-06-28T12:29:58+0000,,"See CAMEL-16829
It may be better to reject tasks if thread pools are exhausted instead of stealing the current thread as it can lead to stuck threads in (advanced and special situations) or users not aware that their thread pools are not sized correctly and can cause system degration.",No comments found
20926,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-27T15:13:33+0000,1719501213,2024-06-28T05:42:22+0000,2024-06-28T05:42:22+0000,https://camel.zulipchat.com/#narrow/stream/257298-camel/topic/OutOfMemory.20because.20of.20BeanInfoCache,No comments found
20924,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-27T09:44:22+0000,1719481462,2024-06-27T10:52:20+0000,2024-06-27T10:52:20+0000,https://github.com/apache/camel-kafka-connector/issues/1647,No comments found
20923,Task,Gaelle Fournier,Otavio Rodolfo Piske,4.7.0,"4.8.1,4.9.0",2024-06-26T16:08:24+0000,1719418104,2024-10-22T05:24:29+0000,2024-10-22T05:24:29+0000,"Camel JBang is unable to load langchain4j embeddings
This can be triggered by something such as:",No comments found
20922,Improvement,Jiri Ondrusek,Jiri Ondrusek,None,4.7.0,2024-06-26T07:15:26+0000,1719386126,2024-06-26T11:04:41+0000,2024-06-26T11:04:41+0000,"In order to run crypto component on FIPS systems we have to use BC-FIPS instead of standard bouncycastle.
The new component with PGP data format should be called probably camel-crypto-pgp",No comments found
20921,Bug,Claus Ibsen,Adriano Machado,"4.0.3,4.4.2","4.4.4,4.7.0",2024-06-25T18:24:24+0000,1719339864,2024-06-26T05:17:36+0000,2024-06-26T05:17:27+0000,"Route configurations are not loaded if they are being loaded from an XML file that uses the `camel` root tag.
Please see the attached diff with a failing test.",No comments found
20920,Bug,Claus Ibsen,Raymond,4.6.0,4.7.0,2024-06-25T15:54:24+0000,1719330864,2024-06-28T06:31:23+0000,2024-06-27T05:10:35+0000,"I load XML routes from String as follows:
In the above code example, I created the resource from String using the ResourceHelper class:
The fromString method has two parameters ""location"" and ""content"". As a String doesn't really have a location I just use ""dummy.xml"" or something with an ID like this ""123456.xml"".
This works with correct code and when the content has a mistake like invalid XML code, it returns an error.
This is as expected, however when loading the route again with the correct XML Code with the same location parameter the loading fails. The loader still returns the previous error. When the location is changed to another name to route loads correctly.",No comments found
20919,New Feature,Unassigned,Adityakrishnan,None,4.x,2024-06-25T15:37:44+0000,1719329864,2025-01-03T10:48:45+0000,,"Producer based SFTP Health is not available for regular SFTPs, it is only accessible by some components (like AWS and Kafka). This has been a need from some time in work-spaces.
When SFTPs have inconsistent down-times Observability and Monitoring comes handy for all those who uses Apache Camel. This Producer based Health Check should also be included in regular SFTPs.
Consumer based and Producer based health check and alerting can prevent an outage before it occurs.",No comments found
20918,Bug,Andrea Cosentino,Bartosz Popiela,"3.22.2,4.4.2,4.6.0",4.8.0,2024-06-25T10:45:15+0000,1719312315,2024-07-22T10:26:57+0000,2024-07-22T10:26:57+0000,"In February this year I raised a ticket CAMEL-20388 after observing that the SubscriptionHelper#handshake method was not being used, as the first thread to invoke it would hang in a deadlock state. After it was fixed there is no deadlock, but two other issues were introduced:
In addition, because SubscriptionHelper#connectListener clears SubscriptionHelper#connectListener and subscriptionListener doesn't put the listeners back to the map if the subscription message fails, the Salesforce component will not be able to recover (SubscriptionHelper@listenerMap will be empty).
Also, SalesforceComponent#REQUEST_TIMEOUT should be greater than 110 sec as this is the default Salesforce timeout for long-polling as per Clients and Timeouts and CometD#1142.
Otherwise, java.util.concurrent.TimeoutException will be thrown if there are is no event before the timeout expires.",No comments found
20917,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.7.0,2024-06-25T10:14:20+0000,1719310460,2024-06-26T11:35:45+0000,2024-06-26T11:35:45+0000,"When trying to load a plugin defined as:
Then adding it to JBang as:
Then, JBang fails to load the plugin with the following error:
This happens because the group and version are hard-coded in the PluginHelper class.",No comments found
20916,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-25T09:39:01+0000,1719308341,2024-06-27T12:19:30+0000,2024-06-27T12:19:30+0000,No description available,No comments found
20915,Task,Unassigned,Otavio Rodolfo Piske,4.7.0,4.x,2024-06-25T08:51:34+0000,1719305494,2024-08-21T17:37:50+0000,,"We use a lot of containers as part of our tests. With time, they become outdated and we have to manually check for upgrades.
This tasks is to create a script to automate checking for new versions of the containers.
You can find all the containers used in Camel by running the following command:",No comments found
20914,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-25T07:38:23+0000,1719301103,2024-06-27T09:21:41+0000,2024-06-27T09:21:41+0000,No description available,No comments found
20913,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-25T07:33:10+0000,1719300790,2024-06-26T18:06:45+0000,2024-06-26T18:06:45+0000,No description available,No comments found
20912,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-25T07:32:22+0000,1719300742,2024-06-26T18:06:56+0000,2024-06-26T18:06:56+0000,No description available,No comments found
20911,Bug,Claus Ibsen,Christoph Deppisch,4.7.0,4.7.0,2024-06-25T07:09:50+0000,1719299390,2024-06-26T05:41:22+0000,2024-06-26T05:41:22+0000,"When Camel JBang exports code to a Quarkus Maven application the resulting build fails with:
The code exported is Sample.java:
The Camel JBang command used to export:
Camel version: 4.7.0-SNAPSHOT
The Maven output when calling mvn package on the generated export project:
Maven StackTrace:",No comments found
20910,Task,Guillaume Nodet,Adriano Machado,4.6.0,4.x,2024-06-25T03:48:39+0000,1719287319,2024-12-27T11:09:07+0000,2024-12-27T11:09:07+0000,Build is failing using mvnd 1.0.0,No comments found
20909,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-24T15:26:15+0000,1719242775,2024-06-27T12:19:38+0000,2024-06-27T12:19:38+0000,No description available,No comments found
20908,New Feature,Unassigned,Aurélien Pupier,None,4.x,2024-06-24T14:53:47+0000,1719240827,2025-01-03T10:49:18+0000,,"it would convenient for investigation to be able to pause all current route exchange at the nearest point (surely next step) to investigate what is going on with the routes.
It would be convenient to be able to pause all exchanges and also to be able to pause for a Route definition or a Camel context.
Currently, suspend is no more starting new routes but finishes the current exchanges. The stop is no more starting the routes and not finishing the current exchange.
Technical:
it would likely be some option you turn on|off to have this behaviour - we can debate whether it should be on as default (new) or off (like now). To checked that it is not breaking other flow, like in Hawt.io to use the new behavior as default.
or a parameter on the suspend/stop methods?
or create another one, as pause",No comments found
20907,Bug,Claus Ibsen,kangjian,3.18.0,4.x,2024-06-24T08:50:50+0000,1719219050,2024-06-26T04:16:50+0000,2024-06-25T10:19:16+0000,"Let's say I need to wait for an event notification and then pull an attachments email like this:
Camel version 3.18.x
Same code, works fine in Camel 3.14.x but doesn't work in Camel 3.18.x.
After debugging, it was found that in Camel 3.16.x, the implementation of DefaultAttachmentMessage.java was upgraded.
The key point is the CamelAttachmentObjects property in the ExchangeProperty, which is placed in the Exchange property in version 3.14.x, and in the ExtendedExchange property in version 3.16.x, which results in the loss of the CamelAttachmentObjects property between different Exchange.
Details can be found in the link below line 274:
https://github.com/apache/camel/commit/0125a133a11cbdff57d459634bac276c10963387
I tried a solution as follows:
Camel version 3.18.x
The above can solve the problem of not being able to get attachments, but there will be other properties missing.
Can you help with this? If information is missing, please do not hesitate to contact.",No comments found
20906,Bug,Claus Ibsen,Aurélien Pupier,4.6.0,4.7.0,2024-06-24T08:20:23+0000,1719217223,2024-06-24T10:20:29+0000,2024-06-24T10:20:29+0000,not sure about steps to reproduce (yet) but surely related to suspending a route and doing a change of the file which is tried to be automatically reloaded,No comments found
20905,New Feature,Tadayoshi Sato,Tadayoshi Sato,4.6.0,4.7.0,2024-06-24T02:28:38+0000,1719196118,2024-07-05T11:26:34+0000,2024-07-05T11:26:34+0000,"Currently, the following applications are only supported:
There are many more applications and the component should support them.",No comments found
20904,New Feature,Christoph Deppisch,Claus Ibsen,None,4.8.0,2024-06-21T09:13:06+0000,1718961186,2024-08-19T06:41:11+0000,2024-08-19T06:41:11+0000,"Lets see if we can make a command to camel-jbang that can build and deploy a standard Camel Spring Boot / Camel Quarkus (and potentially camel-main) to kubernetes.
This would mean to export first, and then build and deploy via SB / Quarkus standard using how you would normally do this via their maven plugins.",No comments found
20903,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-20T18:41:02+0000,1718908862,2024-06-21T14:29:39+0000,2024-06-21T07:12:48+0000,if you install a plugin then its loaded always even if you dont execute its command.,No comments found
20902,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-20T13:41:35+0000,1718890895,2024-06-21T05:41:23+0000,2024-06-21T05:41:23+0000,"Running camel-jbang with camel 4.5.0 causes
Caused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Could not find artifact org.apache.camel:camel-jbang-plugin-generate:jar:4.5.0 in central (https://repo1.maven.org/maven2)
    at org.eclipse.aether.connector.basic.ArtifactTransportListener.transferFailed(ArtifactTransportListener.java:42) ~[maven-resolver-connector-basic-1.9.18.jar:1.9.18]
    at org.eclipse.aether.connector.basic.BasicRepositoryConnector$TaskRunner.run(BasicRepositoryConnector.java:417) ~[maven-resolver-connector-basic-1.9.18.jar:1.9.18]
    at org.eclipse.aether.connector.basic.BasicRepositoryConnector.get(BasicRepositoryConnector.java:260) ~[maven-resolver-connector-basic-1.9.18.jar:1.9.18]
    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads(DefaultArtifactResolver.java:537) ~[maven-resolver-impl-1.9.18.jar:1.9.18]
    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:449) ~[maven-resolver-impl-1.9.18.jar:1.9.18]
    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:261) ~[maven-resolver-impl-1.9.18.jar:1.9.18]
    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies(DefaultRepositorySystem.java:353) ~[maven-resolver-impl-1.9.18.jar:1.9.18]
    at org.apache.camel.tooling.maven.MavenDownloaderImpl.resolveArtifacts(MavenDownloaderImpl.java:451) ~[camel-tooling-maven-4.5.0.jar:4.5.0]
    at org.apache.camel.main.download.MavenDependencyDownloader.resolveDependenciesViaAether(MavenDependencyDownloader.java:560) ~[camel-kamelet-main-4.5.0.jar:4.5.0]
    at org.apache.camel.main.download.MavenDependencyDownloader.lambda$doDownloadDependency$0(MavenDependencyDownloader.java:281) ~[camel-kamelet-main-4.5.0.jar:4.5.0]
    at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
    at java.base/java.lang.Thread.run(Thread.java:833) ~[?:?]
ERROR: Failed to read file META-INF/services/org/apache/camel/camel-jbang-plugin/camel-jbang-plugin-generate in dependency org.apache.camel:camel-jbang-plugin-generate:4.5.0.",No comments found
20901,Improvement,James Netherton,James Netherton,None,4.7.0,2024-06-20T10:28:51+0000,1718879331,2024-06-24T11:50:11+0000,2024-06-24T11:50:11+0000,"ArangoDB 7.7.1 made is possible to provide a custom Vertx instance for the ArangoDB client.
This is useful for Camel Quarkus where there's already an existing managed Vertx. Currently the client will create its own Vert.x instance. Which is a waste of resources and causes some ugly log warnings.",No comments found
20900,Improvement,Christoph Deppisch,Gaëlle Fournier,"4.4.2,4.6.0",4.7.0,2024-06-20T09:01:38+0000,1718874098,2024-07-03T06:04:27+0000,2024-07-03T06:04:27+0000,The `kamel run` CLI command provide the following flag option that has not been added yet to the Camel K Jbang plugin :,No comments found
20899,Improvement,Christoph Deppisch,Gaëlle Fournier,"4.4.2,4.6.0",4.x,2024-06-20T08:05:25+0000,1718870725,2024-12-29T21:07:01+0000,2024-12-29T21:07:01+0000,"An good improvment would be to be able to define the camel-k-version configured by the plugin.
The jbang camel k plugin is used as to run Camel routes with Camel K and as will replace the `kamel` CLI run command.
To be able to create `Integration` CRDs it uses the following dependency and therefore depends on the camel-k-version set by default:
Since the Camel K CRDs can change between Camel K versions, we might need to use another one than the default.
While it can be done in the command with like
it would be nicer to be able to choose the Camel K version in configuration command with `camel config set xxxx` and use the simple command `camel k run files/Java.java`.",No comments found
20898,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-19T12:38:41+0000,1718800721,2024-06-19T13:48:18+0000,2024-06-19T13:48:18+0000,"We need to do a deep copy when using route templates so they become fully isolated, and there is no side effects when creating multiple routes from the same template.",No comments found
20897,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-19T12:15:33+0000,1718799333,2024-06-21T09:37:24+0000,2024-06-21T09:37:24+0000,"See
https://camel.zulipchat.com/#narrow/stream/257301-camel-spring-boot/topic/Adding.20.26.20in.20password.20in.20spring.20XML.20DSL",No comments found
20896,New Feature,Jiri Ondrusek,Jiri Ondrusek,None,4.8.0,2024-06-19T09:16:57+0000,1718788617,2024-10-10T16:00:57+0000,2024-10-10T16:00:57+0000,"Quarkus introduced a migration tool in the past (see the documentation - https://quarkus.io/guides/update-quarkus). Camel Quarkus leveraged the tool and added support for migration of the camel-quarkus projects.
Now is the right time to bring such migrations into plain Camel.
Current status:
I'd like to propose several improvements:",No comments found
20895,Improvement,Tadayoshi Sato,Tadayoshi Sato,4.6.0,4.7.0,2024-06-19T08:06:27+0000,1718784387,2024-06-21T14:28:28+0000,2024-06-21T07:13:52+0000,"Currently, both ZooImageClassificationPredictor and CustomImageClassificationPredictor transform the resulted Classifications objects into maps of Map<String, Float>. However, the data type of Classifications is a map from the class name to probability with String -> Double, thus the precision is lost in the mapping.
It doesn't seem to be a good transformation in the following points:
In conclusion, I think it's better for ZooImageClassificationPredictor and CustomImageClassificationPredictor to simply return the output as Classifications.",No comments found
20894,Wish,Claus Ibsen,Raymond,4.6.0,4.7.0,2024-06-19T07:37:50+0000,1718782670,2024-06-22T07:08:14+0000,2024-06-21T08:43:19+0000,"I like to get all events of the step eip with the EventNotifier. However it seems that not all steps trigger events.
To demonstrate this I created two integrations:
Integration: Test1
Integration: Test2
For the first integration, every time the step is reached, I get an event. For the second integration, the mock endpoints are removed, and those steps don't trigger an event.
I would like to that every step triggers an event, such as:
Though maybe out of scope for this issue, it would even be practical to do something like this:
This step doesn't have any child nodes, but could be used to catch events at various points in a route.",No comments found
20893,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.7.0,2024-06-19T07:23:55+0000,1718781835,2024-06-27T06:51:18+0000,2024-06-27T06:51:16+0000,"The JmsRouteRequestReplyTest test is outdated and unnecessarily complex to the point of making it hard to do cleanups on other tests (not to mention the occasional flakiness).
It needs to be refactored for simplicity, speed and ease of maintenance.",No comments found
20892,Improvement,Claus Ibsen,Christoph Deppisch,4.6.0,4.7.0,2024-06-19T06:17:25+0000,1718777845,2024-06-19T18:11:38+0000,2024-06-19T18:11:38+0000,"When a Camel route uses a Kamelet but misses a mandatory field for some reason the error message is quite misleading. The error reports a ""KameletNotFoundException"" in the StackTrace which is misleading because the real error is an ""IllegalArgumentException"" due to the missing mandatory field.
The user needs to find the right part of the StackTrace to find out what is going on: ""Route template set-body-action the following mandatory parameters must be provided: value""
The ""KameletNotFoundException"" is wrong anyways as the Kamelet has been part of the catalog in this case.",No comments found
20891,Improvement,Claus Ibsen,Lars Heinemann,4.6.0,4.7.0,2024-06-18T17:51:24+0000,1718733084,2024-06-20T11:22:28+0000,2024-06-20T11:22:28+0000,"Improve the catalog documentation for Processor's Ref attribute. Currently it is this:
However there are more options here. You could reference a key in the application.properties via `key` or you could also reference a bean with `#bean:myBeanId`. There might be even more options people would love to know about.",No comments found
20890,Bug,Claus Ibsen,Raymond,4.6.0,4.7.0,2024-06-18T15:42:55+0000,1718725375,2024-06-19T13:48:22+0000,2024-06-19T13:48:22+0000,"I like to use steps in my routeTemplates. This works, however when I want to specify the ID I cannot use template parameter:
When I create 2 routes with the above template I get the following error:
The step ID doesn't get interpolated and is used a the literal ""name"". I need to set the step id myself to get information about the specific route.
Note that I run into when I was using kamelets with the step EIP, but this is a smaller example.",No comments found
20889,Bug,Luigi De Masi,Luigi De Masi,None,4.7.0,2024-06-18T10:26:34+0000,1718706394,2024-06-26T13:54:32+0000,2024-06-26T13:54:32+0000,"Having the following Camel route on Camel  2.x
Shows that the consumption of the message payload  in the processor via
But if you run this same route from  Camel 3.x to the latest 4.x one,  you will get the following output:
The problem is that on Camel 2.x, when
{{ exchange.getIn().getBody(String.class))}}
is called,  the org.apache.camel.converter.IOConverterOptimised is triggered to convert the body from org.apache.camel.converter.stream.InputStreamCache to java.lang.String, which at the beginning of the convertion, it reset the stream:
From Camel 3.x, org.apache.camel.converter.IOConverterOptimised has been dropped, and org.apache.camel.converter.IOConverter is used instead, which doesn't reset the stream.",No comments found
20888,Task,Aurélien Pupier,Aurélien Pupier,4.7.0,4.9.0,2024-06-18T08:08:29+0000,1718698109,2024-09-12T06:50:32+0000,2024-09-12T06:50:32+0000,Kotlin DSL was deprecated in 4.7.0,No comments found
20887,Bug,Zheng Feng,Zheng Feng,4.6.0,4.7.0,2024-06-18T07:53:05+0000,1718697185,2024-06-18T11:53:10+0000,2024-06-18T11:53:10+0000,"It is missing parseArtifact method in generatePojoBeanModel(). so when camel-qurakus genreated the catalog, it will miss the beans.",No comments found
20886,Task,Unassigned,Aurélien Pupier,None,4.x,2024-06-17T15:03:30+0000,1718636610,2024-12-28T17:06:58+0000,,"if we can use parallel Maven build, it could save a lot of time during build phase locally and on CIs.
Example on my locla machine with 8 cores with all dependencies downloaded:
Different possibilities:",No comments found
20885,Task,Aurélien Pupier,Aurélien Pupier,None,4.7.0,2024-06-17T15:01:22+0000,1718636482,2024-09-09T08:51:55+0000,2024-06-18T11:41:35+0000,"kotlin API was provided as experimental but it was not picked by the community. The creator of it is no more active in the community. it is taking a fair part of the build time (without tests) between 10 and 20%.
the idea is to deprecate the Kotlin API so that it can be removed in next version. it will reduce codebase size, improving maintainability and decrease build time on each PR and each build on CIs.",No comments found
20884,Task,Aurélien Pupier,Aurélien Pupier,None,4.7.0,2024-06-17T13:23:24+0000,1718630604,2024-06-20T14:49:14+0000,2024-06-20T14:49:14+0000,"The Camel package Maven plugin is used a lot during the build of Apache Camel. When build ding with -D quickly, it represents around 10% of the time spent. (on my local machine 1'11"" on a 11'31"" build)",No comments found
20883,Task,Guillaume Nodet,Aurélien Pupier,None,4.10.0,2024-06-17T12:28:15+0000,1718627295,2025-01-10T14:45:23+0000,2025-01-10T14:45:23+0000,"in log there is 14 times:
```
14:00:33,645 [INFO] — plugin:3.13.1:addPluginArtifactMetadata (default-addPluginArtifactMetadata) @ camel-package-maven-plugin —
14:00:33,645 [INFO] This Mojo is not used in Maven version 3.9.0 and above
```
In this case I think we need to upgrade the minimal Maven version (currently at 3.5.0): https://github.com/apache/camel/blob/07c502761c4d450f5b2b7bba19ce4f69f507212d/pom.xml#L915
Is it fine to upgrade the minimal Maven version to 3.9.0?
I guess we are testing anyway only with the version which is defined by the Maven wrapper?
Advantages:
Drawback:",No comments found
20882,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.4.3,2024-06-17T10:49:04+0000,1718621344,2024-06-20T13:21:07+0000,2024-06-20T13:21:07+0000,No description available,No comments found
20881,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-17T09:40:42+0000,1718617242,2024-06-17T12:11:57+0000,2024-06-17T12:11:57+0000,"When using log component then its base endpoint creates an instance of 
DefaultPollingConsumerPollStrategy which is only needed for consumers, so lets optimize this",No comments found
20880,Task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-17T07:11:56+0000,1718608316,2024-06-17T12:36:33+0000,2024-06-17T12:36:33+0000,No description available,No comments found
20879,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-15T19:09:04+0000,1718478544,2024-06-22T13:35:26+0000,2024-06-22T13:35:26+0000,"We may want to have a total counter for unique exchanges, as an exchange may during routing be splitted into sub exchanges, or wire tapped, or what else.
We should think about how to count unique incoming exchanges.
This is a ticket created a bit quickly to not forget about to look into this and research a bit first.",No comments found
20878,New Feature,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-15T09:00:41+0000,1718442041,2024-06-15T14:22:35+0000,2024-06-15T14:22:24+0000,We can make a command that show the rest-dsl services via the new rest dev console,No comments found
20877,Bug,Claus Ibsen,Marat Gubaidullin,None,4.7.0,2024-06-14T17:55:35+0000,1718387735,2024-06-15T06:59:00+0000,2024-06-15T06:59:00+0000,"How to reporoduce:
1. Set `camel.jbang.jib-maven-plugin-version=3.4.3` in `application.properties`
2. Run `jbang ""-Dcamel.jbang.version=4.6.0"" camel@apache/camel export --fresh`
Result in pom.xml
Expected result:",No comments found
20876,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.x,2024-06-14T13:04:31+0000,1718370271,2024-06-14T13:04:31+0000,,https://github.com/akeylesslabs/akeyless-java,No comments found
20875,Task,Unassigned,Aurélien Pupier,None,None,2024-06-13T11:58:10+0000,1718279890,2024-06-27T12:13:46+0000,,"Currently there is the possibility to trigger component test by providing a comment on a PR with /component-test.
it would be convenient to start the test automatically.
Maybe easier starting with Dependabot as there is the name of the updated dependency in the message.
Not necessarily easy to kno all of the component directly impacted. Currently what I'm doing manually is:
Maybe as a first iteration, providing a link in the generated comment message to the search URL can help to save few clicks",No comments found
20874,Task,Unassigned,Aurélien Pupier,None,4.x,2024-06-13T11:52:03+0000,1718279523,2024-06-27T12:14:08+0000,,"Currently, it is possible to play unit tests for specific component/group of components by providing a comment /component-test on a Pull request.
It would be convenient to have the possibility to do it for Integration Tests; For instance with a comment: /compontent-it-test
Technical points:",No comments found
20873,Bug,James Netherton,James Netherton,None,"4.4.3,4.7.0",2024-06-13T10:55:25+0000,1718276125,2024-06-13T12:59:48+0000,2024-06-13T12:59:48+0000,"In VertxPlatformHttpSupport.writeResponse, the only exception that is handled is when fallback type conversion fails on the message body:
https://github.com/apache/camel/blob/4621c36131a32fa340e6ab5975126d207a104fe5/components/camel-platform-http-vertx/src/main/java/org/apache/camel/component/platform/http/vertx/VertxPlatformHttpSupport.java#L179-L205
However, it can potentially happen that other parts of processing the response, such as adding HTTP headers, can fail and cause an exception. In this case, the Vert.x promise is left unfulfilled and thus the response may not complete correctly.
It is probably better to wrap all of the writeResponse method code in a try / catch block so the promise can be correctly set in a failed state.",No comments found
20872,New Feature,Unassigned,Federico Mariani,None,4.x,2024-06-13T09:01:10+0000,1718269270,2024-06-13T09:20:41+0000,,"It is common to use a database like a vault, where users store key/value secrets. It would be nice to have a PropertyFunction that can be used to retrieve that information, in particular, the user experience should be similar to the hashicorp-vault one. Given a table with the following structure
the PropertyFunction can be configured via system properties like
and the properties can be retrieved via
for example
Given that <returnColumn><table><keyColumn> should be constant, we may add those to system properties ala
and the expression can be
This is just a first an hypothetical implementation, I am open to discussions.",No comments found
20871,Improvement,Unassigned,Aurélien Pupier,None,None,2024-06-13T08:36:34+0000,1718267794,2024-07-26T08:57:16+0000,,"Toolings are currently using the catalog to let user browse components. In the IoT space, users are often coming with protocol names, such as OPC UA, CANOpen and more. Currently when searching for these protocols, no component are showing up. But the component PLC4X is supporting them.
Adding all of these protocols in the description of the component, which is part of the catalog, is making the description too long.
Other ideas to improve discoverability:
Note: initial discussion https://github.com/apache/camel/pull/14419",No comments found
20870,Task,Unassigned,Aurélien Pupier,None,None,2024-06-13T07:54:34+0000,1718265274,2024-09-17T11:17:01+0000,,"it is often that the camel-website is broken due to changes in documentation in other Camel repositories where the documentation is defined.
it will be convenient to have a PR check on each of these repositories to avoid being in this state.",No comments found
20869,Improvement,Claus Ibsen,Lucas da Silva Lima,4.6.0,4.8.0,2024-06-12T17:38:47+0000,1718213927,2024-08-14T09:24:17+0000,2024-08-14T09:24:17+0000,"On new camel-spring-rabbitmq does not include ""skip"" options, like: skipDeclareQueue https://camel.apache.org/components/3.22.x/rabbitmq-component.html#_component_option_skipQueueDeclare
If we create a producer with only exchange and routingKey (and autoDeclareProducer), it will generate random queues:",No comments found
20868,Improvement,John Poth,John Poth,None,4.7.0,2024-06-12T09:16:57+0000,1718183817,2024-06-12T12:22:39+0000,2024-06-12T12:02:21+0000,Would be cool if the camel-aws-xray-starter configured Camel out of the box. Thanks !,No comments found
20867,Bug,Unassigned,Barry Rawlinson,4.5.0,None,2024-06-12T07:09:27+0000,1718176167,2024-06-12T07:40:51+0000,2024-06-12T07:40:51+0000,"With camel-quarkus 3.9.5 (which uses camel 4.4.1) this routing works:
After upgrading Quarkus to 3.10.0 (Camel 4.5.X)  or Quarkus 3.11.1 (Camel 4.6.0) I receive a DirectConsumerNotAvailableException for ""get-orders"" in the ""get-order"" route.",No comments found
20866,Bug,Claus Ibsen,Raymond,4.6.0,4.7.0,2024-06-12T06:32:20+0000,1718173940,2024-07-11T07:26:55+0000,2024-06-13T09:02:28+0000,"I have Camel 4.6 running on Java 21
When I use the following curl:
To test the following route:
This works as expected and the result is Y.
Now I changed the exchangepattern from 'InOut' to 'InOnly':
When I call this flow with curl multiple times, I sometimes get the result:
X
And the other time:
XX
So the result is returned twice or even more times. I would expect only to get the output X (which for example works this way when I use ActiveMQ).
It may take more than 10 times before you can see the double responses, but this behavior can be easier reproduced by adding more SEDA endpoints:",No comments found
20865,Improvement,James Netherton,James Netherton,None,4.7.0,2024-06-12T06:24:55+0000,1718173495,2024-06-12T07:08:19+0000,2024-06-12T07:08:19+0000,The elasticsearch-rest-client docs are a little thin on detail. It'd be good to do like the camel-elasticsearch component and have an overview of the supported operations and how they are used.,No comments found
20864,Bug,Claus Ibsen,Kartik,3.22.2,"3.21.5,3.22.3,4.0.6,4.4.3,4.7.0",2024-06-12T05:38:38+0000,1718170718,2024-06-17T07:39:11+0000,2024-06-12T17:43:02+0000,"In confluent kafka, we can register the topic against schema validation from the schema registry. When configured the confluent document says either we should have a pojo object defined in the code that is used for serialization/deserialization OR a custom ""ObjectNode"" can be created from their schema utils. Attaching the document below
https://docs.confluent.io/platform/current/schema-registry/fundamentals/serdes-develop/serdes-json.html#sending-a-jsonnode-payload
For our case, we have a different schema registered and can't have all the POJO defined as schema registered at run time, so we are using the below code to generate an object from the schema.
If the ""ObjectNode"" payload is directly written using kafka-client library it works. But when written using camel component, The ""KafkaProducer"" in camel component does ""isIterable"" check and if true sends each value and this doesn't work for confluent kafka as the custom ""io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer"" expects a whole object.
The code in ""
io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer expects whole object.
Basically, in simple words, The ""envelope"" object created is no longer the same object but is iterated and values are iterated and sent independently resulting in schema validation error.",No comments found
20863,Bug,Jiri Ondrusek,Jiri Ondrusek,4.7.0,4.7.0,2024-06-11T11:53:46+0000,1718106826,2024-06-11T14:17:52+0000,2024-06-11T14:17:52+0000,"If endpoint uses only a producer (example from camel-quarkus integration tests)
Producer for multiple messages requires  CamelToolExecutorCache.getInstance().getTools()  to return something (!= null) see code
I checked that only place which is adding something to the cache is a   consumer, which does not seem to be correct.",No comments found
20862,Task,Unassigned,Aurélien Pupier,4.7.0,None,2024-06-11T10:06:14+0000,1718100374,2024-06-12T07:00:42+0000,2024-06-12T07:00:42+0000,No description available,No comments found
20861,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-11T09:02:38+0000,1718096558,2024-06-11T09:52:53+0000,2024-06-11T09:52:53+0000,To include this information during default tracer that logs,No comments found
20860,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-11T07:59:56+0000,1718092796,2024-06-12T06:54:50+0000,2024-06-12T06:54:50+0000,We have marked all components with remote = false | remote = true on the UriEndpoint that tooling can use. But it would be good to have this information in the Endpoint API so we know this from Camel runtime as well.,No comments found
20859,Bug,Claus Ibsen,Aurélien Pupier,4.6.0,4.7.0,2024-06-10T14:53:29+0000,1718031209,2024-06-11T06:01:04+0000,2024-06-11T06:00:43+0000,"when calling something like:
on a file named for instance demo.camel.yaml is genrating a demo.yaml file although i would expect a demo.xml (or even better a demo.camel.xml)",No comments found
20858,Improvement,Unassigned,Aurélien Pupier,4.6.0,4.x,2024-06-10T14:47:00+0000,1718030820,2024-09-18T13:26:03+0000,,"When calling transform command, it would be convenient to have a message log mentioning the file transformed with initial name and final name and if it is a new file created aor one exists and it is appended",No comments found
20857,Improvement,Claus Ibsen,Aurélien Pupier,4.6.0,4.7.0,2024-06-10T14:43:35+0000,1718030615,2024-06-11T06:01:11+0000,2024-06-11T06:01:11+0000,"If I have a demo.camel.xml file and try to transform it to yaml by specifying a folder, the generated filename is camel.yaml. it would be convenient to generate it with all the extensions, such as: demo.camel.yaml",No comments found
20856,Improvement,Unassigned,Claus Ibsen,None,4.7.0,2024-06-10T13:23:27+0000,1718025807,2024-06-10T14:31:29+0000,2024-06-10T14:31:29+0000,No description available,No comments found
20855,Improvement,Unassigned,Aurélien Pupier,4.6.0,None,2024-06-10T12:07:47+0000,1718021267,2024-06-20T15:24:42+0000,2024-06-20T15:24:42+0000,it will be convenient to provide a 'pause' action to pause all current execution of routes.,No comments found
20854,Bug,Claus Ibsen,Billy Jaime Beltran,4.4.1,4.x,2024-06-10T11:35:12+0000,1718019312,2024-07-02T11:36:11+0000,2024-07-02T11:36:11+0000,"When upgrading a JAXB+CXF application from Camel 4.x to Camel 4.4.x we encountered a `jakarta.xml.bind.UnmarshalException` with a linked exception of `com.sun.istack.SAXParseException2` Namespace URIs and local names to the unmarshaller needs to be interned.
Through bisection, we believe this change happens after the changes in Camel-14028 .
When the inbound data in a CxfCachedPayload object is converted with the new non-stream cast unmarshal(), the method attempts to find a TypeConverter fail repeatedly until a fallback CXF converter is found that instantiates a WstxDOMWrappingReader (instance of XmlStreamReader) - however this one has a flag _cfgInternNames set to false which causes the exception above to be thrown.
When we force the code to flow into the old InputStream path, we end up in `camel.converter.jaxp` where factory methods create a ValidatingStreamReader (instance of XmlStreamReader) to read a ByteArrayInputStream.
The latter object contains the flag mInternStrings=true and works as in previous iterations of Camel.
To continue working as before, the WstxDOMWrappingReader needs interning to be activated or have the CXFCachedPayload handled by the jaxp logic",No comments found
20853,Bug,Claus Ibsen,Teodor,4.6.0,4.7.0,2024-06-10T08:18:55+0000,1718007535,2024-06-13T11:52:31+0000,2024-06-13T11:52:31+0000,"A fully functional demo project was created and published on [GitHub|https://github.com/me0x847206/issue-camel].
The issue can be seen as part of the following rest route configuration code:
Because of the presence of the onException section, the rest:get:/say:/bye rest route does not belong to the API group.
If the onException part is removed then, the rest:get:/say:/bye rest route becomes part of the API group as expected (and as it worked on previous versions).",No comments found
20852,Improvement,Unassigned,Alexander Friedrichs,None,"4.4.4,4.7.0",2024-06-09T20:15:28+0000,1717964128,2024-10-08T07:53:16+0000,2024-06-10T05:49:28+0000,New option to allow adding empty files to a zip. Keeping the default behaivior.,No comments found
20851,Improvement,James Netherton,James Netherton,None,"4.4.3,4.7.0",2024-06-07T14:28:37+0000,1717770517,2024-06-10T12:02:58+0000,2024-06-10T12:02:58+0000,"Quoting from the ES client docs:
It is important to close the Sniffer so that its background thread gets properly shutdown and all of its resources are released. The Sniffer object should have the same lifecycle as the RestClient and get closed right before the client",No comments found
20850,Bug,Nicolas Filotto,Timur,"4.0.3,4.2.0","4.0.6,4.4.3,4.7.0",2024-06-07T14:23:33+0000,1717770213,2024-06-11T17:16:59+0000,2024-06-11T17:16:59+0000,"We encountered an infinite loop while downloading files using the SFTP endpoint.
During our investigation, we discovered the InProgressRepository utilizing the SimpleLRUCache. This cache incorporates an unconventional eviction implementation that involves a changes tracking queue.
Any attempt to modify the cache, even when putting the same element, results in an increase in the cache size, potentially causing eviction to occur even for a single element.
The code is as follows:
In the provided code, the failure occurs when the number of inserts reaches 2.
Utilize the LRU Cache limited only by the maximum size passed into it, rather than by some internal implementation limits.
Implement a standard LRUCache, say, by leveraging a LRUMap from Apache Commons.
We may provide the PR later on.
We need to use a dynamic SFTP route (the download parameters depend on some configuration passed from the outside). By default, this is impossible, so we will have to use pollEnrich:
The pollEnrich takes only one element (see GenericFilePollingConsumer). The file consumer requests from the SFTP endpoint the list of all files, then takes the first, then gets the list again and takes the second file, and so on.
The combination of InProgressRepository and idempotent consumer is used to avoid handling the same files again.
However, every time the SFTP endpoint lists files, the endpoints and polling consumers adjust the list in the InProgressRepository, thus affecting the SimpleLRUCache.
The number of elements in the cache doesn't grow, however, the number of changes grows with almost n^2 speed.
With the limit of 50k files, the SimpleLRUCache is evicted already on ~600 files. This leads to an infinite loop while processing the files.",No comments found
20849,Improvement,Guillaume Nodet,Guillaume Nodet,None,4.7.0,2024-06-07T07:29:09+0000,1717745349,2024-06-07T07:29:45+0000,2024-06-07T07:29:45+0000,No description available,No comments found
20848,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-06T20:30:55+0000,1717705855,2024-06-06T20:31:38+0000,2024-06-06T20:31:38+0000,Export to camel-main with only jib (vanilla docker) then dont include kubernetes stuff.,No comments found
20847,Bug,Claus Ibsen,Claus Ibsen,4.6.0,4.7.0,2024-06-06T14:01:13+0000,1717682473,2024-06-07T06:27:39+0000,2024-06-06T18:36:24+0000,"2024-06-06 15:59:35.592 ERROR 78029 — [ntloop-thread-0] io.vertx.ext.web.RoutingContext          : Unhandled exception in router
java.lang.NoSuchMethodError: 'org.json.simple.JSONObject org.jolokia.server.core.http.HttpRequestHandler.handleThrowable(java.lang.Throwable)'
    at org.apache.camel.component.platform.http.plugin.DefaultJolokiaPlatformHttpPlugin.lambda$createVertxHandler$0(DefaultJolokiaPlatformHttpPlugin.java:184) ~[camel-platform-http-jolokia-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
    at io.vertx.ext.web.impl.BlockingHandlerDecorator.lambda$handle$0(BlockingHandlerDecorator.java:48) ~[vertx-web-4.5.7.jar:4.5.7]
    at io.vertx.core.impl.ContextImpl.lambda$executeBlocking$1(ContextImpl.java:191) ~[vertx-core-4.5.7.jar:4.5.7]
    at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:279) ~[vertx-core-4.5.7.jar:4.5.7]
    at io.vertx.core.impl.ContextImpl.lambda$internalExecuteBlocking$2(ContextImpl.java:210) ~[vertx-core-4.5.7.jar:4.5.7]
    at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76) ~[vertx-core-4.5.7.jar:4.5.7]
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.108.Final.jar:4.1.108.Final]
    at java.base/java.lang.Thread.run(Thread.java:833) [?:?]",No comments found
20846,Improvement,James Netherton,James Netherton,None,4.7.0,2024-06-06T12:55:47+0000,1717678547,2024-06-10T15:04:29+0000,2024-06-10T15:04:29+0000,"Currently, you can only configure camel-elasticsearch-rest-client using endpoint options. It'd be nice to do like camel-elasticsearch and have most of those options available as component options.",No comments found
20845,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-06T08:05:01+0000,1717661101,2024-06-07T07:06:29+0000,2024-06-07T07:06:29+0000,"We should maybe add a simple function for replacing text to make it easier
As today you may fiddle with setting this especially when doing a single to double quote or vise versa.",No comments found
20844,Bug,Claus Ibsen,Eduard Gomoliako,4.4.0,4.8.0,2024-06-06T07:48:57+0000,1717660137,2024-08-19T11:09:22+0000,2024-08-19T11:09:22+0000,"I have the following problem: onCompletion processor on a route can’t find a caught exception in Exchange that occurred inside Split with UseOriginalAggregationStrategy aggregation strategy.
 
Long story short:
Is this an expected behavior?
Should the UseOriginalAggregationStrategy copy the EXCEPTION_CAUGHT property as well? 
Or probably it would be better if OnCompletionProcessor sets it in case of clearing the exception, wouldn’t it?
 
Thank you in advance for sharing your thoughts.",No comments found
20843,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.7.0,2024-06-06T07:42:07+0000,1717659727,2024-08-13T14:55:28+0000,2024-06-12T07:41:00+0000,"Over the course of years, multiple additions and changes to the CamelTestSupport class have made it extremely fragile, tightly coupled and hard to maintain.
Among the problems of this class:
To make things even worse, the wide open interfaces provided by this class have leaked to other projects (such as Camel Quarkus).
The work on this ticket is related to extracting the common interface and code from CamelTestSupport so that other sub-projects can specialize the safe parts of it.",No comments found
20842,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-06T04:22:37+0000,1717647757,2024-06-11T09:02:45+0000,2024-06-10T14:20:38+0000,To include this information during the traced messages,No comments found
20841,Bug,Unassigned,Rob Ratcliffe,"4.0-M1,4.6.0","4.4.3,4.7.0",2024-06-05T18:12:20+0000,1717611140,2024-06-28T22:04:36+0000,2024-06-07T04:39:05+0000,"Scenario:
When there is a Camel/Spring Boot API project where there are a large amount of DataSonnet (DS) scripts
And when the application is under memory load or runs for a long time, some or ALL DS scripts are removed from the mapperCache
And once they are removed from the mapperCache, then a call to an API endpoint that contains that DS script will be unable to be evaluated and the API call will continue to fail because the expression isn't re-added to the mapperCache
What I expect to happen instead:
The API is able to recover and re-add missing DS scripts.
The error returned is:
From what I can tell, Camel 3.7 didn't have this issue. It looks like the DS scripts have been stored in an LRUSoftCache for a long time and is designed this way so that expressions are removed to prevent OutOfMemoryError. However, in Camel 4 the mapper became pre-initialized and .lookup() was used instead of .computeIfMiss().
Camel 3.7: https://github.com/apache/camel/blob/camel-3.7.x/components/camel-datasonnet/src/main/java/org/apache/camel/language/datasonnet/DatasonnetExpression.java#L143
Camel 4: https://github.com/apache/camel/blob/main/components/camel-datasonnet/src/main/java/org/apache/camel/language/datasonnet/DatasonnetExpression.java#L137
Project that replicates this error: https://github.com/rlratcliffe/replicate-ds-error",No comments found
20840,Bug,Otavio Rodolfo Piske,Mark Wimpory,4.6.0,4.7.0,2024-06-05T15:16:37+0000,1717600597,2024-06-16T06:47:36+0000,2024-06-16T06:47:36+0000,"When setting up the KinesisConsumer to use the KinesisResumeAdapter this error is thrown.
java.lang.ClassCastException: Cannot cast org.apache.camel.support.resume.ResumeActionAwareAdapter to org.apache.camel.component.aws2.kinesis.consumer.KinesisResumeAdapter
    at java.base/java.lang.Class.cast(Class.java:3889)
    at org.apache.camel.resume.ResumeStrategy.getAdapter(ResumeStrategy.java:62)
I have isolated this to the following problem.
The KinesisConsumer DOES NOT override the default method in ResumeAware that specified the adapter name:
 
default String adapterFactoryService()
This leads to a classpath clash with the camel-support jar that is also use the name adapter-factory.  In this case the factory service when called for Kinesis creates the wrong type of adapter as above.
 
Other Resumable consumers have renamed their factory files for instance the file consumer uses file-adapter-factory.
 
I have created a work around locally (that I dont like) by creating in my own classpath a duplicate of the adapter factory.  This is loaded in preference to the jar resources but is not a perm fix.
 
The fix required is to: * Change the Kinesis2Consumer to override the method above and return its own factory name such as kinesis-adapter-factory",No comments found
20839,Bug,Claus Ibsen,Claus Ibsen,4.6.0,4.7.0,2024-06-05T12:25:37+0000,1717590337,2024-06-06T07:59:39+0000,2024-06-06T07:59:39+0000,"To reproduce the issue use this example: https://github.com/apache/camel-kamelets-examples/tree/main/jbang/open-api and move greetings-api.json to a subfolder 'apis'. Then run 'camel run --open-api apis/greetings-api.json Greetings.java' and it throws: ""The given OpenApi specification cannot be loaded from: greetings-api.json ... Cannot invoke ""java.net.URI.toString()"" because the return value of ""org.apache.camel.spi.Resource.getURI()"" is null"" . It doesn't work even if I use quotes ""apis/greetings-api.json""",No comments found
20838,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-06-05T08:25:08+0000,1717575908,2024-08-14T07:25:39+0000,2024-08-14T07:25:39+0000,"Over the course of years, multiple additions and changes to the CamelTestSupport class have made it extremely fragile, tightly coupled and hard to maintain.
Among the problems of this class:
To make things even worse, the wide open interfaces provided by this class have leaked to other projects (such as Camel Quarkus).
The work on this ticket is prevent tests from abusing internal APIs from CamelTestSupport and related classes. As of 4.7.0 they have been marked as deprecated, but need to wait until the next LTS release is out before we can finish this.",No comments found
20837,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.7.0,4.8.0",4.9.0,2024-06-05T08:20:15+0000,1717575615,2025-02-27T20:17:41+0000,2024-09-10T11:29:40+0000,"Over the course of years, multiple additions and changes to the CamelTestSupport class have made it extremely fragile, tightly coupled and hard to maintain.
Among the problems of this class:
To make things even worse, the wide open interfaces provided by this class have leaked to other projects (such as Camel Quarkus).
The work on this ticket is related to transforming the ContextLifecycleManagers into full-blown JUnit extensions. As this is a breaking change in a few aspects, this work is planned for 4.9.0 (or whatever is the next release after the next LTS).",No comments found
20836,Improvement,James Netherton,James Netherton,None,4.7.0,2024-06-05T08:08:40+0000,1717574920,2024-06-05T09:23:00+0000,2024-06-05T09:23:00+0000,Minor thing I noticed while experimenting with camel-qdrant. There's no action to delete a collection. So currently you're forced to do it via the web UI or use the Qdrant client directly.,No comments found
20835,Bug,Claus Ibsen,Arthur Naseef,"3.10.0,4.6.0","3.22.3,4.0.6,4.4.3,4.7.0",2024-06-04T22:18:54+0000,1717539534,2024-11-12T08:21:25+0000,2024-06-17T10:19:39+0000,"Out Of Memory (OOM) occurs when using the Recipient List with a large number of dynamic URLs.  For example:
 
    .recipientList(simple(""http://downstream-server/employee/${header.emplId}""))
 
with a large number of values for ${header.emplId} leads to the OOM.
 
REPRODUCER:
=============
https://github.com/artnaseef/camel-recipient-list-oom-reproducer
See the README.md for instructions to reproduce and detect the problem
 
DETAILS
=======
 The MulticastProcessor, which RecipientListProcessor extends, has the following ""unlimited"" cache:
 
    private final ConcurrentMap<Processor, Processor> errorHandlers = new ConcurrentHashMap<>();
 
Entries are added to this map for every unique processor created - every unique URL generates a unique processor.  The entries themselves are wrapped processor instances for error handling IIUC (to support the custom error handling used by multicast and recipient-list).  Entries are only removed from this map on shutdown.  Ironically, there is an LRUCache for the processors themselves, with a default maximum size of 1000, so the wrapped processors may get recreated even though the error handler remains in the map indefinitely.
 
IMPACT VERSIONS:
================
Appears to impact versions >= 3.10.0
COMMIT: 0d9227ff16fb00e047fdd087740c87cce01bb545
=======
It appears this commit introduced the use of the errorHandlers ""unlimited"" cache for recipient lists.
 
FOLLOW-UP
==========
I have ideas and questions for implemeting a fix:
    - IDEA 1: We can use an LRUCache for this data structure as well.
    - Does it make more sense to remove the entries from errorHandlers when the related Processor entry is removed from it's LRUCache?
    - IDEA 2: setting on recipient list to disable the errorHandler cache (for dyamic urls with little chance of duplicates, this could be the best)",No comments found
20834,Bug,Claus Ibsen,Jason,"4.5.0,4.6.0","4.0.6,4.4.3,4.7.0",2024-06-04T19:38:57+0000,1717529937,2024-07-04T02:44:37+0000,2024-06-18T11:56:24+0000,"It appears that when the SubscriptionHelper attempts to reconnect and resubscribe to a channel in Salesforce, that occasionally and at an unpredictable rate, the subscriptionListener instance in SubscriptionHelper.subscribe throws an NPE when attempting to get the SUBSCRIPTION_FIELD from the response message from Salesforce because in some cases that message does not contain a subscription property in the JSON response.
This results in the component seeming to
This seems to be the offending line:
https://github.com/apache/camel/blob/main/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/streaming/SubscriptionHelper.java#L475
The reconnection seem to happen, but never actually re-subscribes to the channel and therefore the flow of platform-events stops until the spring-boot application is restarted.
Here is some of the associated logging:
This bug is causing the flow of play for events to stop unpredictably.  We have some alerting around this logging event, but it seems like this should be handled in code. I have attempted to try to catch this exception in the Camel route, but have not been successful.
The message the SubscriptionHelper is try to parse is:
Based on the exception:
This code:
Is producing the NPE and interrupting the subscription process.",No comments found
20833,Improvement,Thomas Cunningham,Thomas Cunningham,4.6.0,4.7.0,2024-06-04T18:59:29+0000,1717527569,2024-06-10T04:57:56+0000,2024-06-10T04:57:56+0000,Add a recursive option to camel-smb,No comments found
20832,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-04T13:08:28+0000,1717506508,2024-06-10T11:26:20+0000,2024-06-10T08:06:56+0000,"To make it pluggable to validate incoming message body if its valid according to a json schema / openapi contract in a light weight fashion.
Should be pluggable to discover json validator JAR library to use",No comments found
20831,Bug,Unassigned,Alexander Anpilov,"4.4.2,4.6.0",4.x,2024-06-04T12:36:37+0000,1717504597,2024-06-18T10:16:52+0000,2024-06-18T10:16:52+0000,(428) #camel > Possible bug with camel-salesforce - camel - Zulip (zulipchat.com),No comments found
20830,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-04T10:00:01+0000,1717495201,2024-06-14T06:39:08+0000,2024-06-14T06:39:08+0000,"[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.037 s <<< FAILURE! – in org.apache.camel.component.jetty.rest.RestJettyGetCorsTest
[ERROR] org.apache.camel.component.jetty.HttpsRouteWithSslConnectorPropertiesTest.testEndpoint – Time elapsed: 0.381 s <<< ERROR!
java.lang.IllegalStateException: Response does not exist (likely recycled)
    at org.eclipse.jetty.ee10.servlet.ServletChannel.getResponse(ServletChannel.java:297)
    at org.eclipse.jetty.ee10.servlet.ServletApiResponse.getResponse(ServletApiResponse.java:97)
    at org.eclipse.jetty.ee10.servlet.ServletApiResponse.toString(ServletApiResponse.java:520)
    at java.base/java.lang.String.valueOf(String.java:4218)
    at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
    at java.base/java.util.AbstractMap.toString(AbstractMap.java:555)
    at java.base/java.lang.StringConcatHelper.stringOf(StringConcatHelper.java:453)
    at java.base/java.lang.StringConcatHelper.simpleConcat(StringConcatHelper.java:408)
    at org.apache.camel.component.jetty.HttpsRouteTest.testEndpoint(HttpsRouteTest.java:142)
    at java.base/java.lang.reflect.Method.invoke(Method.java:568)
    at java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)
    at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
    at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
    at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
    at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
    at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)
12.0.8 works.
Newer version fails.",No comments found
20829,Improvement,Guillaume Nodet,Guillaume Nodet,None,4.7.0,2024-06-04T06:08:50+0000,1717481330,2024-06-04T06:36:35+0000,2024-06-04T06:10:41+0000,No description available,No comments found
20828,Improvement,Claus Ibsen,Claus Ibsen,4.7.0,4.7.0,2024-06-03T14:02:18+0000,1717423338,2024-06-04T09:18:12+0000,2024-06-04T09:18:12+0000,No description available,No comments found
20827,New Feature,Andrea Cosentino,Claus Ibsen,None,4.7.0,2024-06-03T12:19:13+0000,1717417153,2024-06-28T09:38:19+0000,2024-06-28T09:38:05+0000,No description available,No comments found
20826,Task,Hiram R. Chirino,Hiram R. Chirino,None,4.7.0,2024-06-02T20:03:26+0000,1717358606,2024-06-03T08:04:05+0000,2024-06-03T08:03:51+0000,"I’m testing on two machines, (osx jdk HotSpot 22.0.1+8-16), and (linux , jdk Red Hat 21.0.3+9).. in the /camel/core/camel-util dir of the main branch.  When I run:
mvn clean process-classes && sha256sum target/classes/META-INF/jandex.idx
on both I get different sha signatures.  But if I run something that should be equivalent:
mvn clean compile io.smallrye:jandex-maven-plugin:3.1.7:jandex && sha256sum target/classes/META-INF/jandex.idx
then I get the same sha.",No comments found
20825,New Feature,Claus Ibsen,Claus Ibsen,4.6.0,4.7.0,2024-06-01T11:17:44+0000,1717240664,2024-06-03T14:02:42+0000,2024-06-01T13:21:48+0000,It returns an empty path sections,No comments found
20824,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-01T08:13:31+0000,1717229611,2024-06-01T08:21:19+0000,2024-06-01T08:21:19+0000,This helps during debugging as you can see internal details such as batch sizes and whatnot,No comments found
20823,Bug,Thomas Cunningham,Thomas Cunningham,None,"4.4.3,4.7.0",2024-05-31T18:14:06+0000,1717179246,2024-06-12T12:01:46+0000,2024-06-01T08:12:43+0000,Getting the following error polling an SMB share that contains directories - I think we can do a check for folders and filter them out.,No comments found
20822,New Feature,Federico Mariani,Federico Mariani,None,4.7.0,2024-05-31T16:33:00+0000,1717173180,2024-06-05T05:24:51+0000,2024-06-05T05:24:51+0000,"Implement OpenAI Tool capabilities, so that camel consumer route can be used as Tool logic ala:",No comments found
20821,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.7.0",2024-05-31T11:22:07+0000,1717154527,2024-10-03T08:36:36+0000,2024-05-31T12:49:02+0000,To make it easy to enable tracing every processor in its own span,No comments found
20820,Bug,Claus Ibsen,Claus Ibsen,None,"4.4.3,4.7.0",2024-05-31T09:55:27+0000,1717149327,2024-06-02T06:05:11+0000,2024-05-31T09:59:09+0000,Reported on user mailing list,No comments found
20819,Bug,Claus Ibsen,Claus Ibsen,4.6.0,"4.4.3,4.7.0",2024-05-30T17:53:11+0000,1717091591,2024-06-02T06:07:20+0000,2024-05-31T08:33:33+0000,"camel-kamelets-examples/jbang/hello-yaml main❯ camel run hello.camel.yaml --dev --prop=camel.routecontroller.enabled=true
Does not reload route on change due to using supervised",No comments found
20818,Bug,Claus Ibsen,Marat Gubaidullin,4.6.0,4.7.0,2024-05-30T17:07:07+0000,1717088827,2024-05-30T19:05:18+0000,2024-05-30T19:05:18+0000,"The following code
throws",No comments found
20817,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-05-30T11:12:37+0000,1717067557,2024-05-30T13:23:14+0000,,When using PluginManager then the plugins can be added but these plugins are not started when camel starts and thus they can be in invalid state.,No comments found
20816,Bug,Claus Ibsen,Andrej Vano,None,4.7.0,2024-05-30T11:08:32+0000,1717067312,2024-10-10T09:30:32+0000,2024-05-30T13:15:29+0000,"I want to export the integration as a quarkus maven project using jbang
There is an option to specify quarkusGroupId, however there is io.quarkus.platform hardcoded here that causes an issue when I want to use a downstream quarkus version.
This works on camel-4.5.x branch as there is a catch block that ignores that exception
Steps to reproduce:",No comments found
20815,Bug,Claus Ibsen,Marat Gubaidullin,4.6.0,4.7.0,2024-05-29T15:34:17+0000,1716996857,2024-05-30T08:58:00+0000,2024-05-30T08:58:00+0000,"This one does not work in custom processor:
This one works fine:",No comments found
10597,Bug,Claus Ibsen,Bob Paulin,2.18.0,"2.17.5,2.18.2,2.19.0",2016-12-14T14:42:08+0000,1481726528,2016-12-15T14:26:13+0000,2016-12-14T15:31:58+0000,"Assume I have rest path
And in the type ClassA contains a reference to ClassB.
Within the Swagger Doc the path for ClassA renders as expected:
However ClassB gets a string parameter scheme
However I'd expect it to be:",No comments found