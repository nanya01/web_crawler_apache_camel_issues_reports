Camel Project ID,Type,Assignee,Reporter,Affected Versions,Fix Versions,Created Date,Created Epoch,Updated Date,Resolution Date,Description,Comments
21847,Bug,Unassigned,Dmitriy Kryukov,None,None,2025-03-06T18:21:11+0000,1741285271,2025-03-06T20:25:34+0000,,"Class OAuth2ClientConfigurer
I will provide a PR",['Dmitriy Kryukov - 2025-03-06T18:25:45+0000 PR https://github.com/apache/camel/pull/17373']
21846,Improvement,Claus Ibsen,Claus Ibsen,None,"4.10.2,4.11.0",2025-03-06T18:04:04+0000,1741284244,2025-03-06T18:52:53+0000,2025-03-06T18:52:53+0000,flight-recorder is not available on openj9 so we should see if we can make that optional and make it easy to run camel-jbang on eclipse openj9 / ibm semeru pre build jvms,No comments found
21845,Improvement,Unassigned,Claus Ibsen,4.10.0,"4.10.2,4.11.0",2025-03-06T14:14:42+0000,1741270482,2025-03-06T14:14:42+0000,,"We can make this faster by make the entire executeBatch done via auto commit turned off, and manually commit at end of batch.We can make some option to turn this on|off, as it can dependt a bit on JDBC driver and database how that works.",No comments found
21844,Improvement,Unassigned,Romain Pfund,None,4.11.0,2025-03-06T12:53:27+0000,1741265607,2025-03-06T16:25:36+0000,,"In the Azure Service Bus component, the bridgeErrorHandler is not implemented","[""Romain Pfund - 2025-03-06T12:54:49+0000 I'm available and interested to do the implementation""]"
21843,Improvement,Andrea Cosentino,Claus Ibsen,None,4.11.0,2025-03-06T11:50:25+0000,1741261825,2025-03-06T12:03:24+0000,,No description available,['Claus Ibsen - 2025-03-06T11:52:22+0000 kafka\njackson\nmongodb\nlangchain4j\njackson-avro\ndjl']
21842,Bug,Claudio Miranda,Claudio Miranda,None,None,2025-03-06T11:31:58+0000,1741260718,2025-03-06T11:32:05+0000,,"Due to the new observability-services dependency is set the camel-jbang exports, the kubernetes plugin should fix the http get path to the ""/observe"" prefix, otherwise the container pod will fail with:",No comments found
21841,Bug,Claudio Miranda,Claudio Miranda,4.10.1,None,2025-03-06T10:52:34+0000,1741258354,2025-03-06T11:21:31+0000,,the kubernetes plugin fails to fetch the container image when using the knative-service trait in minikubeThe minikube registry addon was exposed in the shell console withThe container image is correctly published in the registryThe routeThe deployed knative-service manifest contains theThe pod and knative revision fails with:,No comments found
21840,Bug,Claus Ibsen,Dennis Bohnstedt,"3.10.0,4.10.1","4.8.5,4.10.2,4.11.0",2025-03-06T09:49:28+0000,1741254568,2025-03-06T16:25:18+0000,2025-03-06T16:25:18+0000,"During update from Camel 2.x to 4.x we found a bug in Camel-http. It no longer encodes Http path correctly when used with header HTTP_QUERY.The problem is that HttpProducer does not convert the path to ASCIIString, since it uses the wrong variable when creating HttpUriRequest.Camel 2.x:Camel 4.x:The problem was introduced in version 3.10.0.",['Claus Ibsen - 2025-03-06T16:25:18+0000 Thanks for reporting and the PR']
21839,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,None,None,2025-03-06T09:38:26+0000,1741253906,2025-03-06T09:44:18+0000,,Ref: https://camel.zulipchat.com/#narrow/channel/257302-camel-quarkus/topic/LangChain4j.20Tools.20.3A.20There.20are.20no.20tools.20to.20be.20executed/near/503646001,No comments found
21838,Improvement,Unassigned,Senthil,"4.6.0,4.10.0",None,2025-03-06T07:08:04+0000,1741244884,2025-03-06T16:32:13+0000,2025-03-06T16:31:49+0000,"When I am trying to use APP_ENTERPRISE_AUTHENTICATION  with httpParams proxy configuration, proxy settings are ignored not able to connect from the network.Please suggest  a workaround to get this interface working.Thanks","['Claus Ibsen - 2025-03-06T07:09:58+0000 Ask on the user mailing list or chat room first how to get help\nDo not create a blocker ticket', 'Senthil - 2025-03-06T07:14:47+0000 APP_ENTERPRISE_AUTHENTICATION code is not using the httpParams map at all in the code \nreturn BoxDeveloperEditionAPIConnection.getAppEnterpriseConnection(configuration.getEnterpriseId(),\nconfiguration.getClientId(), configuration.getClientSecret(), encryptionPref, accessTokenCache).', ""Andrea Cosentino - 2025-03-06T07:22:03+0000 This is not a critical issue and it's not a blocker\nSo please stop updating the Level."", 'Claus Ibsen - 2025-03-06T16:31:41+0000 There is no support for http proxy for enterprise authentication, its only implemented for standard.\nAt first glance it seems not possible with Box Java SDK API. You are welcome to look into their docs what they offer.', 'Claus Ibsen - 2025-03-06T16:32:13+0000 If you can find out how to do that with Box, then you are welcome to come back and send code as PR with this feature']"
21837,Task,Andrea Cosentino,Claus Ibsen,None,4.11.0,2025-03-06T07:07:53+0000,1741244873,2025-03-06T09:43:17+0000,2025-03-06T09:43:17+0000,"This is some old component extension API that are no longer in use, and was only implemented for some old tooling that is no longer in use. We can remove some tech debt by deprecating this and removing the implementations in the upcoming releases.",No comments found
21836,Bug,Unassigned,Dmitriy Kryukov,None,"4.8.5,4.10.2,4.11.0",2025-03-05T19:30:52+0000,1741203052,2025-03-06T06:35:46+0000,2025-03-06T06:35:46+0000,I will provide a PR,"[""Dmitriy Kryukov - 2025-03-05T19:49:48+0000 MinioClient isn't properly closed in MinioComponentVerifierExtension"", 'Dmitriy Kryukov - 2025-03-05T19:52:13+0000 PR: https://github.com/apache/camel/pull/17364', 'Claus Ibsen - 2025-03-05T19:54:53+0000 The verifier extension are not really in use - its some old stuff that we frankly need to get deprecated.\nBut this PR is still valid as the client should be closed, but it wont affect any normal Camel users']"
21835,Improvement,Claudio Miranda,Claudio Miranda,4.10.1,None,2025-03-05T17:04:30+0000,1741194270,2025-03-06T11:21:35+0000,,"When use the --trait knative-service.enabled=true it correctly generates the src/main/jkube/service.yaml with the knative service.
however when building the maven project, the k8s:resource and k8s:deploy tasks generates the non knative Deployment in target/classes/META-INF/jkube/kubernetes/http-log-deployment.ymlThat in turn is merged with the knative service in the .camel-jbang-run/http-log/target/kubernetes/kubernetes.yml.There is no need for this deployment since in the kubernetes cluster, the knative operator controller will take care to create Deployment from the knative service custom resource.jkube maven plugin doesn't support knative
We should find a way to skip the jkube maven plugin to generate the Deployment.",No comments found
21834,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-03-05T11:57:34+0000,1741175854,2025-03-06T13:59:46+0000,2025-03-06T13:59:46+0000,Same as CAMEL-21265 for new component.,No comments found
21833,Bug,Claus Ibsen,Andrea Cosentino,None,4.11.0,2025-03-05T11:46:17+0000,1741175177,2025-03-06T16:51:06+0000,2025-03-06T12:14:25+0000,"if you try this example: https://github.com/apache/camel-kamelets-examples/tree/main/jbang/kafka-batch-s3you'll notice the manual commit never happens. If you try to log the content of the header in the batch-manual-commit-action using
https://github.com/apache/camel/blob/main/components/camel-kamelet/src/main/java/o[…]/component/kamelet/utils/transform/kafka/BatchManualCommit.javait seems on line 34 
the processor is not able to access the KafkaManualCommit instance
If you run the integration test in the kafka component, everything seems to work, but with Kamelets it's not","['Andrea Cosentino - 2025-03-06T08:30:24+0000 orpiske', 'Otavio Rodolfo Piske - 2025-03-06T09:23:17+0000 acosentino that sounds very strange. I want to take a closer look at it.', ""Otavio Rodolfo Piske - 2025-03-06T09:24:00+0000 Ah, I've just seen davsclaus is looking at it, so just let me know if I can help somehow."", 'Claus Ibsen - 2025-03-06T10:36:01+0000 Okay so its some weird classloding issue, if you use reflection on the manual commit instance then it works. Also we should store the commit header on the outer exchange as then it wont be lost in case end user do various message transformations in the routes', 'Claus Ibsen - 2025-03-06T10:58:47+0000 Okay so we should move the kamelet util code away from camel-kamelet and into their correct components such as camel-kafka / camel-jackson and so on. And avoid this provided classpath scope stuff that is causing pain.', 'Claus Ibsen - 2025-03-06T11:04:31+0000 The kamelets should then be changed to use classes from camel-kafka \n  org.apache.camel.component.kafka.BatchManualCommit\norg.apache.camel.component.kafka.ManualCommit', 'Andrea Cosentino - 2025-03-06T11:11:27+0000 https://github.com/apache/camel-kamelets/issues/2409']"
21832,Bug,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.2,4.11.0",2025-03-05T11:17:26+0000,1741173446,2025-03-05T11:31:27+0000,2025-03-05T11:31:27+0000,"Very unusual to have a choice when that has no outputs. But it end up calling the otherwise block instead, when using Java DSL.https://github.com/apache/camel-quarkus/issues/7085",No comments found
21831,Task,Unassigned,Thomas Cunningham,4.8.4,None,2025-03-04T22:13:36+0000,1741126416,2025-03-06T16:33:31+0000,2025-03-06T16:33:31+0000,I see a number of places in the 4.8.4 tag where versions haven't updated to 4.8.4 :https://github.com/apache/camel/blob/camel-4.8.4/dsl/camel-jbang/camel-jbang-main/dist/CamelJBang.java#L22-L24https://github.com/apache/camel/blob/camel-4.8.4/dsl/camel-jbang/camel-jbang-main/src/main/jbang/main/CamelJBang.java#L22-L24https://github.com/apache/camel/blob/camel-4.8.4/dsl/camel-jbang/camel-jbang-container/Dockerfile#L22-L34https://github.com/apache/camel/blob/camel-4.8.4/dsl/camel-jbang/camel-jbang-core/src/main/java/org/apache/camel/dsl/jbang/core/commands/catalog/CatalogDoc.java#L101https://github.com/apache/camel/blob/camel-4.8.4/dsl/camel-jbang/camel-jbang-core/src/main/java/org/apache/camel/dsl/jbang/core/commands/Debug.java#L345Should something be changing these versions automatically?,['Claus Ibsen - 2025-03-06T16:33:24+0000 Yeah its a manual update after the release.\nThere is a ticket about jbang command to upgrade itself instead of this catalog version hell.']
21830,Bug,Claus Ibsen,Claus Ibsen,"4.8.0,4.10.0","4.8.5,4.10.2,4.11.0",2025-03-04T14:51:44+0000,1741099904,2025-03-05T06:13:44+0000,2025-03-05T06:13:44+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/camel-file.20bug.20with.20idempotentEager.20flag,No comments found
21829,Improvement,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.2,4.11.0",2025-03-04T13:34:46+0000,1741095286,2025-03-04T13:38:16+0000,2025-03-04T13:38:16+0000,"When you have a Map then you usually want to use named SQL statements to lookup the value via the parameter name as a key. But sometimes you have a LinkedHashMap and then the order of the values are as added to the map, and then you can use the values without key lookup in SQL statements.Otherwise you get an exception",No comments found
21828,Improvement,Claus Ibsen,Claus Ibsen,"4.8.0,4.10.0","3.22.4,4.8.5,4.10.2,4.11.0",2025-03-04T09:52:49+0000,1741081969,2025-03-05T14:17:34+0000,2025-03-04T12:17:48+0000,The filter should be optimized for http based components,No comments found
21827,Task,Pasquale Congiusti,Claus Ibsen,None,4.11.0,2025-03-04T09:26:56+0000,1741080416,2025-03-06T08:45:08+0000,,MDC logging is not good with a async routing engine in Camel and is a legacy logging feature. We should add some docs about using this feature can have some issue and that eventually it will be deprecated.,['Claus Ibsen - 2025-03-04T09:27:09+0000 cc squakez']
21826,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-03-03T17:35:39+0000,1741023339,2025-03-05T09:18:23+0000,2025-03-05T09:18:23+0000,No description available,No comments found
21825,Improvement,Unassigned,Otavio Rodolfo Piske,None,None,2025-03-03T16:58:28+0000,1741021108,2025-03-03T16:58:28+0000,,LangChain4j comes with a MCP client that we can leverage on Camel to implement a MCP component. This would allow Camel to integrate with all sorts of new MCP servers that are appearing lately.,No comments found
21824,New Feature,Unassigned,Claus Ibsen,None,None,2025-03-03T15:14:48+0000,1741014888,2025-03-03T15:14:54+0000,,No description available,No comments found
21823,Improvement,Claus Ibsen,Claus Ibsen,None,"4.10.2,4.11.0",2025-03-03T14:58:26+0000,1741013906,2025-03-03T20:15:00+0000,2025-03-03T19:47:47+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/How.20to.20configure.20MDC.20Context.20Propagation,No comments found
21822,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-03-03T10:59:01+0000,1740999541,2025-03-03T17:15:11+0000,2025-03-03T17:15:11+0000,No description available,No comments found
21821,Improvement,Claude Mamo,Claude Mamo,"4.7.0,4.8.0,4.9.0,4.10.0",4.11.0,2025-03-03T09:33:56+0000,1740994436,2025-03-03T11:14:08+0000,2025-03-03T11:13:45+0000,Remove untested and undocumented way for declaring route conditions in element text content. Route conditions should be declared in the if attribute.,No comments found
21820,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-03-03T08:45:16+0000,1740991516,2025-03-03T10:55:14+0000,2025-03-03T10:55:14+0000,No description available,No comments found
21819,Improvement,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-28T17:56:34+0000,1740765394,2025-03-01T07:31:56+0000,2025-03-01T07:31:56+0000,Add the fetch action and add the namespace argument to upsert and update,No comments found
21818,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-28T16:07:10+0000,1740758830,2025-02-28T20:01:21+0000,2025-02-28T20:01:21+0000,No description available,['Claus Ibsen - 2025-02-28T19:22:39+0000 TODO: csimple DONE']
21817,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-28T10:46:50+0000,1740739610,2025-03-01T11:37:19+0000,2025-03-01T11:37:19+0000,"This ends up invoking asList(...) on Arrays that is a vararg, but is visible as Object[] at runtime. So we need to have some special code in camel-bean to detect this to ensure it invokes the method correctly, creating a single Object[] array of the 3 args","['Claus Ibsen - 2025-02-28T11:10:09+0000 Also we can consider adding a list function so you can create this more easily\n${list(a, b, c)}\nwhich then creates an array list\nThis begs the map function also\n${map(1, a, 2, b, 3, c)}\nwhich creates a linked hashmap, and each element must be in pairs']"
21816,Bug,Otavio Rodolfo Piske,Bruno Meseguer,4.10.0,None,2025-02-28T09:34:10+0000,1740735250,2025-03-06T10:05:31+0000,,"When a Camel route uses the LangChain4J-tools component, it calls the LLM, providing metadata about the tools (tool routes) available the LLM can use.The LLM computes the request and decides if a tool call is necessary or not. If the LLM performs a tool call, Camel executes the tool and returns the result to the LLM.However, the current implementation does not provide the Tools metadata (tools available) when returning the tool result.The consequence of Camel not including Tools metadata when returning the tool response is that the LLM understands there are no more Tools available, and concludes that subsequent tool calls are not allowed, forcing the LLM to compose a final response.The expected behaviour from Camel is to always provide a full history of tool calls and results, including the metadata of available tools the LLM can use at all times.Let's assume Camel asks the LLM the following question:Camel calls the LLM and provides metadata listing the tools available to the LLM. In this example, it would provide:The LLM needs to first obtain from Camel the geo-coordinates for London, and in a subsequent call, invoke the second tool to obtain the weather passing the geo-coordinates obtained in the first call.When Camel returns the result of the geo-coordinates tool call, the current implementation is missing to provide tools metadata. The sample below shows all the data Camel needs to provide to allow the LLM to call a second time:Note in the JSON data above that Camel provides both the result of the tool call (provides latitude and longitude for the city of London), and also provides (again) the list of available tools the LLM can use at all times if it decides to call again.",['Otavio Rodolfo Piske - 2025-03-06T10:05:31+0000 Root cause: missing loop between lines 102 and 108 on the LangChain4jToolsProducer. It needs to re-evaluate the tools until it gets a not tools execution request response.']
21815,Dependency upgrade,Unassigned,Claus Ibsen,None,4.x,2025-02-28T07:50:26+0000,1740729026,2025-02-28T07:50:26+0000,,Check also if SB and Q are supporting Pulsar 4 clients.,No comments found
21814,Improvement,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-27T21:05:46+0000,1740690346,2025-02-28T07:32:22+0000,2025-02-28T07:32:22+0000,pinecone query can take a number of arguments that camel-pinecone does not support yet :,No comments found
21813,Bug,Unassigned,David Benes,"4.6.0,4.7.0,4.10.0",None,2025-02-27T17:25:35+0000,1740677135,2025-03-01T11:38:04+0000,2025-03-01T11:38:04+0000,"When using ProducerTemplate and sending data to ActiveMQ with InOut exchange pattern it opens a 2 threads that are still there even when response is returned and producer template is closed.
Thread names are:If you are using this pattern to handle some requests over the time number of threads accumulates up to the number of allowed threds in the pool (if using a pool, defaults to ~1000 for ActiveMQ) and no more messages are being sent. Application has to be restarted.Example that replicates the problem is attached. Requirements to run the example is having ActiveMQ running on localhost. Example is a simple Maven project. It contains single file that includes `main` method that replicates the problem.
This example sends messages into ActiveMQ queue in InOut exchange pattern. And another Processor is replying with slight delay.
When executed in debug mode, you will see that number of threads is only increasing. Also it prints to standard out number of threds at the beginning and in the end. At the end there is at least 2 times more threads still running as the number of messages that were send.It behaves the same when using connection pool or not. Verified that it behaves the same with several versions of Apache Camel.The only way found how to let those threads finish is sending the message in InOnly exchange pattern. But that is not usable as a workaround as we would not get necessary response.Is there something that we are doing wrong when closing the producer? As it is documented that you should close the producer template and we are doing exactly that, it looks like a bug.","['Claus Ibsen - 2025-02-27T19:24:30+0000 See this FAQ\nhttps://camel.apache.org/manual/faq/why-does-camel-use-too-many-threads-with-producertemplate.html', ""David Benes - 2025-02-27T21:10:20+0000 Thank you very much Claus, will change it that way.\nBut shouldn't calling close() on the producer template make those threads disappear? As close() calls stop() method mentioned in that FAQ.""]"
21812,Improvement,Thomas Diesler,Thomas Diesler,None,None,2025-02-27T15:40:06+0000,1740670806,2025-02-27T16:26:28+0000,,"Communication with Keycloak should not happen over an insecure channel. Specifically, some OAuth/OIDC protocols require TLS before they are willing to send sensitive data across the wire.",No comments found
21811,Improvement,Thomas Diesler,Thomas Diesler,None,None,2025-02-27T10:25:34+0000,1740651934,2025-02-27T10:47:46+0000,,... this would have the benefit of not using NodePort and reuse the same TLS certificate for various services behind the SSL terminating proxy (e.g. Traefik),No comments found
21810,Task,Thomas Diesler,Thomas Diesler,None,4.11.0,2025-02-27T10:16:32+0000,1740651392,2025-02-27T10:49:54+0000,,The generated readme.md and Dockerfile are not applicable for runtimes other than Quarkus. Verify that the Dockerfile is indeed that which would come out of JKube,"['Claus Ibsen - 2025-02-27T10:49:54+0000 its only quarkus that comes with dockerfile when you create a project from code.quarkus.io\nThe other runtimes does not intend to have that. But if something can be copied over and adjusted then maybe we can include that too, but its not really intended.\nAnd most people dont want them anyway. They have a CI/CD system that builds their apps in their own custom way.']"
21809,Improvement,Claus Ibsen,Vishesh,4.10.0,4.11.0,2025-02-27T09:56:40+0000,1740650200,2025-02-28T07:35:58+0000,2025-02-28T07:35:58+0000,"I have observe that in camel coap library there is no way to override the these default configuration.[] coap BlockwiseLayer uses MAX_MESSAGE_SIZE=1024, PREFERRED_BLOCK_SIZE=512, BLOCKWISE_STATUS_LIFETIME=300000, MAX_RESOURCE_BODY_SIZE=8192, BLOCKWISE_STRICT_BLOCK2_OPTION=falsePlease suggest How to override the these default configuration.","['Claus Ibsen - 2025-02-27T10:15:17+0000 Have you looked in the source code, and can you better explain what you want. It may be that you create a custom config object and set that on camel-coap somewhere', 'Vishesh - 2025-02-27T10:28:32+0000 davsclaus I could not find such feature in code. additionally we would like to change the default value of the property \n PREFERRED_BLOCK_SIZE=512', 'Claus Ibsen - 2025-02-28T07:35:58+0000 You can now use coap configuration files where you can fully configure this']"
21808,Bug,Jiri Ondrusek,Jiri Ondrusek,4.11.0,4.11.0,2025-02-27T08:25:55+0000,1740644755,2025-03-01T11:38:24+0000,2025-03-01T11:38:24+0000,"There is a code recently added (commit), which expects the `getEndpoint().getConfiguration().getCollectionDimension()` to be not null. Which might not be true. Simple code fix should be done.",No comments found
21807,Bug,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-27T08:02:35+0000,1740643355,2025-02-27T09:06:46+0000,2025-02-27T09:06:46+0000,"If you build a custom kamelet with the sql component, then this worksand this fails",No comments found
21806,Improvement,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-26T20:33:58+0000,1740602038,2025-02-28T13:50:28+0000,2025-02-28T13:50:28+0000,camel-pinecone has the option of specifying the host to connect to for control/data plane operations :https://github.com/pinecone-io/pinecone-java-client/blob/main/src/main/java/io/pinecone/clients/Pinecone.java#L1154-L1156I think this would enable using camel with the Pinecone local container :https://docs.pinecone.io/guides/operations/local-developmentAdd host as an endpoint parameter.,No comments found
21805,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-02-26T15:09:20+0000,1740582560,2025-02-26T17:37:35+0000,2025-02-26T17:37:35+0000,No description available,No comments found
21804,Improvement,Unassigned,Claus Ibsen,None,4.x,2025-02-26T10:30:19+0000,1740565819,2025-02-26T10:30:19+0000,,The file component has more readLock implementations that we do not have in camel-smb.We can take a look and see if we can port more over.,No comments found
21803,New Feature,Unassigned,Zineb Bendhiba,None,None,2025-02-26T10:16:16+0000,1740564976,2025-02-26T10:16:29+0000,,Similar to https://issues.apache.org/jira/browse/CAMEL-21718,No comments found
21802,New Feature,Nikita_Konovalov,Zineb Bendhiba,None,None,2025-02-26T10:14:56+0000,1740564896,2025-02-28T08:07:36+0000,,Similar to https://issues.apache.org/jira/browse/CAMEL-21718,['Nikita_Konovalov - 2025-02-27T10:35:16+0000 Started working on this']
21801,New Feature,Unassigned,Claus Ibsen,None,4.x,2025-02-26T08:06:27+0000,1740557187,2025-03-03T19:12:20+0000,,https://docs.spring.io/spring-cloud-config/docs/current/reference/html/So you can use their config server to lookup username / password / urls to various configuration and use them asplaceholders in Camel routes.,['Claus Ibsen - 2025-03-03T19:12:20+0000 acosentino you are welcome to look at this with all your work on vaults']
21800,Bug,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-26T06:34:37+0000,1740551677,2025-02-26T06:43:24+0000,2025-02-26T06:43:24+0000,No description available,No comments found
21799,Bug,Claus Ibsen,Vishesh,"4.8.0,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-26T05:43:22+0000,1740548602,2025-02-26T10:43:57+0000,2025-02-26T06:17:58+0000,"We've observed a bug in camel-coap library latest version. As per observation solution received all the packet blockwise since the payload exceed the limit. At californium library level we can clearly see that all packages received successfully. However when it delegate the response to camel we just receive the last packet instead of full payload.The root cause of the problem in the camel-coap library is located in the class org.apache.camel.coap.CamelCoapResource where, at line 137, the method getCurrentRequest is called instead of getRequest, causing only the last packet of a blockwise transfer to be received instead of the full payload.byte[] bytes = exchange.getCurrentRequest().getPayload();
            camelExchange.getIn().setBody(bytes);","['Claus Ibsen - 2025-02-26T06:17:58+0000 Thanks for reporting and what code change to do.', 'Vishesh - 2025-02-26T10:00:47+0000 davsclaus  When this release 4.8.4/4.10.1 , will be available in maven central repository?', 'Claus Ibsen - 2025-02-26T10:43:57+0000 Sometime next month, see the dev mailing list']"
21798,Improvement,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-26T00:13:15+0000,1740528795,2025-02-26T19:32:44+0000,2025-02-26T19:32:44+0000,Add a proxy host / port to camel-pinecone,No comments found
21797,Improvement,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-26T00:12:30+0000,1740528750,2025-02-26T06:18:18+0000,,"While researching pinecone, I noticed a number of operations we could add to the component :",No comments found
21796,Task,Thomas Cunningham,Thomas Cunningham,None,4.11.0,2025-02-26T00:10:19+0000,1740528619,2025-02-26T06:18:24+0000,,"In the pinecone component, collection is marked as mandatory :https://github.com/apache/camel/blob/main/components/camel-ai/camel-pinecone/src/main/java/org/apache/camel/component/pinecone/PineconeVectorDbEndpoint.java#L47-L49My reading of the pinecone docs is that collection is not a mandatory thing, and that collections really only apply to pod-based indexes, and not to servlerless indexes (https://docs.pinecone.io/guides/indexes/pods/understanding-collections)https://docs.pinecone.io/reference/api/2024-10/control-plane/create_collectionI think we should remove the requirement that collection be mandatory.",No comments found
21795,Task,Andrea Cosentino,Andrea Cosentino,None,"4.10.1,4.11.0",2025-02-25T17:54:32+0000,1740506072,2025-02-26T11:16:40+0000,2025-02-26T11:16:40+0000,No description available,"['Claus Ibsen - 2025-02-26T06:19:18+0000 Can we get this done so it can be included in 4.10.1 release', ""Andrea Cosentino - 2025-02-26T09:28:15+0000 I'll try to sort this, this morning.""]"
21794,Bug,Claus Ibsen,Claus Ibsen,"4.8.3,4.10.0","4.10.1,4.11.0",2025-02-25T13:04:48+0000,1740488688,2025-02-25T15:04:35+0000,2025-02-25T15:04:35+0000,If you export a bean with Artemis broker then it initailizes the bean and Artemis fails when calling setBroker as it does some validation in their setter,['Claus Ibsen - 2025-02-25T14:29:27+0000 And we should make camel export use lazy-bean by default as it helps to export in more situations']
21793,Bug,Claus Ibsen,dvine,4.10.0,"4.10.1,4.11.0",2025-02-25T12:38:38+0000,1740487118,2025-02-27T09:32:22+0000,2025-02-27T09:32:22+0000,"When calling a route that has lots of kamelets we see that ends points fail to be created with the route cause being a concurrent java.util.ConcurrentModificationException when validateUniqueIds is called from addRouteToTemplate.Caused by: java.util.ConcurrentModificationException
    at java.base/java.util.ArrayList$Itr.checkForComodification(ArrayList.java:1013)
    at java.base/java.util.ArrayList$Itr.next(ArrayList.java:967)
    at org.apache.camel.model.RouteDefinitionHelper.validateUniqueIds(RouteDefinitionHelper.java:268)
    at org.apache.camel.impl.DefaultModel.addRouteFromTemplate(DefaultModel.java:536)
    at org.apache.camel.impl.DefaultModel.addRouteFromTemplate(DefaultModel.java:416)
    at org.apache.camel.impl.DefaultCamelContext.addRouteFromTemplate(DefaultCamelContext.java:362)
    at org.apache.camel.component.kamelet.KameletComponent$LifecycleHandler.createRouteForEndpoint(KameletComponent.java:433)Attached is a log and a repeatable route.  I think the error could be solved with making DefaultModel.routeDefinitions a concurrent list but I cannot build this locally due to network/company setup issues to try.","[""dvine - 2025-02-25T12:40:45+0000 I don't think this is exclusive to Kamelets, it just happens more often because of the way we use them for parameter setting that generates the routes each time.""]"
21792,Bug,Andrea Cosentino,Mark Wimpory,4.10.0,"4.10.1,4.11.0",2025-02-25T12:05:05+0000,1740485105,2025-02-25T18:57:55+0000,2025-02-25T18:57:55+0000,"The camel kinesis consumer fails when KCL is set to true.

 

 
I have isolated the issue to the below.  The kinesis client exists in the configuration according to debug but the consumer is reading from the endpoint:

The other clients (dynamodb and cloudwatch) are created withing if statements and include a reference to the configuration.",No comments found
21791,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2025-02-25T11:01:47+0000,1740481307,2025-02-25T11:01:54+0000,,"We should make it possible to use by setting transacted=true, and allow optional transaction.id prefix (need to generate uid). See for example how spring-kafka does it.Also it may be that we need to have support for invoking being/commit/abort transaction methods, and if we can integrate this with spring-transaction / jta via Camel transacted EIP.",No comments found
21790,Bug,Claus Ibsen,Claus Ibsen,"4.8.3,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-25T08:58:36+0000,1740473916,2025-02-25T09:35:54+0000,2025-02-25T09:35:54+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/KafkaProducerMetadataCallBack.20in.20KafkaProducer,No comments found
21789,Task,Unassigned,Arvydas Sk,4.9.0,"4.10.1,4.11.0",2025-02-24T17:16:21+0000,1740417381,2025-02-24T18:38:24+0000,2025-02-24T18:38:24+0000,"We've observed that when a Gradle project includes the org.apache.camel.springboot:camel-spring-boot-starter dependency (version 4.9.0 or later) and Gradle's dependency cache is empty, the classpath resolution fails unless at least 3GB of memory (org.gradle.jvmargs=-Xmx3g) is allocated.It can be reproduced with command:
 
./gradlew dependencies --refresh-dependenciesHowever, when using an older version, such as 4.8.0, the process runs smoothly with the default 512 MB memory allocation.This could be related tosection added on
https://repo1.maven.org/maven2/org/apache/camel/camel-parent/4.9.0/camel-parent-4.9.0.pomAlso attached test project.",['Claus Ibsen - 2025-02-24T18:38:24+0000 Yeah its the google team that has a huge bom for their cloud stuff - we dont use it anymore']
21788,Improvement,Otavio Rodolfo Piske,Claus Ibsen,None,"4.10.1,4.11.0",2025-02-24T16:14:58+0000,1740413698,2025-02-25T09:33:54+0000,2025-02-25T08:18:33+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/KafkaProducerMetadataCallBack.20in.20KafkaProducer,No comments found
21787,New Feature,Unassigned,Claus Ibsen,None,4.x,2025-02-24T13:33:49+0000,1740404029,2025-02-24T13:33:49+0000,,"The source and sink kamelets are using a camel component under the hood. However the kamelet have only N options, and when you know there is a option from the component you want to use but its not in the kamelet, then its not possible today.We should have some advanced mode, where you can then declare the option still.",No comments found
21786,New Feature,Pasquale Congiusti,Pasquale Congiusti,None,4.11.0,2025-02-24T12:03:43+0000,1740398623,2025-02-26T14:19:30+0000,2025-02-26T14:19:30+0000,The new component is based on the camel-telemetry abstraction and will replace camel-opentelemetry eventually.,['Pasquale Congiusti - 2025-02-26T14:19:30+0000 https://github.com/apache/camel/pull/17246']
21785,Improvement,James Netherton,James Netherton,None,"4.10.1,4.11.0",2025-02-24T11:59:55+0000,1740398395,2025-02-24T14:02:23+0000,2025-02-24T14:02:23+0000,Seems we don't currently generate configurer classes for the camel-main k8s vault configuration.It'd be good to get this added so that we don't have to do runtime reflection in Camel Quarkus.,No comments found
21784,Improvement,Unassigned,Marco Carletti,4.10.0,None,2025-02-24T10:54:03+0000,1740394443,2025-02-24T11:50:36+0000,2025-02-24T11:16:45+0000,"Running using jbang from maven project as stated in the documentation won't load all the necessary dependencies, maybe it should support jbang generated project.
i.e. exporting to Spring Boot runtime will generate a correct Maven project but it is unable to run it:similar commands exporting to Quarkus application has not compilation problems but the route isn't loaded as expected:","['Claus Ibsen - 2025-02-24T11:10:20+0000 camel run pon.xml is not intended to a maven based project reliable - it can be used as part of migrating where you have an old project!\n  Especially Spring Boot or Quarkus projects which you should run via their plugins.', ""Marco Carletti - 2025-02-24T11:16:27+0000 ok so we don't want this improvement, thanks, I close it"", 'Claus Ibsen - 2025-02-24T11:18:20+0000 Updating the jbang docs is welcome to say that camel run pom.xml is only for migration of old projects and not intended to run Spring Boot or Quarkus apps', 'Marco Carletti - 2025-02-24T11:50:36+0000 added more info in the existing note https://github.com/apache/camel/pull/17245 , thanks']"
21783,Improvement,Unassigned,Sam,None,None,2025-02-24T09:39:44+0000,1740389984,2025-02-24T12:59:19+0000,2025-02-24T10:20:38+0000,We are using KAFKA TRANSACTION MANAGER WITH SPRING TRANSACTION POLICY.We are adding that with .transacted() but still the camel kafka is not partificpating in it.,"['Sam - 2025-02-24T09:40:31+0000 davsclaus :-  Can you take a look at this one??', 'Claus Ibsen - 2025-02-24T10:21:11+0000 kafka transaction is its own thing - transacted is for JEE transactions such as JMS and JDBC only.', 'Sam - 2025-02-24T11:38:33+0000 Can we use kafka transaction with camel kafka without transacted??', 'Sam - 2025-02-24T12:59:19+0000 davsclaus  Can we use Default ProducerFactory from Spring to set up transaction and inject in the KafkaclientFactory using a custom Client Factory??']"
21782,Improvement,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-24T09:33:40+0000,1740389620,2025-02-24T13:38:06+0000,2025-02-24T13:38:06+0000,This kind of logic should be in the doXXX methods and not in the createConsumer,No comments found
21781,Task,Jiri Ondrusek,Jiri Ondrusek,4.11.0,4.11.0,2025-02-24T09:24:57+0000,1740389097,2025-02-24T12:08:37+0000,2025-02-24T12:08:37+0000,"Recent change in Camel (commit) removed.
The service file has to be removed as well .","['Pasquale Congiusti - 2025-02-24T11:15:27+0000 Watch out. I think the removal was a mistake. This file is required for the new Camel Telemetry Dev component: https://camel.apache.org/components/next/others/telemetry-dev.html', 'Claus Ibsen - 2025-02-24T11:21:12+0000 its called  TelemetryDevConfigurationPropertiesConfigurer  not simple', ""Pasquale Congiusti - 2025-02-24T11:27:42+0000 Ah, okey. It's the leftover after the name change. Sorry for the noise""]"
21780,Bug,Claus Ibsen,Thomas Gantenbein,4.10.0,"4.10.1,4.11.0",2025-02-22T12:52:21+0000,1740228741,2025-02-22T16:31:26+0000,2025-02-22T16:31:26+0000,"A RouteBuilder with the following routes:results in the following Exception at startup:Remove the .id there or downgrade to Camel 4.9.0 and the exception is gone.It seems to be something about the combination of the choice and enrich EIP: Remove the choice and things will be fine. Replace enrich with some processor and things will be fine, too.",['Claus Ibsen - 2025-02-22T12:56:33+0000 It may be fixed by linked ticket']
21779,Improvement,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-22T12:25:38+0000,1740227138,2025-02-24T15:42:53+0000,2025-02-23T09:16:59+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Camel.204.2E10.2E0.3A.20The.20file.20based.20SMB.20component,No comments found
21778,Bug,Claus Ibsen,Claus Ibsen,"4.8.3,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-22T12:24:50+0000,1740227090,2025-02-22T12:55:40+0000,2025-02-22T12:55:23+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Step.20ids.20are.20not.20properly.20used.20when.20using.20threads.2E,No comments found
21777,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-22T08:19:46+0000,1740212386,2025-02-28T10:30:05+0000,2025-02-28T10:30:05+0000,Add an option to show --description instead of ID in the outputs,['Claus Ibsen - 2025-02-28T10:19:12+0000 https://github.com/freva/ascii-table/issues/28']
21776,Bug,Unassigned,Claus Ibsen,4.8.0,"4.8.4,4.10.1,4.11.0",2025-02-22T07:00:30+0000,1740207630,2025-02-22T07:01:01+0000,2025-02-22T07:00:51+0000,"Reported on user mailing listI think there is a bug with DefaultRoute when using onException since version 4.8.Exception route processors get never initialized which make the route fail to started later on.I think the problem is there:
https://github.com/apache/camel/blame/fa02c9e4879fac119a7f2b4f1b4ff46f646c48eb/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultRoute.java#L701
introduce by commit:
https://github.com/apache/camel/commit/26a9aa91a2bbb741c948ca8c943a0989da2986fdI should be ""p"" instead of ""processor"". ""processor"" have already been added at line 692.


Jonathan Simard",No comments found
21775,Bug,Claus Ibsen,Jonathan Simard,"4.8.3,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-21T21:54:43+0000,1740174883,2025-02-22T08:21:27+0000,2025-02-22T08:21:27+0000,"Using the supervised route controller,when a split is defined in a onException of a route, the route cannot  be started.I suspect 2 issues:https://github.com/apache/camel/blob/fa02c9e4879fac119a7f2b4f1b4ff46f646c48eb/core/camel-base-engine/src/main/java/org/apache/camel/impl/engine/DefaultRoute.java#L700https://github.com/apache/camel/blob/2192884d371377423dbada7f2870057cabdef8b4/components/camel-bean/src/main/java/org/apache/camel/language/bean/BeanExpression.java#L352See included reproducer.",['Claus Ibsen - 2025-02-22T07:28:22+0000 Thanks for reporting and the reproducer']
21774,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-21T12:31:23+0000,1740141083,2025-02-22T06:57:00+0000,2025-02-22T06:57:00+0000,"You may connect to a kafka broker with a given topic name, and the broker is configured to not auto-create. And the consumer will then fail to subscribe, and keep looping.We should have option topicMustExist=true|false you can set so you can tell Camel to fail if the topic does not exist.","['Claus Ibsen - 2025-02-21T12:33:49+0000 Health check would be down\n~/workspace ❯ camel get health\n  PID   NAME      AGE  ID                      RL  STATE    RATE      SINCE    MESSAGE\n 42963  consumer  56s  camel/context            R   UP    109/107/-  0s/54s/-\n 42963  consumer  56s  camel/route-controller   R   UP      55/55/-  0s/55s/-\n 42963  consumer  56s  camel/consumer:route1    R  DOWN     54/-/54  0s/-/54s  KafkaConsumer is not ready (gave up recovering and terminated the kafka\n                                                                               consumer; restart route or application to recover). - Error: Topic foobar does\n                                                                               not exists\n 42963  consumer  56s  camel/context            L   UP    110/108/-  0s/54s/-', 'Claus Ibsen - 2025-02-21T12:34:59+0000 You need to configure the component to not retry forever\ncamel.component.kafka.subscribeConsumerTopicMustExists = true\ncamel.component.kafka.subscribeConsumerBackoffMaxAttempts = 3', 'Claus Ibsen - 2025-02-21T13:11:36+0000 Okay we also can do bridgeErrorHandler=true and handle the exception in a camel route\n2025-02-21 14:10:58.771  INFO 45355 --- [onsumer[foobar]] port.subcription.DefaultSubscribeAdapter : Subscribing to topic(s) foobar\n2025-02-21 14:10:58.772  INFO 45355 --- [onsumer[foobar]] s.consumer.internals.LegacyKafkaConsumer : [Consumer clientId=consumer-b3297f26-76ac-42f2-88fc-14112369c28d-1, groupId=b3297f26-76ac-42f2-88fc-14112369c28d] Subscribed to topic(s): foobar\n2025-02-21 14:10:58.777  WARN 45355 --- [onsumer[foobar]] org.apache.kafka.clients.NetworkClient   : [Consumer clientId=consumer-b3297f26-76ac-42f2-88fc-14112369c28d-1, groupId=b3297f26-76ac-42f2-88fc-14112369c28d] Error while fetching metadata with correlation id 10 : {foobar=UNKNOWN_TOPIC_OR_PARTITION}\n2025-02-21 14:10:58.780  WARN 45355 --- [onsumer[foobar]] .camel.component.kafka.KafkaFetchRecords : Error subscribing org.apache.kafka.clients.consumer.KafkaConsumer due to: Topic foobar does not exists\norg.apache.kafka.common.errors.UnknownTopicOrPartitionException: Topic foobar does not exists\n2025-02-21 14:10:58.781  WARN 45355 --- [onsumer[foobar]] consumer.camel.yaml:28                   : Darn something did not work Topic foobar does not exists']"
21773,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.8.4,2025-02-21T11:00:29+0000,1740135629,2025-02-21T11:03:29+0000,2025-02-21T11:03:29+0000,No description available,No comments found
21772,Dependency upgrade,Unassigned,Claus Ibsen,None,"4.10.1,4.11.0",2025-02-20T18:56:50+0000,1740077810,2025-02-21T11:00:00+0000,2025-02-21T11:00:00+0000,https://github.com/spring-projects/spring-boot/milestone/373?closed=1,No comments found
21771,Bug,Unassigned,James Netherton,None,None,2025-02-20T15:56:41+0000,1740067001,2025-02-20T17:45:31+0000,2025-02-20T17:45:31+0000,"Discovered when testing Kubernetes secret refreshing & context reloading on Camel Quarkus. When the context reload happens, there's a warning in the logs like:The SecretsReloadTriggerTask service is being registered twice via different code paths.","['Claus Ibsen - 2025-02-20T16:24:08+0000 We had fixed something like that recently. Are you on 4.10.0 or using main branch of camel-core', ""James Netherton - 2025-02-20T17:45:31+0000 Ah, you're right. It is fixed in CAMEL-21746.\nI was testing with 4.10.0.""]"
21770,Bug,James Netherton,James Netherton,4.10.0,"4.10.1,4.11.0",2025-02-20T14:58:29+0000,1740063509,2025-02-24T14:59:23+0000,2025-02-24T09:35:24+0000,"There's a problem with context reloading triggered from k8s secrets when using an autowired KubernetesClient.Both SecretsReloadTriggerTask and AbstractKubernetesEndpoint close the KubernetesClient. When routes get refreshed, the closed client is wired back in an unusable state.","[""Andrea Cosentino - 2025-02-20T15:12:38+0000 We could check if it's autowired or not."", 'James Netherton - 2025-02-20T15:14:37+0000 Yeah, I just tested that locally and it seems to work. Need to test it in a bunch of other scenarios, but I can probably provide a PR to fix this.']"
21769,Bug,Claus Ibsen,Narsi Reddy Nallamilli,4.8.0,"4.8.4,4.10.1,4.11.0",2025-02-20T12:37:35+0000,1740055055,2025-02-26T09:22:35+0000,2025-02-21T09:01:20+0000,"Below scenario the processing of the message threw memory error. so further processing of the exchange aborted, however the exchange couldn't get released from Sqs2Consumer timeoutExtender, as a result the message gets visibility extended forever causing the entire aws sqs queue to get blocked.","['Claus Ibsen - 2025-02-20T13:45:02+0000 try with latest 3.8.3 or 4.10.0 release', 'Claus Ibsen - 2025-02-20T13:45:38+0000 Also you need to show what code you do, or if possible to build some kind of reproducer', 'Claus Ibsen - 2025-02-21T09:01:20+0000 Okay so this kind of error is no longer swallowed', 'Narsi Reddy Nallamilli - 2025-02-21T09:27:20+0000 davsclaus does this handling remove the exchange from Sqs2Consumer class Timeout extender entries? Which was the issue right now.', 'Claus Ibsen - 2025-02-21T09:28:57+0000 You have a fatal error - the JVM should crash', ""Narsi Reddy Nallamilli - 2025-02-21T09:35:54+0000 Nope the jvm doesn't crashes and the app continues to run in this instance. It's just that thread which gets sacrificed. Since the app continues normally and that specific exchange gets trapped it continues to extend the visibility . I am sure I have tested it the app runs fine despite the error."", 'Narsi Reddy Nallamilli - 2025-02-25T12:25:11+0000 davsclaus https://github.com/apache/camel/pull/17262']"
21768,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-02-20T09:44:31+0000,1740044671,2025-02-28T20:23:56+0000,2025-02-28T20:23:56+0000,No description available,No comments found
21767,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-02-20T09:44:00+0000,1740044640,2025-02-20T13:38:08+0000,2025-02-20T13:38:08+0000,No description available,No comments found
21766,Bug,Unassigned,michael elbaz,4.10.0,None,2025-02-19T19:46:56+0000,1739994416,2025-02-20T09:31:06+0000,2025-02-20T09:04:17+0000,"this code not work.transform().simple(""${jsonpath($.id)}"")the exception:20:35:24.994 ERROR [Blueprint Event Dispatcher: 1] Error occurred during starting CamelContext: dt-integ-dispatch-chat
org.apache.camel.FailedToCreateRouteException: Failed to create route log-route at: >>> Transform[simple\{${jsonpath($.tId)}}] <<< in route: Route(log-route)[From[direct:log-route] -> [OnException[[jav... because of Unknown function: jsonpath($.tId) at location 0
${jsonpath($.tId)}
*at org.apache.camel.reifier.RouteReifier.doCreateRoute(RouteReifier.java:215) ~[?:?]
        at org.apache.camel.reifier.RouteReifier.createRoute(RouteReifier.java:75) ~[?:?]
        at org.apache.camel.impl.DefaultModelReifierFactory.createRoute(DefaultModelReifierFactory.java:49) ~[?:?]
        at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:937) ~[?:?]
        at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:800) ~[?:?]
        at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:3028) ~[?:?]
        at org.apache.camel.support.service.BaseService.init(BaseService.java:83) ~[?:?]
        at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2699) ~[?:?]
        at org.apache.camel.support.service.BaseService.start(BaseService.java:111) ~[?:?]
        at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2718) ~[?:?]
        at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:262) ~[?:?]
        at org.apache.camel.blueprint.BlueprintCamelContext.start(BlueprintCamelContext.java:241) ~[?:?]
        at org.apache.camel.blueprint.BlueprintCamelContext.maybeStart(BlueprintCamelContext.java:283) ~[?:?]
        at org.apache.camel.blueprint.BlueprintCamelContext.blueprintEvent(BlueprintCamelContext.java:188) ~[?:?]
        at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:197) ~[?:?]
        at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:195) ~[?:?]
        at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[?:?]
        at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
        at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:572) ~[?:?]
        at java.util.concurrent.FutureTask.run(FutureTask.java:317) ~[?:?]
        at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144) ~[?:?]
        at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642) ~[?:?]
        at java.lang.Thread.run(Thread.java:1583) [?:?]
Caused by: org.apache.camel.language.simple.types.SimpleIllegalSyntaxException: Unknown function: jsonpath($.tId) at location 0
${jsonpath($.tId)}","['Claus Ibsen - 2025-02-20T07:51:57+0000 Make sure you have camel-jsonpath on classpath. And any OSGi/karaf issues should be reported in\nhttps://github.com/apache/camel-karaf', 'michael elbaz - 2025-02-20T08:01:32+0000 I think it is in the classpath \nbecause this one work well\n.split().jsonpath(""$.id"")', 'Claus Ibsen - 2025-02-20T09:04:17+0000 Its some osgi stuff report it at karaf\nhttps://github.com/apache/camel/commit/ed3bbfbd43adf75aa3702ba48eb1778abd703c26', 'michael elbaz - 2025-02-20T09:30:57+0000 Ok thanks for answering']"
21765,Task,Unassigned,Aurélien Pupier,4.10.0,4.x,2025-02-19T15:34:36+0000,1739979276,2025-02-22T16:05:51+0000,,"Final release is planned for the 18th March
https://openjdk.org/projects/jdk/24/this is the last release before the next Java LTS 25, planned for September 2025). it would be nice to to ensure there is no major issue before the LTS.I guess the most impacting part is potentially the removal of the SecurityManager https://openjdk.org/jeps/486 . In case, not using the removed API, might be time to remove surrounding deprecated API (see removing related APIs in https://openjdk.org/jeps/486#Advice-to-maintainers-of-libraries-that-support-the-Security-Manager )another interesting thing are the first Quantum-Resistant modules https://openjdk.org/jeps/496 and https://openjdk.org/jeps/497",No comments found
21764,Task,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-02-19T15:11:45+0000,1739977905,2025-02-19T15:28:21+0000,2025-02-19T15:28:21+0000,No description available,No comments found
21763,Improvement,Unassigned,Gaelle Fournier,None,None,2025-02-19T12:40:32+0000,1739968832,2025-02-19T16:51:22+0000,,DeploymentConfig  usage has been deprecated since openshift 4.14Jkube has not yet set Deployment as default so it's up to our code to set it as default.,No comments found
21762,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-19T11:57:28+0000,1739966248,2025-02-19T14:39:28+0000,2025-02-19T14:39:28+0000,"You may have some routes you want to start later in the test, or not to be started, but still included.For CSB tests with annotations, we may want to have a @AutoStartupExcludePattern where you can then specify route ids, or endpoint urls that should not be automatic started. So you can do (""kafka,amqp"") to not start routes that start from kafka or amqp",['Claus Ibsen - 2025-02-19T13:52:14+0000 TODO: Add annotation to make this easier for CSB testing DONE']
21761,Improvement,Grzegorz Grzybek,Grzegorz Grzybek,None,"4.8.4,4.10.1,4.11.0",2025-02-19T11:23:32+0000,1739964212,2025-02-19T11:52:32+0000,2025-02-19T11:52:32+0000,"Follow up of CAMEL-21750, but this time fixed the right way.",['Grzegorz Grzybek - 2025-02-19T11:52:23+0000 Fixed:\nmain: https://github.com/apache/camel/commit/2c12367316bf5ace1e0b5da0afac28568ab8f348\n4.10.x: https://github.com/apache/camel/commit/f1028ba5ed4a5635187d301ecac198c534b78417\n4.8.x: https://github.com/apache/camel/commit/aa68a61df0c4db4bc85cd47bc679d0da3a9f7e4f']
21760,New Feature,Thomas Diesler,Thomas Diesler,None,4.11.0,2025-02-19T11:04:17+0000,1739963057,2025-02-28T08:07:18+0000,,No description available,"[""Thomas Diesler - 2025-02-19T12:07:30+0000 The camel-oauth module comes with a set of Processors that can be added the route on the client and resource owner side\nSupported OIDC, OAuth functionality is ...\nOIDC Authentication using Authorization Code Flow (OAuthCodeFlowProcessor, OAuthCodeFlowCallbackProcessor)\nOAuth Client Credentials Grant (OAuthClientCredentialsProcessor, OAuthBearerTokenProcessor)\nIdentity Provider (Keycloak only) logout (OAuthLogoutProcessor)\nKeycloak can be deployed to a local k8s cluster with a helm chart that comes with camel-oauth\nThere are two test cases that show the above (KeycloakOAuthWebAppTest, KeycloakOAuthRestTest)\nThe respective jbang projects live here\nWhen this has found it's proper place and acceptance, I'd start to work on docs.\nFor Kafka we can use strimzi kafka-oauth-client directly, which can also be documented as part of camel-oauth."", 'Thomas Diesler - 2025-02-27T10:01:28+0000 Done', 'Claus Ibsen - 2025-02-27T10:13:26+0000 You need to add a docs in src/main/docs (see for example camel-headersmap/src/main/docs/headersmap.adoc)', 'Claus Ibsen - 2025-02-27T10:14:07+0000 It may not need to be a lot of docs, but some basic that tell what this component is, and have those metadata, and the name of the file is `oauth.adoc`']"
21759,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-19T08:22:27+0000,1739953347,2025-02-19T11:57:37+0000,2025-02-19T10:09:17+0000,"Something similar to MockEndpointsAndSkip but those only works for sending. You may have routes started from kafka, and you dont want to use kafka for an unit test, and then you would otherwise need to stub that, or remove the route, or whatever.",No comments found
21758,Bug,Claus Ibsen,Ivan Ravin,4.8.2,"4.8.4,4.10.1,4.11.0",2025-02-18T13:13:05+0000,1739884385,2025-02-18T13:23:39+0000,2025-02-18T13:23:39+0000,"TemporaryQueueReplyManager extends ReplyManagerSupport. Parent class contains method doStop(). But override method does not contains super.doStop() call:So, TemporaryQueueReplyManager starts some services, but not stop it. This is not big problem in standalone applications, but problem in Karaf environment. If I install route with InOut jms endpoint, and then stop it or even uninstall it, camel-jms continues to use broker connections and temporary queues. Need to add super.doStop() call:",['Claus Ibsen - 2025-02-18T13:23:39+0000 Thanks for reporting']
21757,Improvement,Unassigned,Sam,4.8.0,"4.8.4,4.10.1,4.11.0",2025-02-18T12:03:12+0000,1739880192,2025-02-26T10:14:15+0000,2025-02-25T11:02:38+0000,"Kafka<-> with Kafka and with consumercount=24 So I am getting ProducerFencedException
 
And as we are using additionaProperties[transactional.id]=""transaction-producer""+UUID.randomUUID() enable.idempotence=true and retries=5 , we are also getting Invalid Transition attempted from state IN_TRANSACTION TO state IN_TRANSACTION","['Sam - 2025-02-18T15:31:52+0000 cibsen@e-ma.net  is there any possible work around for this issue you  can think off ??', 'Claus Ibsen - 2025-02-18T15:43:41+0000 Reported at\nhttps://camel.zulipchat.com/#narrow/channel/257301-camel-spring-boot/topic/Camel.20kafka.20Transactional.20ID.20with.20consumersCount.3E1', 'Claus Ibsen - 2025-02-18T15:45:26+0000 Not sure, you can try to look in the source, and of course always patch the code and build your own JAR to use until its fixed.\nAnd if you work on a local fix you are welcome to send code changes\nhttps://camel.apache.org/community/contributing/', 'Sam - 2025-02-18T16:22:52+0000 Spring Kafka Handles it in a way of using transaction.id prefix where the producer transactional.id is appended with n where n starts with 0 and is incremented for new producer.  During startup we can cache all the transactional producers which will reduce our event processing but will effectively help manage this. \n  I tried something like this at runtime but with workload increase the Instatiating the transaction producer taking a lot of time with transaction coordinator going down in some scenarios', 'Sam - 2025-02-19T17:26:30+0000 davsclaus  Any Idea On This? I may need a new Ticket for this\n  I am trying to use spring transaction policy with camel kafka . Currently on spring transaction policy with kafka transaction management I am setting up the transaction id prefix but when transaction are coming through it is seeing as transaction id null in KafkaProducer.class and starting a Idempotent Producer rather than a transactional Producer', 'Claus Ibsen - 2025-02-25T11:02:38+0000 Okay this needs more work to make transactions better and easier to use. Created a ticket for this to be in future Camel releases.\nFor this and older releases then you cannot use transactions on the consumer']"
21756,Task,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-18T11:55:23+0000,1739879723,2025-02-18T12:39:48+0000,2025-02-18T12:39:48+0000,We use maven 3.9.5 and there is 3.9.9 which we should upgrade,No comments found
21755,Bug,Claus Ibsen,Raymond,4.10.0,"4.10.1,4.11.0",2025-02-18T09:01:40+0000,1739869300,2025-03-05T17:21:15+0000,2025-02-24T12:08:25+0000,"I have the following routes:I use this route with<setExchangePattern pattern=""InOut""/>And<setExchangePattern pattern=""InOnly""/>In Camel 4.9.0 both returns the following response:After upgrading to Camel 4.10.0 the InOnly still gives this response, but the InOut returns the orginal body. I attached a reproducer.",No comments found
21754,Bug,Claus Ibsen,Claus Ibsen,4.10.0,"4.10.1,4.11.0",2025-02-18T06:19:26+0000,1739859566,2025-02-18T06:20:51+0000,2025-02-18T06:20:51+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Mail.2C.20log.20level.20DEBUG.20give.20exception.2E,No comments found
21753,Bug,Thomas Diesler,Thomas Diesler,4.10.0,"4.10.2,4.11.0",2025-02-17T14:29:08+0000,1739802548,2025-02-24T18:40:23+0000,,,No comments found
21752,Bug,Unassigned,Gianluca,4.10.0,"4.10.1,4.11.0",2025-02-17T13:34:05+0000,1739799245,2025-02-17T15:12:08+0000,2025-02-17T15:12:08+0000,"When trying to connect to a server with DFS mode enabled, a connection error appears.
To set DFS mode to true, an SmbConfig object must be created with the withDFSEnable parameter set to true.
This object allows for advanced client configuration.Here is an example with Camel Spring Boot:However, the configuration is not applied during the client connection. The configuration is not passed this constructor.",['Claus Ibsen - 2025-02-17T15:12:08+0000 Thanks for reporting and the PR']
21751,Bug,Thomas Diesler,Thomas Diesler,None,None,2025-02-17T12:34:52+0000,1739795692,2025-02-27T12:59:53+0000,,I have a plugin configuration like this ...and getorCrossRef: https://github.com/eclipse-jkube/jkube/issues/3672,['Thomas Diesler - 2025-02-27T12:57:34+0000 We can get this to work when we provide our own entrypoint (a slight variation of __cacert_entrypoint.sh) and add the trusted certificate like this ...\n                                <assembly>\n                                    <layers>\n                                        <layer>\n                                            <id>cacert-entrypoint</id>\n                                            <files>\n                                                <file>\n                                                    <source>etc/cacert_entrypoint.sh</source>\n                                                    <outputDirectory>.</outputDirectory>\n                                                    <fileMode>755</fileMode>\n                                                </file>\n                                            </files>\n                                        </layer>\n                                        <layer>\n                                            <id>trusted-cert</id>\n                                            <fileSets>\n                                                <fileSet>\n                                                    <directory>etc/tls</directory>\n                                                    <outputDirectory>tls</outputDirectory>\n                                                </fileSet>\n                                            </fileSets>\n                                        </layer>\n                                    </layers>\n                                </assembly>']
21750,Task,Claus Ibsen,Claus Ibsen,4.10.0,"4.8.4,4.10.1,4.11.0",2025-02-17T12:14:31+0000,1739794471,2025-02-19T11:23:53+0000,2025-02-17T18:42:51+0000,Reported on user mailing list: https://lists.apache.org/thread/jk06xkoo33fz6zjkn7l3o66blqfz2zwlGregor is looking into if something can be made fast inside maven-resolver. But we should also look at not using google BOM as we only use a limited set of google services and each we can control dependencies there without BOM,"[""Grzegorz Grzybek - 2025-02-17T12:33:04+0000 com.google.cloud:libraries-bom:26.54.0\n - com.google.protobuf:protobuf-bom:4.29.0\n - com.google.cloud:first-party-dependencies:3.42.0\n    - com.google.api:gapic-generator-java-bom:2.52.0\n    - com.google.cloud:google-cloud-core-bom:2.50.0\n    - com.google.oauth-client:google-oauth-client-bom:1.37.0\n    - com.google.api-client:google-api-client-bom2.7.2\n - com.google.cloud:google-cloud-bom:0.235.0\n    - com.google.cloud:gapic-libraries-bom:1.51.0\n       - 181 BOMs imported...\n    - com.google.cloud:google-cloud-bigquerystorage-bom:3.11.2\n       - I stopped counting...\n    - com.google.cloud:google-cloud-bigtable-bom:2.51.2\n    - com.google.cloud:google-cloud-datastore-bom:2.26.0\n    - com.google.cloud:google-cloud-firestore-bom:3.30.6\n    - com.google.cloud:google-cloud-logging-bom:3.21.2\n    - com.google.cloud:google-cloud-pubsub-bom:1.136.1\n    - com.google.cloud:google-cloud-pubsublite-bom:1.15.2\n    - com.google.cloud:google-cloud-spanner-bom:6.86.0\n    - com.google.cloud:google-cloud-storage-bom:2.48.1\nAvoiding this BOM solves this problem, but it'd be nice to check why MRESOLVER reads ~/.m2/repository/com/google/cloud/sdk-platform-java-config/3.42.0/_remote.repositories file 5348 times...""]"
21749,New Feature,Unassigned,Mikael Koskinen,4.10.0,None,2025-02-17T09:57:34+0000,1739786254,2025-02-18T10:57:45+0000,,"Currently NATS Producer and Consumer both only use some of the headers included in the NATS msg:This is problematic in couple of ways: NATS nowadays has quite many headers which are missing from the list. And also as NATS itself doesn't limit what headers are used, the headers often contain app specific metadata which would be helpful to have in Camel Integrations.Does the NATS component have to limit the headers that it reads? Could it read them all? Or could we use something like headerFilterStrategy in this?I'm happy to help with implementing the code but would appreciate if someone can provide guidance on design.","['Andrea Cosentino - 2025-02-17T10:03:34+0000 We could map more of them if it makes sense. What are the headers present as default?', 'Claus Ibsen - 2025-02-17T10:06:24+0000 Yes header filter strategy would be better, and then if you have suggestions for more default headers to include then in the top list.\nAlso if you are aware of any object type that NATS does not allow then the filter should skip those, like its done in JMS etc.', ""Mikael Koskinen - 2025-02-18T10:57:45+0000 Some of the often used headers are:\nNats-Service-Error\nNats-Service-Error-Code\n\nNATS has this Services framework nowadays build-in and the services use headers to communicate the response statuses (exceptions etc): https://github.com/nats-io/nats-architecture-and-design/blob/main/adr/ADR-32.md#error-handling. Also tracing uses headers: https://github.com/nats-io/nats-architecture-and-design/blob/main/adr/ADR-41.md#ad-hoc-activation\n \nAnd the other aspect is the custom application specific headers.\n \nRegarding NATS component overall, currently it is missing the JetStream support. JetStream contains most of the NATS' functionality, including streams, pull/push consumers, KV and object storage so they are not available. At some point it would be great to have JS-support included too, but I wonder if it is better to do this in a separate JetStream-component.""]"
21748,Task,Andrea Cosentino,Andrea Cosentino,None,"4.10.1,4.11.0",2025-02-17T09:14:37+0000,1739783677,2025-02-17T13:05:17+0000,2025-02-17T13:05:17+0000,No description available,No comments found
21747,Bug,Claus Ibsen,Claus Ibsen,"4.8.3,4.10.0","4.8.4,4.10.1,4.11.0",2025-02-16T15:23:06+0000,1739719386,2025-02-16T15:29:49+0000,2025-02-16T15:29:49+0000,"If you use the backlog debugger and a suspended is timed out, because the user is not continuing after 5 minutes. Then the state of suspended should be removed. This may otherwise affect tooling that would visualze that a breakpoint is suspended.https://github.com/hawtio/hawtio-next/issues/303#issuecomment-2660011910",No comments found
21746,Bug,Jiri Ondrusek,Jiri Ondrusek,4.10.0,"4.10.1,4.11.0",2025-02-14T14:30:53+0000,1739543453,2025-02-15T08:31:27+0000,2025-02-15T08:31:27+0000,"I was debugging some unstable tests for azure-key-vault  in CQ (tests covering context reload), which involve EventhubsReloadTriggerTask .
I noticed that the task is started twice, which is not necessary and I'd say also not intended.The first call makes more sense, as this code block is solving related vault configurations.
I think that the second call can be removed.",No comments found
21745,Bug,Unassigned,vincenttang,4.8.2,None,2025-02-14T13:20:23+0000,1739539223,2025-02-17T00:55:13+0000,2025-02-14T19:33:52+0000,"Background:I am upgrading an old project that uses Camel 2 in Karaf. Since it utilizes org.apache.camel.component.zookeeper.policy.ZooKeeperRoutePolicy, the Camel 3 migration guide suggests replacing it with ZooKeeperClusterService.https://camel.apache.org/manual/camel-3-migration-guide.htmlTherefore, I am attempting to use ZooKeeperClusterService with ClusteredRoutePolicy in Karaf. Attached a test.xml FYI.Issue:When using Karaf 4.4.7 and camel-zookeeper 4.8.2, the following component:does not work with Blueprint.Exception:*java.util.concurrent.ExecutionException: java.lang.NoClassDefFoundError: org/apache/curator/shaded/com/google/common/cache/CacheLoader
    at java.util.concurrent.FutureTask.report(FutureTask.java:122) ~[?:?]
    at java.util.concurrent.FutureTask.get(FutureTask.java:191) ~[?:?]
    at java.util.concurrent.AbstractExecutorService.doInvokeAny(AbstractExecutorService.java:204) ~[?:?]
    at java.util.concurrent.AbstractExecutorService.invokeAny(AbstractExecutorService.java:235) ~[?:?]
    at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper$4.call(ScheduledExecutorServiceWrapper.java:185) ~[!/:1.10.3]
    at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper$15.call(ScheduledExecutorServiceWrapper.java:446) ~[!/:1.10.3]
    at org.apache.aries.blueprint.utils.threading.RWLock.runReadOperation(RWLock.java:33) ~[!/:1.10.3]
    at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper.runUnlessShutdown(ScheduledExecutorServiceWrapper.java:443) ~[!/:1.10.3]
    at org.apache.aries.blueprint.utils.threading.ScheduledExecutorServiceWrapper.invokeAny(ScheduledExecutorServiceWrapper.java:180) ~[!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher.callListener(BlueprintEventDispatcher.java:195) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher.callListeners(BlueprintEventDispatcher.java:178) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher.blueprintEvent(BlueprintEventDispatcher.java:133) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintContainerImpl.doRun(BlueprintContainerImpl.java:447) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintContainerImpl.run(BlueprintContainerImpl.java:298) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:335) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:288) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintExtender.createContainer(BlueprintExtender.java:284) [!/:1.10.3]
    at org.apache.aries.blueprint.container.BlueprintExtender.modifiedBundle(BlueprintExtender.java:274) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:500) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.customizerModified(BundleHookBundleTracker.java:433) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$AbstractTracked.track(BundleHookBundleTracker.java:725) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$Tracked.bundleChanged(BundleHookBundleTracker.java:463) [!/:1.10.3]
    at org.apache.aries.util.tracker.hook.BundleHookBundleTracker$BundleEventHook.event(BundleHookBundleTracker.java:422) [!/:1.10.3]
    at org.apache.felix.framework.util.SecureAction.invokeBundleEventHook(SecureAction.java:1384) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.EventDispatcher.createWhitelistFromHooks(EventDispatcher.java:730) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.EventDispatcher.fireBundleEvent(EventDispatcher.java:485) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.Felix.fireBundleEvent(Felix.java:4847) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.Felix.startBundle(Felix.java:2363) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.Felix.setActiveStartLevel(Felix.java:1566) [org.apache.felix.framework-7.0.5.jar:?]
    at org.apache.felix.framework.FrameworkStartLevelImpl.run(FrameworkStartLevelImpl.java:297) [org.apache.felix.framework-7.0.5.jar:?]
    at java.lang.Thread.run(Thread.java:840) [?:?]
Caused by: java.lang.NoClassDefFoundError: org/apache/curator/shaded/com/google/common/cache/CacheLoader
    at org.apache.curator.framework.CuratorFrameworkFactory$Builder.<init>(CuratorFrameworkFactory.java:171) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory$Builder.<init>(CuratorFrameworkFactory.java:154) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory.builder(CuratorFrameworkFactory.java:80) ~[?:?]
    at org.apache.camel.component.zookeeper.ZooKeeperCuratorHelper.createCurator(ZooKeeperCuratorHelper.java:48) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.getOrCreateCurator(ZooKeeperClusterService.java:241) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.createView(ZooKeeperClusterService.java:208) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.createView(ZooKeeperClusterService.java:32) ~[?:?]
    at org.apache.camel.support.cluster.AbstractCamelClusterService.lambda$getView$3(AbstractCamelClusterService.java:147) ~[?:?]
    at org.apache.camel.util.concurrent.LockHelper.callWithWriteLock(LockHelper.java:94) ~[?:?]
    at org.apache.camel.support.cluster.AbstractCamelClusterService.getView(AbstractCamelClusterService.java:141) ~[?:?]
    at org.apache.camel.impl.cluster.ClusteredRoutePolicy.retainClusterView(ClusteredRoutePolicy.java:225) ~[?:?]
    at org.apache.camel.util.ReferenceCount.retain(ReferenceCount.java:51) ~[?:?]
    at org.apache.camel.impl.cluster.ClusteredRoutePolicy.onInit(ClusteredRoutePolicy.java:164) ~[?:?]
    at org.apache.camel.reifier.RouteReifier.doCreateRoute(RouteReifier.java:363) ~[?:?]
    at org.apache.camel.reifier.RouteReifier.createRoute(RouteReifier.java:86) ~[?:?]
    at org.apache.camel.impl.DefaultModelReifierFactory.createRoute(DefaultModelReifierFactory.java:49) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:726) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:592) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:2433) ~[?:?]
    at org.apache.camel.support.service.BaseService.init(BaseService.java:85) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2068) ~[?:?]
    at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2087) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:211) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.start(BlueprintCamelContext.java:234) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.maybeStart(BlueprintCamelContext.java:276) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.blueprintEvent(BlueprintCamelContext.java:180) ~[?:?]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:197) ~[?:?]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:195) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
    ... 1 more
Caused by: java.lang.ClassNotFoundException: org.apache.curator.shaded.com.google.common.cache.CacheLoader not found by curator-framework [164]
    at org.apache.felix.framework.BundleWiringImpl.findClassOrResourceByDelegation(BundleWiringImpl.java:1591) ~[?:?]
    at org.apache.felix.framework.BundleWiringImpl.access$300(BundleWiringImpl.java:79) ~[?:?]
    at org.apache.felix.framework.BundleWiringImpl$BundleClassLoader.loadClass(BundleWiringImpl.java:1976) ~[?:?]
    at java.lang.ClassLoader.loadClass(ClassLoader.java:525) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory$Builder.<init>(CuratorFrameworkFactory.java:171) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory$Builder.<init>(CuratorFrameworkFactory.java:154) ~[?:?]
    at org.apache.curator.framework.CuratorFrameworkFactory.builder(CuratorFrameworkFactory.java:80) ~[?:?]
    at org.apache.camel.component.zookeeper.ZooKeeperCuratorHelper.createCurator(ZooKeeperCuratorHelper.java:48) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.getOrCreateCurator(ZooKeeperClusterService.java:241) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.createView(ZooKeeperClusterService.java:208) ~[?:?]
    at org.apache.camel.component.zookeeper.cluster.ZooKeeperClusterService.createView(ZooKeeperClusterService.java:32) ~[?:?]
    at org.apache.camel.support.cluster.AbstractCamelClusterService.lambda$getView$3(AbstractCamelClusterService.java:147) ~[?:?]
    at org.apache.camel.util.concurrent.LockHelper.callWithWriteLock(LockHelper.java:94) ~[?:?]
    at org.apache.camel.support.cluster.AbstractCamelClusterService.getView(AbstractCamelClusterService.java:141) ~[?:?]
    at org.apache.camel.impl.cluster.ClusteredRoutePolicy.retainClusterView(ClusteredRoutePolicy.java:225) ~[?:?]
    at org.apache.camel.util.ReferenceCount.retain(ReferenceCount.java:51) ~[?:?]
    at org.apache.camel.impl.cluster.ClusteredRoutePolicy.onInit(ClusteredRoutePolicy.java:164) ~[?:?]
    at org.apache.camel.reifier.RouteReifier.doCreateRoute(RouteReifier.java:363) ~[?:?]
    at org.apache.camel.reifier.RouteReifier.createRoute(RouteReifier.java:86) ~[?:?]
    at org.apache.camel.impl.DefaultModelReifierFactory.createRoute(DefaultModelReifierFactory.java:49) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:726) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.startRouteDefinitions(DefaultCamelContext.java:592) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:2433) ~[?:?]
    at org.apache.camel.support.service.BaseService.init(BaseService.java:85) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2068) ~[?:?]
    at org.apache.camel.support.service.BaseService.start(BaseService.java:115) ~[?:?]
    at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2087) ~[?:?]
    at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:211) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.start(BlueprintCamelContext.java:234) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.maybeStart(BlueprintCamelContext.java:276) ~[?:?]
    at org.apache.camel.blueprint.BlueprintCamelContext.blueprintEvent(BlueprintCamelContext.java:180) ~[?:?]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:197) ~[?:?]
    at org.apache.aries.blueprint.container.BlueprintEventDispatcher$3.call(BlueprintEventDispatcher.java:195) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:304) ~[?:?]
    at java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
    at java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
    ... 1 more*Steps to Reproduce:in apache-karaf-4.4.7\binin apache-karaf-4.4.7\bin","['Nicolas Filotto - 2025-02-14T13:42:09+0000 Hi, just to let you know that issues related to Camel Karaf 4 must be reported directly in the related GitHub project https://github.com/apache/camel-karaf/issues', 'Claus Ibsen - 2025-02-14T19:33:52+0000 As Nicolas says', 'vincenttang - 2025-02-17T00:55:13+0000 Got it. Thanks both.']"
21744,Task,Unassigned,Federico Mariani,None,None,2025-02-14T13:06:09+0000,1739538369,2025-02-14T13:06:09+0000,,"https://swagger.io/specification/#fixed-fieldsFrom the spec, the security field is a declaration of which security mechanisms can be used across the API. The list of values includes alternative Security Requirement Objects that can be used. Only one of the Security Requirement Objects need to be satisfied to authorize a request. Individual operations can override this definition. The list can be incomplete, up to being empty or absent. To make security explicitly optional, an empty security requirement ({}) can be included in the array.This integration may be harder to implement, and most probably runtimes should provide custom implementations.",No comments found
21743,Task,Unassigned,Federico Mariani,None,None,2025-02-14T13:04:27+0000,1739538267,2025-02-14T13:04:27+0000,,"https://swagger.io/specification/#fixed-fieldsFrom the spec, the webhooks field represents the incoming webhooks that MAY be received as part of this API and that the API consumer MAY choose to implement. Closely related to the callbacks feature, this section describes requests initiated other than by an API call, for example by an out of band registration. The key name is a unique string to refer to each webhook, while the (optionally referenced) Path Item Object describes a request that may be initiated by the API provider and the expected responses. An example is available.",No comments found
21742,Task,Unassigned,Federico Mariani,None,None,2025-02-14T13:03:02+0000,1739538182,2025-02-14T13:03:02+0000,,https://swagger.io/specification/#fixed-fieldsjsonSchemaDialect is a String representing the default value for the $schema keyword within Schema Objects contained within this OAS document. This MUST be in the form of a URI.,No comments found
21741,Bug,Unassigned,Thomas Diesler,None,4.11.0,2025-02-14T09:37:31+0000,1739525851,2025-02-18T08:16:53+0000,2025-02-18T08:16:53+0000,"With a simple route like this ...I get ...even though camel-platform-http-vertx is on the classpath.After a little digging, I found that the MainHttpServer must be started explicitly or be registered with the CamelContext to get started implicitly.I wonder whether this is intentional and why it cannot be done by the camel-plattform-http component internally? Related is perhaps this section in the docsThe HTTP server for camel-main is disabled by default, and you need to explicitly enable this by setting camel.server.enabled=true in application.properties.","['Claus Ibsen - 2025-02-18T08:16:53+0000 That is intentional when you create Camel yourself via new DefaultCamelContext and setup .. then you need to do a bit more, as running via CSB/CEQ or via camel-main ala jbang']"
21740,Bug,Claus Ibsen,jubar,4.4.3,"4.8.4,4.10.1,4.11.0",2025-02-14T07:55:03+0000,1739519703,2025-02-26T10:14:22+0000,2025-02-25T08:44:02+0000,If there are no new Change Data Capture events for more than 3 days the cached replayId in the PubSubApiClient becomes invalid. (Salesforce Docs)It seems like the next event/reconnect then causes the client to try to resubscribe indefinitely with this invalid replay id.I use v4.4.3 but the PubSubApiClient hasn't been changed since then.Log snippet:,"['Claus Ibsen - 2025-02-16T10:15:54+0000 Thanks for reporting and the PR', ""jubar - 2025-02-17T08:48:13+0000 davsclaus \nNo problem. I just have one question regarding my PR.\nIf someone is starting the route with the CUSTOM ReplayIdPreset and supplies an invalid replay id, shouldn't the consumer error out instead of resubscribing with LATEST?"", 'Claus Ibsen - 2025-02-17T08:55:26+0000 Oh yeah that is a good point. So just wonder when you would use a custom reply id - and would that get invalid over time ? If you eg restart the Camel app 6 months later', 'jubar - 2025-02-17T09:53:01+0000 If you restart the Camel app after 6 months the saved replay ids should always be invalid because Salesforce retains them only for 3 days.\nI think there needs to be some kind of check in the error handler that checks if it is an error on startup of the client/consumer and that a custom replay id is being used.\nThen it can throw some kind of error instead of resubscribing with the LATEST preset.', 'Claus Ibsen - 2025-02-17T09:55:49+0000 Yes you are welcome to work on a patch for that', 'jubar - 2025-02-17T10:01:51+0000 I will look into it.\nShould I reopen this issue or create a new one?', 'Claus Ibsen - 2025-02-17T10:04:30+0000 lets just reopen', ""jubar - 2025-02-18T14:19:28+0000 I don't really know how i can get the exception out of the FetchResponseObserver.\nThe RuntimeException thrown in my FetchResponseObserver.onError method is always caught in io.grpc.internal.SerializingExecutor and logged after that the thread shuts down.\nMaybe someone with more expertise in Camel and gRPC can look into this?"", 'Claus Ibsen - 2025-02-25T08:44:02+0000 okay so we only set to LATEST if not using custom reply id.']"
21739,Bug,Benjamin Graf,Benjamin Graf,4.10.0,"4.10.1,4.11.0",2025-02-13T20:30:12+0000,1739478612,2025-02-14T19:45:37+0000,2025-02-14T19:45:37+0000,FileConsumer.getRelativeFilePath always returns file path with filename. SftpConsumer and FtpConsumer only returns file path. This causes that files on servers are filtered by mistake.,No comments found
21738,Improvement,Unassigned,Andrej Vano,4.10.0,4.11.0,2025-02-13T10:21:17+0000,1739442077,2025-02-25T15:07:47+0000,2025-02-25T15:07:44+0000,"Looking at the various producers in camel-kubernetes components, it seems that there is no common approach for listing the resources when it comes to namespaced resources.If the CamelKubernetesNamespaceName header is not present, the autowired k8s client uses:If the header CamelKubernetesNamespaceName is not present, some producers will just list in the current namespace, some list in all namespaces - these don't require the namespace header at all. but then there are some that are switching between ns/cluster based on the header.It would be good to unify the approach.","['Claus Ibsen - 2025-02-18T08:17:33+0000 Thanks for reporting, are you working on this ?', 'Andrej Vano - 2025-02-25T07:12:14+0000 davsclaus yes, I will take a look.', 'Claus Ibsen - 2025-02-25T15:07:44+0000 Thanks Andrej for helping the project']"
21737,Bug,Unassigned,Andrej Vano,4.10.0,"4.10.1,4.11.0",2025-02-12T08:35:18+0000,1739349318,2025-02-17T09:54:58+0000,2025-02-17T09:54:58+0000,"Calls such as these are not working as expected, as you need to assign the return value of .withLabel back to w - this results in the query parameters being ignored.","[""Andrej Vano - 2025-02-12T08:35:56+0000 davsclaus can you please assign to me? I'll fix it."", 'James Netherton - 2025-02-13T08:59:22+0000 I merged the fixes for this together will all of the great work to improve the k8s component docs and improve test coverage.\nWe should get this backported to 4.10.x.', 'Claus Ibsen - 2025-02-14T19:35:35+0000 Andrej, its fine you are welcome to work on this']"
21736,Improvement,Unassigned,Luis Sergio Faria Carneiro,None,4.x,2025-02-11T18:05:23+0000,1739297123,2025-02-19T11:10:37+0000,,"As I developer I would like to use the Google BigQuery SQL Standard component to fetch data from Google Big Query.Currently, when I run an Integration with the following snippet:I get the number of rows selected in the message body after the component runs,  but not the data.The docs mention that we currently support only DML queries, so I'm opening this as a feature request;","['Claus Ibsen - 2025-02-18T08:18:19+0000 Thanks are you able to work on this, we love contributions.', ""Luis Sergio Faria Carneiro - 2025-02-19T11:10:37+0000 davsclaus yes, I'll try and implement this. I don't know yet how much effort it would require, as it's my first attempt implementing something on the  Camel Core, but let's see how it works.""]"
21735,Bug,Claus Ibsen,Luis Sergio Faria Carneiro,4.8.0,4.11.0,2025-02-10T17:44:50+0000,1739209490,2025-02-16T09:57:27+0000,2025-02-16T09:57:27+0000,"I'm trying to use the MongoDB component within a Camel K integration. And the code is as following:Although the connection parameters are set, I see component trying to connect to 127.0.0.1:27017.Debugging the source code and checking the log, I see the component is using an autowired client which is configured to localhost instead of creating a new client from my parameters.I haven't configured any beans.But anyways, shoudn't the endpoint parameters take precedence over any pre-configured bean which I'm not even aware of?","[""Pasquale Congiusti - 2025-02-11T08:21:16+0000 I think this would be more suitable for Camel Quarkus project. The extension (which is the one used in Camel K) can be responsible for a different behavior. My suggestion is to try a simple reproducer over plain Camel or Camel Springboot as well as for Camel Quarkus and see if it's indeed a core problem or, as I presume, a runtime problem instead."", ""Luis Sergio Faria Carneiro - 2025-02-11T11:30:50+0000 Yes, the extension creates a default Mongo client which is injected into the component. What made me open this issue in the core project is the doStart/resolveMongoConnection methods at the MongoDbEndpoint class.\nIn those methods, if any connection is autowired into the component, it takes precedence over the parameters defined at the endpoint level.\nThere's also the connectionBean path parameter, which has a lower precedence over the hosts configuration, per the docs.\nSo at the end connections can be defined in three ways:\nautowiring a MongoDBClient;\ndefining a bean and referencing it with the connectionBean path parameter;\ndefining connection data with the hosts and other endpoint parameters;\n#3 takes precedence over #2, but not over #1.\nIt that's expected, we can close this as Not a bug."", 'Pasquale Congiusti - 2025-02-11T15:02:22+0000 Thanks for the detailed explanation. I reiterate the question: is this only happening for Camel Quarkus or is it also happening in other runtimes?', ""Luis Sergio Faria Carneiro - 2025-02-11T16:17:37+0000 Yes, that's specific to camel-quarkus. Running the code with jbang, for example, works.\nOne other point that I noticed is that even if I set autowiredEnabled to false in the parameters, I still see the default client being injected into the component:\n2025-02-11 16:15:51,895 INFO  [org.apa.cam.sup.LifecycleStrategySupport] (main) Autowired property: mongoConnection on component: mongodb as exactly one instance of type: com.mongodb.client.MongoClient (com.mongodb.client.MongoClient_h1_G0-d2ADp3y2Tmh2-WKjUlre0_Synthetic_ClientProxy) found in the registry"", ""Pasquale Congiusti - 2025-02-12T08:18:52+0000 Thanks for confirming. I think it's the way it works the Quarkus MongoDB client. You can have a look at the Quarkus extension documentation [1]. jamesnetherton do you know if this would be suitable for some future enhancement on the extension side by any chance?\n[1] https://camel.apache.org/camel-quarkus/3.15.x/reference/extensions/mongodb.html"", ""Luis Sergio Faria Carneiro - 2025-02-12T11:35:06+0000 Great, I checked the docs.\nFrom a developer experience perspective, it feels a little bit confusing to use the mongodb component within a Camel K integration using the yaml dsl.\nI'm trying to setup integrations that connect to a source and a target mongo database, but I feel that the injected client is getting in the way. At the end, there are the hosts/username/password parameters which I cannot use, because the autowired connection is used instead. And if I need to change the default client, I have to do it using quarkus properties, which I managed to do.\nNow I will try to set up the 2 connection scenario, where I create clients, and configure them as described in [1].\nI see that the MongoClient implementation does not have a no-parameters constructor, so it might not be straightforward to declare a bean using the yaml syntax. All the examples I have seen use wither the xml or java dsl.\nFrom a personal perspective, I like the way the jdbc/sql components work, where I can set up my Datasource beans and reference them in the endpoints with no default datasource being created.\nOn the mongodb extension, that default client to localhost might be handy for development environments, where the application and the database run on the same host, but that is not usually what we see in production environments.\nIf we can get some enhancements either on the extension or the component that makes it simpler to use, that would be awesome.\nThanks!\n [1] https://camel.apache.org/camel-quarkus/3.15.x/reference/extensions/mongodb.html#extensions-mongodb-additional-camel-quarkus-configuration"", 'Pasquale Congiusti - 2025-02-12T12:20:14+0000 I think the best thing would be to open an issue directly on Camel Quarkus Github page and contribute to the feature if there is no other reason not to do this. I recall we were very dependent on the Quarkus MondoDB dependency a few years back, not sure if the things are different now.', 'Claus Ibsen - 2025-02-14T19:36:49+0000 You can turn off autowiring on the component. But I agree if you set the hostname and other values then the autowired client should not be in use. Maybe we can do something for next version']"
21734,Improvement,Benjamin Graf,Benjamin Graf,"4.8.3,4.9.0","4.10.1,4.11.0",2025-02-08T11:06:29+0000,1739012789,2025-02-14T19:40:51+0000,2025-02-14T19:40:51+0000,Header columns defined in CsvFormat are actually not evaluated for use of FixedColumnsMarshaller causing sometimes messed output order.,"['Benjamin Graf - 2025-02-09T15:20:24+0000 Hi davsclaus, any chance to get it into a 4.10.x release, too?']"
21733,Improvement,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-02-07T15:26:04+0000,1738941964,2025-02-09T11:10:21+0000,2025-02-09T11:10:21+0000,We have SendDynamicAware for toD. And we need a counter part for Poll and PollEnrich EIP. However this is mostly for camel-ftp if you have dynamic headers in fileName.See GenericFileSendDynamicAware,['Claus Ibsen - 2025-02-07T16:23:37+0000 TODO: API for PollingConsumer to dynamic have access to current exchange for dynamic evaluations DONE\nTODO: GenericFileConsumer to use this when evaluate instead of dummy exchange DONE\nTODO: PollDynamicAware/GenericFilePollDynamicAware should only support the dynamic headers we can do in GenericFileConsumer DONE\nTODO: FTP unit tests DONE\nTODO: SMB unit tests DONE\nTODO: File unit tests DONE\nTODO: Upgrade guide DONE']
21732,Bug,Claus Ibsen,Claus Ibsen,4.9.0,"4.10.1,4.11.0",2025-02-07T13:40:36+0000,1738935636,2025-02-14T19:40:21+0000,2025-02-14T19:40:21+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Check.20if.20FTP.20file.20exists.20mid.20route,['Claus Ibsen - 2025-02-07T14:32:47+0000 TODO: backport to 4.10.x branch']
21731,New Feature,Federico Mariani,John Cody,4.3.0,4.11.0,2025-02-07T13:04:54+0000,1738933494,2025-02-14T19:33:26+0000,2025-02-14T15:01:02+0000,Part of the Open API specifications  allows for an externalDocs object with a description and a URI.Currently the Java first implementation of the camel-openapi-java doesn't support this type of documentation when added to the REST Component.  It would be good to have this ability in our Open API specifications so that we could link to other documentation like a wiki or some sort of knowledge base for the API.Here is an example of what it might look like.,"['Federico Mariani - 2025-02-12T12:54:02+0000 Hello, since there are not restConfiguration() properties that are used to modify the resulting API Doc, would this be ok?\nrestConfiguration()\n    .apiProperty(""externalDocs.url"", ""https://openweathermap.org/api"")\n    .apiProperty(""externalDocs.description"", ""API Documentation""); \nI can implement both apiExternalDocs or the apiProperty, but I do not know which one should be preferred in Camel (by quckly looking at the code, the apiProperty.\ndavsclaus do you have any opinion?', 'Federico Mariani - 2025-02-12T12:59:47+0000 Moreover, we are missing the following properties from the spec:\njsonSchemaDialect\nwebhooks\nsecurity']"
21730,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.4,4.10.1,4.11.0",2025-02-06T17:05:46+0000,1738861546,2025-02-19T11:32:25+0000,2025-02-19T11:32:25+0000,With a route like this ...on export I get ...The issue seems to be that export is calling KameletMain.doStart() by which the referenced resources have not been copied.,"['Thomas Diesler - 2025-02-07T06:26:17+0000 Please remind me, why is it running the route with KameletMain? Is this for anything else, but route validation?\nPerhaps it needs to be done after the resource copy phase.', 'Claus Ibsen - 2025-02-18T15:58:05+0000 You are not really expected to write prototypes where files are located in a old fashioned maven like structure with deep folders.\nYou would have the files in the same folder, and just do camel run *. And then export will put the files in to src/java src/resources accordingly.\nOtherwise you would need to run/export with all the files and with those long folder names\ncamel export foo.java META-INF/resources/index.html\nHowever the correct approach would be to have index.html in the same folder as the code/route and just do camel run *\nAfter you export and if you desire to have those META-INF folder and what the .... then you move them manually to be more JEE / Maven like', ""Thomas Diesler - 2025-02-19T07:57:38+0000 I moved the webapp resources and route definition to a common directory and simplified the export cmd like this ...\nk8s-export:\n @$(CAMEL_CMD) kubernetes export platform-http-files/* \\\n --dep=org.apache.camel.cloud:camel-oauth:0.1.0-SNAPSHOT \\\n --gav=examples:platform-http-oauth:1.0.0 \\\n --property=camel.oauth.baseUri=https://keycloak.local:30443/realms/camel \\\n --property=camel.oauth.redirectUri=http://127.0.0.1:8080/auth \\\n --property=camel.oauth.logout.redirectUri=http://127.0.0.1:8080/ \\\n --property=camel.oauth.clientId=camel-client \\\n --property=camel.oauth.clientSecret=camel-client-secret \\\n --trait container.image-pull-policy=IfNotPresent \\\n --ignore-loading-error=true \\\n --image-builder=docker \\\n --image-push=false \\\n --runtime=camel-main\nReferences to these resources in the route do not change, and the error from above still shows when --ignore-loading-error=false\nHence, the provided patch is still needed and I'd suggest to backport it to the LTS branches.""]"
21729,Improvement,Claus Ibsen,Claus Ibsen,None,"4.10.1,4.11.0",2025-02-06T10:56:36+0000,1738839396,2025-02-14T19:39:53+0000,2025-02-14T19:39:53+0000,"To try to update the existing pom.xml by adding/remove camel dependencies.However its a bit tricky as as the pom may use BOM or not. And the file can be formatted in a user speicific way. So we either rewrite the pom as maven would do, or try to respect the current format, and do some search/replace magic.","['Claus Ibsen - 2025-02-06T10:59:38+0000 We should use the dependency update command instead. Its currently for jbang //DEPS style in a .java file.\nWe can add logic to update pom.xml files too.', 'Claus Ibsen - 2025-02-06T14:34:58+0000 The `–source` can be a file so it works like the other commands', 'Claus Ibsen - 2025-02-07T09:58:56+0000 Have a prototype in the works', 'Claus Ibsen - 2025-02-07T14:37:32+0000 TODO: backport to 4.10.x']"
21728,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-05T20:14:30+0000,1738786470,2025-02-06T09:22:53+0000,2025-02-06T09:22:53+0000,Like we have in Split EIP with onPrepare - You may want to loop and then do a deep copy of the exchange for each loop to ensure there are no side-effect from previous loop iteration. As a copy is shallow copy by default.,No comments found
21727,Task,Claus Ibsen,Claus Ibsen,None,"4.8.4,4.10.0",2025-02-05T19:21:53+0000,1738783313,2025-02-05T19:55:20+0000,2025-02-05T19:55:20+0000,The loop EIP is intended for looping a reasonable number of times. Don't loop 100.000+ as this impact performance as call traces become higher in the JVM,No comments found
21726,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-02-05T16:22:14+0000,1738772534,2025-02-06T08:19:03+0000,2025-02-06T08:19:03+0000,"Since there was some work done for similarity search and RAG embeddings for both Qdrant and Neoj camel AI components, I'd like to add some Chat models so that I could work on some kamelets for naive RAG with Camel AI componentsThis will serve this GH issue https://github.com/apache/camel-kamelets/issues/2247",No comments found
21725,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-05T14:54:23+0000,1738767263,2025-02-06T06:48:37+0000,2025-02-06T06:48:37+0000,"For users on maven based projects, then its a hazzle to keep updating pom.xml with new depencencies when you add new camel routes and forgot that it uses a new component or something.","['Claus Ibsen - 2025-02-06T06:40:27+0000 You can use `camel dependency list pom.xml` and it can detect new dependencies', 'Claus Ibsen - 2025-02-06T06:48:37+0000 You can now run camel dependency list is the root folder of a maven/gradle project.\nYou can also run it with camel dependency list pom.xml']"
21724,Bug,Unassigned,Patricia,4.9.0,None,2025-02-05T14:25:57+0000,1738765557,2025-02-10T06:41:31+0000,2025-02-10T06:41:31+0000,"I am experiencing an issue when trying to connect to my SFTP server using a private key string. When I specify the absolute path to my private key file in the ""privateKeyFile"" parameter, the connection works correctly. However, if I attempt to use a string containing my private key in the ""privateKey"" parameter, I am unable to establish a connection.Attempts to Resolve:None of these methods have worked.Additional Information:Is there a certain way this private key has to be formatted for this ""privateKey"" parameter to work?Thanks beforehand","['Claus Ibsen - 2025-02-05T15:21:41+0000 Take a look at JSCh as its the library used for SFTP', 'Claus Ibsen - 2025-02-10T06:41:31+0000 You can do something ala\nhttps://github.com/apache/camel/commit/502c38b09297d8c080b19f5c0384fa14ac20f671']"
21723,New Feature,John Poth,John Poth,None,"4.10.1,4.11.0",2025-02-05T14:06:03+0000,1738764363,2025-02-15T13:18:51+0000,2025-02-14T19:47:42+0000,It'd be cool to have an edit command in the camel-jbang shell to edit routes. Maybe something withhttps://github.com/jledit/jledit + https://github.com/camel-tooling/camel-language-server,"['Claus Ibsen - 2025-02-14T19:47:42+0000 This is nice, if you quickly want to try to edit a file.\nMaybe we should have a `camel ls` command that list the file names in the current dir']"
21722,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2025-02-05T12:42:00+0000,1738759320,2025-02-05T12:42:00+0000,,"We should make it possible to enable capturing attachments details in the tracer. This can assist trouble shooting and tooling to show details.Attachments can contain headers, and data (name, content-type) such as emails with attached files, or HTTP post with form-data etc.The trace/debug command in jbang could also be improved to show attachment data.",No comments found
21721,Bug,Jiri Ondrusek,Jiri Ondrusek,4.10.0,4.10.0,2025-02-05T12:37:16+0000,1738759036,2025-02-05T13:52:17+0000,2025-02-05T13:52:17+0000,"Current state is that the creation of the component fails, when Identity is used without (unnecessary) credentials.There is a validation of configuration parameters in component, see the code. This validation matters only ifin case ofNone of the validated parameters are required.",No comments found
21720,Bug,James Netherton,James Netherton,None,4.10.0,2025-02-05T11:49:24+0000,1738756164,2025-02-05T13:09:15+0000,2025-02-05T13:09:15+0000,Some more details in this Camel Quarkus issue:https://github.com/apache/camel-quarkus/issues/6955Seems pods that are in the failed or not ready state are considered as candidates for cluster leadership when using the camel-master component.The issue might be here:https://github.com/apache/camel/blob/b3e263c064018ed79f4a3572233b112cef126fa7/components/camel-kubernetes/src/main/java/org/apache/camel/component/kubernetes/cluster/lock/KubernetesLeadershipController.java#L477-L483It grabs a list of pods but does not interrogate their status.,No comments found
21719,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-02-05T10:20:27+0000,1738750827,2025-02-06T08:27:45+0000,2025-02-06T08:27:45+0000,No description available,"['Claus Ibsen - 2025-02-06T08:19:26+0000 is this work done', 'Zineb Bendhiba - 2025-02-06T08:27:31+0000 yes', 'Zineb Bendhiba - 2025-02-06T08:27:45+0000 PR merged']"
21718,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-02-05T10:13:00+0000,1738750380,2025-02-05T12:45:37+0000,2025-02-05T12:45:25+0000,No description available,['Zineb Bendhiba - 2025-02-05T12:45:25+0000 PR merged']
21717,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-05T08:49:58+0000,1738745398,2025-02-05T14:10:57+0000,2025-02-05T14:10:57+0000,So you can easily from groovy scripts use `attachments` in the code,No comments found
21716,Improvement,Christoph Deppisch,Christoph Deppisch,4.9.0,4.10.0,2025-02-05T08:30:05+0000,1738744205,2025-02-05T17:56:59+0000,2025-02-05T17:56:59+0000,The Kubernetes plugin project export and run uses a hardcoded container base image (eclipse-temurin). We should allow users to customize the base image with command line options.This is valuable when customizing base images with dedicated os architecture (e.g. arm64v8/eclipse-temurin) or when using docker registry mirrors (e.g. mirror.gcr.io/eclipse-temurin),No comments found
21715,Bug,Christoph Deppisch,Christoph Deppisch,None,4.10.0,2025-02-04T18:20:19+0000,1738693219,2025-02-06T08:49:34+0000,2025-02-06T08:49:34+0000,With https://issues.apache.org/jira/browse/CAMEL-21452 some classes in the camel-test-infra-common have been moved from src/test/java to src/main/java so dependent modules need to switch the Maven dependency from type=test-jar to a normal dependency. The camel-jbang-plugin-kubernetes is a good example it hasbut it needs to removeSo we need to go through the modules that depend on camel-test-infra-common and see if we need test-jar + normal jar dependency in Maven POMs,No comments found
21714,Improvement,Freeman Yue Fang,Freeman Yue Fang,"4.8.3,4.9.0","4.8.4,4.10.0",2025-02-04T16:52:06+0000,1738687926,2025-02-04T17:25:31+0000,2025-02-04T17:25:31+0000,"For example the exception likeis caught but ignored without a DEBUG level log, which wasn't this case in CAMEL 2.x",No comments found
21713,Bug,Unassigned,Jiri Ondrusek,None,4.10.0,2025-02-04T16:49:58+0000,1738687798,2025-02-05T12:51:18+0000,2025-02-05T06:00:23+0000,"I noticed (when extending test coverage for aws-secret-manager in camel-qurkus), that the  reload task `CloudTrailReloadTriggerTask` in aws-secret-manager is not using  url override. Without this parameter, the testing with a docker image is not possible. (the properties function of the component is using this parameter, therefore I think this is just missing code)",No comments found
21712,Improvement,Unassigned,Mikael Andersson Wigander,None,4.11.0,2025-02-04T15:33:05+0000,1738683185,2025-02-17T08:41:27+0000,2025-02-16T12:49:21+0000,Current Oauth2 support is not supporting RFC8707 where a Resource Indicator is required as part of Oauth2 payload.To be compliant an additional argument to the component would indicate a value to be used for the resource indicator argument in payload together with client_credentials.https://www.rfc-editor.org/rfc/rfc8707,"['Mikael Andersson Wigander - 2025-02-04T17:19:05+0000 I’d like to try and develop this but uncertain where to begin. My first time changing a component and all helper classes. \nBUT, if someone knows exactly what to do and where, pls feel free to jump in…', 'Mikael Andersson Wigander - 2025-02-11T14:09:51+0000 Fork and first commit issued\n  https://github.com/MikaelAnderssonWigander/camel/tree/feature/CAMEL-21712-add-rfc8707-support-to-http', 'Mikael Andersson Wigander - 2025-02-12T07:46:44+0000 PR as well…', 'Claus Ibsen - 2025-02-16T12:49:22+0000 Thanks for reporting and the PR', 'Mikael Andersson Wigander - 2025-02-17T07:28:46+0000 Do I have to perform some changes in camel-quarkus as well?', 'Claus Ibsen - 2025-02-17T08:41:27+0000 No']"
21711,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-04T15:25:58+0000,1738682758,2025-02-05T05:58:27+0000,2025-02-05T05:58:27+0000,"If you do a log with ${body} and have a file attachment that is binary data such as a png then its better to load the byte array and store as string, instead of having a JDK read error due to attempt to convert to UTF-8 and have some MalformedIOException",No comments found
21710,Improvement,Claudio Miranda,Claudio Miranda,4.9.0,4.11.0,2025-02-04T14:52:58+0000,1738680778,2025-02-28T17:19:46+0000,2025-02-28T17:19:46+0000,"When running ""camel kubernetes run file.java"" there may be many parameters to set accordingly to the cluster the user is currently connected to, so this enhancement request is to automatically detect the cluster and set the basic options to build and push the image and to deploy the kubernetes manifests.The goal is be able to use ""camel kubernetes run file.java"" and the automatic options take care of the correct configurations. There should be a new parameter to ""camel kubernetes run --auto-disable"" to disable this automation and let the user set the desired parameters. Also, if the user sets any parameter that is set by the automation, then the automation is disabled.As there could be many different ways to build and push the container images to the image registry we want to cover some basic scenarios to build and deploy to kubernetes.These are examples of building and deploying images and manifest that should be simplified with this proposal.1. minikube with docker-env
In this case when using minikube with ""eval $(minikube docker-env)"" these are the parameters to make it work2. Openshift with S2I3. Kind",No comments found
21709,Improvement,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2025-02-04T13:38:34+0000,1738676314,2025-02-05T14:49:29+0000,2025-02-05T14:49:29+0000,"currently, using `jbang '-Dcamel.jbang.version=4.10.0-SNAPSHOT' camel@apache/camel init demo.camel.yaml` generates:The request is to generate:","['Claus Ibsen - 2025-02-04T15:30:20+0000 You are welcome to work on a PR - Not sure how many tests that needs to be adapted, as it would all only be in camel-jbang and not elsewhere', 'Claus Ibsen - 2025-02-05T14:49:29+0000 Thanks its been updated now']"
21708,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-04T11:44:24+0000,1738669464,2025-02-05T12:55:31+0000,2025-02-05T12:55:31+0000,The default mime-types in jakarta activation is very limited,"['Claus Ibsen - 2025-02-04T11:44:35+0000 There is not even json or xml etc.', 'Claus Ibsen - 2025-02-04T11:45:02+0000 We should make it possible to detect if spring-web is present and use its mime type detector which is much richer', 'Claus Ibsen - 2025-02-04T11:48:23+0000 We could instead grab this file from sister ASF project and parse it ourselves\nhttps://svn.apache.org/viewvc/httpd/httpd/trunk/docs/conf/mime.types?view=co\nSo we can make it part of camel-attachments out-of-the-box, or maybe some MimeHelper class in core']"
21707,Bug,Unassigned,Marco Carletti,4.10.0,4.11.0,2025-02-04T10:29:22+0000,1738664962,2025-02-18T10:14:05+0000,2025-02-18T10:14:05+0000,on main branch run:the stack trace isoreven if this second method depends on the local environment and it may work,"['Claus Ibsen - 2025-02-05T19:59:41+0000 You are loading SNAPSHOT kamelets - are they even present in that docker local maven repo on the file system. Otherwise it can only be downloaded from ASF snapshot repo.\nCan you try with kamelets 4.9.0 that are already released.', 'Marco Carletti - 2025-02-18T10:14:01+0000 it works with the versions:\n[jbang]    org.apache.camel:camel-jbang-core:4.11.0-SNAPSHOT\n[jbang]    org.apache.camel.kamelets:camel-kamelets:4.10.0\n[jbang]    org.apache.camel:camel-bom:4.11.0-SNAPSHOT@pom']"
21706,Improvement,Christoph Deppisch,Christoph Deppisch,4.9.0,4.10.0,2025-02-04T09:00:00+0000,1738659600,2025-02-05T05:59:56+0000,2025-02-05T05:59:56+0000,"The quiet mode in JBang Kubernetes run command is not really quiet. Still there is a lot of command output printed to the console when using --quiet option.Also, we should not print verbose Maven build output by default even if quiet mode is disabled. Think of introducing a --verbose option that enables the Maven build output.",No comments found
21705,New Feature,Unassigned,Vincent Sevel,None,None,2025-02-03T16:36:26+0000,1738600586,2025-02-10T08:46:59+0000,,"this proposes to support quarkus-artemis-ra as a mean to connect to artemis servers using sjms or sjms2 in quarkus infused camel applications.some context:
on our quarkus applications we have settled on quarkus-artemis-ra to access artemis servers, for the following reasons: managed listener, automatic rebalancing connections, native support for poolingI have tried this extension with sjms end sjms2 in a camel route, but failed to do so because of forbidden methods setExceptionListener and setMessageListenerCaused by: jakarta.jms.IllegalStateException: This method is not applicable inside the application server. See the J2EE spec, e.g. J2EE1.4 Section 6.6
        at org.apache.activemq.artemis.ra.ActiveMQRASessionFactoryImpl.setExceptionListener(ActiveMQRASessionFactoryImpl.java:534)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.createConnection(SimpleMessageListenerContainer.java:307)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.doStart(SimpleMessageListenerContainer.java:228)
        at org.apache.camel.support.service.BaseService.start(BaseService.java:123)
        ... 35 moreandCaused by: jakarta.jms.IllegalStateException: This method is not applicable inside the application server. See the J2EE spec, e.g. J2EE1.4 Section 6.6
        at org.apache.activemq.artemis.ra.ActiveMQRASession.checkStrict(ActiveMQRASession.java:1311)
        at org.apache.activemq.artemis.ra.ActiveMQRAMessageConsumer.setMessageListener(ActiveMQRAMessageConsumer.java:118)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.configureConsumer(SimpleMessageListenerContainer.java:127)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.initConsumers(SimpleMessageListenerContainer.java:258)
        at org.apache.camel.component.sjms.consumer.SimpleMessageListenerContainer.doStart(SimpleMessageListenerContainer.java:229)
        at org.apache.camel.support.service.BaseService.start(BaseService.java:123)it is interesting to note that the ra can be used ith sjms/sjms2 in a camel route if only publishing. but it is not possible to consume from jms.it would be nice to have some alignment between quarkus and camel with respect to accessing artemis servers through the RA.however the artemis ra can be used with the original jms connector, which has the following drawbacks: it drags some spring libraries in the quarkus app, sjms and sjms2 are said to have perf improvements compared to the jms connector.if using sjms and sjms2 it is possible to use the other extension quarkus-artemis-jms, but it requires to add quarkus-pooled-jms to allow connection pooling, but the main drawback is that quarkus applications that want to use classic jms with the ra, plus a camel route, would have to use 2 sets of extensions to access artemis. fron a maintenance standpoint it is better if we can settle on 1 single extension. i.e. quarkus-artemis-rasome other issues have been fixed, which could have been avoided if a sjms implementation support directly the ra:quarkus-artemis-ra is a sophisticated and feature proof approach to allow dealing with artemis servers. it would be nice to allow using it natively in camel routes inside quarkus applications.","['Vincent Sevel - 2025-02-03T16:37:16+0000 see also those zulip conversations:\nhttps://camel.zulipchat.com/#narrow/channel/257302-camel-quarkus/topic/camel.20artemis.20with.20jca.20connector\nhttps://quarkusio.zulipchat.com/#narrow/channel/187030-users/topic/use.20camel.20sjms2.20with.20ironjacamar.20artemis.20ra', 'Claus Ibsen - 2025-02-03T20:05:14+0000 Well how would that be possible as camel needs to listen for message and therefore need to set the message listener. \nspring is a battle tested library and are used heavily in the world - it has a roboust and great JMS support for growing and shrinking on demand.', 'Vincent Sevel - 2025-02-04T08:11:17+0000 > Well how would that be possible as camel needs to listen for message and therefore need to set the message listener. \nin a ra approach, it is the responsibility of the jca impl (e.g. ironjacamar) to instantiate endpoints\nin the quarkus ironjacamar extension it is done in the processor\nonce it is registered it can be found as a normal CDI component. if camel was to use a jca initiated message listener, I suppose the camel connector would have to register it at build time in its processor, just like the iron jacamar processor does. \nonce you have a message listener, some things come for free (e.g. automatic rebalancing of connections)\na native support for the quarkus artemis ra as a mean to connect to artemis brokers may provide a better narrative for camel / quarkus than the current approach, where to some extent it seems that spring has a better support for camel than quarkus. which is awkward.', 'Zheng Feng - 2025-02-10T08:46:59+0000 I will take a look.']"
21704,Bug,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-03T15:45:22+0000,1738597522,2025-02-03T19:52:31+0000,2025-02-03T19:52:31+0000,No description available,No comments found
21703,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-03T15:02:12+0000,1738594932,2025-02-05T05:59:04+0000,2025-02-05T05:59:04+0000,"It may be good if we can make some extra functions to simple via camel-attachments, so you can easily check if there are attachments, and what names they are etc.",['Claus Ibsen - 2025-02-04T08:54:41+0000 TODO: spi DONE\nTODO: simple expressions DONE\nTODO: csimple DONE\nTODO: docs DONE']
21702,Bug,Gaelle Fournier,Dominik Jelinek,"4.8.3,4.9.0,4.10.0",4.10.0,2025-02-03T13:59:14+0000,1738591154,2025-02-05T05:59:26+0000,2025-02-05T05:59:26+0000,"for a deployment I've used, which is working fine and route is deployed and logs are runningthen I would like to delete a deployment using:content of `.camel-jbang-run/demoroute/target/kubernetes`","['Claus Ibsen - 2025-02-03T14:39:16+0000 tdiesler and gfournier maybe you can take a look', 'Thomas Diesler - 2025-02-03T15:12:10+0000 This is likely a duplicate of CAMEL-21625', 'Gaelle Fournier - 2025-02-03T15:13:03+0000 Hi djelinek ,\nFor 4.10, if you are using the `--cluster-type` parameter in the run command, you also need to use it in the delete command. I will update the documentation and check the other versions..', 'Dominik Jelinek - 2025-02-04T11:19:46+0000 Hello gfournier , thank you. I can confirm it is working as expected when using `--cluster-type` for a delete.']"
21701,Improvement,Federico Mariani,Claus Ibsen,None,4.10.0,2025-02-03T13:03:16+0000,1738587796,2025-02-04T12:44:37+0000,2025-02-04T12:44:36+0000,If you upload file via POST multipart/form-data then you have the file as attachments and a null message body.We should add an option to make it easy to store the file in the body and the name of the file as CamelFileName - this should only be for a single file upload. But to make this easier than working with attachments.,No comments found
21700,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-03T10:24:33+0000,1738578273,2025-02-03T20:10:53+0000,2025-02-03T20:10:53+0000,We should make platform-http able to handle file uploads as multipart/form by default. This requires to turn it on in -vertx.Also make configuring this easier as its on a special bodyHandler configuration currently.,"['Claus Ibsen - 2025-02-03T12:30:41+0000 On cloud then the upload directory needs to be writeable, and it may be that the current user does not have permission for that.\nSo the end user should enable this, and be able to specify the folder such as a ${tmp.dir} or something to indicate a temporary write folder.\nThe files are only stored during processing and deleted at end.', 'Claus Ibsen - 2025-02-03T14:40:55+0000 TODO: main turn on file upload DONE\nTODO: dev console DONE\nTODO: CEQ file upload enabled (enabled out of the box in Quarkus) NO PROBLEM\nTODO: CSB file upload enabled  (enabled out of the box in SB) NO PROBLEM']"
21699,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-01T15:34:21+0000,1738424061,2025-02-03T08:32:56+0000,2025-02-03T08:32:56+0000,Added TODO in  KafkaRecordBatchingProcessorWe should make the onCompletion able to deal with this without the message body must be kept as List<Exchange>. So users can split and whatelse transformation they do in the route.,No comments found
21698,Task,Unassigned,Claus Ibsen,4.10.0,4.x,2025-02-01T10:25:36+0000,1738405536,2025-02-18T08:21:07+0000,2025-02-18T08:21:07+0000,,"['Claus Ibsen - 2025-02-02T07:15:32+0000 okay so that is for all 4 platforms and they take about 20 sec to run, and locally its bout 10 sec', 'Claus Ibsen - 2025-02-18T08:21:07+0000 its okay performance now']"
21697,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-02-01T08:24:43+0000,1738398283,2025-02-01T10:52:19+0000,2025-02-01T10:52:19+0000,We should use the Camel standard for naming headers.,No comments found
21696,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.11.0,2025-01-31T19:44:27+0000,1738352667,2025-02-26T10:16:29+0000,,"When retrieving embeddings with similarity search, they need to be decoded back to StringThis is for RAG","[""Zineb Bendhiba - 2025-02-05T10:11:58+0000 After investigating, we don't decode with the Langchain4j Embedding Model.\nWhat we need to do is to create another data transformer in the vector databases components to retrieve the text, as created with the Embedding Data Transformer.\nI already done some code for Qdrant and ready to push something for Camel 4.10 . I can't quickly do same with Neo4j.\nI will move this Jira to 4.11 and will open as many issues as needed for the camel vector database component. This one is to be closed when all tasks are complete""]"
21695,Improvement,Claudio Miranda,Claudio Miranda,None,4.10.0,2025-01-31T14:58:28+0000,1738335508,2025-02-03T10:39:00+0000,2025-02-03T10:39:00+0000,"The camel-jbang-plugin-k is scheduled to be removed from camel-jbang 4.10, there are many remaining traces from camel-k in camel-jbang:","['Claudio Miranda - 2025-01-31T17:45:49+0000 davsclaus About Pipe, should the ""spec.integration"" to be supported ?\napiVersion: camel.apache.org/v1\nkind: Pipe\nmetadata: \n    name: timer-event-source\nspec: \n    integration: \n        dependencies: \n        - ""camel:cloudevents""\n        traits: \n            camel: \n                properties: \n                    - ""foo=howdy""\n                    - ""bar=123""\n            environment: \n                vars: \n                    - ""MY_ENV=cheese""\n    source: \n        ref: \n            kind: Kamelet\n            apiVersion: camel.apache.org/v1\n            name: timer-source\n        properties: \n            message: ""Hello world!""\n    sink: \n        ref: \n            kind: Kamelet\n            apiVersion: camel.apache.org/v1\n            name: log-sink\nAlso, the traits annotations\napiVersion: camel.apache.org/v1\nkind: Pipe\nmetadata:\n    name: timer-event-source\n    annotations:\n        trait.camel.apache.org/camel.properties: ""foo=howdy,bar=123""                  \n        trait.camel.apache.org/environment.vars: ""MY_ENV=cheese""                  \nI think they are from camel-k so it would be safe to remove code that supports them ?', 'Claus Ibsen - 2025-01-31T18:24:10+0000 Are the dependencies under spec.integration or how is that\n  The following is worth to detect and let jbang able to auto-detect and ensure the dependency are included when running / exporting\ndependencies: - ""camel:cloudevents""', 'Claudio Miranda - 2025-02-02T12:15:00+0000 The dependencies is under integration, example. I fixed the indentation in the above comment.']"
21694,Bug,Claus Ibsen,Claus Ibsen,4.10.0,4.10.0,2025-01-31T13:17:11+0000,1738329431,2025-01-31T19:13:08+0000,2025-01-31T19:13:08+0000,If you try to export to 4.8.3 with camel-main runtime then it fails etc.,No comments found
21693,Task,Unassigned,Claus Ibsen,None,4.x,2025-01-31T10:08:14+0000,1738318094,2025-02-03T08:52:26+0000,,camel-jbang was created during v3 and we have some older code that checks for some v3 stuff.We can remove this and make camel-jbang v4 only.,No comments found
21692,Bug,Claus Ibsen,Marco Carletti,"4.9.0,4.10.0",4.10.0,2025-01-31T09:27:01+0000,1738315621,2025-01-31T10:04:38+0000,2025-01-31T09:54:45+0000,Running the open-api-contract-first example as explained in the README file won't workthis is the response (with unexpected body):the response expected contains the body from the mock so,"['Claus Ibsen - 2025-01-31T09:50:39+0000 Try with 4.10.0-SNAPSHOT it works for me\ncurl -i http://localhost:8080/api/v3/pet/123\nHTTP/1.1 200 OK\npetId: 123\ntransfer-encoding: chunked\nContent-Type: application/json{\n  ""pet"": ""donald the dock""\n}', 'Claus Ibsen - 2025-01-31T09:50:51+0000 camel version                                                                                                          ✘ INT\nJBang version: 0.123.0\nCamel JBang version: 4.10.0-SNAPSHOT', 'Claus Ibsen - 2025-01-31T09:52:00+0000 Ah it works when using `camel run *`', 'Claus Ibsen - 2025-01-31T09:54:45+0000 okay so the readme how to run was a bit wrong, you need to include application.properties', 'Marco Carletti - 2025-01-31T10:04:38+0000 thanks davsclaus !']"
21691,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-31T09:13:22+0000,1738314802,2025-02-12T14:59:50+0000,2025-02-03T11:28:35+0000,To make it possible to trigger batch when either hits firstThis allows to ensure batches can be processed in case there are no new messages or they are sent very slowly,"['Claus Ibsen - 2025-01-31T14:55:55+0000 So due to how kafka must use its own thread to process the records, then the interval cannot be triggered from a background scheduled task and thus is not triggering exactly at a given interval.\nThe pollTimeoutMs should be kept as default ideally as it will be used to wake up kafka consumer and allow the interval to trigger, for example if there are only a few records or none at all.\nSo keep this at 5s etc and then use the interval such as 20s etc. Then the interval is triggered between 20 + 5 sec or so']"
21690,Bug,Christoph Deppisch,Christoph Deppisch,4.9.0,4.10.0,2025-01-31T08:34:11+0000,1738312451,2025-02-01T08:21:29+0000,2025-02-01T08:21:29+0000,"The Camel JBang Kubernetes run command provides the option to automatically push the built container image to the Kubernetes image registry (--image-push=true)This option has no effect. Even if set to true the exported project has the optionand the image push is skipped.Also, the --image-push option is set to false as a default value. I'd suggest to set this to true by default as almost all Kubernetes run commands need to push the container image. Otherwise the Kubernetes Deployment will not be able to pull the container image from the registry (on Minikube, Kind, OpenShift, etc.) and the deployment is failing.","['Gaelle Fournier - 2025-01-31T09:01:16+0000 While --image-push does not works, the additionnal parameter --trait container.image-push=true works.', 'Thomas Diesler - 2025-01-31T09:44:02+0000 For export, we set\n       var skipPush = !container.getImagePush();\n        buildProperties.add(""jkube.skip.push=%b"".formatted(skipPush));\nfor run, we have\n        if (imagePush) {\n            args.add(""-Djkube.%s.push=true"".formatted(imageBuilder));\n        }\nwhich is wrong and should be\n        if (imagePush) {\n            args.add(""-Djkube.skip.push=false"");\n        }\nThis bug was probably introduced when switching that property to JKube and went unnoticed because we always set it explicitly.\nWould you like me to look at this and test it against the matrix?', 'Thomas Diesler - 2025-01-31T09:54:02+0000 Should we even have this duplicate flag?\n--trait container.image-push\n--image-push', 'Christoph Deppisch - 2025-01-31T10:22:00+0000 A workaround is to add this trait config option to the run command\n--trait container.image-push=true\nSee also https://camel.apache.org/manual/camel-jbang-kubernetes.html#_minikube_deployment_tips_and_troubleshooting', 'Christoph Deppisch - 2025-01-31T10:23:40+0000 I think the image push option should not be part of the container trait config at all. The container trait is to configure the container spec in the Kubernetes deployment manifest. The image push option is to configure the JBang exported Maven project that builds and pushes the container image.\nIMO we should remove the container trait push image option.', 'Claus Ibsen - 2025-02-01T08:21:29+0000 I assume this is done']"
21689,Task,Claus Ibsen,Manjunath S Horapeti,4.8.3,"4.8.4,4.10.0",2025-01-30T20:02:58+0000,1738267378,2025-01-31T09:14:04+0000,2025-01-31T09:14:04+0000,"Hi Team,
 
I'm reaching out regarding the understanding of behaviour of ""pollTimeoutMs"" and the discrepancy observed.As per the documentation above from the camel kafka component page (https://camel.apache.org/components/4.8.x/kafka-component.html#_batching_consumer) 4.8.x version, the pollTimeoutMs works in tandem with ""maxPollRecords"", to either poll ""maxPollRecords"" or block for a maximum of ""pollTimeOutMs"".But the behaviour observed was that the camel route kept waiting until ""maxPollRecords"" count was reached and then processed further.
 
For example: our route is as followsThis route always waits until 50000 records are present in the topic and then proceeds further and ignoring pollTimeoutMs of 10000 (10 seconds). i.e. if the producer is producing messages at a rate of 50-100 msgs per second, then application waits for nearly 500-1000 seconds before proceeding further that is until 50000 record count is met.
 
We believe that the below code mentioned in the ""KafkaRecordBatchingProcessor"" is never executed as there is always one or two messages in poll. and hence method - ""hasExpiredRecords"" with condition consumerRecords.isEmpty() is always false.
We believe this is making the application wait until maxPollRecords (50000) is reached and then proceed further.

Definition of ""hasExpiredRecords()""Can you please help us by letting us know if the above behaviour is as expected and if so then can you let us know how to pull Y messages from the topic or write whatever messages are received within X seconds? (exact behaviour mentioned in the above Batching Consumer documentation). 
 
Thanks in advance.","['Claus Ibsen - 2025-01-30T20:14:13+0000 Ah okay so you want this to either batch when there is either first\n50.000 records\n10 sec elapsed then batch whatever you have so far\nSo this is a bit misleading with the name of the option pollTimeout as a timeout is when there are no records for X time, and as you say there are some records flowing in, so the timeout is not triggered.\nWhat it sounds like is you want a new option batchInterval=10000 that triggers every X interval. This is for example how the Aggregate EIP is designed.', 'Manjunath S Horapeti - 2025-01-31T08:43:58+0000 Hi Claus,\nYes, as per the naming of the option pollTimeoutMs it gives a meaning that a timeout would happen when no response is received, but from the documentation mentioned here - https://camel.apache.org/components/4.8.x/kafka-component.html#_batching_consumer\nwhich states ""To avoid blocking for too long, waiting for the whole set of records to fill the batch, it is possible to use the pollTimeoutMs option to set a timeout for the polling. In this case, the batch may contain less messages than set in the maxPollRecords.""\nThis gives a sense that we either wait till pollTimeoutMs seconds or until maxPollRecords is reached.\nIf the behaviour is as expected can we have documentation changed so that no one else in future also have a similar confusion?\nAlso while using the aggregation strategy, we are getting ""ConcurrentModificationException"" when we try to commit the messages and hence went with the above approach of letting camel handle the batching. By the looks of it, Aggregation runs on different thread and the committing is supposed to be done on the kafka consumer thread(as per documentation) https://camel.apache.org/components/4.8.x/kafka-component.html#_manual_commits_with_the_kafka_consumer.\nCould you please suggest on how to achieve - either process at X interval or Y records which ever is occurs first.', 'Claus Ibsen - 2025-01-31T09:14:04+0000 I have updated the docs, and linked to a ticket about a new option to trigger batch per interval as well']"
21688,Improvement,Claus Ibsen,Pasquale Congiusti,4.9.0,4.10.0,2025-01-30T16:02:06+0000,1738252926,2025-01-31T08:50:58+0000,2025-01-31T08:50:58+0000,"When you create a simple Camel application (eg, a timer to log), then, the export is not able to run properly:Apparently the regression is caused by the fact that, previously, we always embedded some dependency that enabled a web server. This is not happening now, so, we need to find a way to keep the application running regardless the presence of a web dependency or not.",No comments found
21687,Bug,Claus Ibsen,Claus Ibsen,4.8.3,"4.8.4,4.10.0",2025-01-30T15:41:51+0000,1738251711,2025-01-30T16:14:36+0000,2025-01-30T16:14:36+0000,https://camel.zulipchat.com/#narrow/channel/257302-camel-quarkus/topic/transaction.20with.20quarkus,No comments found
21686,Bug,Thomas Diesler,Thomas Diesler,4.9.0,4.10.0,2025-01-30T15:00:45+0000,1738249245,2025-01-31T13:18:19+0000,2025-01-31T13:18:12+0000,,"['Claus Ibsen - 2025-01-30T15:12:29+0000 Ah yeah that is no longer needed since 4.9 onwards, so we need to do some check in camel-jbang to skip', 'Thomas Diesler - 2025-01-31T11:04:34+0000 Exporting to an older camel version does already not work\n$ jbang camel export --camel-version=4.8.3 --runtime=camel-main timer-log-route.yaml \nCannot run because application.properties file does not exist or camel.main.routesIncludePattern is not configured']"
21685,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-30T13:04:32+0000,1738242272,2025-01-30T15:17:06+0000,2025-01-30T15:17:06+0000,"The modeline was an experiment from camel-k for cramming everyting into a single file, and instruct the kamel cli to append args (modeline) when you type kamel run.We should deprecate modeline we have in camel-yaml-dsl / camel-dsl-modeline and make Camel do a WARN log when starting if modeline are in use.We do the same for the deprecated kebab-case in YAML DSL.",No comments found
21684,Bug,Claus Ibsen,Claus Ibsen,4.5.0,"4.8.4,4.10.0",2025-01-29T19:25:50+0000,1738178750,2025-01-29T19:29:12+0000,2025-01-29T19:29:12+0000,Due to optimization from CAMEL-20520 then when the api is requested later with x-forward headers then they don't change the returned data because its pre build and cached.,No comments found
21683,Improvement,Federico Mariani,Federico Mariani,None,4.10.0,2025-01-29T15:21:00+0000,1738164060,2025-01-31T06:58:51+0000,2025-01-31T06:58:51+0000,"Right now, Cxf Services (SOAP) can be configured via CxfEndpoint myEndpoint, from(""cxf:bean:myEndpoint"")...The CxfRs follows another strategy that may break the interoperability with Cxf SOAP services, moreover, it would be nice to have the CXFs behaviour aligned.",No comments found
21682,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-29T14:06:33+0000,1738159593,2025-01-30T10:28:00+0000,2025-01-30T10:28:00+0000,No description available,No comments found
21681,Dependency upgrade,James Netherton,Claus Ibsen,None,4.10.0,2025-01-29T14:04:15+0000,1738159455,2025-01-29T15:20:55+0000,2025-01-29T15:20:55+0000,No description available,No comments found
21680,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-29T13:18:25+0000,1738156705,2025-01-29T14:49:23+0000,2025-01-29T14:49:23+0000,No description available,No comments found
21679,Improvement,James Netherton,James Netherton,None,4.10.0,2025-01-29T11:58:57+0000,1738151937,2025-01-29T13:12:21+0000,2025-01-29T13:12:21+0000,"When using a custom ServiceBus client, the configuration validation logic in ServiceBusComponent is not quite correct. It checks to see if both the senderClient and processorClient options have been provided before validating if the connectionString or fullyQualifiedNamespace options are set.https://github.com/apache/camel/blob/557b7ff166a754dcdd34997d56648de8f78b5dcb/components/camel-azure/camel-azure-servicebus/src/main/java/org/apache/camel/component/azure/servicebus/ServiceBusComponent.java#L90-L98However, if you're configuring the ServiceBus consumer, it only makes sense to specify the processorClient. Likewise, if you're configuring the servicebus producer, only the senderClient is relevant. You'd never supply both client options unless they get autowired.",No comments found
21678,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-29T11:06:14+0000,1738148774,2025-01-30T16:00:44+0000,2025-01-30T16:00:44+0000,Like CAMEL-20971,No comments found
21677,Improvement,Pasquale Congiusti,Pasquale Congiusti,None,4.10.0,2025-01-29T10:16:31+0000,1738145791,2025-01-31T09:39:35+0000,2025-01-31T09:39:32+0000,We should make the exception to leverage the endpoint object for a better usage of internal logging mechanisms.,"['Pasquale Congiusti - 2025-01-29T11:26:41+0000 Also check org.apache.camel.ResolveEndpointFailedException and any other ""endpoint"" exception to apply the same feature.', 'Claus Ibsen - 2025-01-30T13:34:50+0000 Yeah just use \nURISupport.sanitizeUri(value) to mask passwords etc']"
21676,Task,Claus Ibsen,Jiri Ondrusek,4.10.0,4.10.0,2025-01-29T09:46:57+0000,1738144017,2025-01-30T08:27:59+0000,2025-01-29T13:53:59+0000,"When adapting the latest bits of Camel 4.10 by camel-quarkus, NPE error was discovered when running kamelet tests.Here is a failure in the nightly build - CIProblem seems to be happening when kamelet is loaded as XML. Its route definition is not initialized properly and causes a NPE inIf the kamelet it rewriten into YAML, error goes away.I think that error was introduced by this commit.","['Jiri Ondrusek - 2025-01-29T09:47:59+0000 jamesnetherton The reproducer can be uploaded here. Thanks for it!', 'Jiri Ondrusek - 2025-01-29T09:48:27+0000 davsclaus FYI', 'James Netherton - 2025-01-29T09:49:19+0000 I attached a reproducer camel-main app. If you change the camel version to 4.9.0, the app starts successfully. With 4.10.0-SNAPSHOT it does not.', 'Claus Ibsen - 2025-01-29T10:23:25+0000 kamelets are in yaml dsl - a route template can be in xml or java', 'Claus Ibsen - 2025-01-29T10:29:19+0000 Thanks for the reproducer']"
21675,Improvement,Unassigned,Claus Ibsen,None,4.10.0,2025-01-29T09:37:02+0000,1738143422,2025-01-29T10:28:58+0000,2025-01-29T10:28:58+0000,No description available,No comments found
21674,Task,Unassigned,Otavio Rodolfo Piske,4.9.0,4.x,2025-01-29T07:17:06+0000,1738135026,2025-01-29T10:24:22+0000,,"The way we document the dependency that users have to add is not consistent in the documentation. Sometimes it appears on the top. Sometimes in a ""Dependencies"" section at the bottom. Sometimes it is not present at all.We should make this consistent.",No comments found
21673,Task,Thomas Cunningham,Thomas Cunningham,None,4.10.0,2025-01-28T21:06:07+0000,1738098367,2025-01-30T08:38:33+0000,2025-01-30T08:38:33+0000,"OpenScanHub tool notes missing stream closes in :components-starter/camel-platform-http-starter/src/main/java/org/apache/camel/component/platform/http/springboot/SpringBootPlatformHttpBinding.java - line 148, resource streamtooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootAutoConfigurationMojo.java - line 1930 - resource istooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootStarterMojo.java - line 120 getResourceAsStreamtooling/camel-spring-boot-generator-maven-plugin/src/main/java/org/apache/camel/springboot/maven/SpringBootStarterMojo.java - line 236 getResourceAsStreamcore/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/routecontroller/SupervisingRouteControllerAutoConfiguration.java - getBackOffMaxDelay wrong getter",No comments found
21672,Bug,James Netherton,James Netherton,None,4.10.0,2025-01-28T15:02:50+0000,1738076570,2025-01-29T08:07:58+0000,2025-01-29T08:07:58+0000,"If you try to configure an azure-servicebus endpoint and provide a custom client via the processorClient option, then you get a failure stating that no connectionString URI option was provided.Seems ServiceBusConsumer will always create its own client:https://github.com/apache/camel/blob/236adb6b0cc87d4627bb1d9f0e5d8a667919746e/components/camel-azure/camel-azure-servicebus/src/main/java/org/apache/camel/component/azure/servicebus/ServiceBusConsumer.java#L56-L62",No comments found
21671,Improvement,Claus Ibsen,Soheila Esmaeili,"4.8.0,4.10.0","4.10.2,4.11.0",2025-01-28T12:37:33+0000,1738067853,2025-03-03T10:46:47+0000,2025-03-03T10:46:47+0000,"We are currently facing an issue with a Camel route that uses a splitter with parallelProcessing. The route includes an asynchronous processor and a delay within the splitter. However, the problem is that the split threads do not wait for the asynchronous process to complete before proceeding further.Although the max. number of threads for split processing is set to 2, we have no control over thread usage due to the async processor. In Camel 3.14 and Camel 4.8, the 2 threads will forward the message to the async processor, then continue with the next 2 split parts, which are also handed over to another thread pool and so on. This can lead to hundreds of parallel threads performing the operations defined within the split-block. If these operations are long-running and memory-intensive, this can lead to further problems. In the older (unmaintained – 2.x) Camel version, this was not the case. Although the threads changed due to the async processor, the “split-related threads” were in a blocking/waiting state (I assume). At least there was no “unbounded” upscaling in the number of threads.Could you please confirm if this is a known issue or if there are specific configurations needed in newer Camel versions to achieve the expected behavior?A simplified unit test can be found in the appendix.Result in Camel 2.24:Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #1 - SplitAfter AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #1 - SplitAfter AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #1 - SplitAfter AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1Before AsyncProcessor - Thread: Camel (camel-1) thread #1 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitAfter AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1Before AsyncProcessor - Thread: Camel (camel-1) thread #1 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitAfter AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1Result in 3.14 and 4.8:Before AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #3 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #3 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #2 - SplitBefore AsyncProcessor - Thread: Camel (camel-1) thread #3 - SplitAfter AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-6After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-3After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-5After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-10After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-8After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-2After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-9After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-7After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-1After AsyncProcessor - Thread: ForkJoinPool.commonPool-worker-4","['Claus Ibsen - 2025-03-02T09:13:27+0000 Camel routing engine is more reactive and when you submit tasks into \nCompletableFuture.runAsync that does not have any limit then this is expected.\n \nWhat you ask for is some special new feature in the split EIP to only have N sub splits in process at any given time, and that it should have some kind of internal blocking until a previous split task is complete.', 'Claus Ibsen - 2025-03-03T08:35:26+0000 I think we can add an option to this EIP to allow to limit the reactive engine to process the split tasks synchronously which then would allow the behaviour of Camel v2 with only 2 threads in use at a given time', 'Claus Ibsen - 2025-03-03T09:44:11+0000 Okay we have the synchronous option already, so I am improving this to run like Camel v2 when you set synchronous(true)']"
21670,New Feature,Pasquale Congiusti,Pasquale Congiusti,None,4.11.0,2025-01-28T12:05:38+0000,1738065938,2025-02-24T12:02:17+0000,2025-02-24T12:02:17+0000,Develop a new component as described in the Camel tracing design specification. In the first iteration we can just include the abstract component development.,No comments found
21669,Improvement,Unassigned,Christoph Deppisch,None,4.x,2025-01-28T12:03:31+0000,1738065811,2025-01-28T13:31:53+0000,,"The Camel JBang Kubernetes plugin has hit some regressions recently. The unit tests of the plugin are disabled right now, mainly because they have the requirement to access Kubernetes/Docker on the host machine. This is quite resource consuming and limits the test execution on some environments. This is why the tests are restricted to manual execution right now.We should improve the unit tests to work with only lightweight infrastructure (e.g. using the fabric8 Kubenretes mock server and Jib) so we can run the tests also on hosts without any Kubernetes or Docker installed.Also the tests have shown some flakiness in the past that needs to be fixed. As soon as we have some stable tests that do not require Kubernetes or Docker on the host we can (re)enable the unit tests (maybe limited to nightly execution) to ensure the stability of the plugin and avoid introducing too many regressions.",No comments found
21668,Bug,Marco Carletti,Marco Carletti,4.10.0,4.10.0,2025-01-28T09:49:07+0000,1738057747,2025-01-29T06:07:54+0000,2025-01-29T06:07:54+0000,the error will bethe same command works with Camel Jbang 4.9.0,['Marco Carletti - 2025-01-28T17:14:47+0000 force the log parent directory to be created during the logging configuration https://github.com/apache/camel/pull/16955']
21667,New Feature,Unassigned,Felix Huisinga,None,4.x,2025-01-28T08:39:50+0000,1738053590,2025-01-28T10:09:27+0000,,"Proposal: In order to use the new Spring Hot-Reload for the SSL context, we need to be able to use SSL bundle and also use the updated one after reloading in http component.Spring Docs: https://spring.io/blog/2023/11/07/ssl-hot-reload-in-spring-boot-3-2-0","['Claus Ibsen - 2025-01-28T08:49:14+0000 This is spring boot specific, and such feature should be in camel-http-starter', 'Felix Huisinga - 2025-01-28T09:07:28+0000 Agreed, this is a `camel-http-starter` feature. I adjusted the assigned component.', 'Claus Ibsen - 2025-01-28T09:43:45+0000 You are welcome to work on this and send a PR if you have time', 'Felix Huisinga - 2025-01-28T10:09:27+0000 I will try to work on it and send a proposal']"
21666,Task,Marco Carletti,Claus Ibsen,4.10.0,4.10.0,2025-01-28T08:25:28+0000,1738052728,2025-01-28T12:58:07+0000,2025-01-28T12:58:07+0000,"[INFO] — failsafe:3.5.2:integration-test (integration-test) @ camel-test-infra-cli —
[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider
[INFO]
[INFO] -------------------------------------------------------
[INFO]  T E S T S
[INFO] -------------------------------------------------------
[INFO] Running org.apache.camel.test.infra.cli.it.CliConfigITCase
[INFO] o.testcontainers.images.PullPolicy.defaultPolicy - Image pull policy will be performed by: DefaultPullPolicy()
[INFO] o.t.utility.ImageNameSubstitutor.instance - Image name substitution will be performed by: DefaultImageNameSubstitutor (composite of 'ConfigurationFileImageNameSubstitutor' and 'PrefixingImageNameSubstitutor')
[INFO] o.a.c.t.i.c.s.CliLocalContainerService.initialize - Trying to start the camel-cli container
[INFO] o.testcontainers.DockerClientFactory.getOrInitializeStrategy - Testcontainers version: 1.20.4
[INFO] o.t.d.DockerClientProviderStrategy.lambda$loadConfiguredStrategy$9 - Loaded org.testcontainers.dockerclient.UnixSocketClientProviderStrategy from ~/.testcontainers.properties, will try it first
[INFO] o.t.d.DockerClientProviderStrategy.tryOutStrategy - Found Docker environment with local Unix socket (unix:///var/run/docker.sock)
[INFO] o.testcontainers.DockerClientFactory.client - Docker host IP address is localhost
[INFO] o.testcontainers.DockerClientFactory.client - Connected to docker:
  Server Version: 27.4.0
  API Version: 1.47
  Operating System: Docker Desktop
  Total Memory: 7937 MB
  Labels:","['Claus Ibsen - 2025-01-28T08:26:05+0000 This new module needs to support the -Pfastinstall or -Dquickly to build the code quickly, like all the other stuff does', 'Claus Ibsen - 2025-01-28T08:26:21+0000 mcarlett maybe you can take a look at this, thanks', 'Claus Ibsen - 2025-01-28T08:26:42+0000 mvn clean install -Pfastinstall', 'Marco Carletti - 2025-01-28T10:16:37+0000 sorry davsclaus I missed the profile https://github.com/apache/camel/pull/16946']"
21665,Bug,Christoph Deppisch,Bruno Meseguer,4.9.0,4.10.0,2025-01-27T19:25:25+0000,1738005925,2025-01-28T08:44:15+0000,2025-01-28T08:44:15+0000,"Deploying an integration with version 4.9.0 in an OpenShift environment works.(Tested in the Developer Sandbox)However, when running the `delete` command, it seems to fail, as per the following logs:The openshift.yml does exist","['Thomas Diesler - 2025-01-28T08:37:25+0000 This looks like CAMEL-21625', 'Christoph Deppisch - 2025-01-28T08:44:15+0000 Should be fixed with #CAMEL-21625']"
21664,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.8.3,4.9.0","4.8.4,4.10.0",2025-01-27T13:54:23+0000,1737986063,2025-01-28T12:53:52+0000,2025-01-28T12:53:52+0000,"When recording the metadata, the body will be either an Exchange or a Message, but not both. Therefore, trying to match both may incur in a JVM's secondary super's cache miss, potentially affecting performance.",['Otavio Rodolfo Piske - 2025-01-28T12:53:52+0000 The fix was merged.']
21663,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.8.3,4.9.0","4.8.4,4.10.0",2025-01-27T13:28:07+0000,1737984487,2025-01-28T12:53:56+0000,2025-01-28T12:53:56+0000,"Lack of a null check here, makes the rather inexpressive ""getJMSCorrelationID"" quite slow as the JMS client can return null, causing the string initialization to throw an NPE.","['Otavio Rodolfo Piske - 2025-01-27T14:47:08+0000 Same thing with getJMSRedelivered.', 'Otavio Rodolfo Piske - 2025-01-28T12:53:56+0000 The fix was merged.']"
21662,Bug,Grzegorz Grzybek,Mikael Koskinen,"4.9.0,4.10.0","4.8.4,4.10.1,4.11.0",2025-01-27T12:03:18+0000,1737979398,2025-02-19T10:25:27+0000,2025-02-19T10:25:27+0000,"I'm trying to run a simple Camel integration using Camel JBang ""run"" command with ""runtime"" -option set to either springboot or to quarkus. It fails with a error that make it sound like that maybe it is a Windows specific problem?Camel Main runtime works:","['Mikael Koskinen - 2025-01-27T12:07:23+0000 The export command seems to work, it is just the run which is giving the error.', 'Claus Ibsen - 2025-01-27T13:40:19+0000 its some maven wrapper download problem you have or some sort. Try to invetigate some more on your system', 'Claus Ibsen - 2025-01-28T06:57:46+0000 And when you export to quarkus or spring-boot, can you then run via\n  mvnd.cmd spring-boot:run', 'Claus Ibsen - 2025-02-02T08:11:28+0000 Did you get time to look more into this ?', 'Claus Ibsen - 2025-02-18T08:20:38+0000 ggrzybek maybe you can try this with Camel JBang 4.10.0 on your windows box to see if you have any error there.', ""Grzegorz Grzybek - 2025-02-18T08:25:51+0000 I'll check. GIve me a moment."", 'Grzegorz Grzybek - 2025-02-18T08:49:44+0000 Got it - Windows Server 2019:\nc:\\Dev\\cjb-1>camel run x1.xml --runtime=quarkus --quarkus-version=3.15.2\nRunning using Quarkus v3.15.2 (preparing and downloading files)\nThe system cannot find the file c:\\Dev\\cjb-1\\.mvn\\wrapper\\maven-wrapper.properties.\nException calling ""DownloadFile"" with ""2"" argument(s): ""An exception occurred during a WebClient request.""\nAt line:1 char:282\n+ ... pe]::Tls12; $webclient.DownloadFile(\'https://repo.maven.apache.org/ma ...\n+                 ~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n    + CategoryInfo          : NotSpecified: (:) [], MethodInvocationException\n    + FullyQualifiedErrorId : WebException\n\nThe system cannot find the file c:\\Dev\\cjb-1\\.mvn\\wrapper\\maven-wrapper.properties.\nThis missing file is actually available at:\nc:\\Dev\\cjb-1\\.camel-jbang-run\\1739868513046\\.mvn\\wrapper\\maven-wrapper.properties', 'Claus Ibsen - 2025-02-18T08:58:10+0000 Ah yeah a temp folder is created to avoid clashing if you run a 2nd camel from the same folder at the same time.\nSo its maybe windows mvnw.cmd that cannot handle to run from sub folder.\nLook at Run.java in camel-jbang line 981.', 'Mikael Koskinen - 2025-02-18T09:58:12+0000 Sorry for the delay getting back to this. I tested with another Windows PC and got the same result but in the meantime it seems ggrzybek was able to reproduce this', 'Claus Ibsen - 2025-02-18T12:40:37+0000 Okay so if there is a bug/issue with mvnd to run in sub folder, then we could make window not create that unique sub folder and run directly - then it may work', 'Claus Ibsen - 2025-02-19T08:01:31+0000 ggrzybek I pushed a potential fix in the mvnd.cmd file for windows. Can you try again with latest code from main branch (you need to use 4.11.0-SNAPSHOT) as camel-jbang version for the CLI', 'Grzegorz Grzybek - 2025-02-19T10:19:17+0000 Fixed here.']"
21661,Improvement,Claus Ibsen,Jonas Nilsson,4.8.3,"4.8.4,4.10.0",2025-01-27T09:51:48+0000,1737971508,2025-02-01T10:21:57+0000,2025-02-01T10:21:57+0000,"Details in Zulip: https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/WARN.20log.20in.20camel-micrometer.204.2E8.2E3.3FSimple test route:Logging from first file (one WARN then DEBUG)Second file and beyond:I suspect this is not due to a change in camel-micrometer, or rather, that this ""bug"" has been there all the time.
But that Micrometer started to log this warning in the latest version, introduced in this commit: https://github.com/micrometer-metrics/micrometer/commit/12d30723e6baff46a97b1b364e3085adbed543eeI see that Camel 4.4.4 is using 1.12.10 of io.micrometer packages, and Camel 4.8.3 is using 1.13.9 where this new warning was added.I'm not super knowledgeable about Camel source code and how everything works behind the scenes, but I suspect it could be this ExchangeEvent handler that are trying to register the gauage over and over again? (and that this should only be done once, and then the value should be updated instead?): https://github.com/apache/camel/blob/main/components/camel-micrometer/src/main/java/org/apache/camel/component/micrometer/eventnotifier/MicrometerExchangeEventNotifier.java#L143","['Claus Ibsen - 2025-01-29T14:30:18+0000 Yeah that inflight gauge is wrong, its a metric that may not make sense.']"
21660,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-27T08:34:34+0000,1737966874,2025-01-27T13:39:03+0000,2025-01-27T13:39:03+0000,So you can use kamelet sources and turn on bridgeErrorHandler=true just as you can from regular components.,No comments found
21659,Improvement,Simon Rasmussen,Simon Rasmussen,4.8.3,"4.8.4,4.10.0",2025-01-27T08:00:38+0000,1737964838,2025-01-28T13:39:12+0000,2025-01-28T13:39:12+0000,"After upgrading to 4.8.3, we started seeing the following warnings in our logs, quite often:The error occurs when an attempt to extend message visibility for a message that has already been deleted in SQS.In CAMEL-19656, the implementation was switched to using the batched call, but failed to implement the proper ignore in case of above error – as the old implementation had.I also noticed that the current implementation extends ALL messages in the queue of non-processed – not just those that are about to expire. This happens because the TimeoutExtender, currently will make a copy of all the values in the Map, and extend them, in batches.In case of 100 messages, this will require 10 requests, even though the last messages in the queue might not need to be extended yet.If the route is used together with the threads EIP, then the default queue size is 1000, which makes above algorithm really inefficient.I suggest introducing a concept of a deadline to each entry in the TimeoutExtender. The deadline is set to now() plus 80% of the visibilityTimeout. When sending requests, only messages that will expire before the next execution of the TimeoutExtender will be extended. The TimeoutExtender task itself should run more frequently, but will pick up less messages each time. I suggest it running every visibilityTimeout/2. In a typical configuration, this would result in executing TimeoutExtender every 10 seconds.","['Simon Rasmussen - 2025-01-27T08:03:05+0000 I have my suggested changes ready and will raise PR soon. I will also let my solution run in an environment where I can confirm how this change behaves when under load.', 'Claus Ibsen - 2025-01-27T08:35:05+0000 Thanks for reporting and working on a fix', 'Claus Ibsen - 2025-01-28T13:39:12+0000 Thanks']"
21658,New Feature,Unassigned,Claus Ibsen,None,4.x,2025-01-25T13:45:57+0000,1737812757,2025-01-25T13:45:57+0000,,"Pre build a fat-jar with all dependencies included and easy to run via java -jar / jbang or launch scripts / or similar to spring boot packaging executable=true.camel-jbang uses its own dynamic dependency resolver (also maven) - this would be better / easier / quicker than today with first jbang running parsing the .java file and seeing the // DEPS etc and doing its ""work"" and then calling camel-jbang main class for the CLI that then does its own thing aftetwards.The fat-jar can still be launched from jbang. Also each fat-jar is its own release so there is no complexity of mixed versions of Camel.",No comments found
21657,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-25T13:04:54+0000,1737810294,2025-01-27T17:22:40+0000,2025-01-27T17:22:40+0000,"In a newer release of jsch then they offer an API to get the config which we can use to dump to a dev console, so it can be used for troubleshooting.jsch has a lot of security config that can be tricky to set what are in use or not.",['Claus Ibsen - 2025-01-25T13:52:42+0000 jsch release newer than 0.2.22 should have this new API']
21656,Bug,Claus Ibsen,Raymond,4.9.0,"4.8.4,4.10.0",2025-01-24T19:53:38+0000,1737748418,2025-02-17T16:46:58+0000,2025-02-02T11:50:12+0000,"I have a customer that upgraded from an old Camel version (2.23) to 4.9.0 where the Camel 4 route returned an unexpected result. It's a bit of an edge/curious case.It was part of a bigger route, but I tried to create a minimal example to reproduce the issue.The following routes:returns the result: a
expected result: bThe expected result can be shown by changing small things in the route. For example:1. Change the endpoint ""activemq:2"" to ""direct:2""
2. Remove this line from route 2:<to uri=""activemq:log?exchangePattern=InOnly&timeToLive=86400000""/>3. Remove one of the parameters in route 4a of this line:<to uri=""activemq:log?exchangePattern=InOnly&timeToLive=86400000""/>For example, just by removing the timeToLive option returns the expected result.----------------------------With all of these small changes, the expected result 'b' returns. Can you check why this particular combination produces the unexpected result?Note: I used ActiveMQ 6.1.5 for testing.","['Claus Ibsen - 2025-01-30T20:03:57+0000 Can you put this into a ready to run sample project so its easier to get started investigating.', 'Raymond - 2025-01-31T11:01:54+0000 I attached ""main-xml2.zip"" as attachment. This contains a reproducer based on the main-xml example. In the file ""my-route.xml"" I put a short explanation on how I changed main-xml example and how to run the various examples.\nIt\'s easily to workaround the issue, but as it was something unexpected, I thought it\'s good to report it anyway.', 'Claus Ibsen - 2025-02-02T08:24:20+0000 I have b returned on the zip without any changes (example 1) running Artemis as local broker\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test\nb%\n~/workspace ❯ curl http://localhost:9000/test', 'Claus Ibsen - 2025-02-02T08:26:51+0000 ActiveMQ 6.1.5 returns a\n~/workspace ❯ curl http://localhost:9000/test\na%                                                                                                                                                                                                             ~/workspace ❯ curl http://localhost:9000/test\na%                                                                                                                                                                                                             ~/workspace ❯ curl http://localhost:9000/test\na%\n~/workspace ❯ curl http://localhost:9000/test\na%                                                                                                                                                                                                             ~/workspace ❯ curl http://localhost:9000/test\na%', 'Claus Ibsen - 2025-02-02T09:38:18+0000 Okay for the log you need to disable replyTo as well because you are routing an existing JMS message that influences \n<to uri=""activemq6:log?exchangePattern=InOnly&amp;disableReplyTo=true&amp;timeToLive=86400000""/>', 'Claus Ibsen - 2025-02-02T09:40:32+0000 And there is a little bug in camel-jms that does not clear the JMSReplyTo when disableReplyTo=true, so that will be fixed', ""Raymond - 2025-02-02T17:27:31+0000 That's great news, I knew there was something a bit off. Good to see the Artemis vs. Activemq6 comparison, that showed the difference. I will update to 4.10.0 when it comes out, for now will use some of the available workarounds."", 'Raymond - 2025-02-17T16:46:58+0000 I upgraded to Camel 4.10.0 and ran the example again. Here are my findings that may be interesting:\n1. disableReplyTo\nWhen adding explicitly the disableReplyTo as mentioned:\n<to uri=""activemq6:log?exchangePattern=InOnly&disableReplyTo=true&timeToLive=86400000""/>\nThe route returns the expected response ""b"". Without modification it still returns ""a"".\nI still find this a bit odd as this apparently wasn\'t the old behavior and when the exchangePattern is already set before to ""InOnly"" I wouldn\'t expect data after setting that pattern.\n2. Different results on the second call\nI have a similar case with three CamelContext files from a customer (originally created for Camel 2.23.x) and then update and run these with 4.10.0 then the result is ""Recipient 2.2"" on the first call (which is the expected result), but the subsequent calls return ""Recipient 1.1"".']"
21655,Dependency upgrade,Unassigned,Dave Riseley,4.9.0,4.10.0,2025-01-24T18:18:27+0000,1737742707,2025-01-28T07:00:54+0000,2025-01-28T07:00:54+0000,CXF 4.1.0 has been released with Jakarta EE 10 support:  https://cxf.apache.org/cxf-410-release-notes.htmlPlease could camel-cxf be upgraded to this version before the next LTS release.  In particular the Jetty 12 support is required for to use the cxf jetty transport with Spring Boot 3.2.x or later,"['Dave Riseley - 2025-01-24T18:19:49+0000 We have overridden the dependency locally for our project and all seems to work ok, so hopefully this upgrade would be a small piece of work', 'Claus Ibsen - 2025-01-24T19:50:17+0000 Spring Boot and Quarkus need to support that version of CXF as well before any upgrade', ""Dave Riseley - 2025-01-27T14:24:53+0000 The migration guide: https://cxf.apache.org/docs/41-migration-guide.html shows CXF 4.1.0 as compatible with Spring Boot 3.4 (I am not aware of spring boot including CXF in it's dependency management).  I'm not sure about Quarkus"", 'Claus Ibsen - 2025-01-27T14:53:42+0000 ppalaga is quarkus-cxf being upgraded to CXF 4.1.x', 'Claus Ibsen - 2025-01-28T06:47:17+0000 Okay so it looks like Q 3.18 is CXF 4.1.0\nhttps://github.com/quarkiverse/quarkus-cxf/blob/3.18.0/pom.xml#L46']"
21654,Improvement,Pasquale Congiusti,Claus Ibsen,None,4.10.0,2025-01-24T17:43:22+0000,1737740602,2025-01-31T08:33:52+0000,2025-01-31T08:33:48+0000,For endpoint events then the tag for the uri.The endpointName uses the toString of the endpoint which can have too many combinations with dynamic uris and dynamic query parameters.This will however lead to different endpoints being grouped together but based on the base path.We can maybe add an option to control this as a boolean option that can be turned on | off.See alsohttps://camel.zulipchat.com/#narrow/channel/257302-camel-quarkus/topic/Stopping.20exchange.20metric.20collection,"[""Pasquale Congiusti - 2025-01-29T09:21:44+0000 I can have a look at this one. However, I try to complete in time for 4.10.0 release. I'll warn if not.""]"
21653,Bug,Federico Mariani,Salvatore Mongiardo,4.8.3,"4.8.4,4.10.0",2025-01-24T15:15:52+0000,1737731752,2025-01-27T13:59:21+0000,2025-01-27T13:59:21+0000,Given a generic camel route (camel-1.yaml) asEvery attempt to pass a custom remote maven repository fails because it's completely ignored by CamelJBang runner:i.e.:Affected version of jbang is 4.8.3,No comments found
21652,Improvement,Unassigned,Bruno Meseguer,None,None,2025-01-24T12:53:54+0000,1737723234,2025-01-27T08:57:52+0000,,"For certain data manipulations, we need to set the type of the Variable to a particular class.That step forces the user to add extra actions.For XML transformations for instance, the process needs to work with `Document` when applying XLSTs.In the old days, to get it right we needed 4 steps:Then Variables were added to Camel Core and now we can save 1 step:The request is to enhance the ""Receive Variable"" feature to also define the Type of the variable, to save an extra step, so the user just needs:","['Claus Ibsen - 2025-01-25T07:27:50+0000 Using type converter is not an ideal way for data transformation - its just happen that XML has that Document type from the JDK. But most others would need transformation via data formats such as jackson and the many data formats Camel have. \nWe have to be careful to not make the DSL more complex with more options', 'Bruno Meseguer - 2025-01-27T08:57:52+0000 I understand, yes, it makes sense.']"
21651,Dependency upgrade,Grzegorz Grzybek,Grzegorz Grzybek,None,4.10.0,2025-01-24T11:37:01+0000,1737718621,2025-01-25T07:28:11+0000,2025-01-25T07:28:11+0000,Jolokia 2.2.x changes the way properties are resolved and there's no need now to perform extra placeholder resolution.,['Grzegorz Grzybek - 2025-01-24T12:00:14+0000 PR for Camel: https://github.com/apache/camel/pull/16920\nPR for Camel Spring Boot: https://github.com/apache/camel-spring-boot/pull/1352']
21650,New Feature,Federico Mariani,Federico Mariani,None,4.10.0,2025-01-24T10:45:08+0000,1737715508,2025-02-03T13:37:25+0000,2025-02-03T13:37:25+0000,"Add a new command to Camel JBang (update) that can be used to update Camel, Camel Spring Boot and Camel Quarkus applications.
The update command has two sub-commands:","['Federico Mariani - 2025-01-24T10:48:06+0000 is upgrade instead of update more appropriate?\ndavsclaus jondruse', 'Jiri Ondrusek - 2025-01-24T11:46:05+0000 I followed the terminology introduced by Quarkus - https://github.com/quarkusio/quarkus-updates']"
21649,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-24T07:39:54+0000,1737704394,2025-01-24T08:42:02+0000,2025-01-24T08:42:02+0000,We have this in CEQ but not in general camel / CSBInstrumentedThreadPoolFactory,No comments found
21648,Improvement,James Netherton,James Netherton,None,4.10.0,2025-01-23T14:09:43+0000,1737641383,2025-01-23T15:28:30+0000,2025-01-23T15:28:30+0000,"Sometimes folks have specific tracing requirements that are not easy to fulfil out of the box with the OpenTelemetry component.So, it would be good to have a way to hook into the span creation process and have finer control over it. E.g via some kind of 'customizer' that provides access to the SpanBuilder, so that customizations could be applied.",No comments found
21647,Task,Andrea Cosentino,Federico Mariani,None,4.10.0,2025-01-23T10:59:56+0000,1737629996,2025-02-04T10:08:15+0000,2025-02-04T10:08:15+0000,"The Camel JBang IT test suite is slow to execute, therefore, by default the test execution is disabled. Having a daily Jenkins job for the supported branches that execute only this test suite would be nice.The idea is the following:","['Marco Carletti - 2025-01-31T13:40:21+0000 with the following pull requests, we can now use the current snapshot (at least the latest snapshots on the repositories) and set the versions of both Camel JBang and Camel separately\nPull #16968\nPull #16936\nPull #17009\nThe cli.jbang.version property will set the value of the Camel JBang version and the cli.service.execute.version will set the value of the Camel version to execute.\nBy default the cli.jbang.version uses the version of the maven project, so in the main branch it is the current snapshot, and the cli.service.execute.version is the default one in that Camel JBang version (eg currently both are 4.10.0-SNAPSHOT in the main branch)']"
21646,Improvement,Unassigned,Pasquale Congiusti,4.x,None,2025-01-23T08:39:00+0000,1737621540,2025-01-23T08:39:00+0000,,"This is a minor problem I faced during the development. There is a workaround, so, no urgency to develop. If you're using a LogListener in your unit test, for example:The expected `onLog()` event is not triggered if the unit test is missing a log4j2.properties configuration. The immediate workaround is to add such a configuration file.Ideally, we should have it working even without the presence of that configuration, or, at least, have some documentation to state how this is working.",No comments found
21645,Improvement,Pasquale Congiusti,Pasquale Congiusti,None,4.10.0,2025-01-23T08:33:40+0000,1737621220,2025-01-23T16:05:28+0000,2025-01-23T16:05:22+0000,"We already have the `camel run --property` configuration, but we miss it in the export. We can implement it to enhance user experience.",No comments found
21644,New Feature,Tomohisa Igarashi,Claus Ibsen,None,4.x,2025-01-22T14:43:10+0000,1737556990,2025-01-22T16:14:21+0000,,Look at Apache Daffodil and see if it makes sense to have some kind of camel component for this.,No comments found
21643,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-22T10:10:09+0000,1737540609,2025-01-22T10:19:27+0000,2025-01-22T10:19:27+0000,We should have a log4j-main.properties that just log to console so when you export you have a logger that does not log to ~/.camel that jbang does when you use camel runFor exporting to CSB or CEQ then we use their default logging settings.,No comments found
21642,Task,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-22T10:04:48+0000,1737540288,2025-01-22T17:00:53+0000,2025-01-22T17:00:53+0000,No description available,No comments found
21641,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-22T09:25:12+0000,1737537912,2025-01-23T08:54:21+0000,2025-01-23T08:54:21+0000,"You should not have component configuration code in the configure() method as this is for the DSL only.We should have a practice where to put such code, also for users that want to cramp all together in a single file for fun and demo purposes.So we may have a optional method on RouteBuilder for this purpose. That is triggered by camel-core and is only intended for configuration of components and others that you may otherwise do in application.properties","['Tadayoshi Sato - 2025-01-22T09:56:04+0000 Just a background. When I tried to use this code with camel export it failed. I learned that we should not use the coding configuration for components used in a Java route. There should be some documentation that tells the limitation and best practices.\npublic class camel_kserve extends RouteBuilder {\n    static final String TARGET = ""localhost:8001"";\n    static final String MODEL_NAME = ""simple"";\n\n    @Override\n    public void configure() throws Exception {\n        var kserve = getCamelContext().getComponent(""kserve"", KServeComponent.class);\n        kserve.getConfiguration().setTarget(TARGET);\n\n        from(""timer:kserve?repeatCount=1"")\n            .toF(""kserve:model/metadata?modelName=%s"", MODEL_NAME)\n            .log(""${body}"");\n    }\n}', 'Claus Ibsen - 2025-01-22T13:19:14+0000 Here is a suggested how this can be done from within the RouteBuilder class inside the configure method with a new lambda style\n  import org.apache.camel.component.kserve.KServeComponent;\n\npublic class camel_kserve extends org.apache.camel.builder.RouteBuilder {\n\n    static final String TARGET = ""localhost:8001"";\n    static final String MODEL_NAME = ""simple"";\n\n    @Override\n    public void configure() throws Exception {\n        customize(KServeComponent.class, k -> {\n            k.getConfiguration().setTarget(TARGET);\n        });\n\n        from(""timer:kserve?repeatCount=1"")\n            .toF(""kserve:model/metadata?modelName=%s"", MODEL_NAME)\n            .log(""${body}"");\n    }\n}']"
21640,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-21T11:54:17+0000,1737460457,2025-01-21T13:43:30+0000,2025-01-21T13:43:30+0000,No description available,No comments found
21639,Task,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-21T11:28:49+0000,1737458929,2025-01-21T15:38:17+0000,2025-01-21T15:38:17+0000,No description available,No comments found
21638,Task,Unassigned,Anushka Juli,None,4.10.0,2025-01-21T08:07:02+0000,1737446822,2025-01-22T14:18:45+0000,2025-01-22T14:18:45+0000,To provide ppc64le architecture support to camel-elasticsearch in the camel-component.Updated the ElasticsearchComponent configuration to dynamically set enableSSL property based on the presence of an SSL context.,No comments found
21637,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-21T07:07:52+0000,1737443272,2025-01-21T11:03:41+0000,2025-01-21T11:03:41+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/.5Bcamel-jbang.5D.20impossible.20to.20stop.20top.20--watch.20in.20camel.20shell,['Claus Ibsen - 2025-01-21T07:08:15+0000 Also if possible lets do this for log/trace commands']
21636,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.x,2025-01-20T09:22:19+0000,1737364939,2025-02-06T10:51:33+0000,,Cover migrations described by migration guide,No comments found
21635,Dependency upgrade,Unassigned,Claus Ibsen,None,4.10.0,2025-01-20T09:11:27+0000,1737364287,2025-01-23T14:38:30+0000,2025-01-23T14:38:30+0000,To be released next week,No comments found
21634,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.4,4.10.0",2025-01-20T06:15:33+0000,1737353733,2025-01-20T09:09:13+0000,2025-01-20T09:09:13+0000,https://github.com/apache/camel-karavan/issues/1477,"['Claus Ibsen - 2025-01-20T06:24:50+0000 The export does not include camel-quartz, but camel run does']"
21633,Task,Otavio Rodolfo Piske,Anushka Juli,None,4.10.0,2025-01-20T05:07:04+0000,1737349624,2025-01-27T18:13:12+0000,2025-01-27T18:13:12+0000,To provide ppc64le architecture support to camel-elasticesearch-rest-client in the camel-component,['Otavio Rodolfo Piske - 2025-01-27T18:13:12+0000 Resolved by the reporter with the linked PR.']
21632,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-18T09:08:08+0000,1737191288,2025-01-20T15:52:04+0000,2025-01-20T15:52:04+0000,"The XSD has duplicate of<xs:any maxOccurs=""unbounded"" minOccurs=""0"" namespace=""##other"" processContents=""skip""/>
<xs:any maxOccurs=""unbounded"" minOccurs=""0"" namespace=""##other"" processContents=""skip""/>
 
This is due to spring/blueprint parsing support for migration tools. We should see if we can avoid this or do fix the duplicate manually as part of a pre processing.",['Claus Ibsen - 2025-01-20T12:53:44+0000 I have a potential improvement in the works']
21631,Task,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2025-01-17T09:58:55+0000,1737107935,2025-01-17T10:53:20+0000,2025-01-17T10:53:20+0000,https://github.com/aws/aws-sdk-java-v2/blob/master/CHANGELOG.md#features-8and tests are failing https://github.com/apache/camel/actions/runs/12824983217,No comments found
21630,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-17T07:01:32+0000,1737097292,2025-03-05T16:25:24+0000,2025-01-20T08:46:58+0000,"We can remove the option 
inheritErrorHandler which is only used in a rare situation with the failover load balancer. Then we can keep the option specially there (and maybe consider a better name).","['Claus Ibsen - 2025-01-18T09:33:39+0000 Also circuit breaker can use this option, so we should add it specially there', 'Claus Ibsen - 2025-01-19T09:42:56+0000 TODO: We can potentially remove it completely - it was only exposed for LB and not CB.']"
21629,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.10.0,2025-01-16T15:42:31+0000,1737042151,2025-01-20T08:47:20+0000,2025-01-20T08:47:20+0000,Test classes (and their method `defaults()`) have to be declared as public because Quarkus's migration project extends them.,No comments found
21628,Improvement,James Netherton,James Netherton,None,4.10.0,2025-01-16T11:17:24+0000,1737026244,2025-01-16T18:10:50+0000,2025-01-16T18:10:50+0000,"Minor thing I stumbled across while working on something in the Infinispan component.There's some code where the CamelContext is supposed to be propagated from InfinispanRemoteAggregationRepository to InfinispanRemoteManager:https://github.com/apache/camel/blob/401a6367aec8c311c170d127e75ec5f07f1a9de0/components/camel-infinispan/camel-infinispan/src/main/java/org/apache/camel/component/infinispan/remote/InfinispanRemoteAggregationRepository.java#L94getCamelContext() actually returns null because it's never been set. By chance, there's no code (yet) within InfinispanRemoteManager that actually refers to the context. But we should avoid passing in a null value.",No comments found
21627,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-16T08:13:02+0000,1737015182,2025-01-18T08:25:48+0000,2025-01-18T08:25:47+0000,https://blog.marcnuri.com/eclipse-jkube-1-18,No comments found
21626,New Feature,Andrea Cosentino,Claus Ibsen,None,4.10.0,2025-01-15T19:44:19+0000,1736970259,2025-01-21T11:53:41+0000,2025-01-21T11:53:41+0000,Our current component is for on-prem hashicorp. If you use their cloud solution then you cannot use what we have today in Camel.I dont know if the cloud can use the java library or something else may be needed.But it would be good to have a security vault integration with this so you can useplaceholders in Camel routes.,"[""Andrea Cosentino - 2025-01-21T09:25:36+0000 This could be done directly in the same function. The only difference is the presence of a namespace in the path. I'm working on it.""]"
21625,Bug,Thomas Diesler,Thomas Diesler,None,4.10.0,2025-01-15T15:12:49+0000,1736953969,2025-02-03T15:19:57+0000,2025-01-16T18:11:00+0000,,No comments found
21624,Improvement,Unassigned,Nadina Florea,4.9.0,None,2025-01-15T13:09:51+0000,1736946591,2025-02-24T15:47:41+0000,2025-02-24T15:47:41+0000,"Hello,I recently encountered an issue in my application that uses Apache Camel 4.9.0 along with the Kafka component (camel-kafka) for message processing. The issue arises due to the interaction between Camel’s Kafka configuration and Kafka Appender when bootstrap.servers is defined using a multiline syntax in a YAML configuration file.Environment:
• Apache Camel Version: 4.9.0
• Spring Boot Version: 3.4.1
• Kafka Clients Version: 3.8.1
• Java Version: 17Steps to Reproduce:
1. Define bootstrap.servers in application.yaml using multiline syntax:2. Use the following setup in logback-spring.xml to configure Kafka Appender:3. Run the application.Observed Behavior:The application fails to start with the following error:org.apache.camel.RuntimeCamelException: org.apache.kafka.common.config.ConfigException: Invalid url in bootstrap.servers:  broker2:9092Expected Behavior:The bootstrap.servers property should be processed correctly, even if defined in a multiline YAML syntax, as it worked with older Kafka Clients versions (e.g., 3.7.x).After investigating, I suspect the following change in Kafka Clients 3.8.x:
• Starting with Kafka Clients 3.8.x, stricter validation for bootstrap.servers was introduced via KAFKA-17584. This validation now rejects newline characters or other formatting inconsistencies.
• While this is expected behavior, the way Camel propagates the camel.component.kafka.brokers property to Kafka Appender through logback-spring.xml seems to preserve newline characters, which results in invalid configuration values.Additional Notes:
• When I updated my YAML configuration to write bootstrap.servers on a single line (e.g., broker1:9092,broker2:9092), the issue was resolved.
• Applications that use Spring Kafka directly without Camel are not affected by this issue.When configuring numerous brokers in the bootstrap.servers property, it is difficult to read and manage when placed on a single line.Is this behavior intentional or should Camel consider providing a more flexible way to handle multiline configs in the future?Thank you!","['Claus Ibsen - 2025-01-15T13:16:00+0000 You should ask the Apache Kafka project as they changed their behaviour. Camel Spring Boot just configures the values using standard Spring Boot auto-configuration. So change your configuration to be a single line to make it work.\n  The camel-kafka component can be improved to try to remove new-line in this option, you are welcome to attempt to do that and send a PR.', ""Nadina Florea - 2025-01-15T14:46:21+0000 Thank you for your quick response, davsclaus! I agree that this should ideally be fixed at the Kafka level.\nTo address this, I've created KAFKA-18543. There are also similar issues, such as: KAFKA-18171\nI hope this will be analyzed soon at the Kafka level.""]"
21623,New Feature,Federico Mariani,Federico Mariani,None,4.10.0,2025-01-14T15:16:08+0000,1736867768,2025-02-03T09:35:17+0000,2025-02-03T09:35:17+0000,"Create a new Camel JBang command that exposes test-infra Services.
The command are the following",No comments found
21622,Improvement,Marco Carletti,Marco Carletti,4.9.0,"4.8.5,4.10.0",2025-01-14T13:30:11+0000,1736861411,2025-03-06T06:34:15+0000,2025-03-06T06:34:15+0000,it would be nice to have the route id in the trace span to easily associate the span with the route implementation,No comments found
21621,Bug,Thomas Diesler,Thomas Diesler,None,4.10.0,2025-01-14T12:53:27+0000,1736859207,2025-01-15T15:36:44+0000,2025-01-15T09:19:29+0000,,"['Thomas Diesler - 2025-01-14T14:05:13+0000 Recreating the k8s client in the k8s-run shutdown hook does not work either \nException in thread ""Camel Thread #7 - CamelShutdownInterceptor"" java.util.ServiceConfigurationError: io.fabric8.kubernetes.client.http.HttpClient$Factory: Provider io.fabric8.kubernetes.client.vertx.VertxHttpClientFactory could not be instantiated\n at java.base/java.util.ServiceLoader.fail(ServiceLoader.java:586)\n at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:813)\n at java.base/java.util.ServiceLoader$ProviderImpl.get(ServiceLoader.java:729)\n at java.base/java.util.ServiceLoader$3.next(ServiceLoader.java:1403)\n at java.base/java.lang.Iterable.forEach(Iterable.java:74)\n at io.fabric8.kubernetes.client.utils.HttpClientUtils.getFactory(HttpClientUtils.java:179)\n at io.fabric8.kubernetes.client.utils.HttpClientUtils.getHttpClientFactory(HttpClientUtils.java:167)\n at io.fabric8.kubernetes.client.KubernetesClientBuilder.build(KubernetesClientBuilder.java:76)\n at org.apache.camel.dsl.jbang.core.commands.kubernetes.KubernetesHelper.getKubernetesClient(KubernetesHelper.java:78)\n at org.apache.camel.dsl.jbang.core.commands.kubernetes.KubernetesBaseCommand.client(KubernetesBaseCommand.java:137)\n at org.apache.camel.dsl.jbang.core.commands.kubernetes.KubernetesDelete.doCall(KubernetesDelete.java:91)\n at org.apache.camel.dsl.jbang.core.commands.kubernetes.KubernetesRun.lambda$installShutdownHook$10(KubernetesRun.java:511)\n at java.base/java.lang.Thread.run(Thread.java:833)\nCaused by: java.lang.IllegalStateException: Shutdown in progress\n at java.base/java.lang.ApplicationShutdownHooks.add(ApplicationShutdownHooks.java:66)\n at java.base/java.lang.Runtime.addShutdownHook(Runtime.java:216)\n at io.fabric8.kubernetes.client.vertx.VertxHttpClientFactory.<init>(VertxHttpClientFactory.java:60)\n at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance0(Native Method)\n at java.base/jdk.internal.reflect.NativeConstructorAccessorImpl.newInstance(NativeConstructorAccessorImpl.java:77)\n at java.base/jdk.internal.reflect.DelegatingConstructorAccessorImpl.newInstance(DelegatingConstructorAccessorImpl.java:45)\n at java.base/java.lang.reflect.Constructor.newInstanceWithCaller(Constructor.java:499)\n at java.base/java.lang.reflect.Constructor.newInstance(Constructor.java:480)\n at java.base/java.util.ServiceLoader$ProviderImpl.newInstance(ServiceLoader.java:789)\n ... 11 more\nThis code effectively prevents the use of k8s in any shutdown hook\n    public VertxHttpClientFactory() {\n        this(VertxHttpClientFactory.VertxHolder.INSTANCE);\n        Runtime.getRuntime().addShutdownHook(new Thread(() -> {\n            if (this.vertx != null) {\n                this.vertx.close();\n            }\n\n        }));\n    }\nIn Java, shutdown hook are executed in a non-deterministic order from separate threads.\nAny idea on how to fix (or work around) this are very welcome', ""Thomas Diesler - 2025-01-14T15:01:20+0000 PR: https://github.com/apache/camel/pull/16806\nThis now constructs a new k8s client with a vertx instance that doesn't have a shutdown hook"", 'Thomas Diesler - 2025-01-15T15:36:44+0000 CrossRef: https://github.com/fabric8io/kubernetes-client/issues/6792']"
21620,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-14T10:21:31+0000,1736850091,2025-01-17T17:50:42+0000,2025-01-17T17:50:42+0000,"Only when in choice should have outputs. The onWhen used in filter, doCatch, intercept, onCompletion should be a predicate only without outputs. However since it reused the when from choice the model has outputs. Its a bit tricky to fix due to the model being old and classic spring xml XSD.","['Claus Ibsen - 2025-01-14T10:54:12+0000 We can also consider making ""when"" with inlined outputs part of choice and then its not listed in general outputs for all the EIPs', 'Claus Ibsen - 2025-01-15T13:43:43+0000 The interceptSendToEndpoint is a bit tricky to refactor to resolve this DONE', 'Claus Ibsen - 2025-01-15T15:31:51+0000 TODO: Make when special for choice only. DONE\nTODO: Avoid onWhen/onFallback generated as processors into the XML XSD DONE', 'Claus Ibsen - 2025-01-16T07:02:55+0000 The choice when/otherwise and doTry / doCatch / doFinally is more complex. So lets get this work merged first.', 'Claus Ibsen - 2025-01-16T11:38:27+0000 TODO: Add disabled option to when/otherwise DONE', 'Claus Ibsen - 2025-01-17T10:30:30+0000 TODO: nested choice end() in Java DSL issue DONE']"
21619,Improvement,Unassigned,Claus Ibsen,None,4.x,2025-01-14T09:40:18+0000,1736847618,2025-01-14T09:40:18+0000,,"When using some kamelets such as database or messaging systems, then the runtime like SB or Q comes with their standard connection pooling. It may be desirable to have a way for a kamelet to adapt and use this from the same kamelet, so we do not have runtime specific kamelets. Also consider camel-main runtime should have a way for connection pooling.This is mostly applicable to only JMS / Artemis / SQL kamelets.",No comments found
21618,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,None,4.10.0,2025-01-14T09:15:41+0000,1736846141,2025-02-06T10:54:44+0000,2025-02-06T10:54:44+0000,Usual ticket for documentation review. Please add any documentation to be reviewed in the comments.,"['Federico Mariani - 2025-01-14T09:21:04+0000 test infra documentation needs to be reviewed after the JUnit decouple, I already updated the latest section https://github.com/apache/camel/blob/44394bee5a08763c63e369ba96dc962d607c2366/docs/user-manual/modules/ROOT/pages/test-infra.adoc but there may be something else to be updated', 'Otavio Rodolfo Piske - 2025-01-14T09:21:32+0000 Likely to have changed docs:\nCamel Jbang\nAI components', 'Claus Ibsen - 2025-01-14T09:42:17+0000 New components since last LTS\nclickup   Preview    4.9  Receives events from ClickUp\nflowable  Preview    4.9  Send and receive messages from the Flowable BPMN and CMMN engines.\nfury    Preview    4.9  Serialize and deserialize messages using Apache Fury\nsmooks  Preview    4.9  Transform and bind XML as well as non-XML data, including EDI, CSV, JSON, and\n                         YAML using Smooks.\nobservability-services  Preview    4.9  Camel Observability Services', 'Otavio Rodolfo Piske - 2025-01-29T07:02:49+0000 Test Infra: first pass done. Probably still need more reviews for accuracy and what not.\n  Now moving to others.', 'Otavio Rodolfo Piske - 2025-01-29T07:31:37+0000 clickup, flowable, fury, smooks and observability-services PR sent: https://github.com/apache/camel/pull/16963', 'Claus Ibsen - 2025-02-06T08:50:27+0000 Otavio we are preparing the code base today to be ready so anything you must hurry', ""Otavio Rodolfo Piske - 2025-02-06T10:54:06+0000 Let's mark this one as complete. I did a brief review of the docs, along with some fixes ... so we should be ready to go."", ""Otavio Rodolfo Piske - 2025-02-06T10:54:44+0000 Some minor fixes were applied to the changed docs. Let's close this one and repeat on the next LTS.""]"
21617,Task,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-13T21:24:31+0000,1736803471,2025-01-14T10:21:38+0000,2025-01-14T07:17:22+0000,The doTry.json does not include doCatch and doFinally in its json metadata file.Lets see if we can add them.,No comments found
21616,Bug,Claus Ibsen,Claus Ibsen,4.9.0,4.10.0,2025-01-13T20:52:13+0000,1736801533,2025-01-13T20:55:30+0000,2025-01-13T20:55:30+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/The.20property.20javaRoutesExcludePattern.20doesn't.20seem.20to.20work,No comments found
21615,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-13T20:35:27+0000,1736800527,2025-01-13T21:13:39+0000,2025-01-13T21:13:39+0000,"Avoid this ugly stacktrace, but just report a nice one line error~/workspace/deleteme/xxy ❯ camel export --dir=code --runtime=camel-main
org.apache.camel.RuntimeCamelException: Failed to resolve project name - please provide --name, --gav or source file
    at org.apache.camel.dsl.jbang.core.commands.Export.getProjectName(Export.java:180)
    at org.apache.camel.dsl.jbang.core.commands.Export.export(Export.java:61)
    at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.doCall(ExportBaseCommand.java:260)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
    at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
    at picocli.CommandLine.access$1500(CommandLine.java:148)
    at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
    at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
    at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
    at picocli.CommandLine.execute(CommandLine.java:2174)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:175)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:62)
    at main.CamelJBang.main(CamelJBang.java:36)",No comments found
21614,Bug,Nicolas Filotto,Jannik Schmeier,4.8.2,"4.8.4,4.10.0",2025-01-13T15:21:02+0000,1736781662,2025-01-22T19:22:31+0000,2025-01-15T09:04:25+0000,"This is a Follow-Up on this issue: CAMEL-21467Unfortunately we are still experiencing the same issue with threads getting stuck in the state RUNNABLE. It seems like the frequency of the issue has greatly decreased though. We have had it twice in about a month.Threaddump:This is basically exactly the second case from my previous issue and seems to occur in this route:Regarding davsclaus's question in the last issue (which apparently I have overseen):The bean referenced via PROPERTY_REQUEST looks something like this:// the implemented interfaceAre the classes of the contained fields (RequestStatus, RequestDataType) also relevant for your question?Regarding clear steps to reproduce, I am unsure whether I can provide. The issue appeared twice in a month within thousands of invocations of the timer route and the constellation causing it is not clear to me.","['Nicolas Filotto - 2025-01-14T08:12:00+0000 Thx for reporting, I have an idea of what could be the root cause. I will propose a fix asap, ideally this week.', 'Nicolas Filotto - 2025-01-15T15:37:25+0000 shmyer I published new snapshots (4.8.4-SNAPSHOT) with the fix into https://repository.apache.org/content/repositories/snapshots, feel free to test them and provide a feedback.', 'Jannik Schmeier - 2025-01-15T15:58:17+0000 Thanks, I will deploy by the end of this week and let you know next week if anything popped up.', 'Jannik Schmeier - 2025-01-22T19:22:31+0000 It has been running fine since Friday, but so has production with 4.8.2. I will have to do long term testing for a couple of weeks.']"
21613,Improvement,Thomas Diesler,Gaelle Fournier,None,4.x,2025-01-13T14:58:35+0000,1736780315,2025-01-23T11:06:43+0000,,"We should be able to configure for which architecture platform(s) we cant to build the container.Currently we build the container image (with docker, JIB or podman) for both linux/amd64 and linux/arm64. That mean we need the user to be able to do multi-platform build.While it is available out of the box for JIB (and maybe podman), for docker it requires some specific tools like Qemu/buildx. We need to allow the user to override the default configuration.","['Gaelle Fournier - 2025-01-14T08:38:15+0000 tdiesler I think it would be better (if it is possible with jkube) to have the default value of platform as the local supported value instead of adm64 + arm64. WDYT ?', 'Thomas Diesler - 2025-01-14T11:29:41+0000 To remind myself ... we default to build strategy Jib and have this in the templates ...\n<!-- Supported only when using the jib build strategy -->\n<createImageOptions>\n    <platform>linux/amd64</platform>\n    <platform>linux/arm64</platform>\n</createImageOptions>\nSee \'jkube.container-image.platforms\' in https://eclipse.dev/jkube/docs/kubernetes-maven-plugin/#build-configuration.\nOur general focus should be on easy entry for Camel to K8s i.e. local k8s first, then your favourite free distro e.g. k3s, then OpenShift. All stuff must work on OpenShift.\nI use DockerDesktop Kubernetes, which allows me to build for both amd64 and arm64. On a remote server, I have not yet seen an arm64 node.\nSo, yes. Defaulting to the local platform should be fine because it is guaranteed to work on ""local k8s"". Building for an alternative platform should be easy too.\nHow would you like to configure that? The container trait perhaps?', 'Gaelle Fournier - 2025-01-14T13:28:06+0000 I saw this jib configuration as well. I am not sure it is only used by jib: when deploying with docker build strategy I had to make my infra multi-platform compatible (in my case using qemu) or else I ended up with this issue https://issues.apache.org/jira/browse/CAMEL-21464.\nMy idea would be: local platform as default, if anyone want to change we can override by a trait or command parameter. This should configuration should multi-valued and any call to it should completly override the default behavior. That mean if the local platform default is amd64 and we configure by trait/command parameter arm64, we should only build for arm64.\nIn CK we used it in the builder trait (https://camel.apache.org/camel-k/2.5.x/traits/builder.html) but since most of the image configuration is done with some parameter --image-xxxx it might be better to use --image-platform', 'Thomas Diesler - 2025-01-15T08:46:35+0000 It should be possible to remove the platform def in pom.xml and instead use `-Djkube.container-image.platforms` It\'d be interesting to know what Jib chooses when no prop is given at all. Generally, I\'d prefer to use JKube config options when available instead of duplicating stuff in ""our"" camel config', ""Thomas Diesler - 2025-01-22T12:46:18+0000 Property -Djkube.container-image.platforms=linux/amd64,linux/arm64 takes no effect. Not in the pom, nor on the cmd line.\nHaving this in the pom works ...\n    <from>eclipse-temurin:17</from>\n    <platforms>\n        <platform>linux/amd64</platform>\n        <platform>linux/arm64</platform>\n    </platforms>\nLikely, that we never built multi-arch images.\nHow about we remove the invalid createImageOptions from the template and otherwise leave it as is for now. On OpenShift we build from source and most target nodes are amd64 anyway. Likely, that we make things worse defaulting to the current platform architecture if that's not the same as the target node's.\nCrossRef: https://github.com/eclipse-jkube/jkube/issues/3642"", 'Gaelle Fournier - 2025-01-22T18:24:49+0000 Strange. I am not sure of the state of multi-platform build in jkube. That was something I requested a while ago: https://github.com/eclipse-jkube/jkube/issues/2098 . It looks like it has been completed since.\nI made some more tests with the docker build and for some reason when the createImageOptions option is present I need qemu installed or else I end up with the original issue https://issues.apache.org/jira/browse/CAMEL-21464.  When I remove the createImageOptions , I can remove Qemu and everything works well. That means it is somewhat used in docker build for some reason.', 'Thomas Diesler - 2025-01-23T09:31:38+0000 When the --image-builder=jib (i.e. the default), we need to have this in the pom ...\n    <platforms>\n        <platform>linux/amd64</platform>\n        <platform>linux/arm64</platform>\n    </platforms>\nany other way (i.e. pom/cli property) to specify archs other than linux/amd64 does not work AFAIK.\nHaving this in the pom ...\n<createImageOptions>\n    <platform>linux/amd64</platform>\n    <platform>linux/arm64</platform>\n</createImageOptions>\npasses these options to the docker deamon and I believe would only have an effect with --image-builder=docker', 'Thomas Diesler - 2025-01-23T09:36:01+0000 Blocked by https://github.com/eclipse-jkube/jkube/issues/3642', 'Gaelle Fournier - 2025-01-23T11:06:43+0000 I see. That check out with what I saw. These configurations are very confusing.']"
21612,Bug,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2025-01-13T13:58:28+0000,1736776708,2025-01-14T08:35:05+0000,2025-01-13T15:01:56+0000,working with 4.8.2no more working with Camel 4.9.0:it is affecting debug functionality in VS Code,"['Aurélien Pupier - 2025-01-13T14:07:03+0000 there was no change n the camel-debug module itself between 4.8.0 and 4.9.0 https://github.com/apache/camel/commits/main/components/camel-debug', 'Claus Ibsen - 2025-01-13T14:32:40+0000 its the local-kamelet-dir option that is buggy', ""Aurélien Pupier - 2025-01-13T14:36:09+0000 effectively without the option it is working with 4.9 too:\njbang '-Dcamel.jbang.version=4.9.0' '-Dorg.apache.camel.debugger.suspend=true' camel@apache/camel run test-with-4_9_0.camel.yaml --dev --logging-level=info '--dep=org.apache.camel:camel-debug'\n2025-01-13 15:35:13.435  INFO 4004631 --- [           main] org.apache.camel.main.MainSupport        : Apache Camel (JBang) 4.9.0 is starting\n2025-01-13 15:35:13.712  INFO 4004631 --- [           main] org.apache.camel.main.MainSupport        : Using Java 21.0.3 with PID 4004631. Started by apupier in /home/apupier/ws/demo/a sub folder\n2025-01-13 15:35:18.722  INFO 4004631 --- [           main] .main.download.MavenDependencyDownloader : Downloading: org.apache.camel:camel-debug:4.9.0 (elapsed: 5s)\n2025-01-13 15:35:21.858  INFO 4004631 --- [           main] .main.download.MavenDependencyDownloader : Resolved: org.apache.camel:camel-debug:4.9.0 (took: 8s136ms)\n2025-01-13 15:35:22.090  INFO 4004631 --- [           main] org.apache.camel.main.ProfileConfigurer  : The application is starting with profile: dev\n2025-01-13 15:35:22.732  INFO 4004631 --- [           main] he.camel.cli.connector.LocalCliConnector : Camel JBang CLI enabled\n2025-01-13 15:35:22.733  INFO 4004631 --- [           main] e.camel.impl.engine.AbstractCamelContext : Detected: camel-debug JAR (Enabling Camel Debugging)\n2025-01-13 15:35:22.739  INFO 4004631 --- [           main] mel.impl.debugger.DefaultBacklogDebugger : Waiting for a debugger to attach\n2025-01-13 15:35:22.930  INFO 4004631 --- [           main] e.camel.impl.engine.AbstractCamelContext : Apache Camel 4.9.0 (test-with-4_9_0) is starting\n2025-01-13 15:35:23.196  INFO 4004631 --- [           main] upport.FileWatcherResourceReloadStrategy : Live route reloading enabled (directory: .)\n2025-01-13 15:35:23.337  INFO 4004631 --- [gerJMXConnector] mpl.debugger.DebuggerJmxConnectorService : Debugger JMXConnector listening at: service:jmx:rmi:///jndi/rmi://localhost:1099/jmxrmi/camel\n2025-01-13 15:35:23.478  INFO 4004631 --- [           main] e.camel.impl.engine.AbstractCamelContext : Routes startup (total:1)\n2025-01-13 15:35:23.479  INFO 4004631 --- [           main] e.camel.impl.engine.AbstractCamelContext :     Started route1 (timer://yaml)\n2025-01-13 15:35:23.481  INFO 4004631 --- [           main] e.camel.impl.engine.AbstractCamelContext : Apache Camel 4.9.0 (test-with-4_9_0) started in 549ms (build:0ms init:0ms start:549ms boot:9s491ms)\n2025-01-13 15:35:23.482  INFO 4004631 --- [           main] mel.impl.debugger.DefaultBacklogDebugger : Enabling Camel debugger"", 'Claus Ibsen - 2025-01-13T15:01:56+0000 okay found the bug and fixed for next release', ""Aurélien Pupier - 2025-01-14T08:18:04+0000 seems link is not created automatically so here is the commit related to the fix: https://github.com/apache/camel/commit/d1536c9a9af93f738de06b55754c6b555121f0d6\nI tested with _jbang '-Dcamel.jbang.version=4.10.0-SNAPSHOT' '-Dorg.apache.camel.debugger.suspend\n=true' camel@apache/camel run test-with-4_10_0.camel.yaml -dev --logging-level=info '-dep=org.apache.camel:camel-debug' --fresh_ and the debugger is started\ndavsclaus Based on the commit, I'm wondering what was broken exactly. Was it that no dependency was added when local kamelet dir was specified?\nWhich features were broken? Any ideas how to provide non-regression tests for them?"", 'Claus Ibsen - 2025-01-14T08:35:05+0000 its something in kamelet-main when using local-kamelet-dir that calls the constructor with wrong order']"
21611,Improvement,Unassigned,Claus Ibsen,None,4.10.0,2025-01-11T13:34:42+0000,1736602482,2025-01-11T13:57:49+0000,2025-01-11T13:57:49+0000,"When using `camel shell` and pressing tab, then all the Camel commands are listed under Picocli Commands. It would be good if we can rename this to Camel or Apache Camel",No comments found
21610,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2025-01-11T13:30:05+0000,1736602205,2025-01-11T13:30:05+0000,,"Sometimes when using a kamelet you may want to debug inside the kamelet for trouble shooting if something is mysterious. Or when you build custom kamelets and want to try them.Also for route templates in general then dynamic routes can be added from the template, so the debugger needs to know about its source location and debug in the templates.",No comments found
21609,Bug,Unassigned,Jawad Ahmad,"4.4.4,4.8.2,4.9.0",None,2025-01-10T21:15:15+0000,1736543715,2025-02-02T14:01:08+0000,,"I recently upgraded my Camel application from Camel 3.2.1 and Java 11 to Camel 4.9.0 and JDK 21.I am now seeing a lot of blocked threads in thread monitoring. I noticed it when my application started to hang up during testing. I also tested v4.4.4, v4.8.2, and Java 17 and found the same issue. Threads are blocked in SalesforceHttpClient.I also profiled my older Java 11 and Camel 3.21,0 instances, and there are no blocked threads.Details:
I am subscribing to the Salesforce platform event and simply doing a query from my processor using the Producer Template.A simple route like this blocks 2 threads on SalesforceHttpClient.","['Andrea Cosentino - 2025-01-10T21:48:55+0000 Without details about what your application is doing this issue is mostly useless', 'Jawad Ahmad - 2025-01-10T22:46:58+0000 acosentino I am happy to add the details required. But from the application details pov, I am using the Camel Salesforce component to subscribe to different platform events and then moving data to a third party. The threads start blocking as i soon as i execute any consumer action on Salesforce that uses SalesforceHttpClient. E.g. as the first step, i query data using a Processor and ProducerTemplate, and so on.', 'Jawad Ahmad - 2025-02-02T14:01:08+0000 davsclaus Any reason why we are downgrading it ? Given this can simply consume all threads overtime and block the application state.']"
21608,Improvement,Dylan Piergies,Dylan Piergies,4.9.0,"4.8.4,4.10.0",2025-01-10T13:25:05+0000,1736515505,2025-01-11T07:35:54+0000,2025-01-11T07:35:54+0000,Enhance to add support for message tags to the aws2-ses component. Tags are useful for providing user-defined metadata that will appear in email tracking events related to the sent email.,No comments found
21607,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,"4.8.4,4.10.0",2025-01-10T08:26:24+0000,1736497584,2025-01-10T08:26:29+0000,2025-01-10T08:26:29+0000,No description available,No comments found
21606,Bug,Adriano Machado,Adriano Machado,"4.8.0,4.9.0","4.8.4,4.10.0",2025-01-10T00:28:48+0000,1736468928,2025-01-10T08:27:22+0000,2025-01-10T08:27:22+0000,The validation mojo fails if you run the build process a second time on a project that is using external source artifacts to load routes,['Claus Ibsen - 2025-01-10T08:11:16+0000 Thanks for reporting and the PR']
21605,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2025-01-09T15:18:45+0000,1736435925,2025-01-13T14:23:29+0000,2025-01-13T14:23:29+0000,"We have a receive dev console, and we should have a new send dev console as well.",No comments found
21604,Bug,Freeman Yue Fang,Adriano Machado,4.8.2,4.x,2025-01-08T17:23:52+0000,1736357032,2025-02-02T08:19:16+0000,,Adding the following GZIP feature to enable interceptors:Generates the following exception when the service is called at runtime:I'm trying to work on a reproducer at ammachado/camel at cxf-gzip-test.,"['Claus Ibsen - 2025-01-09T06:52:25+0000 ffang maybe something you can help with', 'Freeman Yue Fang - 2025-01-09T13:27:15+0000 Hi davsclaus,\nSure, I will take a close look.\nCheers\nFreeman', ""Freeman Yue Fang - 2025-01-10T17:34:48+0000 A quick update, I can reproduce it.\nThe probably is from that in some cases the cxf message headers isn't a modifiable list, for example, the cxf message headers could be from Arrays.asList(...) which returns a unmodifiable List per java 17 doc.\nI think we need to fix it in CXF GZIPOutInterceptor. I'm working on it.\nCheers\nFreeman"", 'Claus Ibsen - 2025-01-11T13:58:20+0000 Can you link to the CXF issue in Jira thanks', 'Freeman Yue Fang - 2025-01-11T23:09:28+0000 davsclaus, sure, done!', 'Claus Ibsen - 2025-01-20T13:13:53+0000 Freeman, do you have any ETA on a CXF release with a fix', 'Freeman Yue Fang - 2025-01-20T13:25:56+0000 Hi davsclaus,\nSorry, no concrete idea so far. But based on previous release pace, we can expect next round of CXF release around April.\nFreeman', 'Claus Ibsen - 2025-01-20T13:27:25+0000 Okay thanks', 'Claus Ibsen - 2025-02-02T08:19:16+0000 Can you maybe try to get CXF 3.1.1 bug fix released sooner, thanks']"
21603,Dependency upgrade,Thomas Cunningham,Claus Ibsen,4.8.3,4.8.4,2025-01-08T09:46:20+0000,1736329580,2025-01-23T15:09:22+0000,2025-01-23T14:38:40+0000,No description available,['Thomas Cunningham - 2025-01-23T15:09:22+0000 https://github.com/apache/camel/pull/16903\nhttps://github.com/apache/camel-spring-boot/pull/1351']
21602,Test,Unassigned,Aurélien Pupier,4.9.0,4.10.0,2025-01-08T08:48:26+0000,1736326106,2025-01-09T06:51:34+0000,2025-01-09T06:51:34+0000,it failed 2 out of 5 times in the last 5 builds on the s390x architecture.,['Claus Ibsen - 2025-01-08T15:35:14+0000 Bumped timeout for slow CI servers\nhttps://github.com/apache/camel/commit/3bb7ca4f22419364382be6cb8e057d81c856568e']
21601,Test,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2025-01-08T08:46:04+0000,1736325964,2025-01-21T06:41:00+0000,2025-01-21T06:41:00+0000,"it failed on various JDk s and platform architecture. It failed 4 out 5 times on the last builds o,n Jenkins Ci.","['Claus Ibsen - 2025-01-08T16:14:24+0000 Working on a fix - the tests reuse git repos and step on each other toes. So I am working to isolate each test to use a clean git repo', 'Aurélien Pupier - 2025-01-10T15:51:32+0000 still failing https://ci-builds.apache.org/job/Camel/job/Camel%20Core%20(Build%20and%20test)/job/main/665/testReport/junit/org.apache.camel.component.git.consumer/GitConsumerTest/BuildAndTest___Matrix___JDK_NAME____jdk_21_latest___PLATFORM____ubuntu_avx____Test___commitConsumerTest/ on commit b69f24882d0e57110e09d918235fabdba734d7a8 which is more recent than the potential fix', 'Claus Ibsen - 2025-01-21T06:41:00+0000 committed a better fix']"
21600,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.11.0,2025-01-08T06:48:17+0000,1736318897,2025-02-24T15:51:29+0000,2025-02-24T15:51:29+0000,There is maybe a bug in ognl or something we need to change in camel-ognlhttps://github.com/orphan-oss/ognl/issues/350,"['Claus Ibsen - 2025-01-08T06:59:37+0000 Workaround for 4.10.0\nhttps://github.com/apache/camel/commit/6f7d1686f01c505a96d1a9a479e826245db7cd22', 'Claus Ibsen - 2025-02-24T15:51:29+0000 Workaround removed as 3.4.6 has fixed this']"
21599,Bug,Claus Ibsen,Pasquale Congiusti,4.9.0,4.10.0,2025-01-07T14:42:43+0000,1736260963,2025-01-29T10:03:28+0000,2025-01-27T10:58:49+0000,"I found a faulty behavior when configuring a global error handler and the failure is caused by the execution of a Kamelet.The following route works correctly:It intercept the failing execution and forward the failure to the DLC. However, if the producer URI contains a failing Kamelet, then, the global error handler is not working. Wrapping the same failing logic in a local Kamelet like:And executing a new route as:Will act as no error handler is set at all, logging a Warn:","[""Pasquale Congiusti - 2025-01-07T14:44:32+0000 I may contribute to the fix, but I'd need some direction to understand where and when the global error handler is set in order to verify why it's not taking effect."", 'Claus Ibsen - 2025-01-09T08:23:13+0000 That is expected, the kamelet are used as a source (from) and it acts just like any regular component used in a from situation.\nSee the bridgeErrorHandler option that a consumer can enable to let such ""internal consumer errors"" be wrapped into a Camel message and routed, to let it be handled by routing error handler.', 'Pasquale Congiusti - 2025-01-09T15:45:40+0000 Thanks, I managed to make it work by setting the following parameter:\n      uri: ""kamelet:my-err-source/source""\n      parameters:\n        message: ""fail!""\n        noErrorHandler: false\nHowever it feels a bit counterintuitive.', 'Claus Ibsen - 2025-01-24T10:18:03+0000 Yeah its a bit what perspective we have\nsource: kamelet is a black box (like a component) and if a component cannot successfully consume a message then it fails internally. You can bridge that to Camel via bridgeErrorHandler=true.\nsink: kamelet is a black box, however if failing to process then the error is propagated back to the route, just as it would do when you call a regular component\n  So its the source kamelet where you have that noErrorHandler: true|false option.', 'Pasquale Congiusti - 2025-01-24T10:37:59+0000 Thanks for looking at it. I wonder if then the default should be ""noErrorHandler:true"" instead of false. From a ux perspective it is what I\'d expect. If, however, there is some logical reason to be like this, I guess we can simply add a short note into the error handler documentation to explain that. Just let me know and I\'ll provide to complete this request by adding the required documentation.', 'Claus Ibsen - 2025-01-24T12:37:30+0000 I am working on an improvement ...', 'Claus Ibsen - 2025-01-24T16:04:24+0000 Its a bit more tricky due to some chicken vs egg situation - This needs some more work for the next coming days.', 'Claus Ibsen - 2025-01-27T08:33:26+0000 okay have a fix in the works']"
21598,Task,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-01-07T11:21:34+0000,1736248894,2025-01-30T20:02:34+0000,,"Some have been removed, some got new versions.","['Claus Ibsen - 2025-01-30T16:17:05+0000 is this work done', 'Andrea Cosentino - 2025-01-30T16:20:34+0000 Not yet. Moving to 4.11.0']"
21597,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2025-01-07T11:20:59+0000,1736248859,2025-01-10T10:09:48+0000,,No description available,No comments found
21596,Improvement,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-01-06T16:02:23+0000,1736179343,2025-01-08T09:34:16+0000,2025-01-08T09:34:16+0000,No description available,No comments found
21595,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.8.2,4.9.0","4.8.3,4.10.0",2025-01-06T09:50:36+0000,1736157036,2025-01-31T08:44:08+0000,2025-01-07T08:32:38+0000,Calls for tools:https://github.com/apache/camel/blob/camel-4.8.2/components/camel-ai/camel-langchain4j-tools/src/main/java/org/apache/camel/component/langchain4j/tools/LangChain4jToolsProducer.java#L102Which may return null:https://github.com/apache/camel/blob/camel-4.8.2/components/camel-ai/camel-langchain4j-tools/src/main/java/org/apache/camel/component/langchain4j/tools/LangChain4jToolsProducer.java#L151-L154And still be called:https://github.com/apache/camel/blob/camel-4.8.2/components/camel-ai/camel-langchain4j-tools/src/main/java/org/apache/camel/component/langchain4j/tools/LangChain4jToolsProducer.java#L105Which leads to dereferecing a null pointer:https://github.com/apache/camel/blob/camel-4.8.2/components/camel-ai/camel-langchain4j-tools/src/main/java/org/apache/camel/component/langchain4j/tools/LangChain4jToolsProducer.java#L110,No comments found
21594,Bug,Unassigned,Zineb Bendhiba,"4.8.2,4.9.0","4.8.4,4.10.0",2025-01-06T09:35:40+0000,1736156140,2025-01-31T08:44:08+0000,2025-01-31T08:44:08+0000,"There's a bug in Camel Langchain4j Tools.If the LLM doesn't require using one of the tools provided in the prompt, there's an error.","['Zineb Bendhiba - 2025-01-06T09:50:04+0000 the error in the description is from Camel 4.9', 'Claus Ibsen - 2025-01-30T16:17:25+0000 orpiske any comments to this ?', 'Otavio Rodolfo Piske - 2025-01-31T08:42:59+0000 This is a duplicate of CAMEL-21595']"
21593,Improvement,Andrea Cosentino,Claus Ibsen,None,4.10.0,2025-01-05T09:11:52+0000,1736068312,2025-01-06T15:26:46+0000,2025-01-06T15:26:46+0000,"https://stackoverflow.com/questions/79329226/is-it-possible-to-send-a-rawmessage-using-apache-camel-aws-sesThe ses producer should check if the message body is already a `
SendRawEmailRequest` and send it as-is",No comments found
21592,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,4.10.0,2025-01-04T08:33:16+0000,1735979596,2025-01-22T06:36:46+0000,2025-01-22T06:36:46+0000,"We should investigate if we can set Awaitility globally (as we do with JUnit) to avoid duplicating that dependency. Otherwise, we risk problems like CAMEL-21591.","[""Otavio Rodolfo Piske - 2025-01-21T09:40:27+0000 I'm giving it a try on 4.10. Let's see how it goes.""]"
21591,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,4.10.0,2025-01-04T08:20:54+0000,1735978854,2025-01-06T16:42:51+0000,2025-01-06T16:42:51+0000,"We have a few components using Awaitility from test containers instead of the actual one.There are multiple tests in AWS2 and a few on Kafka that are using 
org.testcontainers.shaded.org.awaitility.Awaitility.await instead of .org.awaitility.Awaitility.await.","['Claus Ibsen - 2025-01-06T13:13:36+0000 I assume this is done', 'Otavio Rodolfo Piske - 2025-01-06T16:42:51+0000 Resolved with the linked PR.']"
21590,Dependency upgrade,Claus Ibsen,Claus Ibsen,"4.4.4,4.8.2","4.8.3,4.10.0",2025-01-04T08:03:23+0000,1735977803,2025-01-04T08:04:06+0000,2025-01-04T08:04:06+0000,No description available,No comments found
21589,Improvement,Unassigned,Rav Brar,None,4.10.0,2025-01-03T18:07:38+0000,1735927658,2025-01-08T08:33:41+0000,2025-01-08T08:33:41+0000,"When using the Camel MQTT5 Source Kafka Connector, messages are automatically acknowledged, which doesn't ensure they reach their final destination at least once. Enabling manual acknowledgements ensures the connector is able to provide at least once delivery to topics.This new parameter would make it possible for the user to enable manual acknowledgements in the client. By default, the parameter is set to false and messages will be automatically acknowledged. If set to true, the acknowledgement is added in the exchange's completion callback.","['Rav Brar - 2025-01-03T18:33:21+0000 I have a fix for this in the works. Just working on the relevant tests.', 'Claus Ibsen - 2025-01-08T08:33:41+0000 Thanks for reporting and the PR']"
21588,Improvement,Thomas Cunningham,Zineb Bendhiba,4.8.2,4.11.0,2025-01-03T14:14:36+0000,1735913676,2025-02-26T08:12:48+0000,2025-02-26T08:12:48+0000,"While playing with Camel Pinecone, I realized that some properties are supposed to be set only by setting headers.Some of those are kind of mandatory (index name, cloud region...). I was using a Cloud account.These are the list headers that I wish they can be set as properties instead","['Claus Ibsen - 2025-02-01T08:22:10+0000 Would you be able to do complete this before feb 6th ?', ""Thomas Cunningham - 2025-02-17T23:28:55+0000 I've started playing around with this one and am hoping to get it in this week.""]"
21587,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,None,2025-01-03T13:51:36+0000,1735912296,2025-02-04T10:50:47+0000,,"Problem:Apache Camel Langchain4j and Vector databases (Qdrant/Pinecone) can't perform similarity search for RAG. This limitation hinders our ability to use Apache Camel with Vector databases with Langchain4j for robust search capabilities.While creating an example of RAG using Apache Camel Langchain4j and Apache Camel Vector databases, I realized that the Vector databases components cannot handle similarity search for the Langchain4j scenarios.Despite trying both Qdrant and Pinecone, I encountered issues when attempting to perform RAG (Relevance-based Active Learning) with these databases.ResearchI've analyzed various existing issues related to Search with Qdrant and Pinecone. For example, the Camel Qdrant component doesn't provide similarity search capabilities. In contrast, Pinecone allows for searching based on similarity.However, when trying to use Pinecone with Apache Camel, I encountered a challenge: we need to convert text to Embeddings using Camel Langchain4j Embeddings Component. The resulting list of Embeddings cannot be used directly with RAG.Proposed SolutionTo address this limitation, I propose implementing a new feature (or new camel AI component) that enables easy similarity search for RAG using Apache Camel and Vector databases. This could involve leveraging the abstraction from Embedding stores in Langchain4j to provide an easy way to perform similarity searches.","[""Zineb Bendhiba - 2025-01-06T16:03:58+0000 I started working on the idea of adding the similarity search for Langchain4j as high abstract.\nHowever, while starting coding it, I'm realizing it's not that compatible with my idea of using our own vector databases components.\nSo here's a thing, I'm first of all adding the vector search for camel-qdrant. here's the JIRA: https://issues.apache.org/jira/browse/CAMEL-21596\n  And once this one is pushed, I'll do some PoC and brainstorm on the next step for this"", 'Zineb Bendhiba - 2025-01-31T19:46:45+0000 Decoding those embeddings retrieved from Qdrant is missing . the issue https://issues.apache.org/jira/browse/CAMEL-21696 will add this feature']"
21586,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2025-01-03T10:37:11+0000,1735900631,2025-01-06T13:35:55+0000,2025-01-06T13:35:55+0000,Create a HugginFace Embedding Model builder acting as Java Bean for a Kamelet.Details :,No comments found
21585,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.4.4,4.8.2,4.10.0","4.8.3,4.10.0",2025-01-03T09:30:01+0000,1735896601,2025-01-13T06:28:39+0000,2025-01-12T18:07:58+0000,Ref: https://github.com/apache/camel/pull/16688We should consolidate this logic in the LocalPropertyResolver so we don't end up with multiple magic strings and duplicated code all over the place.,['Claus Ibsen - 2025-01-08T09:03:23+0000 main and 4.8.x are done']
21584,Task,Unassigned,Aurélien Pupier,None,4.8.5,2025-01-03T08:26:39+0000,1735892799,2025-02-27T06:00:38+0000,2025-02-27T06:00:38+0000,"It is failing at least since the 19th December. The last ""successful"" (without build error) in the CI history is the 23th September. Last release is the 4.8.2 on 1st December so I guess it broke between the 1st and 19th December","['Claus Ibsen - 2025-01-03T09:31:45+0000 Works locally and its deprecated module that is removed in 4.9.\nThe 4.8.2 release is not affected.', 'Claus Ibsen - 2025-02-09T11:51:57+0000 It seems its salesforce\n  [INFO] — protobuf:2.4.5:generate (default) @ camel-salesforce —\n[INFO] Resolving artifact com.google.protobuf:protoc:exe:linux-s390_64:3.25.5 from repositories\n[INFO] Resolving artifact io.grpc:protoc-gen-grpc-java:exe:linux-s390_64:1.66.0 from repositories\n[INFO] Generating source code for 1 protobuf file from 1 source file tree\nscript returned exit code 143', ""Claus Ibsen - 2025-02-09T12:08:47+0000 And its for s390 platform\nFailed in branch Matrix - JDK_NAME = 'jdk_17_latest', PLATFORM = 's390x'""]"
21583,Test,Unassigned,Aurélien Pupier,4.9.0,None,2025-01-03T08:14:47+0000,1735892087,2025-01-03T08:15:29+0000,,"with the last 5 builds on CI, there was at least one Jetty tests failing with this kind of error:It occured in different context and slightly different tests:",No comments found
21582,Improvement,Jiri Ondrusek,Jiri Ondrusek,4.10.0,4.10.0,2025-01-02T15:08:26+0000,1735830506,2025-01-03T15:49:29+0000,2025-01-03T15:49:25+0000,"Here are 2 recent fixes CAMEL-21480 and CAMEL-21480, which made properties loaded by microprofile as not loadable.Unfortunately some parts of PropertiesComponent requires `LoadablePropertiesSource` (i.e. this code).The issue can be simulated by running camel-quarkus test CamelAutowiredDisabledTest from branch `camel-main`.",No comments found
21581,Task,Unassigned,Anushka Juli,None,4.10.0,2025-01-02T14:19:34+0000,1735827574,2025-01-06T13:13:20+0000,2025-01-06T13:13:20+0000,Resolved the failure of org.apache.camel.component.hashicorp.vault.springboot test case on the ppc64le architecture in camel-spring-boot by enabling support for a compatible HashiCorp Vault container image.Solution:Added a dynamic selection mechanism for container images based on the ppc64le architecture.Updated HashicorpVaultLocalContainerService and container.properties to support architecture-specific configurations,No comments found
21580,Bug,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2025-01-02T10:11:43+0000,1735812703,2025-01-03T09:15:26+0000,2025-01-03T09:15:26+0000,,No comments found
21579,Improvement,Unassigned,Aurélien Pupier,4.9.0,None,2025-01-02T09:14:05+0000,1735809245,2025-01-23T08:57:00+0000,,"jbang '-Dcamel.jbang.version=4.9.0' camel@apache/camel init 'test-from-vscode.camel.yaml'
jbang '-Dcamel.jbang.version=4.9.0' camel@apache/camel kubernetes run test-from-vscode.camel.yaml --camel-version=4.9.0 --cluster-type=openshift","['Claus Ibsen - 2025-01-20T13:14:40+0000 Is this still happening?\ntdiesler is that something you have seen ?', ""Aurélien Pupier - 2025-01-22T14:06:20+0000 still happening with:\njbang --fresh '-Dcamel.jbang.version=4.10.0-SNAPSHOT' camel@apache/camel init 'test.camel.yaml'\njbang --fresh '-Dcamel.jbang.version=4.10.0-SNAPSHOT' camel@apache/camel kubernetes run test.camel.yaml --cluster-type=openshift\n[INFO] --- oc:1.18.0:resource (default) @ test ---\n[INFO] oc: Using container image name of namespace: apupier-dev\n[INFO] oc: Using resource templates from /home/apupier/ws/test-jbang-serializer-export/.camel-jbang-run/test/src/main/jkube\n[INFO] oc: jkube-healthcheck-quarkus: Adding readiness probe on port 8080, path='/q/health/ready', scheme='HTTP', with initial delay 5 seconds\n[INFO] oc: jkube-healthcheck-quarkus: Adding liveness probe on port 8080, path='/q/health/live', scheme='HTTP', with initial delay 10 seconds\n[INFO] oc: jkube-healthcheck-quarkus: Adding startup probe on port 8080, path='/q/health/started', scheme='HTTP', with initial delay 5 seconds\n[INFO] oc: jkube-openshift-deploymentconfig: Converting Deployment to DeploymentConfig\n[INFO] oc: jkube-service-discovery: Using first mentioned service port '80' \n[INFO] oc: jkube-service-discovery: Using first mentioned service port '80' \n[INFO] oc: jkube-service-discovery: Using first mentioned service port '80' \n[INFO] oc: jkube-revision-history: Adding revision history limit to 2\n[INFO] oc: validating /home/apupier/ws/test-jbang-serializer-export/.camel-jbang-run/test/target/classes/META-INF/jkube/openshift/test-route.yml resource\n[WARNING] Unknown keyword serializer - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword or if it should generate annotations AnnotationKeyword\n[WARNING] Unknown keyword deserializer - you should define your own Meta Schema. If the keyword is irrelevant for validation, just use a NonValidationKeyword or if it should generate annotations AnnotationKeyword\n[INFO] oc: validating /home/apupier/ws/test-jbang-serializer-export/.camel-jbang-run/test/target/classes/META-INF/jkube/openshift/test-deploymentconfig.yml resource\n[INFO] oc: validating /home/apupier/ws/test-jbang-serializer-export/.camel-jbang-run/test/target/classes/META-INF/jkube/openshift/test-service.yml resource"", 'Claus Ibsen - 2025-01-23T08:55:55+0000 https://github.com/networknt/json-schema-validator/issues/79']"
21578,Improvement,Aurélien Pupier,Aurélien Pupier,4.9.0,4.10.0,2025-01-02T09:12:38+0000,1735809158,2025-01-13T12:17:44+0000,2025-01-13T12:17:44+0000,"jbang '-Dcamel.jbang.version=4.9.0' camel@apache/camel init 'test-from-vscode.camel.yaml'
jbang '-Dcamel.jbang.version=4.9.0' camel@apache/camel kubernetes run test-from-vscode.camel.yaml --camel-version=4.9.0 --cluster-type=openshift","['Claus Ibsen - 2025-01-09T08:26:26+0000 tdiesler I wonder if you want/have time to look into a few of these recent kuberentes jbang issues and work on them. Would be good to get fixed this month for the 4.10 release.', ""Thomas Diesler - 2025-01-13T12:08:08+0000 I found CAMEL-21087, CAMEL-21405 and CAMEL-21442\nAnything in particular, you'd like me to look at?""]"
21577,Task,Unassigned,Otavio Rodolfo Piske,4.10.0,None,2025-01-02T09:04:29+0000,1735808669,2025-01-02T09:23:02+0000,,We have a few components that are NOT using the container properties file. This should be fixed:,No comments found
21576,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.4.4,4.8.2,4.10.0","4.4.5,4.8.3,4.10.0",2025-01-02T08:49:24+0000,1735807764,2025-01-09T11:44:03+0000,2025-01-09T11:44:03+0000,Reduce relying on docker hub:,['Claus Ibsen - 2025-01-08T09:02:25+0000 main and 4.8.x are done']
21575,Bug,Claus Ibsen,Otavio Rodolfo Piske,"4.9.0,4.10.0",4.10.0,2024-12-31T10:22:13+0000,1735640533,2025-01-02T08:08:43+0000,2025-01-02T08:08:43+0000,We have lots of tests failing with ConcurrentModificationException on Java 21.,"['Otavio Rodolfo Piske - 2024-12-31T10:24:48+0000 The following tests are failing:\ntestEvents – org.apache.camel.main.ContextEventsTest<1s\naddDynamicRoute – org.apache.camel.main.MainAddDynamicRouteTest<1s\ntestBindBeans – org.apache.camel.main.MainBeansConstructorTest<1s\ntestAutowiredTrue – org.apache.camel.main.MainComponentAutowiredFalseTest<1s\ntestContextCustomizer – org.apache.camel.main.MainCustomizerTest<1s\ntestMain – org.apache.camel.main.MainGlobalOptionsTest<1s\ntestMainRoutesHealthCheckExcluded – org.apache.camel.main.MainHealthCheckExcludedPatternTest<1s\ntestMainIoC – org.apache.camel.main.MainIoCBeanConfigInjectConfigurerTest<1s\ntestMainIoC – org.apache.camel.main.MainIoCBeanConfigInjectPropertiesTest<1s\ntestMainIoC – org.apache.camel.main.MainIoCBeanConfigInjectTest<1s\ntestMainIoCEnabled – org.apache.camel.main.MainIoCBeanPostProcessorDisabledTest<1s\ntestMainIoC – org.apache.camel.main.MainIoCNewRouteBuilderComplexTest<1s\ntestMainIoC – org.apache.camel.main.MainIoCNewRouteBuilderTest<1s\ntestMainIoC – org.apache.camel.main.MainIoCTest<1s\ntestBindLambdaRouteBuilder – org.apache.camel.main.MainLambdaRouteBuilderTest<1s\ntestMain – org.apache.camel.main.MainLogPlaceholderTest<1s\ntestSimpleMain – org.apache.camel.main.SimpleMainTest', 'Claus Ibsen - 2025-01-01T15:54:41+0000 I cannot reproduce this locally with\n$ java --version\nopenjdk 21.0.4 2024-07-16 LTS\nOpenJDK Runtime Environment Zulu21.36+17-CA (build 21.0.4+7-LTS)\nOpenJDK 64-Bit Server VM Zulu21.36+17-CA (build 21.0.4+7-LTS, mixed mode, sharing)\n  $ uname -a\nDarwin davsclaus-mini4.local 24.2.0 Darwin Kernel Version 24.2.0: Fri Dec  6 19:03:40 PST 2024; root:xnu-11215.61.5~2/RELEASE_ARM64_T6041 arm64', 'Claus Ibsen - 2025-01-01T15:57:48+0000 Upgraded Java to latest release (cannot reproduce locally)\nopenjdk 21.0.5 2024-10-15 LTS\nOpenJDK Runtime Environment Zulu21.38+21-CA (build 21.0.5+11-LTS)\nOpenJDK 64-Bit Server VM Zulu21.38+21-CA (build 21.0.5+11-LTS, mixed mode, sharing)', 'Claus Ibsen - 2025-01-01T16:09:41+0000 Okay here is a PR that may help\nhttps://github.com/apache/camel/pull/16679\nI think the issue is that the ALL_OPTIONS is cleared when the bootstrap is done and that is not really needed. And maybe this happens if tests are executed in paralllel.', 'Otavio Rodolfo Piske - 2025-01-02T08:08:19+0000 Thanks davsclaus! Looking at the latest CI results, it seems to have fixed it.', 'Otavio Rodolfo Piske - 2025-01-02T08:08:43+0000 Fixed with the latest patch from Claus.']"
21574,Task,Unassigned,Otavio Rodolfo Piske,4.10.0,None,2024-12-30T12:40:15+0000,1735562415,2024-12-30T13:17:17+0000,2024-12-30T13:17:17+0000,"There are multiple places within the tests for Camel Infinispan where the code needs to configure the cache and manage part of its lifecycle. Not only there is duplication on this code, but also this code relies on many details handled by the test infra.We should rework the code so that the configuration of the cache and the cache manager is done by the test infra code.","['Otavio Rodolfo Piske - 2024-12-30T13:17:17+0000 Looking more closely, this would lead to some design problems.']"
21573,Task,Unassigned,Claus Ibsen,None,4.x,2024-12-28T17:10:17+0000,1735405817,2024-12-28T17:10:17+0000,,When using CSB then you should use camel-platform-http-starter to integrate Camel with the HTTP server from SB.We should deprecate 3rd party http servers like undertow and jetty.,No comments found
21572,Bug,Unassigned,Bartosz Popiela,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-27T00:31:53+0000,1735259513,2024-12-27T09:29:04+0000,2024-12-27T09:29:04+0000,SetHeader with a simple expression causes NullPointerException to be thrown because for runtime other than default (kamelet-main) JBang uses Stub instead of the actual component which produces null.,"['Bartosz Popiela - 2024-12-27T01:05:33+0000 PFA pull requests with the fix.', 'Claus Ibsen - 2024-12-27T09:29:04+0000 Thanks for reporting and the PR']"
21571,Dependency upgrade,Claus Ibsen,Claus Ibsen,"4.4.4,4.8.2","4.4.5,4.8.3,4.10.0",2024-12-26T20:02:37+0000,1735243357,2024-12-27T09:11:29+0000,2024-12-27T09:11:29+0000,"The MINA project is pleased to announce the MINA 2.2.4, 2.1.10 and 2.0.27 release. *MINA* applications using unbounded deserialization may allow *RCE* (see https://www.cve.org/CVERecord?id=CVE-2024-52046). Affected versions: - Apache MINA 2.0 through 2.0.26 - Apache MINA 2.1 through 2.1.9 - Apache MINA 2.2 through 2.2.3 Description: The ObjectSerializationDecoder in Apache *MINA* uses Java’s native deserialization protocol to process incoming serialized data but lacks the necessary security checks and defenses. This vulnerability allows attackers to exploit the deserialization process by sending specially crafted malicious serialized data, potentially leading to remote code execution (*RCE) attacks. This issue affects **MINA* core versions 2.0.X, 2.1.X and 2.2.X, and is fixed by the releases 2.0.27, 2.1.10 and 2.2.4. It's also important to note that an application using *MINA* core library will only be affected if the IoBuffer#getObject() method is called, and this specific method is potentially called when adding a ProtocolCodecFilter instance using the ObjectSerializationCodecFactory class in the filter chain. If your application is specifically using those classes, you have to upgrade to the latest version of *MINA* core library. *Upgrading will not be enough: you also need to explicitly allow the classes the decoder will accept in the *ObjectSerializationDecoder instance, using one of the three new methods:**",['Claus Ibsen - 2024-12-26T20:44:52+0000 For Camel 4.4.x we should also look at upgrading']
21570,Task,Unassigned,Anushka Juli,None,4.10.0,2024-12-26T10:29:22+0000,1735208962,2024-12-27T09:27:05+0000,2024-12-27T09:27:05+0000,"camel-aws2-cw-starter, camel-aws2-ddb-starter, camel-aws2-kinesis-starter, camel-aws2-s3-starter, camel-aws2-sns-starter, camel-aws2-sqs-starter modules currently fails Upstream CI builds on the ppc64le architecture due to the lack of a supported aws-v2 image for ppc64le. To prevent these failures, the test cases should be disabled on this architecture",No comments found
21569,Dependency upgrade,Unassigned,Claus Ibsen,None,4.10.0,2024-12-24T08:33:56+0000,1735029236,2025-01-09T16:19:22+0000,2025-01-09T16:19:22+0000,The APIs have changed so camel-wasm needs code changes.lburgazzoli if you have time and want to help with this then this is much appreciated.,No comments found
21568,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.3,4.10.0",2024-12-23T13:55:19+0000,1734962119,2024-12-26T14:59:34+0000,2024-12-25T11:36:33+0000,"See CAMEL-21223When debugging you may want to step over a big block such as entire splitter, or calling another route via direct.",['Claus Ibsen - 2024-12-26T13:15:35+0000 It would be nice if we can backport this to 4.8.3']
21567,Bug,Claus Ibsen,Claus Ibsen,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-22T09:44:01+0000,1734860641,2024-12-22T09:53:46+0000,2024-12-22T09:53:46+0000,For example you cannot do camel debug * --console,No comments found
21566,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.8.2,4.8.3,2024-12-21T09:54:34+0000,1734774874,2024-12-21T11:01:47+0000,2024-12-21T11:01:47+0000,No description available,No comments found
21565,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.8.2,4.8.3,2024-12-21T09:33:30+0000,1734773610,2024-12-21T11:02:25+0000,2024-12-21T11:02:25+0000,No description available,No comments found
21564,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-20T15:48:43+0000,1734709723,2024-12-20T16:11:19+0000,2024-12-20T16:11:19+0000,No description available,No comments found
21563,Improvement,Gaelle Fournier,Gaelle Fournier,None,"4.8.3,4.10.0",2024-12-20T14:17:50+0000,1734704270,2024-12-21T08:43:40+0000,2024-12-21T08:43:40+0000,Do the same thing than in https://issues.apache.org/jira/browse/CAMEL-19044 for `camel ps` command.,No comments found
21562,Bug,Andrea Cosentino,Michiel Meeuwissen,4.9.0,"4.8.3,4.10.0",2024-12-20T13:04:45+0000,1734699885,2024-12-20T14:16:34+0000,2024-12-20T14:16:34+0000,"If for some reason it is not allowed to do the HeadBucket request in doStart oforg.apache.camel.component.aws2.s3.AWS2S3Endpointthe entire route fails. This is unreasonable if 
! (isAutoCreateBucket) because nothing would happend any way.https://github.com/apache/camel/pull/16625",No comments found
21561,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.8.2,"4.8.3,4.10.0",2024-12-19T08:17:33+0000,1734596253,2024-12-19T08:29:04+0000,2024-12-19T08:29:04+0000,No description available,No comments found
21560,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2024-12-18T15:37:22+0000,1734536242,2025-01-06T13:35:50+0000,2025-01-06T13:35:50+0000,Create a HugginFace Embedding Model builder acting as Java Bean for a Kamelet.Details :,No comments found
21559,Improvement,Unassigned,Claus Ibsen,None,"4.8.3,4.10.0",2024-12-18T10:19:59+0000,1734517199,2024-12-19T08:04:51+0000,2024-12-19T08:04:51+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/mongodb.20save.20operation.20performance,No comments found
21558,Improvement,Unassigned,Martin LyKy,4.8.1,4.10.0,2024-12-18T08:28:05+0000,1734510485,2024-12-20T15:41:28+0000,2024-12-20T15:41:22+0000,"The Plugin camel-maven-package-plugin generates the Static endpoint DSL (e.g. goal generate-endpoint-dsl).When using this plugin outside of camel (for own camel components), the packages from these generated classses are hardcoded and alwaysand the configuration for the plugin  is ignored:The Problem is that the package is hardcoded in the templates 
e.g.
camel/tooling/maven/camel-package-maven-plugin/src/main/resources/velocity/endpoint-static-builders.vm at main · apache/camel · GitHub","['Claus Ibsen - 2024-12-18T08:47:03+0000 camel-maven-package-plugin is for internal camel.\nthere is another maven plugin for end users', 'Martin LyKy - 2024-12-18T10:12:00+0000 Hi davsclaus ,\nwhich one generates the Static endpoint DSL?\nas far as i could see the camel-component-maven-plugin generates the Description.json (camel/components/camel-jms/src/generated/resources/META-INF/org/apache/camel/component/jms/jms.json at main · apache/camel · GitHub) and the  ""Configurer""-Classes (camel/components/camel-jms/src/generated/java/org/apache/camel/component/jms at main · apache/camel · GitHub)\n  At least the camel-maven-package-plugin worked in older versions (e.g. 4.4.2) for components outside of camel.\nAs far as I see you would only need to change one line the velocity files. The velocity context is already set.', 'Claus Ibsen - 2024-12-18T10:17:52+0000 You are welcome to send a PR. And mind that we dont support this plugin outside camel itself. The other plugin is for that.', 'Martin LyKy - 2024-12-18T10:29:37+0000 I will create a PR for this .\nJust to make sure to what plugin are you referring with ""other plugin""? I want to take a look at it if it\'s not the camel-maven-package-plugin.', 'Claus Ibsen - 2024-12-18T10:38:31+0000 https://camel.apache.org/manual/camel-component-maven-plugin.html']"
21557,Bug,Zheng Feng,Zheng Feng,4.8.0,4.10.0,2024-12-18T02:19:06+0000,1734488346,2024-12-18T11:26:44+0000,2024-12-18T07:04:17+0000,"Since current implementation does not use a random filename, concurrent multipart/form-data requests with the same file key id have a possibility for broken data.
https://github.com/apache/camel-spring-boot/blob/main/components-starter/camel-platform-http-starter/src/main/java/org/apache/camel/component/platform/http/springboot/SpringBootPlatformHttpBinding.java#L79","['Claus Ibsen - 2024-12-18T07:09:00+0000 Can you backport this to 4.8.x', 'Zheng Feng - 2024-12-18T11:25:56+0000 Well, but it looks like 4.8.x has a little bit difference, see SpringBootPlatformHttpBinding.java', 'Claus Ibsen - 2024-12-18T11:26:44+0000 Ah okay then its fine']"
21556,Bug,Unassigned,Darius Cooper,None,None,2024-12-17T14:30:16+0000,1734445816,2024-12-26T15:10:45+0000,2024-12-26T15:10:45+0000,"Related to: https://camel.apache.org/manual/rest-dsl.html#_inline_rest_dsl_as_a_single_routeWhen updating from camel 4.4 to 4.8 we encountered a DirectConsumerNotAvailableException from our timer/cron routes that share a direct route with a REST endpoint.  In this example the exception was being thrown for ""direct:process"" not being available.  The REST endpoints continued to function successfully.I updated the property camel.rest.inline-routes = false and the timer routes began working and was able to find ""direct:process"".  It appears that when REST inlining is true it is configuring ""direct:process"" in a way that other routes cannot access it.See attached exampleMessageProcessingRoute.groovy","['Claus Ibsen - 2024-12-18T11:25:45+0000 We cannot reproduce this - try without the master and also report the full stacktrace, and try with latest 4.9.0 release']"
21555,Bug,Claude Mamo,Claude Mamo,4.9.0,4.10.0,2024-12-17T07:58:05+0000,1734422285,2024-12-17T11:03:58+0000,2024-12-17T11:03:58+0000,"Copying the issue from https://github.com/smooks/smooks-camel-cartridge/issues/262I am using the Smooks Camel Cartridge together with the EDIFACT cartridge to parse EDIFACT files. I observe that the Smooks processor does not seem to be fully initialized at first. The DFDL schema is parsed only once the first EDIFACT message is processed, as can be seen in the log output below. I would expect that the processor is initialized earlier, once it is created as part of the Camel context.Here is my relevant configuration code (Kotlin):
```kotlin
object EdifactParserFactory {private const val schemaPostfix: String = ""EDIFACT-Messages.dfdl.xsd""fun mkEdifactParser(
        edifactDirectory: EdifactDirectory,
        messageTypes: List<EdiEnergyMessageType>,
        camelContext: CamelContext
    ): SmooksProcessor {
        [..]
        val schemaUri = ""/${edifactDirectory/${schemaPostfix}""
        val smooks = Smooks()
        val reader = EdifactReaderConfigurator(schemaUri).setMessageTypes(messageTypeList)
        reader.cacheOnDisk = true
        smooks.setReaderConfig(reader)
        val filterSettings = FilterSettings.newSaxNgSettings().setReaderPoolSize(5)
        smooks.setFilterSettings(filterSettings)
        smooks.setExports(Exports(StringResult::class.java))
        return SmooksProcessor(smooks, camelContext)
    }
}
```For the following (simplified) Camel route:
```kotlin
from(direct(""inbound""))
            .convertBodyTo(InputStream::class.java)
            .choice()
                .`when`(header(EDIFACT_DIRECTORY_HEADER).isEqualTo(EdifactDirectory.D04B)).to(direct(""D04B-import""))
                .`when`(header(EDIFACT_DIRECTORY_HEADER).isEqualTo(EdifactDirectory.D07B)).to(direct(""D07B-import""))
                .otherwise().to(""log:error"").stop()
            .end()[..]val edifactParser = EdifactParserFactory.mkEdifactParser(dir, messageTypes, camelContext)[..]from(direct(""D04B-import"")
      .process(edifactParser)``````log
[..]
  .   ____          _            __ _ _
 /
/ _{}'{} __ _ {}() __  __ _ \ \ \ \
( ( )___ | '_ | '| | ' \/ _` | \ \ \ \
 
/  _{})| |)| | | | | || (| |  ) ) ) )
  '  |__{}| .{}|| ||| |{}, | / / / /
 =========||==============|{}/=///{_}/
 :: Spring Boot ::                (v2.7.0)2022-06-27 09:40:22 INFO  ReceiveTestInterchange:55 - Starting ReceiveTestInterchange using Java 17.0.3
[..]
2022-06-27 09:40:25 INFO  ReceiveTestInterchange:61 - Started ReceiveTestInterchange in 3.391 seconds (JVM running for 4.847)
[..]
2022-06-27 09:40:25 INFO  CamelSpringBootExecutionListener:104 - Initialized CamelSpringBootExecutionListener now ready to start CamelContext
2022-06-27 09:40:25 INFO  CamelAnnotationsHandler:404 - Starting CamelContext with name [camelContext].
2022-06-27 09:40:25 WARN  Scanner:78 - Not scanning classpath for ClassLoader 'jdk.internal.loader.ClassLoaders$AppClassLoader'.  ClassLoader must implement 'java.net.URLClassLoader'.
2022-06-27 09:40:25 WARN  Scanner:78 - Not scanning classpath for ClassLoader 'jdk.internal.loader.ClassLoaders$AppClassLoader'.  ClassLoader must implement 'java.net.URLClassLoader'.
2022-06-27 09:40:25 INFO  EdifactParserFactory:39 - Created Smooks EDIFACT parser from directory D04B for message(s) [INVOIC, CONTRL]
2022-06-27 09:40:26 WARN  Scanner:78 - Not scanning classpath for ClassLoader 'jdk.internal.loader.ClassLoaders$AppClassLoader'.  ClassLoader must implement 'java.net.URLClassLoader'.
2022-06-27 09:40:26 WARN  Scanner:78 - Not scanning classpath for ClassLoader 'jdk.internal.loader.ClassLoaders$AppClassLoader'.  ClassLoader must implement 'java.net.URLClassLoader'.
2022-06-27 09:40:26 INFO  EdifactParserFactory:39 - Created Smooks EDIFACT parser from directory D07B for message(s) [APERAK]
2022-06-27 09:40:26 INFO  AbstractCamelContext:3004 - Apache Camel 3.17.0 (camel-1) is starting
2022-06-27 09:40:26 INFO  AbstractCamelContext:3222 - Tracing is enabled on CamelContext: camel-1
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
[..]
2022-06-27 09:40:26 INFO  CamelSpringBootApplicationListener:147 - Starting CamelMainRunController to ensure the main thread keeps running
2022-06-27 09:40:26 INFO  MainSupport:68 - Apache Camel (Main) 3.17.0 is starting
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 WARN  SmooksProcessor:259 - Attachments module could not be found: attachments will not be propagated
2022-06-27 09:40:26 INFO  SmooksProcessor:266 - SmooksProcessor [configUri=null] Started
2022-06-27 09:40:26 INFO  AbstractCamelContext:3165 - Routes startup (total:6 started:6)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started D04B-import-route (direct://D04B-import)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started D07B-import-route (direct://D07B-import)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started edifact-inbound-transfer-route (direct://edifact-inbound-transfer)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started inbound-acknowledge-route (direct://inbound-acknowledge)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3170 -     Started inbound-route (direct://inbound)
2022-06-27 09:40:26 INFO  AbstractCamelContext:3194 - Apache Camel 3.17.0 (camel-1) started in 1s351ms (build:78ms init:943ms start:330ms)
2022-06-27 09:40:27 INFO  Tracing:264 - *--> [inbound-rout] [from[direct://inbound]           ] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: byte[], ...]
2022-06-27 09:40:27 INFO  Tracing:264 -      [inbound-rout] [direct://edifact-inbound-transfer] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: byte[], ...]
2022-06-27 09:40:27 INFO  Tracing:264 - ---> [edifact-inbo] [from[direct://edifact-inbound-tra] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: byte[], ...]
2022-06-27 09:40:27 INFO  Tracing:264 -      [edifact-inbo] [convertBodyTo[java.io.InputStream] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: byte[], ...]
2022-06-27 09:40:27 INFO  Tracing:264 -      [edifact-inbo] [choice[when[{header(EdifactDirect] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: org.apache.camel.converter.stream.ByteArrayInputStreamCache, Body: [Body is instance of org.apache.camel.StreamCache]]
2022-06-27 09:40:27 INFO  Tracing:264 -      [edifact-inbo] [direct://D04B-import             ] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: org.apache.camel.converter.stream.ByteArrayInputStreamCache, Body: [Body is instance of org.apache.camel.StreamCache]]
2022-06-27 09:40:27 INFO  Tracing:264 - ---> [D04B-import-] [from[direct:\\{{edifactDirectory}}-] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: org.apache.camel.converter.stream.ByteArrayInputStreamCache, Body: [Body is instance of org.apache.camel.StreamCache]]
2022-06-27 09:40:27 INFO  Tracing:264 -      [D04B-import-] [ref:\\{{edifactParser}}            ] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: org.apache.camel.converter.stream.ByteArrayInputStreamCache, Body: [Body is instance of org.apache.camel.StreamCache]]
2022-06-27 09:40:27 INFO  DataProcessorFactory:106 - Compiling and caching DFDL schema...
2022-06-27 09:40:27 INFO  DfdlSchema:117 - Saving compiled DFDL schema to .smooks/dfdl-cartridge/EDIFACT-Interchange-9800488b-61fc-3578-af0d-05483fa510ef-.dfdl.xsd.dat
2022-06-27 09:40:37 INFO  Tracing:264 -      [D04B-import-] [Processor@0x22657db1             ] Exchange[Id: 583FC68FED10EF5-0000000000000000, BodyType: String, ...]
[..]
```As can be observed on the previous-to-last log entry, the DFDL schema is compiled (or loaded from cache) once the first camel exchange arrives at the Smooks processor only. (Plus, there are some other irregularities that I haven't been able to diagnose yet.). I am running on Kotlin 1.6.20 with JRE 17 as compile target.",No comments found
21554,Wish,Unassigned,Chamodya Dias,None,None,2024-12-16T19:53:26+0000,1734378806,2024-12-17T07:46:59+0000,2024-12-17T07:46:59+0000,Is there any plan to add a Gradle based version for this plugin?We have some teams who uses Gradle and need to use the functionality provided by this plugin.,"['Chamodya Dias - 2024-12-16T19:56:30+0000 I would like to work on this.\nIs it only Maven that is supported by Camel, if yes, is it okay to create a Gradle version of this plugin externally from a fork?\nHighly appreciate your guidance on this.\nThanks!', 'Claus Ibsen - 2024-12-17T07:46:59+0000 No there is no plan for thta']"
21553,New Feature,Claus Ibsen,Andrea Cosentino,None,4.10.0,2024-12-16T16:27:18+0000,1734366438,2025-02-15T08:27:28+0000,2024-12-18T09:10:08+0000,Here is an reproducer through camel-jbang: https://github.com/apache/camel-karavan/issues/1348#issuecomment-2545828481 in KaravanIf you run this with camel-jbang and run a local hashicorp vault instance withYou'll notice that the secret won't be resolved. The problem could be in the order we are configuring the vault and load the routes.,No comments found
21552,Bug,Claus Ibsen,Ricardo Martinez,None,"4.8.3,4.10.0",2024-12-16T14:58:04+0000,1734361084,2024-12-16T16:15:21+0000,2024-12-16T16:14:58+0000,"In the Camel YAML DSL there is a ""param"" property: https://github.com/apache/camel/blob/3c7d425dd4bfcb2db24227e1c1d70afed08e9e33/dsl/camel-yaml-dsl/camel-yaml-dsl/src/generated/resources/schema/camelYamlDsl.json#L14659-L14664but this property it's not present in the Camel model: https://github.com/apache/camel/blob/3c7d425dd4bfcb2db24227e1c1d70afed08e9e33/catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/models/get.json","['Claus Ibsen - 2024-12-16T15:07:14+0000 Yes this need special code to include that', 'Claus Ibsen - 2024-12-16T15:07:30+0000 @XmlElementRef\nprivate List<ParamDefinition> params = new ArrayList<>();\n@XmlElementRef\nprivate List<ResponseMessageDefinition> responseMsgs = new ArrayList<>();\n@XmlElementRef\nprivate List<SecurityDefinition> security = new ArrayList<>();', ""Ricardo Martinez - 2024-12-16T15:30:47+0000 Other missing properties\nWARNING: Option 'param' not found for processor 'org.apache.camel.model.rest.GetDefinition'\nWARNING: Option 'responseMessage' not found for processor 'org.apache.camel.model.rest.GetDefinition'\nWARNING: Option 'security' not found for processor 'org.apache.camel.model.rest.GetDefinition'\nincluding the other verbs, POST, PUT, HEAD, PATCH, DELETE""]"
21551,Improvement,Nikita_Konovalov,Petr Kuzel,4.9.0,4.11.0,2024-12-16T13:27:55+0000,1734355675,2025-02-21T10:09:25+0000,2025-02-21T10:09:25+0000,"For flexibility, expose a public processor that would convert the in body to the stream cache and document it.Added flexibility is that caller can select an exact point in the route pipeline where body should be converted, so having before and after conversion options unlike with current setStreamCache(val) route instruction.",No comments found
21550,Bug,Claus Ibsen,Narsi Reddy Nallamilli,4.1.0,"4.4.5,4.8.3,4.10.0",2024-12-16T09:44:01+0000,1734342241,2025-01-27T08:01:28+0000,2024-12-18T10:39:16+0000,Issue: sqs extender scheduler initial start is set to queues visibility timeout.  when the fifo queues in the application are couple of them it works but when its more it causes this issue.E.g if the visibility is 10sec the extender would start around 10sec and by the time the extender changes the visibility the message's visibility in the queue would have expired and got removed. And since the extender uses the expired message receipt handle sqs server return ReceiptHandleIsInvalidException but because this exception is supressed sqs client assumes it was successful.,"['Claus Ibsen - 2024-12-16T09:46:58+0000 Yeah the start should be 1 or something so its starter earlier', 'Narsi Reddy Nallamilli - 2024-12-16T09:49:40+0000 I see it was change in this commit,\nhttps://github.com/apache/camel/commit/9a29ad738c5514d1ea9dc8975b5ab353333eac21#diff-c85e8e2e10450ca6ea23878a310bcfa2901dbdd97e5616c1669f0b04a14fcc80L175', 'Claus Ibsen - 2024-12-16T14:04:04+0000 Thanks, do you want to help fix this by sending a code fix as a PR ?', 'Narsi Reddy Nallamilli - 2024-12-16T14:07:31+0000 davsclaus Sure, will do']"
21549,Improvement,Claus Ibsen,Claus Ibsen,4.9.0,4.10.0,2024-12-16T09:11:12+0000,1734340272,2024-12-16T09:40:45+0000,2024-12-16T09:40:45+0000,When starting CSB we see this WARN[INFO] 2024-12-16T10:09:51.392+01:00  WARN 48052 — [           main] o.a.c.i.e.DefaultCamelBeanPostProcessor  : No CamelContext defined yet so cannot inject into bean: startupConditionStrategyIts harmless but we should find a way to avoid having this WARN,No comments found
21548,Dependency upgrade,Freeman Yue Fang,Claus Ibsen,None,4.10.0,2024-12-16T08:45:29+0000,1734338729,2025-01-28T07:00:54+0000,2024-12-16T14:55:02+0000,This requires some test changes as some are failing during the upgrade.Also Quarkus CXF should maybe be upgraded as well.,"['Claus Ibsen - 2024-12-16T08:46:02+0000 ffang do you mind helping with this\ncc ppalaga', 'Peter Palaga - 2024-12-16T08:53:55+0000 Thanks for the heads up, davsclaus. Which Camel version are we targetting?', 'Claus Ibsen - 2024-12-16T09:00:31+0000 4.10 if possible otherwise it can go into 4.11 but we should have it into the next LTS', 'Freeman Yue Fang - 2024-12-16T13:29:56+0000 davsclaus, sure, I will take care of it.\nFreeman', 'Claus Ibsen - 2024-12-16T14:57:06+0000 Thanks Freeman, can you upgrade the cxf+codegen plugin also', 'Freeman Yue Fang - 2024-12-16T17:23:13+0000 davsclaus done.\nCheers\nFreeman']"
21547,New Feature,Unassigned,Claude Mamo,4.9.0,4.10.0,2024-12-14T15:44:04+0000,1734191044,2024-12-17T11:04:09+0000,2024-12-16T09:48:11+0000,"Currently, the integration between Camel and Smooks is spread between two modules: the Smooks Component and the Camel Cartridge. This could be confusing from a developer's perspective (especially if running Camel JBang) since they need to worry about which module to add as a dependency based on the type of integration they need. I propose migrating the remaining code from the Camel cartridge over to the Smooks component. After completing the migration, the Smooks team will retire the cartridge.",No comments found
21546,Bug,Unassigned,Artem St,"3.22.2,4.9.0",None,2024-12-13T13:37:49+0000,1734097069,2024-12-16T14:07:50+0000,2024-12-13T14:21:32+0000,"I'm not sure if this is a bug or intended behavior, but when we search for properties on an exchange, the search only checks the internalProperties of the exchange and the properties map. It does not look into safeCopyProperties.As a result, simple code like this stopped working after the attachments were refactored:The current implementation of getProperty is as follows:Shouldn't it be more like this to include safeCopyProperties in the lookup?","['Claus Ibsen - 2024-12-13T14:18:16+0000 If you work with attachments then work wit the Attachments API directly', 'Artem St - 2024-12-13T14:27:11+0000 davsclaus , Thank you for your reply. I understand that after the attachments were refactored, I should use the Attachments API directly. However, my concern is more about backward compatibility. We have numerous routes with similar code from older versions of Camel. If I understand correctly, safeCopyProperties could potentially be used not just for attachments but also for other properties, either now or in the future.', 'Claus Ibsen - 2024-12-16T14:07:50+0000 You can do something ala \n${message.getAttachmentObjects()}']"
21545,Bug,Claus Ibsen,Claus Ibsen,"3.17.0,4.4.4,4.8.2","3.22.3,4.4.5,4.8.3,4.10.0",2024-12-13T12:41:34+0000,1734093694,2024-12-13T12:46:44+0000,2024-12-13T12:45:42+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/jsonpath.20objectmapper,No comments found
21544,Improvement,Federico Mariani,Claus Ibsen,None,4.10.0,2024-12-13T12:28:44+0000,1734092924,2025-02-05T10:55:22+0000,2025-02-04T16:02:06+0000,"Only headers is populated with the form data, and the body is left as-is.However in CEQ/vertx/camel-main then we use platform-http-vertx that populates both headers and body by default.To align CSB and CEQ we would need to do the same.So we need an option to turn this on|off. We can maybe turn this on so they are the same out of the box. And users that rely on the old behaviour can turn it off.","['Naman Gupta - 2024-12-19T19:19:48+0000 Can I work on this ticket davsclaus ?', 'Claus Ibsen - 2024-12-20T15:39:15+0000 A work in progress is here\nhttps://github.com/rinaldodev/fork-camel/commit/083f0b8aacdd640f33b53db2ce7471c8ae8e1043\nRinaldo does not have the time to finish this work, so we would need to take over.\nNaman, do you have experience using Camel ?', 'Claus Ibsen - 2025-02-01T08:23:33+0000 fmariani I think you are fixing this directly in CSB via https://github.com/apache/camel-spring-boot/pull/1359', 'Federico Mariani - 2025-02-03T10:49:04+0000 Hello, I aligned the CSB and CEQ behavior, I did not add the option to turn it on|off, right now, the form is always present in the body as a Map.\nnemogpt do you still want to work on it?']"
21543,Bug,Claus Ibsen,Claus Ibsen,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-13T08:49:24+0000,1734079764,2024-12-13T09:17:11+0000,2024-12-13T09:17:11+0000,No description available,No comments found
21542,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-12T15:49:55+0000,1734018595,2024-12-12T19:07:28+0000,2024-12-12T19:07:28+0000,"When using Java code you may write some code that uses Camel beans such as a Kafka repository.This code cannot compile because you need camel-kafka on classpath, and the user may need to add this manually in jbang.We should try to detect this and auto download the JAR",No comments found
21541,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.10.0,2024-12-12T15:47:25+0000,1734018445,2025-02-05T10:08:10+0000,2025-02-05T10:08:10+0000,No description available,"['Zineb Bendhiba - 2025-01-31T19:42:13+0000 The work is ready on my fork. I will add documentation for the component and open a PR next Monday.', 'Zineb Bendhiba - 2025-02-05T10:08:10+0000 PR is merged']"
21540,New Feature,Unassigned,Zineb Bendhiba,None,None,2024-12-12T15:34:08+0000,1734017648,2024-12-12T15:34:53+0000,,Implement Vector search capabilities for PostgreSQL.Also  add the langchain4j Embeddings DataFormat for PostgreSQL + an Integration test in the langchain4j embeddings directory https://github.com/apache/camel/tree/main/components/camel-ai/camel-langchain4j-embeddings/src/test/java/org/apache/camel/component/langchain4j/embeddings,No comments found
21539,New Feature,James Netherton,Zineb Bendhiba,None,None,2024-12-12T15:30:55+0000,1734017455,2025-01-21T09:44:41+0000,,Implement Vector search capabilities for Infinispan.Also  add the langchain4j Embeddings DataFormat for Infinispan + an Integration test in the langchain4j embeddings directory https://github.com/apache/camel/tree/main/components/camel-ai/camel-langchain4j-embeddings/src/test/java/org/apache/camel/component/langchain4j/embeddings,"['James Netherton - 2025-01-15T12:02:31+0000 I have a POC where I can store and query an embedding created by Langchain4j.\nIt works in a similar way to the Langchain4j Infinispan embedding store. I added options so you can configure the vector dimension, similarity and the distance value to use in kNN searches.\nExample usage with langchain4j-embeddings:\n// Store an embedding\nfrom(""direct:put"")\n        .to(""langchain4j-embeddings:test"")\n        .transform(new DataType(""infinispan:embeddings""))\n        .to(""infinispan:test%s?embeddingStoreDimension=3"");\n\n// Query embeddings using a pre-baked kNN query\nfrom(""direct:query"")\n        .to(""langchain4j-embeddings:test"")\n        .setHeader(InfinispanConstants.OPERATION).constant(InfinispanOperation.QUERY)\n        .transform(new DataType(""infinispan:embeddings""))\n        .to(""infinispan:test?embeddingStoreDimension=3"");\nzbendhiba WDYT?', 'Zineb Bendhiba - 2025-01-15T16:16:06+0000 that sounds great ! Many thanks jamesnetherton', ""James Netherton - 2025-01-21T09:44:41+0000 Thinking that it may be safer to do this for 4.11 given that we are close(ish) to the next LTS release.\nI am more or less done with development. I've got a branch with my current WIP here:\nhttps://github.com/jamesnetherton/camel/tree/CAMEL-21539""]"
21538,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.9.0,4.10.0,2024-12-12T11:41:08+0000,1734003668,2025-02-01T08:26:43+0000,2025-02-01T08:26:32+0000,"In camel-tracing component we're supporting a custom setting of MDC trace_id and span_id. This is requiring a deep coupling between the core and the tracing component and is very error prone as it requires a proper cleaning to avoid that any traces set in the thread previously is not used afterwards. As shown in CAMEL-21472 there are inconsistencies that would suggest to deprecate this feature and favouring the specific tracing implementation (ie, Opentelemetry, Micrometer Observability) instead.These frameworks are already providing embedded mechanisms to set and clear the MDC while they manage the related traces/spans.","['Claus Ibsen - 2025-02-01T08:20:01+0000 I assume this work is done', 'Pasquale Congiusti - 2025-02-01T08:26:43+0000 Yes. Closed.']"
21537,Task,Unassigned,Anushka Juli,None,4.10.0,2024-12-12T07:40:45+0000,1733989245,2024-12-12T09:52:04+0000,2024-12-12T09:52:04+0000,We want to provide ppc64le arch support to camel-mongodb in the camel component,No comments found
21536,Bug,Unassigned,Bjorn Beskow,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-12T07:08:38+0000,1733987318,2024-12-12T09:29:33+0000,2024-12-12T09:29:33+0000,"If spring.threads.virtual.enabled = true, a Camel application that uses camel-platform-http-starter fails at startup withCaused by: java.lang.RuntimeException: No ThreadPoolTaskExecutor configured
 at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration.lambda$springBootPlatformHttpEngine$1(SpringBootPlatformHttpAutoConfiguration.java:54) ~[camel-platform-http-starter-4.9.0.jar:4.9.0]
 at java.base/java.util.Optional.orElseThrow(Optional.java:403) ~[na:na]
 at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration.springBootPlatformHttpEngine(SpringBootPlatformHttpAutoConfiguration.java:54) ~[camel-platform-http-starter-4.9.0.jar:4.9.0]
 at java.base/jdk.internal.reflect.DirectMethodHandleAccessor.invoke(DirectMethodHandleAccessor.java:103) ~[na:na]
 at java.base/java.lang.reflect.Method.invoke(Method.java:580) ~[na:na]
 at org.springframework.beans.factory.support.SimpleInstantiationStrategy.lambda$instantiate$0(SimpleInstantiationStrategy.java:171) ~[spring-beans-6.2.0.jar:6.2.0]
 ... 24 common frames omittedunless a ThreadPoolTaskExecutor is explicitly configured.","['Bjorn Beskow - 2024-12-12T07:10:15+0000 The problem seems to be caused by https://github.com/apache/camel-spring-boot/pull/1278/commits/cd4deb0eda78054641056eb948a797b0a5a04560 which now requires a ThreadPoolTaskExecutor to be configured:\n @Bean(name = ""platform-http-engine"")\n   @ConditionalOnMissingBean(PlatformHttpEngine.class)\n   public PlatformHttpEngine springBootPlatformHttpEngine(Environment env) {\n       Executor executor;\n       if (executors != null && !executors.isEmpty()) {\n           executor = executors.stream()\n                   .filter(e -> e instanceof ThreadPoolTaskExecutor)\n                   .findFirst()\n                   .orElseThrow(() -> new RuntimeException(""No ThreadPoolTaskExecutor configured""));\n       } else {\n           throw new RuntimeException(""No Executor configured"");\n       }\n       int port = Integer.parseInt(env.getProperty(""server.port"", ""8080""));\n       return new SpringBootPlatformHttpEngine(port, executor);\n   }\nIf using virtual threads, the default auto-configuration of an executor (defined in TaskExecutorConfiguration) instead uses a SimpleAsyncTaskExecutor:\nclass TaskExecutorConfigurations {\n   TaskExecutorConfigurations() {\n   }\n   @Configuration(\n       proxyBeanMethods = false\n   )\n   @ConditionalOnMissingBean({Executor.class})\n   static class TaskExecutorConfiguration {\n       TaskExecutorConfiguration() {\n       }\n       @Bean(\n           name = {""applicationTaskExecutor"", ""taskExecutor""}\n       )\n       @ConditionalOnThreading(Threading.VIRTUAL)\n       SimpleAsyncTaskExecutor applicationTaskExecutorVirtualThreads(SimpleAsyncTaskExecutorBuilder builder) {\n           return builder.build();\n       }\n       @Lazy\n       @Bean(\n           name = {""applicationTaskExecutor"", ""taskExecutor""}\n       )\n       @ConditionalOnThreading(Threading.PLATFORM)\n       ThreadPoolTaskExecutor applicationTaskExecutor(ThreadPoolTaskExecutorBuilder threadPoolTaskExecutorBuilder) {\n           return threadPoolTaskExecutorBuilder.build();\n       }\n   }\nHence no ThreadPoolTaskExecutor instance is auto-configured by default, and therefore the exception is thrown.\n  This problem didn\'t exist in 4.8.1, it is a regression problem introduced in 4.8.2/4.9.0.', 'Bjorn Beskow - 2024-12-12T07:11:14+0000 A simple workaround I use know is to explicitly configure a ThreadPoolTaskExecutor instance (and instruct it to use virtual threads):\n@Configuration\npublic class VirtualThreadPoolTaskExecutorConfig {\n @Bean\n @ConditionalOnMissingBean(AsyncTaskExecutor.class)\n ThreadPoolTaskExecutor threadPoolTaskExecutor(ThreadPoolTaskExecutorBuilder builder) {\n   ThreadPoolTaskExecutor threadPoolTaskExecutor = builder.build();\n    threadPoolTaskExecutor.setVirtualThreads(true);\n   return threadPoolTaskExecutor;\n }\n{color:#000000}}', 'Bjorn Beskow - 2024-12-12T08:47:34+0000 Pull request submitted: https://github.com/apache/camel-spring-boot/pull/1306', 'Claus Ibsen - 2024-12-12T09:29:33+0000 Thanks for the PR']"
21535,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-11T14:06:39+0000,1733925999,2024-12-12T14:27:20+0000,2024-12-12T14:27:20+0000,"The Camel tool needs a bit easier way to validate that groovy scripts (and potential others) can be quickly validated - there is some APIs in camel-catalog but it does not fit as well to groovy as lack of camel context being present, and also lack of more precise line number error reporting.","['Raymond - 2024-12-12T10:31:04+0000 Just for reference:\nIn Assimbly we have a validator package:\nhttps://github.com/assimbly/runtime/tree/develop/dil/src/main/java/org/assimbly/dil/validation\nThis also include a script validator class. This is used in a low-code platform Dovetail:\nhttps://academy.dovetail.world/docs/components/construction/script#example-of-script-evaluation\nA side note:\nIn general, the script validator works fine for us, but we do miss the line number on the errors. So that would be a good gain. Also, in some rare cases the script is validated correctly, but fails in a real route. For example, this line:\nGString host = “${serviceName}.${region}.amazonaws.com”\nThis code validated correctly, but failed when setting the host variable to a header with a Groovy script in a route.\n  This probably is because the validation method used implicitly a toString() method on the GString object in the header, while when running in a route (using direct as transport) the object stays as is, and was then represented as \'json\' in the tracing. When putting a ActiveMQ queue after the script, it worked, because probably there also a toString() kind of conversion is done.\nThen I got the feedback from users: ""your validation is not trustable, because there is a difference between validating and real usage of the script."" So it\'s good to check/test if output of the validation is exactly the same as the output of running the script in a route.', 'Claus Ibsen - 2024-12-12T14:26:03+0000 Thanks for the pointers. We have improved camel-groovy and its able to get ""index"" in some situations - the index is absolute pos in the script']"
21534,Task,Thomas Diesler,Thomas Diesler,None,None,2024-12-11T11:24:50+0000,1733916290,2024-12-11T11:29:28+0000,2024-12-11T11:29:15+0000,No description available,"['Thomas Diesler - 2024-12-11T11:27:40+0000 CAMEL-21530: camel-jbang - Remove deps on runtime and cluster-type where no longer needed\nCAMEL-21325: camel-jbang - Kubernetes run should cleanup old temp folders (#16443)\nCAMEL-21456 : camel-jbang-kubernetes - Add TLS support to ingress trait (#16427)', 'Thomas Diesler - 2024-12-11T11:28:11+0000 PR: https://github.com/apache/camel/pull/16530', 'Claus Ibsen - 2024-12-11T11:29:09+0000 4.9 is not an LTS branch there will not be any patch releases.', 'Claus Ibsen - 2024-12-11T11:29:28+0000 Thomas only 4.8 LTS and main branch']"
21533,Task,Thomas Diesler,Thomas Diesler,None,4.8.3,2024-12-11T06:20:21+0000,1733898021,2024-12-13T07:20:37+0000,2024-12-13T07:20:37+0000,"The backport for knative test coverage was not strait forward because there was no target to apply the changes too. Hence, they have been left out in the backport PR.",['Thomas Diesler - 2024-12-13T07:20:37+0000 Done']
21532,Bug,Unassigned,Bartosz Popiela,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-11T00:43:38+0000,1733877818,2024-12-11T06:55:48+0000,2024-12-11T06:55:48+0000,"When running Camel jBang on Windows with --logging-category set, org.apache.logging.log4j.core.util.FileUtils#fileFromUri throwsTo reproduce run",['Bartosz Popiela - 2024-12-11T01:19:21+0000 PFA pull requests with the fix.']
21531,Bug,Freeman Yue Fang,Freeman Yue Fang,None,"4.8.3,4.10.0",2024-12-10T17:16:15+0000,1733850975,2024-12-10T21:56:29+0000,2024-12-10T21:56:29+0000,"This line in the codeis broken for some time zones.Like there is no timezone for the date 2023-01-01, so GMT is used by default. But in RestOpenApiSupport, theSo the local timezone where we run the test is used. Because the timezone differences with GMT, the expect return string after calling RestOpenApiSupport.getFromOpenAPI3 could be
2022-12-31 instead of 2023-01-01. Similarly for 2023-02-02 and 2023-03-03 in the test, could be one day before it.",No comments found
21530,Task,Thomas Diesler,Thomas Diesler,None,"4.8.3,4.10.0",2024-12-10T14:14:57+0000,1733840097,2024-12-13T07:20:20+0000,2024-12-13T07:20:20+0000,"Now, that every runtime and cluster-type uses JKube to generate the k8s resources. It is no longer needed to switch behaviour depending on runtime or cluster-type. Some API methods still carry those parameters.",['Thomas Diesler - 2024-12-13T07:20:20+0000 Done']
21529,New Feature,Thomas Diesler,Thomas Diesler,None,"4.8.3,4.10.0",2024-12-10T12:55:50+0000,1733835350,2024-12-11T06:56:02+0000,2024-12-11T06:56:02+0000,"A local mvn build does not reliably expose the camel version is such a way that it can be picked up by the VersionHelper. As a result, tests that rely on a valid camel version may see an empty string instead. JBang generated source code cannot have an empty camel version.",No comments found
21528,Bug,James Netherton,James Netherton,None,"4.8.3,4.10.0",2024-12-10T08:23:33+0000,1733819013,2024-12-10T13:43:05+0000,2024-12-10T13:43:05+0000,"Relates to this issue reported in Camel Quarkus:https://github.com/apache/camel-quarkus/issues/6856In this case, the event loop is blocked during message redelivery as the route has a processor that invokes some slow blocking code.",No comments found
21527,New Feature,Unassigned,Federico Mariani,4.8.0,4.x,2024-12-09T16:32:13+0000,1733761933,2024-12-10T13:39:48+0000,,"A recipe for Camel Spring Boot users can be added with the following features:For example, a recipe for Camel Spring Boot 4.8 would be like this:once we ship a recipe like this, the following configuration can be used in the pom.xml openrewrite plugin section:In this case, rewrite-spring:5.24.1 will do the upgrade to the Spring Boot version supported by Camel 4.8.",['Federico Mariani - 2024-12-09T16:39:00+0000 fyi jondruse']
21526,Bug,Andrea Cosentino,Artem,"3.20.9,4.9.0","4.8.3,4.10.0",2024-12-09T14:51:55+0000,1733755915,2024-12-12T13:12:16+0000,2024-12-12T13:12:16+0000,"Problem
In AWS Kinesis, the iteratorType=AT_TIMESTAMP is an option that allows you to start consuming records from a stream starting at a specific point in time.
To use iteratorType=AT_TIMESTAMP, we need to request the GetShardIterator from AWS Kinesis API and specify Timestamp parameter for that request.
This message timestamp parameter must be set initially when we create AWS Kinesis Consumer.
But in current Camel implementation unfortunately we don't have such ability.
You can see in docs (https://camel.apache.org/components/next/aws2-kinesis-component.html) that all we can is to set CamelMessageTimestamp message header. This way is not suitable for initial setup of the iterator.
Apparently, the most suitable way is to set the timestamp in the URL options (like for sequenceNumber).Steps to reproduce
You can use the example project attached to this bug.Solution
Possible solution you can find here: https://github.com/apache/camel/commit/8772c5f2d4a57633447d2717dff53d87555b0e3b",No comments found
21525,Bug,Claus Ibsen,omar alles,"4.8.2,4.9.0","4.8.3,4.10.0",2024-12-09T09:05:42+0000,1733735142,2024-12-09T10:47:47+0000,2024-12-09T10:47:47+0000,"Hi Team,I believe there is a bug in the camel-debezium-postgres-starter module.This issue affects at least versions 4.8.2 and 4.9.0.Specifically, the auto-configured bean listed in the META-INF/spring/org.springframework.boot.autoconfigure.AutoConfiguration.imports file points to:org.apache.camel.component.debezium.springboot.DebeziumPostgresComponentAutoConfigurationHowever, the correct package for DebeziumPostgresComponentAutoConfiguration should be:org.apache.camel.component.debezium.postgres.springboot.DebeziumPostgresComponentAutoConfigurationDue to the nature of the issue, other camel debezium spring boot starters might be affected.",['Claus Ibsen - 2024-12-09T10:47:47+0000 Thanks for reporting']
21524,Improvement,Claus Ibsen,Aurélien Pupier,4.9.0,4.10.0,2024-12-09T07:52:30+0000,1733730750,2024-12-09T10:59:03+0000,2024-12-09T10:59:03+0000,"currently when a Catalog is asked to be loaded and cannot be, there is no trace of this problem because Exceptions are caught and ignored (even the ones thrown in the same method few lines before).see for instance org.apache.camel.dsl.jbang.core.common.CatalogLoader.loadSpringBootCatalog(String, String)",['Claus Ibsen - 2024-12-09T10:56:00+0000 Yeah so if you need a SB or Quarkus catalog then we should not hide the exception but lets bubble it up']
21523,Test,Unassigned,Aurélien Pupier,4.9.0,4.x,2024-12-09T07:48:11+0000,1733730491,2025-01-20T13:14:53+0000,,"In Camel JBang tests, there are several assertions checking the p^resence of a specific Maven dependency. it is asserting true/false by looking for each field one by one. Only an high levvel true/false assertion is returned. it is making it hard to know what is checked without looking deepp in the code and placing breakpoints.Providing an assertion specific for the Maven dependency and mentioning which one was expected and which one was found/not found will simplify debugging.several of these checks are used in https://github.com/apache/camel/blob/main/dsl/camel-jbang/camel-jbang-core/src/test/java/org/apache/camel/dsl/jbang/core/commands/ExportTest.javafor instance:",No comments found
21522,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-07T09:39:07+0000,1733564347,2024-12-07T10:11:35+0000,2024-12-07T10:11:35+0000,This can make it a bit more flexible if you just want to use groovy in a specific log eip and then leave the others as default.,No comments found
21521,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2024-12-07T09:32:05+0000,1733563925,2025-01-09T09:19:09+0000,,We should make camel-jbang more for standard Camel and remove the bind command (its a camel-k feature). A normal camel route is more powerful.,No comments found
21520,Bug,Unassigned,Francois Papon,3.x,3.22.3,2024-12-06T18:35:58+0000,1733510158,2024-12-09T08:08:57+0000,2024-12-09T08:03:02+0000,"When using Camel route-show Karaf command (export a route definition in xml) with a route containing an errorHandler, we have an error from org.apache.camel.model.errorhandler package not found.The dynamic-import Karaf command fix it.The org.apache.camel.model.errorhandler is missing from the camel.osgi.import of the camel-xml-jaxb bundle.","['Claus Ibsen - 2024-12-06T19:51:34+0000 Can you send a PR for the camel-3.22.x branch', 'Francois Papon - 2024-12-08T11:43:19+0000 Yes, I am on it and will send a PR today.', 'Francois Papon - 2024-12-08T15:45:09+0000 Done, see my comments on the generated files => https://github.com/apache/camel/pull/16483']"
21519,Improvement,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.3,4.10.0",2024-12-06T10:32:23+0000,1733481143,2024-12-06T17:58:33+0000,2024-12-06T17:58:33+0000,"When dumping to yaml dsl then expression values should be in quoted textFails- setHeader:
                  name: Exchange.HTTP_RESPONSE_CODE
                  constant:
                    expression: 404Works- setHeader:
                  name: Exchange.HTTP_RESPONSE_CODE
                  constant:
                    expression: ""404""","['Claus Ibsen - 2024-12-06T11:17:12+0000 Okay so its the jackson \nmapper.enable(YAMLGenerator.Feature.MINIMIZE_QUOTES);\n \nWe can turn of mimimizing quotes, but then the dump will contain a lot more quoted text']"
21518,Improvement,James Netherton,James Netherton,None,4.10.0,2024-12-05T10:59:10+0000,1733396350,2025-01-06T15:00:51+0000,2025-01-06T15:00:51+0000,E.g like how it's done in camel-elasticsearch:https://camel.apache.org/components/next/elasticsearch-component.html#_endpoint_header_operation,No comments found
21517,Task,Unassigned,Stanislav Deviatov,None,4.10.0,2024-12-05T10:44:39+0000,1733395479,2024-12-05T15:38:57+0000,2024-12-05T15:38:57+0000,Google has deprecated Pub/Sub Lite service (link):so let's deprecate our component (camel-google-pubsub-lite).,['Claus Ibsen - 2024-12-05T15:38:57+0000 Thanks for reporting and the PR']
21516,Bug,Claus Ibsen,Claus Ibsen,"4.8.1,4.9.0","4.8.3,4.10.0",2024-12-05T10:27:14+0000,1733394434,2024-12-05T14:19:57+0000,2024-12-05T14:19:57+0000,Its a bit weird but a simple route alaIs generated asThe last to has no uri-as-parameters. As those are the in the context-path and are UriPath. Those are harder to make as parameters.,No comments found
21515,Improvement,Claus Ibsen,Sateesh Divvela,3.14.0,4.10.0,2024-12-04T17:11:26+0000,1733332286,2024-12-05T07:35:12+0000,2024-12-05T07:35:12+0000,"The current implementation of the Google Pub/Sub publisher does not allow for customization of retry settings. To address this, we propose adding a new ""retry"" option to the Google Pub/Sub endpoint that enables users to pass in their own custom RetrySettings instance. This will provide greater flexibility and control over retries.","['Claus Ibsen - 2024-12-04T19:20:48+0000 Camel 3 is EOL. You need to upgrade to Camel 4, and you can then try the google-pubsub component on the latest release such as 4.9.0 or 4.8.x and report back here.\nWe will NOT do any changes on 3.x', ""Sateesh Divvela - 2024-12-04T20:17:13+0000 davsclaus  Thank you for your quick response. After verifying the latest version (4.8.2) of google-pubsub component, I realized that this option is not yet implemented. To address this, I've attached a patch file with the necessary changes. Could you please provide guidance on the earliest version of google-pubsub that this change can be integrated into?"", 'Claus Ibsen - 2024-12-05T07:35:12+0000 Thanks for reporting and the patch.']"
21514,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-12-04T12:07:01+0000,1733314021,2024-12-04T13:05:38+0000,2024-12-04T13:05:38+0000,Seehttps://github.com/belaban/JGroups/discussions/870#discussioncomment-11460448,No comments found
21513,Improvement,Unassigned,Nathan,4.4.4,4.x,2024-12-04T11:26:22+0000,1733311582,2024-12-04T14:13:38+0000,,"Context
The CoreTypeConverterRegistry uses a map of converters to find a converter for a TypeConvertible<from,to>.If there is no known converter it attempts to find one in the existing converter map based on the idea that an existing converter on a super class can be used.
This logic is contained in the TypeResolverHelper.tryMatch method. The tryMatch method will do an exhaustive search on the types in the converter and the super classes of the to convert value.To do this tryMatch will iterate over all the existing converters. Each existing converter<from,to> will then be compared to the super classes of the TypeConvertible<from,to>.Problem
The problem is that the TypeResolverHelper.tryMatch can be highly random in selecting a converter. The first converter that matches is chosen and stored for all future usage of this specific type conversion.
But the order of iteration for the converter map is not guaranteed to be the same every time. It is very likely that it is different for every load, since it depends on the order that converters have been added and there is no order guarantee on HashMap entry set iteration.This is not only theoretical, we already had a problem with the type conversion of DeferredElementNSImpl to CxfPayload. DeferredElementNSImpl implements both org.w3c.dom.Element and org.w3c.dom.NodeList. Both of those have converters in the CxfPayloadConverterLoader.
But the converter chosen was random and often changed after application restarts. This caused problems for us since the NodeList to CxfPayload did not transform the DeferredElementNSImpl as expected.Workaround
There is an easy workaround by defining your own converters to ensure the correct conversion happens, but this workaround can be cumbersome for applications with a lot of implicit type conversions. 
Especially if the correct conversion does exist, but is just not used.Solution?
I do think there is a potential solution, the converter iteration is random and it would be inefficient to order it. That would also not necessarily fix anything since any order could be wrong for some specific conversion.
Instead the TypeResolverHelper.tryMatch could change things by iterating over the super classes of the from first. And try to find a converter for each super class.
The complication is that the super class iteration is done in the TypeConvertible, so it would have to be duplicated or moved into the TypeResolverHelper to do that.
The method getInterfaces that is used in the TypeConvertible is ordered by the JDK, so there would be no randomness. Instead it would select the first existing converter that is actually closest to the target class.
This is much better than just the first converter that happens to match with an interface removed 5 super classes.For the DeferredElementNSImpl it would then go:
look for DeferredElementNSImpl -> not found
look for ElementNSImpl -> not found
look for ElementImpl -> not found
Look for Element -> found CxfPayloadConverter.elementToCxfPayload",['Claus Ibsen - 2024-12-04T14:13:29+0000 You are welcome to work on a proposed path and send a PR or attach code to this JIRA']
21512,Bug,Claus Ibsen,Claus Ibsen,None,"4.8.3,4.10.0",2024-12-04T09:55:24+0000,1733306124,2024-12-08T11:37:39+0000,2024-12-08T11:37:39+0000,If you have multiple seperated <rest> ... </rest> then it appears that the transformed output is only including the last <rest> block.,No comments found
21511,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.3,4.10.0",2024-12-04T09:51:36+0000,1733305896,2024-12-06T13:01:51+0000,2024-12-06T13:01:51+0000,"If you transform a route that uses rest-dsl then Camel will inlined routes by default, and the dump cannot have the routes included. So we need to make Camel run without inlining.",No comments found
21510,Improvement,Thomas Diesler,Bruno Meseguer,None,"4.8.3,4.10.0",2024-12-04T09:42:56+0000,1733305376,2024-12-16T16:15:49+0000,2024-12-16T16:15:49+0000,"The current implementation of the Kubernetes plugin selects as the deployment name the first file source listed in the deployment command, for example, in:Would result in a deployment name ""main""Adding support for a parameter --name would help gain control over the deployment name. For example:Resulting in deploying an integration using the name ""price""","['Thomas Diesler - 2024-12-10T13:13:36+0000 We have ""--gav=examples:route:1.0.0"" which should address this in a more general way.\nIts general jbang functionality, implemented here.', 'Bruno Meseguer - 2024-12-10T14:03:48+0000 hi tdiesler \nThe idea is to keep consistency with Camel JBang, which supports the parameter. Camel K also has the parameter. It is more user-friendly and helps Camel beginners who are not experienced with Java.', 'Thomas Diesler - 2024-12-10T14:10:47+0000 Please reopen if you think there is anything else to do.', ""Thomas Diesler - 2024-12-10T14:53:38+0000 Sure, we make this as user friendly as we can. Where do you see this --name parameter for export. It should be here somewhere, right? If you don't know, of the top of your head, don't worry, I'll take another closer look tomorrow."", 'Bruno Meseguer - 2024-12-10T15:05:27+0000 In the description, I\'m referring more to the `run` command (the export remains hidden).\nIn Camel JBang you can run with ""camel run * --name=myapp""\nSame in Camel K.\nThe idea is to do the same with the Kubernetes plugin', 'Thomas Diesler - 2024-12-16T11:33:33+0000 Done', 'Thomas Diesler - 2024-12-16T14:50:44+0000 Awaiting 4.8.x merge']"
21509,Dependency upgrade,James Netherton,Claus Ibsen,None,4.10.0,2024-12-04T09:00:23+0000,1733302823,2025-01-14T14:56:10+0000,2025-01-08T15:09:05+0000,https://blog.marcnuri.com/fabric8-kubernetes-client-7-0The CEQ project may need to upgrade as well to make this work on Quarkus.A,"['Claus Ibsen - 2024-12-05T15:39:15+0000 This need code updates in the jbang commands', 'Claus Ibsen - 2024-12-06T12:00:39+0000 Okay there is another dependency for knative that needs to be upgraded also', 'Claus Ibsen - 2024-12-13T13:05:14+0000 https://github.com/fabric8io/kubernetes-client/blob/main/doc/MIGRATION-v7.md#mockwebserver-vertx', 'James Netherton - 2025-01-07T08:41:15+0000 FWIW Quarkus has upgraded for their next release (3.18):\nhttps://github.com/quarkusio/quarkus/pull/45259', 'Claus Ibsen - 2025-01-07T10:27:59+0000 Okay so lets get this into the next Camel release. Help is welcome as the upgrade likely requires code changes in camel also.', 'Thomas Diesler - 2025-01-14T14:05:33+0000 This seem to break `camel jbang kubernetes run` - see CAMEL-21621']"
21508,New Feature,Tadayoshi Sato,Tadayoshi Sato,4.8.1,4.10.0,2024-12-04T05:27:01+0000,1733290021,2025-01-17T12:01:02+0000,2025-01-16T11:30:27+0000,"KServe is a standard for serving AI models on Kubernetes. Popular model servers such as OpenVINO and Triton already support KServe, so once Camel provides a component for KServe it can immediately support multiple model servers for invoking inference with different formats of AI models on Kubernetes.",No comments found
21507,Improvement,Gaelle Fournier,Gaelle Fournier,4.8.2,4.8.3,2024-12-03T14:35:55+0000,1733236555,2024-12-05T08:48:12+0000,2024-12-05T08:48:12+0000,"To avoid maintenance effort for camel-jbang kubernetes plugib on LTS 4.8.x, the current Trait model needs to be backported on 4.8.x.This means any work from these issues compatible with 4.8.x:",No comments found
21506,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.2,"4.8.3,4.10.0",2024-12-03T13:30:35+0000,1733232635,2024-12-05T09:03:59+0000,2024-12-05T08:49:13+0000,The following route breaks the code:,No comments found
21505,Bug,Jono Morris,Meinolf S-D,4.8.1,"4.8.4,4.10.0",2024-12-03T11:38:10+0000,1733225890,2025-01-30T12:15:32+0000,2025-01-30T12:15:32+0000,Binary files get corrupt when using base64 content transfer encoding due to String assignment of the decoded byte[]This can easily be tested sending a .zip file to Camel AS2 listener.After some investigation the issue seems to be in the EntityUtil.decode method.As shown in the screenshot the decoded (binary) byte[] is assigned to a new String which result into corrupt date in case of binary content.In addition there are new line characters in the encoded base64 encoded String data object.In case of using transfer encoding type binary java.nio.charset.MalformedInputException: Input length = 1 it thrown which might be OK.,"['Claus Ibsen - 2024-12-03T11:41:02+0000 You are welcome to send a PR with a potential fix for review', ""Meinolf S-D - 2024-12-16T13:06:41+0000 I'm sorry but I have no fix for this."", 'Claus Ibsen - 2024-12-26T12:12:13+0000 jono I wonder if you would have time to look into this. As it looks like that a US-ASCII Charset is selected by default. I wonder if there is a way to understand from the received AS2 message whether its binary or not. I assume there is a header indicating binary vs plain text', 'Jono Morris - 2024-12-26T12:18:49+0000 davsclaus, yes I can have a look.', ""Jono Morris - 2025-01-10T12:12:07+0000 Looking at sections 3.4 and 3.5 of AS2 spec [1], AS2 appears to be primarily designed for sending EDI messages using 7-bit US-ASCII.  \nCamel-AS2 provides EDIFACT, EDI-X12, EDI-CONSENT, and XML entity types, all of which only support text.  However, I've found that Zip content can be sent if it is first Base64 encoded, and I've created a few examples [2].\n   \n   1. https://www.ietf.org/rfc/rfc4130.txt\n   2. https://github.com/apache/camel/compare/main...jonomorris:camel:CAMEL-21505_zipfile_example?expand=1"", 'Meinolf S-D - 2025-01-10T14:23:52+0000 Hi jono,\nI would give some more information on how I have tested this when I found the issue.\nI have used Mendelson AS2 Server as Client to send the AS2 Message to Camel AS2.\nIn Mendelson I have configured \'Content Transfer Encoding:\' \'base64\' and \'Payload content type:\' \'application/EDI-Consent\'.\nI sent a zip file containing some content items during my tests.\nWhen receiving the file in the processor it was already corrupted and after saving it to the filesystem the zip file can\'t be opened.\nAfter debugging the the Camel AS2 module I saw it gets corrupt in EntityUtil.decode method because the base64 encoded zip file is decoded to a native zip byte[].\nThe decoded native zip byte[] then is given as a parameter to a String Constructor which obviously lets a binary get corrupt.\nHere is a screenshot of the Mendelson AS2 Partner Configuation\nIn your provided Unit Tests you have choosen \'7bit\' content transfer encoding instead of \'base64\' content transfer encoding: EDI_MESSAGE_CONTENT_TRANSFER_ENCODING = ""7bit""\nThis is a different approach. If you are choosing \'base64\' content transfer encoding the decode method in EntityUtils will run into \'case ""base64""\' and do a decode of the base64 encoded zip and give the decoded byte[] to the String constructor.\nswitch (encoding.toLowerCase()) {\n    case ""base64"":\n        return Base64.decode(data);\n    case ""quoted-printable"":\n        return QuotedPrintableCodec.decodeQuotedPrintable(data);\n    case ""binary"":\n    case ""7bit"":\n    case ""8bit"":\n        // Identity encoding\n        return data;\n    default:\n        throw new CamelException(""Unknown encoding: "" + encoding);\n} \nPossibly this helps for the reproduction.', ""Jono Morris - 2025-01-11T10:56:08+0000 meinolf01 thanks for the information.  I'll investigate further."", 'Claus Ibsen - 2025-01-28T08:31:58+0000 Jono, let us know how it goes', 'Jono Morris - 2025-01-28T11:55:23+0000 Claus, I just raised a PR for you to look at.  Sorry for the delay.', 'Claus Ibsen - 2025-01-28T12:19:26+0000 Thanks Jono, a PR for the 4.8.x branch is welcome. However if you think its super easy then tell me and I can try to do it.', ""Jono Morris - 2025-01-28T12:29:41+0000 I've run out of time tonight Claus.  You're welcome to do it, otherwise I can do it tomorrow."", 'Claus Ibsen - 2025-01-28T15:00:45+0000 Thanks I tried to backport, but testing locally I get a timeout error\n[INFO] — failsafe:3.5.0:verify (integration-test) @ camel-as2 —\n[INFO] ------------------------------------------------------------------------\n[INFO] Reactor Summary for Camel :: AS2 :: Parent 4.8.4-SNAPSHOT:\n[INFO]\n[INFO] Camel :: AS2 :: Parent ............................. SUCCESS [  0.897 s]\n[INFO] Camel :: AS2 :: API ................................ SUCCESS [01:56 min]\n[INFO] Camel :: AS2 :: Component .......................... FAILURE [10:04 min]\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD FAILURE\n[INFO] ------------------------------------------------------------------------\n  Without the PR then the 4.8.x branch can test success locally.']"
21504,Bug,Claus Ibsen,Nikola Dangubic,"4.4.4,4.8.1","4.8.3,4.10.0",2024-12-03T10:49:06+0000,1733222946,2025-01-07T08:42:07+0000,2025-01-07T08:42:07+0000,MicrometerTagsAutoConfiguration probably has copy/paste error where instead of uri it puts http method in map for metricsand output looks likeOne would expect uri value for uri tag.,"['Claus Ibsen - 2024-12-03T10:53:16+0000 You cannot have full uris as they can be dynamic and cause too many unique values for the observability tools. So it has to be limited - but could possible be the uri base path.', 'Nikola Dangubic - 2024-12-03T11:13:52+0000 Understandable for full uris. I would expect behaviour like commented in https://issues.apache.org/jira/browse/CAMEL-19136', 'Claus Ibsen - 2024-12-03T12:33:33+0000 Thanks for the pointer to the JIRA.', 'Claus Ibsen - 2024-12-03T12:33:58+0000 Federico Mariani something possible to look into for CSB', 'Claus Ibsen - 2025-01-07T08:42:07+0000 Thanks for reporting']"
21503,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,4.10.0,2024-12-03T09:12:02+0000,1733217122,2025-01-08T14:42:02+0000,2025-01-08T14:42:02+0000,Function calling features were moved to the tools component as part of CAMEL-21153.,"['Claus Ibsen - 2025-01-08T14:38:40+0000 Is this work done', 'Otavio Rodolfo Piske - 2025-01-08T14:42:02+0000 Fixed with the linked PRs.']"
21502,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.8.1,4.9.0","4.8.3,4.10.0",2024-12-03T09:10:57+0000,1733217057,2025-01-06T12:18:32+0000,2025-01-06T12:18:32+0000,"Some bits of the documentation still refer to ""langchain4j-chat"". These should be fixed to use the tools component.","['Claus Ibsen - 2025-01-04T09:03:39+0000 Is this done', 'Otavio Rodolfo Piske - 2025-01-06T12:18:20+0000 Yes, we can close it.', 'Otavio Rodolfo Piske - 2025-01-06T12:18:32+0000 Fixed w/ the linked PRs.']"
21501,Bug,Unassigned,Nathan,"4.4.4,4.8.1",None,2024-12-03T08:46:32+0000,1733215592,2024-12-03T08:49:43+0000,2024-12-03T08:49:43+0000,"There is a bug in saxon HE starting from saxon HE 10. The xslt concat function with multi parameters:  concat(s,s,...) does not correctly concat consecutive whitespaces.concat('x', ' ', ' ', 'y') gives 'x y', it removes one of the whitespaces.This has been documented in https://saxonica.plan.io/issues/6494
There is no release in Saxon HE yet, but once it's available a dependency upgrade should be done.",['Claus Ibsen - 2024-12-03T08:49:43+0000 This is not a Camel bug. We regular upgrade dependencies when they are released on maven central.']
21500,Task,Claus Ibsen,Claus Ibsen,4.9.0,4.10.0,2024-12-03T06:18:17+0000,1733206697,2024-12-03T11:40:05+0000,2024-12-03T11:40:05+0000,Should be generated as an other kind and included in the catalog,No comments found
21499,Bug,Unassigned,Adriano Machado,4.8.0,None,2024-12-02T18:25:49+0000,1733163949,2024-12-04T13:06:23+0000,2024-12-04T13:06:23+0000,The following error message is shown on a unit test after upgrading the Camel version from 4.4.0 to 4.8.0:,"['Claus Ibsen - 2024-12-03T06:19:13+0000 What is MOXy', 'Claus Ibsen - 2024-12-03T12:35:30+0000 We only support what camel out of the box with Camel, which is sun JAXB']"
21498,Bug,Unassigned,John Yeary,"4.7.0,4.8.1",None,2024-12-02T14:23:50+0000,1733149430,2024-12-02T14:28:42+0000,2024-12-02T14:28:42+0000,"The RemoteFileConfiguration contains a parameter for soTimeout with a default value of 300,000 milliseconds.  This translates to 5,000 minutes. I believe that the default value should be 30,000 milliseconds or 5 minutes.",['John Yeary - 2024-12-02T14:28:42+0000 Wrong conversion from milliseconds.']
21497,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2024-12-02T10:43:09+0000,1733136189,2024-12-02T13:06:45+0000,2024-12-02T13:06:45+0000,No description available,No comments found
21496,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2024-12-02T09:20:47+0000,1733131247,2024-12-12T09:03:48+0000,2024-12-12T09:03:48+0000,No description available,No comments found
21495,Bug,Claus Ibsen,Sami Peltola,4.8.1,"4.8.3,4.10.0",2024-12-02T08:59:59+0000,1733129999,2024-12-26T15:10:36+0000,2024-12-26T15:09:54+0000,"Encountered when running tests, sometimes the wrong subroute gets inlined to the rest-route and causes failures.Referring to: https://camel.apache.org/manual/rest-dsl.html#_inline_rest_dsl_as_a_single_routeI've attached an example project. When running the tests, a test called ""FailingTest"" should have ""camel.rest.inline-routes"" enabled and should fail, as opposed to ""SucceedingTest"" which has the option disabled and does not fail.It seems like when inlining the routes, the subroute ""get-from-db-route"" gets inlined when actually route ""quarkuscamelexampleservice-http-get-route"" should be inlined as it is the subroute that is called from the REST-route.For some reason, the tests failing also seems a bit flaky, so you might have to run all the tests in a loop to replicate the issue, i've included a script ""run-test-in-loop.sh"".When the test fails, it only shows routes:Sometimes it works correctly, and shows how it actually should have inlined the routes with the route ""subroute-for-get"" not being inlined to the REST-route,but instead existing as a separate route in the context:I have not had any issues when running in quarkus dev-mode, so i am assuming this only affects testing.For tests, disabled inlining the routes with:","['Claus Ibsen - 2024-12-03T12:36:31+0000 jamesnetherton  something to look into for CEQ', 'Claus Ibsen - 2024-12-03T12:37:49+0000 Sami, can you try to build an vanilla project to help identify if its only when using Quarkus or not.', 'James Netherton - 2024-12-04T13:11:39+0000 I converted the reproducer app to use camel-main, did 100 tests runs and it passed.\nSomething strange is happening on CQ. The test passes sometimes but fails on other runs.\nsamipeltola is this only an issue when running tests? Or do you observe it when running from quarkus-run.jar? I only see the issue happen at test time.', ""Sami Peltola - 2024-12-05T07:18:44+0000 jamesnetherton \nI've also only encountered this while testing. I haven't yet run the service in production or or any lower env, it's still a PoC, but while running in dev-mode, there haven't been any issues.\nFYI, it seemed like when I had an actual http endpoint request in the route and Wiremock mocking it in the tests, the exception seemed to happen more often."", 'James Netherton - 2024-12-05T08:22:24+0000 I created an issue in the camel-quarkus project to track a fix:\nhttps://github.com/apache/camel-quarkus/issues/6842\nFrom what I can tell, this issue first shows up in Quarkus 3.13.0 / Camel Quarkus 3.13.0 / Camel 4.7.0.', 'Claus Ibsen - 2024-12-05T08:41:14+0000 okay tracking this in CEQ closing this', ""James Netherton - 2024-12-05T13:19:29+0000 davsclaus I think we should reopen this as it's maybe a general Camel issue.\nI've not found exactly what's going on, but I think it's related to the order that the routes are loaded.\nThis order of route loading works:\nExternalHttpServiceRoute\nQuarkusExampleAPI\nDatabaseRoute\nThis order does not:\nQuarkusExampleAPI\nDatabaseRoute\nExternalHttpServiceRoute \nOn CQ, the ordering turns out to be random due to how RouteBuilder impls are discovered at build time.\nWith camel-main, the ordering is based on the ordering of Set<Class<?>>:\nhttps://github.com/apache/camel/blob/4e8549a480287554dec9f7a9b99963078e2fb4bc/core/camel-main/src/main/java/org/apache/camel/main/RoutesConfigurer.java#L197-L198\nIf in the reproducer app I rename the classes so that the class order is different, then I can reproduce the problem with camel-main.\nI attached a new camel-main version of the reproducer app."", 'Claus Ibsen - 2024-12-26T12:47:34+0000 Thanks James for the reproducer.', 'Claus Ibsen - 2024-12-26T13:05:01+0000 Okay so the problem is that when having multiple route builder classes, then the routes gets inlined multiple times. So we should avoid this duplicate inline and then it works.']"
21494,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-11-30T09:33:41+0000,1732959221,2024-11-30T16:53:56+0000,2024-11-30T16:53:56+0000,The producer should be async based that works better with the routing engine.,No comments found
21493,Bug,Freeman Yue Fang,Freeman Yue Fang,None,"4.4.5,4.8.2,4.9.0",2024-11-29T16:09:28+0000,1732896568,2024-11-29T17:08:13+0000,2024-11-29T17:00:18+0000,"Because CamelContext.getEndpoint(String uri) now will throw NoSuchEndpointException but not null, while CamelContext.hasEndpoint(String uri) is more proper here",No comments found
21492,Improvement,Jiri Ondrusek,Jiri Ondrusek,4.8.0,"4.8.2,4.9.0",2024-11-29T12:08:30+0000,1732882110,2024-11-29T15:33:42+0000,2024-11-29T15:33:42+0000,"If you go through payload security documentation, you can see that there is no component listed as is i.e. in the Route security chapter.It would be nice to list a component there, so users can see easier what to use.","['Jiri Ondrusek - 2024-11-29T12:15:36+0000 davsclaus I went through the implementations of\nDataFormatDefinition\nand found only `crypto` and `crypto-pgp`, which seem to be able to encrypt the payload. Do you recall any others?', 'Jiri Ondrusek - 2024-11-29T12:25:09+0000 Backporting the change into 4.8.x would be also appreciated.', 'Claus Ibsen - 2024-11-29T12:57:12+0000 XMLSecurityDataFormat\nPGPDataFormat', 'Jiri Ondrusek - 2024-11-29T14:43:56+0000 Thanks, I upgraded the PR to contain `CryptoDataFormat`, `PFPDataformat` and `XMLSecurityDataFormat`']"
21491,Improvement,Pasquale Congiusti,Pasquale Congiusti,None,4.10.0,2024-11-29T11:00:54+0000,1732878054,2024-12-13T10:29:52+0000,2024-12-13T10:29:52+0000,"The main is automatically instrumented with a NOOP implementation for Opentelemetry, which makes it useless when used with the default. The user should add the following dependencies:and starting with the following system properties:We should embed this configuration in the observability services to make it run OOTB (like it happens for Springboot and Quarkus runtimes).","[""Pasquale Congiusti - 2024-12-13T10:29:41+0000 Providing an opinionated default setting is not possible as the component still requires configuration based on the specific application. this configuration must be set by the user. However, I've added a documentation note to specify how the used can provide a minimal basic configuration with as low as configuration as possible.""]"
21490,Bug,Claus Ibsen,Claus Ibsen,None,4.11.0,2024-11-29T10:42:07+0000,1732876927,2025-01-28T08:32:13+0000,,This XML route converts to a bad yamlcamel transform route abc.camel.xml,"['Ricardo Martinez - 2024-11-29T10:43:53+0000 Perhaps is not just the choice, but any EIP that uses elements and gets transformed into properties for the YAML DSL, like expressions, dataformats, doTry, etc...']"
21489,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-29T09:54:36+0000,1732874076,2024-11-29T11:30:33+0000,2024-11-29T11:30:33+0000,https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/noErrorHandler.20and.20camel-micrometerIt would be good to be able to configure route policy to skip some routes. Then you can make sub routes that are not being included.,No comments found
21488,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-28T17:19:03+0000,1732814343,2024-11-29T05:56:03+0000,2024-11-29T05:56:03+0000,When using camel 4.8.1 export with multiple custom kamelets in --local-kamelet-dir exports only one kamelet. The last in 'kamelet' property in camel-jbang-run.properties,['Claus Ibsen - 2024-11-29T05:56:03+0000 Fixed by CAMEL-21374']
21487,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-28T17:15:42+0000,1732814142,2024-11-28T18:30:10+0000,2024-11-28T18:30:10+0000,This example does not work on 4.8.2 but works in 4.9.0https://github.com/apache/camel-kamelets-examples/tree/main/jbang/route-template,No comments found
21486,Bug,Thomas Diesler,Andrea Cosentino,4.8.1,"4.8.3,4.10.0",2024-11-28T14:41:56+0000,1732804916,2024-12-10T14:11:46+0000,2024-12-10T14:11:46+0000,No description available,"['Claus Ibsen - 2024-11-29T09:11:34+0000 The PR cannot be backported. tdiesler are you working on a fix for 4.8.x branch - would be good to get done soon so we can release 4.8.2', 'Thomas Diesler - 2024-12-03T08:01:14+0000 I can take a closer look at this again. AFAIR, there were some major incompatibilies that prevented the backport', 'Thomas Diesler - 2024-12-03T09:15:09+0000 There are a number of camel-jbang kubernetes commits that could not be backported because of an incompatibility with the traits model (see the linked dependency). I guess we need to ask gfournier whether this can be backported first.\nCAMEL-21486: camel-jbang - cannot push to image-registry.openshift-image-registry.svc:5000 (#16398) Thomas Diesler* 28.11.24, 18:09\nCAMEL-21464 camel k8s run ... may lead to exec format error (#16345) Thomas Diesler* 21.11.24, 14:28\nCamel-21457: Add knative service timeout on jbang plugin kubernetes Gaelle Fournier* 18.11.24, 16:49\nCAMEL-21278: Remove unused code in Trait Model Gaelle Fournier* 02.10.24, 10:42\nCAMEL-21451 Migrate to JKube generated resources for all runtimes Thomas Diesler* 15.11.24, 15:39\nchore: camel-jbang kubernetes plugin - remove docker requirement on export command (#16276) Gaëlle Fournier* 14.11.24, 12:27\n(chores) camel-jbang: minor cleanups Otavio R. Piske* 09.11.24, 16:46\n(chores) camel-jbang: disable resource intensive tests Otavio Rodolfo Piske 08.11.24, 14:30\nCAMEL-21392 Add support for --cluster-type=k3s Thomas Diesler* 29.10.24, 07:03', 'Claus Ibsen - 2024-12-03T09:57:50+0000 Would it be possible to do a new fix just for 4.8.x that ensures that this bug is fixed (if the bug is in fact on 4.8.x at all). Without backporting cleanly or having to do other backports from traits etc.\nIf not then we can also say that this is only being fixed from 4.9 onwards.', ""Thomas Diesler - 2024-12-03T13:18:42+0000 This will be a recurring problem for must stuff we do on main. Before I redo much of this work, I'd like to hear from gfournier whether it is possible to upgrade the foundation i.e. the Traits API"", ""Gaelle Fournier - 2024-12-03T13:58:33+0000 I think it would be a good idea to backport the new Trait model to 4.8.x for the next 4.8.3. As tdiesler indicates it will be recurring for bugfixes. BTW the original work was this https://issues.apache.org/jira/browse/CAMEL-21152, but having a the most recent compatible version would probably be better.\nExcept for removing unused parameters and adding some missing functionalities I haven't been doing any big refactoring on the Trait to avoid any issue for backport."", 'Claus Ibsen - 2024-12-04T14:34:11+0000 The trait changes has been backported now, thanks.', 'Thomas Diesler - 2024-12-09T14:28:32+0000 This should be done.\nhttps://github.com/apache/camel/pull/16496', 'Thomas Diesler - 2024-12-10T14:11:46+0000 Done']"
21485,Task,Marco Carletti,Claus Ibsen,4.9.0,4.9.0,2024-11-28T10:46:45+0000,1732790805,2024-11-28T17:04:59+0000,2024-11-28T14:36:56+0000,The dynamic-router-eip is failing on starting SB with some stackoverflow exception,['Marco Carletti - 2024-11-28T17:04:59+0000 https://github.com/apache/camel-spring-boot-examples/pull/148']
21484,Improvement,Claus Ibsen,Paul Blanchaert,4.8.1,4.10.0,2024-11-28T09:49:43+0000,1732787383,2024-12-28T16:59:28+0000,2024-12-28T16:59:28+0000,"While using quarkus to run camel route, all microprofile properties are loaded per lookup of a property value. So when using a modest number of 10 config values in camel routes, the current lookup loads all properties (including environment and system variables) 11 times.This happens in the method DefaultPropertiesLookup#
doLookup(String name, String defaultValue). When a property is found (answer != null), then the source is determined: for the CamelMicroProfilePropertiesSource, the routine performs the loadProperties() function (in the block ""ps instanceof LoadablePropertiesSource"") to retrieve the ""source"" string for the retrieved value. This is set when ""
prop instanceof OrderedLocationProperties"". For this CamelMicroProfilePropertiesSource, this prop is not an instanceof OrderedLocationProperties, and so the result of the loadProperties call is never used and hence should be avoided.
This can be illustrated with the following setup with 3 mymsg properties:route.yaml:- from:
    uri: ""timer:myyaml""
    steps:
      - log:
          message: 'Message {{mymsg mymsg2:msg2 mymsg3:msg3 mymsg4:msg4'}}application.properties:quarkus.config.log.values=true
quarkus.log.level=info
quarkus.log.category.""org.apache.camel.main"".level=DEBUG
quarkus.log.category.""org.apache.camel.component.properties"".level=DEBUG
quarkus.log.category.""io.smallrye.config"".level=DEBUG
camel.main.routes-include-pattern=camel/route.yaml
mymsg=test1
mymsg2=test2
mymsg3=test3-> % quarkus run -B | grep mymsg
2024-11-28 10:22:58,942 DEBUG [org.apa.cam.mai.RoutesConfigurer] (main) Adding templated routes into CamelContext from RoutesBuilder: Routes: [Route[From[timer:myyaml] -> [Log[Message \{{mymsg}} \{{mymsg2:msg2}} \{{mymsg3:msg3}} \{{mymsg4:msg4}}]]]]
2024-11-28 10:22:58,958 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:12 with the value test1
2024-11-28 10:22:58,960 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:12 with the value test1
2024-11-28 10:22:58,960 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg2 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:13 with the value test2
2024-11-28 10:22:58,960 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg3 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:14 with the value test3
2024-11-28 10:22:58,966 DEBUG [org.apa.cam.com.pro.DefaultPropertiesParser] (main) Found property: mymsg with value: test1 to be used.
2024-11-28 10:22:58,966 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg2 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:13 with the value test2
2024-11-28 10:22:58,966 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:12 with the value test1
2024-11-28 10:22:58,967 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg2 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:13 with the value test2
2024-11-28 10:22:58,967 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg3 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:14 with the value test3
2024-11-28 10:22:58,972 DEBUG [org.apa.cam.com.pro.DefaultPropertiesParser] (main) Found property: mymsg2 with value: test2 to be used.
2024-11-28 10:22:58,973 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg3 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:14 with the value test3
2024-11-28 10:22:58,973 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:12 with the value test1
2024-11-28 10:22:58,973 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg2 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:13 with the value test2
2024-11-28 10:22:58,973 DEBUG [io.sma.config] (main) SRCFG01001: The config mymsg3 was loaded from PropertiesConfigSource[source=jar:file:///private/tmp/test1/target/quarkus-app/app/test1-1.0.0-SNAPSHOT.jar!/application.properties]:14 with the value test3
2024-11-28 10:22:58,978 DEBUG [org.apa.cam.com.pro.DefaultPropertiesParser] (main) Found property: mymsg3 with value: test3 to be used.
2024-11-28 10:22:58,978 DEBUG [io.sma.config] (main) SRCFG01002: The config mymsg4 was not found
2024-11-28 10:22:58,978 DEBUG [io.sma.config] (main) SRCFG01002: The config mymsg4 was not found
2024-11-28 10:22:58,978 DEBUG [org.apa.cam.com.pro.DefaultPropertiesParser] (main) Property with key [mymsg4] not found, using default value: msg4
2024-11-28 10:22:58,990 INFO  [org.apa.cam.mai.BaseMainSupport] (main)     [MicroProfilePropertiesSource] mymsg = test1
2024-11-28 10:22:58,990 INFO  [org.apa.cam.mai.BaseMainSupport] (main)     [MicroProfilePropertiesSource] mymsg2 = test2
2024-11-28 10:22:58,990 INFO  [org.apa.cam.mai.BaseMainSupport] (main)     [MicroProfilePropertiesSource] mymsg3 = test3","['Claus Ibsen - 2024-11-28T10:25:31+0000 You are welcome to work on a suggested patch and send as PR or attach to this JIRA', 'Claus Ibsen - 2024-12-27T10:50:39+0000 I created a PR where the mp-config is not loadable to avoid this runtime overhead, and it does not bring value - then its a simple adapter into quarkus\n  https://github.com/apache/camel/pull/16661']"
21483,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.9.0,2024-11-28T08:38:35+0000,1732783115,2024-12-05T08:51:35+0000,2024-12-05T08:51:35+0000,Cover migrations described by migration guide,"['Jiri Ondrusek - 2024-12-02T13:40:26+0000 PR with migration from 4.8 to 4.9 is prepared - https://github.com/apache/camel-upgrade-recipes/pull/17\n  Once the changes are merged, we can probably release upgrade recipes 4.9.0\nacosentino davsclaus WDYT?', ""Andrea Cosentino - 2024-12-02T14:27:09+0000 It's good from my pov."", 'Claus Ibsen - 2024-12-05T08:51:20+0000 Jiri / Andrea - I think we should be good so we can release this now that 4.9 is out']"
21482,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-11-28T08:06:25+0000,1732781185,2024-11-28T09:30:43+0000,2024-11-28T09:30:43+0000,We should correct this in docs and camel-catalog that its default true,No comments found
21481,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-27T20:20:00+0000,1732738800,2024-11-28T17:09:50+0000,2024-11-28T17:09:50+0000,"If you do `camel run * --dev` and do some route changes and the reload fails due to coding error etc, then you see a stracktrace in the log.We should capture this reload error and allow jbang commands to show this status and detailed error, so you can see it via jbang commands and other tooling (such as via dev-console)",No comments found
21480,Improvement,Unassigned,Paul Blanchaert,4.8.1,4.10.0,2024-11-27T17:09:40+0000,1732727380,2024-12-28T17:04:03+0000,2024-12-28T17:04:03+0000,"Currently this PropertiesSource allows for properties that include one profile as in ""%profile1.config-key=value"".The goal is to add support for multiple profile properties, with a comma-separated list of profile names as in ""%profile1,profile2.config-key=value"".See also:",['Claus Ibsen - 2024-12-28T17:03:40+0000 See PR\nhttps://github.com/apache/camel/pull/16661']
21479,Improvement,Unassigned,Paul Blanchaert,4.8.1,4.10.0,2024-11-27T16:55:35+0000,1732726535,2025-01-28T06:59:47+0000,2025-01-28T06:59:47+0000,"Motivation:
1) current solr-component offers many options: 3 endpoints (solr, solrs and solrcloud) and the option to provide a solrclient: this is likely confusing for non-expert
2) many dependencies (o.a. zookeeper) of solr client make it a hard work to keep the component up to date and secure
3) solr 9.6 introduced a solr client which limits dependencies: HttpJdkSolrClient; this is a pre-requisite to revive the camel-quarkus-solr component (see quarkus issue)
4) reducing the options/scope without limiting the user's capabilities will allow easier maintenance (in all deploy options of camel)Goal:
1) update solr-component to reduce to a single endpoint and preferably more in line with elastcsearch and opensearch component
2) use only the HttpJdkSolrClient per default; this client (new since solr-9.6.0) is expected to be sufficient for the supported operations; the current solrClient endpoint option will be kept to enable the (experienced) user to provide an alternative solrclient implementation
3) revive the camel-quarkus-solr component",['Claus Ibsen - 2025-01-28T06:59:47+0000 Thanks for the help']
21478,Improvement,Unassigned,Chamodya Dias,"4.8.0,4.8.1",4.10.0,2024-11-27T13:20:03+0000,1732713603,2024-12-16T08:53:31+0000,2024-12-16T08:53:31+0000,"Currently, camel resolves the Java class names for RestBindingConfiguration from Schema XML attribute.Implemented at: org.apache.camel.component.rest.openapi.RestOpenApiProcessor```
private RestBindingConfiguration createRestBindingConfiguration(Operation o) throws Exception {
...
...
Schema s = m.getValue().getSchema();
// $ref is null, so we need to know the schema name via XML
if (s != null && s.getXml() != null) {
String ref = s.getXml().getName();
...
```
 
But the documentation says Camel can resolve the schema from the schema name: https://camel.apache.org/manual/rest-dsl-openapi.html#_binding_to_pojo_classes
 
This improvement suggests adding an `else-if` condition that to above code that uses `$ref` to resolve the schema name if available and another `else-if` condition that uses the `title` attribute (https://github.com/OAI/OpenAPI-Specification/blob/3.0.2/versions/3.0.2.md#schema-object) of the schema to get the class name if available.
 
Also, the current implementation doesn't resolve class names when using the `requestBodies` component directly in the OAS. It only uses `content` attribute.
 
example:
```
requestBody:
  $ref: '#/components/requestBodies/createProduct'
```
This improvement suggests the capability to add this also.","['Chamodya Dias - 2024-11-27T13:23:13+0000 I would like to contribute to implementing this improvement.', 'Claus Ibsen - 2024-11-28T09:10:41+0000 You are welcome to work on this', 'Claus Ibsen - 2024-12-09T12:48:15+0000 Any update ?', ""Chamodya Dias - 2024-12-09T20:18:13+0000 Hi davsclaus, \nThis has been implemented by Calle Andersson (https://github.com/calleandersson) here in 4.9 version: https://github.com/apache/camel/blob/a105e6a9f52a14b19795664440fb9fdc6a0fea20/components/camel-rest-openapi/src/main/java/org/apache/camel/component/rest/openapi/OpenApiUtils.java#L264\nI've tested it out, it works when the schema key is provided as the POJO class name.\nKindly suggest if it is required to implement scanning classes using the schema title as well as another condition for 4.10 version."", 'Claus Ibsen - 2024-12-10T13:47:38+0000 Can you provide an example of what you suggest to do -', ""Chamodya Dias - 2024-12-11T22:21:47+0000 Of course, let me explain.\n  Current Implementation:\nLet's imagine an Open API spec as follows:\nopenapi: 3.0.3\ninfo:\n  title: Simple API\n  description: A minimal example of an OpenAPI specification.\n  version: 1.0.0\npaths:\n  /example:\n    get:\n      summary: Get example data\n      description: Returns a simple example object.\n      responses:\n        '200':\n          description: Successful response\n          content:\n            application/json:\n              schema:\n                $ref: '#/components/schemas/Product'\ncomponents:\n  schemas:\n    Product:\n      type: object\n      properties:\n        id:\n          type: string\n          description: Unique identifier\n        message:\n          type: string\n          description: A simple message\n \nThe current implementation scans the packages and finds any classes with the name `Product`. (ex: com.example.myapp.model.Product` and it cannot match any other class names.\n  Problem:\nThere can be a requirement where you need to use a different name for the class rather than the schema name.\nEx: Schema can be `Product` in the API spec for the API consumers to view and understand, but the actual Java class used in the API implementation may be `ProductResponseDto` .\nThere can be scenarios where some teams have specific naming conventions for API specs and their code, so a custom class name might be required.\n  Suggestion:\nWhat I'm suggesting is, to add an optional feature where you can use the `title` property of the schema object to put the actual Java class name. This can be an alternative flow to the current implementation, which scans the packages using either the schema name or title of the schema.\n  \n..\n...\ncomponents:\n  schemas:\n    Product:\n      type: object\n      title: ProductResponseDto\n      properties: \n...\n...\n    I agree this is a minor improvement, but it can be helpful."", 'Claus Ibsen - 2024-12-12T06:42:43+0000 Okay you are welcome to send a PR for that.', 'Chamodya Dias - 2024-12-12T19:43:49+0000 Thanks, will do asap!', 'Claus Ibsen - 2024-12-16T08:53:31+0000 Thanks for the help']"
21477,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-11-27T11:59:53+0000,1732708793,2024-11-28T09:46:06+0000,2024-11-28T09:46:06+0000,No description available,No comments found
21476,Improvement,Unassigned,John Zander,4.8.0,4.x,2024-11-26T15:07:41+0000,1732633661,2024-12-02T10:56:12+0000,2024-11-27T09:29:46+0000,"Hi devs,we are using camel to call stored-procedures which return a non-standard datatype which is not handled by the framework. For this use case, it is possible to define a custom RowMapperFactory which can handle that datatype.https://camel.apache.org/components/4.8.x/sql-stored-component.htmlstates ""camel.component.sql.row-mapper-factory"" as property to set.Unfortunately, this property doesn't become active on ""sqlstored"" only on plain  ""sql"". Please fix or change the documentation with the correct property. Thank you!","[""Andrea Cosentino - 2024-11-27T09:29:36+0000 The Spring Boot section is mixed between sql and sql-stored properties, because the component contains two different components SQL and SQL stored, if you're using SQL stored component, you should look only to sql-stored properties, so RowMapperFactory is not supported.""]"
21475,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-11-26T10:55:22+0000,1732618522,2024-11-27T09:11:44+0000,2024-11-27T09:11:44+0000,"See this examplehttps://github.com/apache/camel-kamelets-examples/tree/main/jbang/route-templateWhen using hardcoded ids, (user or via tooling) then the template should self-assign unique nodeIdPrefix to avoid clashes.org.apache.camel.FailedToCreateRouteFromTemplateException: Failed to create route two from template myTemplate because of duplicate id detected: setBody-e9c1. Please correct ids to be unique among all your routes.
    at org.apache.camel.impl.DefaultModel.addRouteFromTemplate(DefaultModel.java:539)
    at org.apache.camel.impl.DefaultModel.addRouteFromTemplate(DefaultModel.java:406)
    at org.apache.camel.impl.DefaultCamelContext.addRouteFromTemplate(DefaultCamelContext.java:355)
    at org.apache.camel.impl.engine.AbstractCamelContext.doInit(AbstractCamelContext.java:2450)
    at org.apache.camel.support.service.BaseService.init(BaseService.java:85)
    at org.apache.camel.impl.engine.AbstractCamelContext.init(AbstractCamelContext.java:2087)
    at org.apache.camel.support.service.BaseService.start(BaseService.java:115)
    at org.apache.camel.impl.engine.AbstractCamelContext.start(AbstractCamelContext.java:2106)
    at org.apache.camel.impl.DefaultCamelContext.start(DefaultCamelContext.java:211)
    at org.apache.camel.main.KameletMain.doStart(KameletMain.java:385)
    at org.apache.camel.support.service.BaseService.start(BaseService.java:123)
    at org.apache.camel.dsl.jbang.core.commands.Run.runKameletMain(Run.java:1374)
    at org.apache.camel.dsl.jbang.core.commands.Run.run(Run.java:888)
    at org.apache.camel.dsl.jbang.core.commands.Run.doCall(Run.java:324)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
    at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
    at picocli.CommandLine.access$1500(CommandLine.java:148)
    at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
    at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
    at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
    at picocli.CommandLine.execute(CommandLine.java:2174)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:175)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:62)
    at main.CamelJBang.main(CamelJBang.java:36)",No comments found
21474,Improvement,Claus Ibsen,Kevin Gretener,"4.7.0,4.8.0,4.8.1","4.8.2,4.9.0",2024-11-25T21:06:31+0000,1732568791,2024-11-29T17:33:07+0000,2024-11-29T17:26:30+0000,"I'm using the SMB component as a producer, which was introduced in camel 4.7.0.When I'm running my example route for more than 15 minutes, I noticed some exceptions in the log like this one:I found out this is related to this issue in the SMBJ project. But at the same time I challenged why the connection is keeped open despite i'm currently not writing to the smb-fileshare. So I realized the disconnect-method on smbProducer is never called. I think it should be called from doStop(), otherwise the separated Thread of DirectTcpPacketReader.class never gets stopped.WorkaroundsFirst option: Call the disconnect-method manually and decrease the Logging-LevelSecond Option: Use the camel-jcifs component of the camel-extra project.Expected BehaviourAfter writing a file with the smbProducer the connection should be closed and no Warning/Info logs about timeouts or unclosed sessions are written.Additional InformationSmbConsumers SessionHandling was updated by CAMEL-21263, probably a similar solution would work for the producer.Other improvements are planned with CAMEL-21352.",['Claus Ibsen - 2024-11-29T17:20:21+0000 Adding a new disconnect=true|false option you can configure.\nWe have a plan to refactor this component and let it be based on camel-file like ftp/jsch etc that gives it more power. And when this happens then we will be able to adjust this component better for good ux']
21473,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.4.4,4.4.5,2024-11-25T15:10:24+0000,1732547424,2024-11-25T15:24:56+0000,2024-11-25T15:24:56+0000,No description available,No comments found
21472,Bug,Pasquale Congiusti,Thomas Gantenbein,4.8.1,None,2024-11-25T12:34:29+0000,1732538069,2025-01-09T12:36:08+0000,2025-01-09T12:36:08+0000,"ProblemWhen using a consumer like timer or file, the traceId remains the same for all messages. When using a consumer like netty (or, I assume, any other http/tcp-based consumer), every call gets its own traceId as expected.See also https://camel.zulipchat.com/#narrow/channel/257298-camel/topic/Same.20OTEL.20trace.20for.20all.20messages.20into.20IBM.20MQReproducerhttps://github.com/thomas-gantenbein-tga/camel-opentelemetry/tree/mainpcongiusti, thanks for your answer on Zulip Chat. Let me know if I should further explain or minimize that reproducer.","['Thomas Gantenbein - 2024-11-25T17:20:16+0000 pcongiusti, I think it doesn\'t have to do anything with the component used, after all, but with the `ThreadLocalContextStorage`. Netty is using a several worker threads, while the file or timer component use the same thread. If I repeat the request to the netty route in https://github.com/thomas-gantenbein-tga/camel-opentelemetry/blob/main/src/main/java/org/example/MySpringBootRouter.java#L18 frequently enough (I fired it 100 times with ""for run in {1..100}; do curl localhost:12345 & done"") I manage to get the same traceIds for subsequent requests, too.\nHere are the logs from the reproducer after having it run through grep ""in netty"" | grep -Po \'thread.*\' | sort:\nthread #10 - NettyConsumerExecutorGroup [d05defb0897c489aaaa28809ed6e0225,1cce18f3597f5cf1] netty - in netty route\nthread #10 - NettyConsumerExecutorGroup [d05defb0897c489aaaa28809ed6e0225,6acdf9db4a88fc47] netty - in netty route\nthread #10 - NettyConsumerExecutorGroup [d05defb0897c489aaaa28809ed6e0225,8430524b2125075c] netty - in netty route\nthread #10 - NettyConsumerExecutorGroup [d05defb0897c489aaaa28809ed6e0225,add494bb4de6c0a0] netty - in netty route\nthread #10 - NettyConsumerExecutorGroup [d05defb0897c489aaaa28809ed6e0225,d2b4040f1fcc364b] netty - in netty route\nthread #10 - NettyConsumerExecutorGroup [d05defb0897c489aaaa28809ed6e0225,f2f5db974223b4cd] netty - in netty route\nthread #14 - NettyConsumerExecutorGroup [95129fc26654d41c20190a5043f99c4b,2287c028952851b8] netty - in netty route\nthread #14 - NettyConsumerExecutorGroup [95129fc26654d41c20190a5043f99c4b,408782d7423d9991] netty - in netty route\nthread #14 - NettyConsumerExecutorGroup [95129fc26654d41c20190a5043f99c4b,82c9d51db597d810] netty - in netty route\nthread #14 - NettyConsumerExecutorGroup [95129fc26654d41c20190a5043f99c4b,877bb45250ae6a69] netty - in netty route\nthread #14 - NettyConsumerExecutorGroup [95129fc26654d41c20190a5043f99c4b,9942fdd7f07c4be1] netty - in netty route\nthread #14 - NettyConsumerExecutorGroup [95129fc26654d41c20190a5043f99c4b,de36e208f75a1d05] netty - in netty route', ""Pasquale Congiusti - 2024-11-26T08:19:55+0000 Thanks for the insights. I am going to have a look and I'll ask your support for further troubleshooting if required."", ""Thomas Gantenbein - 2024-11-26T09:03:29+0000 Couldn't leave this alone, so in case it helps, here's what I've tried:\nThis solves the issue for my tiny little example – not sure though that this is the right way. The lines about mdc logging are just a quick fix for me to test."", 'Pasquale Congiusti - 2024-11-26T09:57:45+0000 Hello. I think that part was kind of introduced on purpose: [1] and [2]. We need to understand a bit more on the root cause and which is the expected behavior of the component, how we can tune based on the requirement we have and if there is any bug we need to fix. I will try to work on all those points. I had a quick look to understand if the MDC behavior is something we can skip by configuration, but it seems it does not.\n[1] https://camel.apache.org/components/next/others/opentelemetry.html#_mdc_logging\n[2] https://github.com/apache/camel/commit/04916f4e601d1c1cdb9c22cff9ff40e0a1070ffe', 'Claus Ibsen - 2024-11-26T09:58:46+0000 It smells like the span needs to be ended when the UoW of the Exchange is done (this happens when the timer or file, or even netty) is done with the exchange.\nThe ""fix"" above seems to fix this on the start. But its a great help to find the best solution. And if possible if we can add some unit test / mock test for this.', 'Thomas Gantenbein - 2024-11-26T13:39:58+0000 Actually, forget about those lines regarding the MDC context: They are not necessary. I think I included them when I had not yet set `builder.setNoParent()` and was surprised to still find the same traceId in the logs. But it wasn\'t about the MDC context, it was about that `builder.setNoParent()`. Removing traceId from MDC seems to be done as expected (at least: expected by me) in ActiveSpanManager.\nAnd I agree that this ""fix"" is counterintuitive. Also, it will work, I guess, for cases were messages originate from Camel, but it will not work if another service calls Camel, for example, with an existing traceId in a HTTP header: we\'d start a new traceId, which is certainly not what\'s expected.\nThe span seems to be ended in https://github.com/apache/camel/blob/main/components/camel-tracing/src/main/java/org/apache/camel/tracing/Tracer.java#L328, but maybe we\'d have to check there if there is no parent span and, if so, clear the context – no idea how that is done exactly. It seems to me that the ""context"" of a trace is stored in ThreadLocalStorage and by calling Span.fromContext(ctx), that information is restored when a new exchange is started – including the traceId from a previous trace processed on the same thread.\nAnyway, squakez, if you prefer to work on this by yourself I\'ll let you do your work and not disturb. If you appreciate comments like these and suggestions, I\'ll continue to try out things if I find time.', 'John Poth - 2024-11-26T13:48:01+0000 Hi ganteth! By any chance, does adding the option `synchronous=true` to the timer and file uri fix the issue ? so ""file:.....&synchronous=true"" and ""timer:...&synchronous=true"" resolve the issue ? This reminds me of https://issues.apache.org/jira/browse/CAMEL-21302 ... thanks !', ""Pasquale Congiusti - 2024-11-26T14:04:40+0000 Thanks ganteth, no, feel free to add any further findings and possible fixes. As you've said, we must find the root cause and solve it at the root to avoid introducing any regression in other paths we're not testing out of the box. It may take a bit more time to have a final fix, but the idea is to have something stable for all the different scenarios."", ""Pasquale Congiusti - 2024-11-26T14:06:58+0000 If the actual work you've done is patching this problem, you can submit a draft PR in the while, so, we can test any possible regression and have a first feedback."", 'Thomas Gantenbein - 2024-11-26T17:04:44+0000 jpoth, thanks for the suggestion. No, the option synchronous=true doesn\'t resolve this.\nsquakez, I\'ve made a draft PR: https://github.com/apache/camel/pull/16386.\nActually, with my reproducer it works better than expected: I tried `curl -H ""traceparent: 00-4bf92f3577b34da6a3ce929d0e0e4736-00f067aa0ba902b7-01"" localhost:12345` and observed that traceId 4bf92f3577b34da6a3ce929d0e0e4736 was actually assigned to the trace and a new span was created. When not sending such a header, a new traceId would be generated. Same for the timer-route.\nI don\'t like the fact that my ""fix"" is checking whether a new traceId should be assigned when a new exchange comes in – instead of just doing whatever is necessary when the exchange is done and no parent span exists. But this is what seems to work for me for the moment, without me having to touch more stuff that I don\'t really understand.', 'John Poth - 2024-11-27T08:35:20+0000 Naively adding a test for the timer component, we can see that four different Spans are created :\nclass TimerTest extends CamelOpenTelemetryTestSupport {\n\n    private static SpanTestData[] testdata = {};\n\n    TimerTest() {\n        super(testdata);\n    }\n\n    @Test\n    void testRoute() throws InterruptedException {\n        MockEndpoint mock = getMockEndpoint(""mock:end"");\n        mock.expectedMessageCount(4);\n        mock.assertIsSatisfied(3000);\n        verifyTraceSpanNumbers(4, 2);\n    }\n\n    @Override\n    protected RoutesBuilder createRouteBuilder() {\n        return new RouteBuilder() {\n            @Override\n            public void configure() {\n                from(""timer://foo?repeatCount=4&delay=100&period=100"").routeId(""myRoute"")\n                        .log(""message"")\n                        .to(""mock:end"");\n            }\n        };\n    }\n}', ""Pasquale Congiusti - 2024-11-29T14:51:13+0000 Okey, I think I have a fair understanding of what's going on. The problem is not with the tracing propagation at all. The telemetry is correctly creating the expected traces that can be later recovered in the OTEL collection.\nAccording to some troubleshooting I've done raising log levels of the application, every exchange creates a trace_id correctly and each event create a span_id bound to the exchange trace_id. The problem indeed is with MDC which is not able to perform the same propagation mechanism used by the telemetry. This is something expected as the MDC stores values at each thread level. As soon as the core starts a new thread to manage some event (like it happens with the direct routes), then, the MDC is started from scratch, loosing those values or reusing any previous value set there. This is the reason why we either see empty traces or traces coming from previous threads executions.\nIn general it seems the OTEL has some mechanism to manage MDC context directly. However, I've quickly tested on Camel Main and it suffer the same problems we have when using our own solution.\nIMO, we should remove the feature at all as this is leading to inconsistencies which I am not sure we can really solve. We should remainder the user to use the specific telemetry instrumentation that is available for such a purpose instead."", ""Thomas Gantenbein - 2024-11-29T16:14:37+0000 I agree, squakez. Sorry for the fuss I caused here. Should have checked with current snapshot version and then should have checked not only logs but also trace results in Jaeger. Is it https://github.com/apache/camel/commit/8788f722922d066cc314c44ed4e60735109e9f07 that solved the problem that I initially reported here about release 4.8.1?\nIf you remove the MDC logging support, may I suggest that you add a header instead with the current traceId/spanId on the exchange? That way one could still log traceId/spanId, though manually.\nAnd just to support your point, here are the MDC enabled logs that are missing traceIds:\nAnd here is what Jaeger knows about those traces and even about those logs (which I wasn't sure that it would work):"", 'Thomas Gantenbein - 2024-11-29T20:05:04+0000 To answer my own question: Yes, https://github.com/apache/camel/commit/8788f722922d066cc314c44ed4e60735109e9f07 solved the problem I reported here. I tried by commenting out https://github.com/apache/camel/commit/8788f722922d066cc314c44ed4e60735109e9f07#diff-9467b3f62367a0f54f07f7f567df10c7044c3c2a207aa6312e4c6d88bc3e68cdR63. In a route like\nfrom(""timer:mytimer?period=5000"")\n            .log(""test"")\n            .to(""direct:foo"");\nthat would already cause the same traceId being used every time the timer would fire. Removing `direct` would cause unique traceIds being generated again.', ""Thomas Gantenbein - 2024-12-03T22:09:55+0000 If you remove MDC support, doesn't that defeat one of the main purposes of tracing, i.e. the ability to trace a particular request over several services? If I don't have the traceId somewhere in the logs, it's hard to find a particular trace. Moreover, unless the option `traceProcessors` is true, the context is not passed to other threads, so even if logs were sent via a Opentelemetry logs bridge instead of using MDC, I doubt that this would work, since that bridge would have no knowledge about the current context either if a route was using a new thread in the middle of its execution (for example after a delay EIP).\nMaybe if tracing is enabled, every processor should always be intercepted so that context can be passed? https://github.com/apache/camel/blob/main/components/camel-opentelemetry/src/main/java/org/apache/camel/opentelemetry/OpenTelemetryTracingStrategy.java#L45 almost has what may be needed, but maybe this should be invoked per default so that every processor would be wrapped at least in a PropagateContext?"", 'Pasquale Congiusti - 2024-12-04T08:21:31+0000 ganteth no worries. More than removing the feature it would be substituting it with some alternative and more appropriate mechanisms, eg, the MDC support provided by Opentelemetry. I am actively working on these issues and I am about to open a thread on the mailing list to discuss about the possible options we have in front of us. Keep tuned.', ""Pasquale Congiusti - 2024-12-04T09:19:47+0000 I have identified the main reason of the failure which is the fact we're closing the scope too fast. I still need to verify the mechanism to restart the trace once the exchange is complete. This is the traces I am getting:\n10:13:21.909 [9e8c45a66385b66a603a75b4cf089c8d, f4e0aee994b9d56c] in timer route\n10:13:21.916 [9e8c45a66385b66a603a75b4cf089c8d, 411bbecf3add1bcc] in aSlowerRoute\n10:13:21.920 [9e8c45a66385b66a603a75b4cf089c8d, 411bbecf3add1bcc] still in aSlowerRoute\n10:13:21.921 [9e8c45a66385b66a603a75b4cf089c8d, a6e5da0571573e03] in aFasterRoute\n10:13:21.926 [9e8c45a66385b66a603a75b4cf089c8d, a6e5da0571573e03] still in aFasterRoute\n\n10:13:31.885 [9e8c45a66385b66a603a75b4cf089c8d, 950d66e2a86c8dd5] in timer route\n10:13:31.886 [9e8c45a66385b66a603a75b4cf089c8d, 625c85843b506435] in aSlowerRoute\n10:13:31.888 [9e8c45a66385b66a603a75b4cf089c8d, 625c85843b506435] still in aSlowerRoute\n10:13:31.889 [9e8c45a66385b66a603a75b4cf089c8d, 263bfaf1847fac78] in aFasterRoute\n10:13:31.893 [9e8c45a66385b66a603a75b4cf089c8d, 263bfaf1847fac78] still in aFasterRoute\n\n10:13:41.886 [9e8c45a66385b66a603a75b4cf089c8d, 6f1cea732bd351c3] in timer route\n10:13:41.886 [9e8c45a66385b66a603a75b4cf089c8d, a103fc4b3a433864] in aSlowerRoute\n10:13:41.888 [9e8c45a66385b66a603a75b4cf089c8d, a103fc4b3a433864] still in aSlowerRoute\n10:13:41.889 [9e8c45a66385b66a603a75b4cf089c8d, 7b525d393fa4af89] in aFasterRoute\n10:13:41.893 [9e8c45a66385b66a603a75b4cf089c8d, 7b525d393fa4af89] still in aFasterRoute\nHowever we really have a problem with the MDC context propagation that is not working out of the box. The above traces are taken when using the MDC instrumentation provided by Opentelemetry, which, IMO, should be the proper way to handle. I'll continue working to see how to reset the trace properly and we can have a further discussion once that is over."", ""Pasquale Congiusti - 2024-12-05T12:11:26+0000 Quick heads up on this issue. I am making progresses, though, I don't have yet the complete solution as certain tests are failing. This is what I got so far (I've included the wiretap to simulate a real async call interleaved in the process):\n12:26:36.036 [5f7c87408ab2e29dd5e736ec742f62b4, 52a7e016f8afbae7] in timer route\n12:26:36.044 [5f7c87408ab2e29dd5e736ec742f62b4, b64517a3ecde8117] in aSlowerRoute\n12:26:37.046 [5f7c87408ab2e29dd5e736ec742f62b4, b64517a3ecde8117] still in aSlowerRoute\n12:26:37.048 [5f7c87408ab2e29dd5e736ec742f62b4, cb4d3e47274def0b] in aFasterRoute\n12:26:37.549 [5f7c87408ab2e29dd5e736ec742f62b4, cb4d3e47274def0b] still in aFasterRoute\n\n12:26:46.005 [bbe4122e503a3f9dfdc3806f0e3ea2af, a645119e2f5db80c] in timer route\n12:26:46.007 [bbe4122e503a3f9dfdc3806f0e3ea2af, cb87f425ad3ca37a] in aSlowerRoute\n12:26:47.009 [bbe4122e503a3f9dfdc3806f0e3ea2af, cb87f425ad3ca37a] still in aSlowerRoute\n12:26:47.012 [bbe4122e503a3f9dfdc3806f0e3ea2af, 29ba3f5768fc64ab] in aFasterRoute\n12:26:47.049 [5f7c87408ab2e29dd5e736ec742f62b4, 3646aa00eebee873] Exchange[ExchangePattern: InOnly, BodyType: String, Body: Tapped]\n12:26:47.513 [bbe4122e503a3f9dfdc3806f0e3ea2af, 29ba3f5768fc64ab] still in aFasterRoute\n\n12:26:55.986 [ca13252e5519903caacca8783b12b6b2, ad1e2070205874ec] in timer route\n12:26:55.988 [ca13252e5519903caacca8783b12b6b2, 698855d05a1ae402] in aSlowerRoute\n12:26:56.990 [ca13252e5519903caacca8783b12b6b2, 698855d05a1ae402] still in aSlowerRoute\n12:26:56.991 [ca13252e5519903caacca8783b12b6b2, 1ffab7e5f139eb24] in aFasterRoute\n12:26:57.009 [bbe4122e503a3f9dfdc3806f0e3ea2af, dcb95bf8393b9e38] Exchange[ExchangePattern: InOnly, BodyType: String, Body: Tapped]\n12:26:57.492 [ca13252e5519903caacca8783b12b6b2, 1ffab7e5f139eb24] still in aFasterRoute\n\n\n^C12:27:01.241 [, ] Apache Camel 4.9.0-SNAPSHOT (camel-1) is shutting down (timeout:45s)\n12:27:01.246 [, ] Waiting as there are still 5 inflight and pending exchanges to complete, timeout in 45 seconds. Inflights per route: [route3 = 1, timer = 4]\n12:27:02.248 [, ] Waiting as there are still 5 inflight and pending exchanges to complete, timeout in 44 seconds. Inflights per route: [route3 = 1, timer = 4]\n12:27:03.249 [, ] Waiting as there are still 5 inflight and pending exchanges to complete, timeout in 43 seconds. Inflights per route: [route3 = 1, timer = 4]\n12:27:04.251 [, ] Waiting as there are still 5 inflight and pending exchanges to complete, timeout in 42 seconds. Inflights per route: [route3 = 1, timer = 4]\n12:27:05.252 [, ] Waiting as there are still 5 inflight and pending exchanges to complete, timeout in 41 seconds. Inflights per route: [route3 = 1, timer = 4]\n12:27:06.255 [, ] Waiting as there are still 5 inflight and pending exchanges to complete, timeout in 40 seconds. Inflights per route: [route3 = 1, timer = 4]\n12:27:06.990 [ca13252e5519903caacca8783b12b6b2, 941ea6fceb1d3016] Exchange[ExchangePattern: InOnly, BodyType: String, Body: Tapped]\nYou may notice the wiretap trace belong to the previous exchange, which is expected as I made it on purpose to the wiretap to be started with some delay and fall into the execution of the following exchange."", 'Pasquale Congiusti - 2025-01-09T12:36:08+0000 This issue is part of a wider scope redesign as proposed in https://github.com/apache/camel/pull/16753 - closing it in favor of a later epic that will be the result of the PR discussion.']"
21471,Bug,Unassigned,Prasanth Ganesh Rao,"4.4.4,4.8.1","4.4.5,4.8.2,4.9.0",2024-11-25T11:43:55+0000,1732535035,2024-11-25T14:58:06+0000,2024-11-25T14:58:06+0000,camel-quartz fails to start with error in below casesThe issue occurs due to the default startAt set by the underlying quartz library in the TriggerBuilder,['Claus Ibsen - 2024-11-25T14:58:06+0000 Thanks for the PR']
21470,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-25T08:52:37+0000,1732524757,2024-11-25T09:19:04+0000,2024-11-25T09:19:04+0000,No description available,No comments found
21469,Dependency upgrade,Thomas Cunningham,Claus Ibsen,None,4.8.2,2024-11-25T08:45:51+0000,1732524351,2024-11-25T15:10:06+0000,2024-11-25T15:10:06+0000,No description available,No comments found
21468,Improvement,Claus Ibsen,Raymond,4.8.1,4.10.0,2024-11-25T07:47:12+0000,1732520832,2024-12-11T19:58:41+0000,2024-12-11T19:58:41+0000,"I would like to see the raw request and response in the log when using the http component. For this, the following component options could be added:1. logRawRequest (or showRawRequest)
2. logRawResponse (or showRawResponse)Now this seems partly possible by setting the log file settings (for example in log4j and logback). However, I often don't have access to these files. I would like to have it similar to debugging in for example Google Chrome or Postman, to quickly enable and disable on the endpoint.----------------------Example of a background use case:I have two routes, one with a Groovy script component and one that executes a http call. This works fine when there is a queue between the routes, but not when using a synchronous call with direct. My assumption is that when sending the message to a JMS (ActiveMQ) queue the headers and body objects get automatically converted, for example with a String method. I tried to find out by setting a log component before it and after the http call, however they seem to be the same. Still, one returns 200 and the other 400 (unfortunately no other info in the response, except that something is null). Logging and comparing the raw request/response would help me see the difference more easily. In this case setting the log file isn't that easy as the log file is provisioned through terraform/docker and changing it would change it also for other calls. The http endpoint is not reachable locally.","['Claus Ibsen - 2024-12-09T13:09:57+0000 I think you should report this to ASF Http Client as their client is not making this easy. They have hardcoded the logging \n \nprivate static final Logger HEADER_LOG = LoggerFactory.getLogger(""org.apache.hc.client5.http.headers"");\nprivate static final Logger WIRE_LOG = LoggerFactory.getLogger(""org.apache.hc.client5.http.wire"");\n \nIn DefaultManagedHttpClientConnection\n \nMaybe they could making it easier for Camel and other users of their client to hook in and get the data being send and received.', 'Raymond - 2024-12-09T13:40:03+0000 OK, I thought it would be possible (and even easy).\nI think for now, you can close this ticket, or put it on https://issues.apache.org/jira/projects/CAMEL/versions/12315692.\nI will first check this with the ASF HTTP Client devs. If this is valid again, I will reopen the ticket.', 'Claus Ibsen - 2024-12-09T16:21:47+0000 The second best we can do is to trap this a little bit before / after http client, but it seems that its doable. \nI wonder if we should log similar to curl (using -v) or avoid the leading > and < chars and just log cleanly.', ""Raymond - 2024-12-09T19:58:32+0000 This would probably enough for most users.\nI think it's better to log it something like\nroute=32422 raw-request >\n\n{the raw request}\n  In this way, it's relatable to which route is sending the request or response."", 'Claus Ibsen - 2024-12-10T13:40:26+0000 The request does not log ""Host"" and ""User-Agent"" headers because those are added specially by http-client and we cannot trap them', 'Claus Ibsen - 2024-12-11T14:39:57+0000 2024-12-11 15:38:40.009 DEBUG 77577 — [ - timer://yaml] org.apache.hc.client5.http.headers       : http-outgoing-0 >> GET /jokes/random HTTP/1.1\n2024-12-11 15:38:40.009 DEBUG 77577 — [ - timer://yaml] org.apache.hc.client5.http.headers       : http-outgoing-0 >> Accept-Encoding: gzip, x-gzip, deflate\n2024-12-11 15:38:40.009 DEBUG 77577 — [ - timer://yaml] org.apache.hc.client5.http.headers       : http-outgoing-0 >> Host: api.chucknorris.io\n2024-12-11 15:38:40.009 DEBUG 77577 — [ - timer://yaml] org.apache.hc.client5.http.headers       : http-outgoing-0 >> Connection: keep-alive\n2024-12-11 15:38:40.009 DEBUG 77577 — [ - timer://yaml] org.apache.hc.client5.http.headers       : http-outgoing-0 >> User-Agent: Apache-HttpClient/5.4.1 (Java/17.0.11)', 'Claus Ibsen - 2024-12-11T14:45:57+0000 Look at hook into ExecChainHandler and addLast to capture all setups so we know all the headers for logging so we can include User Agent and what else http client adds automatic DONE', 'Claus Ibsen - 2024-12-11T15:53:32+0000 TODO: whether to dump binary content in the log (likely not readable anyway). Make it possible to filter by content-type what is text vs binary.  DONE']"
21467,Bug,Nicolas Filotto,Jannik Schmeier,4.8.1,"4.8.2,4.9.0",2024-11-22T11:29:36+0000,1732274976,2024-12-03T09:40:12+0000,2024-11-28T09:49:45+0000,"Similar to CAMEL-21432, occasionally my camel route gets stuck on SimpleLRUCache.The thread dump suggests, that this has to do with simple and bean expressions. I've had two encounters with this issue in two different applications:First encounter:""Camel (camel-1) thread #2 - JmsConsumer[<hidden>]"" - Thread t@58
   java.lang.Thread.State: RUNNABLE
    at org.apache.camel.support.cache.SimpleLRUCache$OperationContext.close(SimpleLRUCache.java:318)
    at org.apache.camel.support.cache.SimpleLRUCache.put(SimpleLRUCache.java:106)
    at org.apache.camel.support.cache.SimpleSoftCache.put(SimpleSoftCache.java:114)
    at org.apache.camel.component.bean.BeanComponent.addBeanInfoToCache(BeanComponent.java:96)
    at org.apache.camel.component.bean.BeanInfo.<init>(BeanInfo.java:169)
    at org.apache.camel.component.bean.ConstantBeanHolder.<init>(ConstantBeanHolder.java:50)
    at org.apache.camel.language.bean.BeanExpression.invokeOgnlMethod(BeanExpression.java:435)
    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:218)
    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:232)
    at org.apache.camel.language.simple.SimpleExpressionBuilder$KeyedOgnlExpressionAdapter.evaluate(SimpleExpressionBuilder.java:1253)
    at org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:45)
    at org.apache.camel.model.language.ExpressionDefinition.evaluate(ExpressionDefinition.java:252)
    at org.apache.camel.support.builder.ValueBuilder.evaluate(ValueBuilder.java:55)
    at org.apache.camel.support.builder.BinaryPredicateSupport.matchesReturningFailureMessage(BinaryPredicateSupport.java:67)
    at org.apache.camel.support.builder.BinaryPredicateSupport.matches(BinaryPredicateSupport.java:56)
    at org.apache.camel.processor.FilterProcessor.matches(FilterProcessor.java:89)
    at org.apache.camel.processor.FilterProcessor.process(FilterProcessor.java:72)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:96)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:208)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:163)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:82)
    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
    at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:132)
    at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:787)
    at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:742)
    at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:720)
    at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:333)
    at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:246)
    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1257)
    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1247)
    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1140)
    at java.base@21.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)
    at java.base@21.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)
    at java.base@21.0.2/java.lang.Thread.runWith(Thread.java:1596)
    at java.base@21.0.2/java.lang.Thread.run(Thread.java:1583)Second encounter:""Camel (camel-1) thread #4 - timer://my-timer"" - Thread t@63
   java.lang.Thread.State: RUNNABLE
    at org.apache.camel.support.cache.SimpleLRUCache$OperationContext.close(SimpleLRUCache.java:318)
    at org.apache.camel.support.cache.SimpleLRUCache.put(SimpleLRUCache.java:106)
    at org.apache.camel.support.cache.SimpleSoftCache.put(SimpleSoftCache.java:114)
    at org.apache.camel.component.bean.BeanComponent.addBeanInfoToCache(BeanComponent.java:96)
    at org.apache.camel.component.bean.BeanInfo.<init>(BeanInfo.java:169)
    at org.apache.camel.component.bean.ConstantBeanHolder.<init>(ConstantBeanHolder.java:50)
    at org.apache.camel.language.bean.BeanExpression.createBeanHolder(BeanExpression.java:303)
    at org.apache.camel.language.bean.BeanExpression.init(BeanExpression.java:175)
    at org.apache.camel.language.bean.BeanLanguage.createExpression(BeanLanguage.java:148)
    at org.apache.camel.language.simple.SimpleExpressionBuilder$KeyedOgnlExpressionAdapter.evaluate(SimpleExpressionBuilder.java:1251)
    at org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:45)
    at org.apache.camel.support.builder.ExpressionBuilder$62.evaluate(ExpressionBuilder.java:2105)
    at org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:45)
    at org.apache.camel.processor.LogProcessor.process(LogProcessor.java:71)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.ChoiceProcessor.process(ChoiceProcessor.java:95)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:96)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:208)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:96)
    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:208)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)
    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)
    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148)
    at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59)
    at org.apache.camel.processor.Pipeline.process(Pipeline.java:163)
    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)
    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)
    at org.apache.camel.component.timer.TimerConsumer.sendTimerExchange(TimerConsumer.java:293)
    at org.apache.camel.component.timer.TimerConsumer$1.doRun(TimerConsumer.java:164)
    at org.apache.camel.component.timer.TimerConsumer$1.run(TimerConsumer.java:136)
    at java.base@21.0.2/java.util.TimerThread.mainLoop(Timer.java:566)
    at java.base@21.0.2/java.util.TimerThread.run(Timer.java:516)Looking at the stacktrace can't quite make out exactly where in my route this occurrs. But I think the first one occurrs here, as there is a filter and simple expression and the bean expression probably is being created implicitly by Camel under the hood?The second one seems to be related to logging and according to the choice processor, it might happen here:","['Claus Ibsen - 2024-11-26T07:02:35+0000 essobedo  I wonder if you had a chance to look into this?\nI wonder if the do ... while loop keeps running forever, for some odd reason the cache is not compressing and eviction needed keeps returning true (or somerthing)', 'Claus Ibsen - 2024-11-26T07:06:17+0000 Can you tell us more about the custom bean you store in \nPROPERTY_REQUEST\nCan you tell if this bean is big or small and how many fields/methods etc it has', 'Nicolas Filotto - 2024-11-26T08:20:55+0000 Hi, I will try to have a look this afternoon, I need to finish a task first', 'Nicolas Filotto - 2024-11-27T07:49:24+0000 shmyer I published new snapshots 4.9-SNAPSHOT at https://repository.apache.org/snapshots/ with a potential fix, could you please test it with it? If you reproduce it again, I would need clear steps to reproduce, thx in advance', ""Jannik Schmeier - 2024-11-28T09:57:19+0000 nfilotto thanks, I will try to deploy the snapshot version today. However, as the issue has appeared for us only twice in one week with millions of messages processed and as I don't know any way of reproducing it, I am not sure if I can really tell that it is fixed."", 'Jannik Schmeier - 2024-12-03T08:24:26+0000 No issues with the snapshot version since Friday.', 'Nicolas Filotto - 2024-12-03T09:40:12+0000 Thx for the feedback, let us know if it is still good after a week or more. But please note that since versions 4.8.2 and 4.9 are both under vote, if it happens again, you will need to create another ticket']"
21466,Bug,Thomas Diesler,Thomas Diesler,None,None,2024-11-21T11:33:16+0000,1732188796,2025-01-14T12:53:53+0000,2024-12-13T07:19:39+0000,--cleanup=true is the default and should delete the deployment on ctrl+c,"['Thomas Diesler - 2024-12-11T14:29:07+0000 io.fabric8.kubernetes.client.KubernetesClientException: Failure executing: DELETE at: https://kubernetes.docker.internal:6443/api/v1/services/timer-log. Message: the server could not find the requested resource. Received status: Status(apiVersion=v1, code=404, details=StatusDetails(causes=[], group=null, kind=null, name=null, retryAfterSeconds=null, uid=null, additionalProperties={}), kind=Status, message=the server could not find the requested resource, metadata=ListMeta(_continue=null, remainingItemCount=null, resourceVersion=null, selfLink=null, additionalProperties={}), reason=NotFound, status=Failure, additionalProperties={}).', 'Thomas Diesler - 2024-12-11T15:05:44+0000 It turns out that the `k8s delete` command does generally not work and therefore can also not work in the run scenario', 'Thomas Diesler - 2024-12-12T12:35:00+0000 When loading resources from manifest, they may not be associated with a namespace. In this case, the client does not find the resources with its default configuration. Explicitly setting the ""default"" namespace fixes this. Whether this is intended behaviour or a bug I don\'t really know. For simple \'get pods\' operations, the client does not seem to need an explicit namespace.\nAs a fix, I propose to explicitly fall back to the ""default"" namespace after default settings did not find the resources from the manifest.', 'Thomas Diesler - 2024-12-13T07:19:39+0000 Done']"
21465,Dependency upgrade,James Netherton,James Netherton,None,4.10.0,2024-11-21T08:50:42+0000,1732179042,2024-12-05T10:54:28+0000,2024-12-05T10:54:28+0000,This means switching to the new org.apache.cassandra group id.https://repo1.maven.org/maven2/org/apache/cassandra/java-driver-core/,No comments found
21464,Task,Thomas Diesler,Thomas Diesler,None,4.9.0,2024-11-20T15:41:27+0000,1732117287,2024-12-03T09:31:08+0000,2024-12-03T09:30:53+0000,,['Thomas Diesler - 2024-12-03T09:30:53+0000 Done']
21463,Bug,Claus Ibsen,Vidhya Sagar Jeevendran,"4.8.0,4.8.1",4.10.0,2024-11-19T13:59:34+0000,1732024774,2024-12-02T12:16:24+0000,2024-12-02T12:16:24+0000,"When I run camel integrations with jbang in background and later fetch log using ""camel log"" I am able to access the log only when the process has started successfully. But when it fails with some error, the log is empty and I am unable to find the failure reason.","['Claus Ibsen - 2024-11-25T08:06:37+0000 Yes this is how it works - the camel log, only shows running JVM processes. If the process starts to fail for some other reason. We may consider some other way of reporting this.']"
21462,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.9.0,4.9.0,2024-11-19T09:42:34+0000,1732009354,2024-11-25T10:36:33+0000,2024-11-25T10:36:33+0000,"With CAMEL-21384 we have introduced a new adapter component, camel-observability-services. The first MVP exposes metrics. We need to include more component to be complete:","['Pasquale Congiusti - 2024-11-25T10:36:33+0000 Completed with the main observability components. Will require some work on Camel Quarkus side in order to enable on that runtime, once 4.9.0 is released [1].\n[1] https://github.com/apache/camel-quarkus/issues/6790']"
21461,New Feature,Federico Mariani,Federico Mariani,None,4.10.0,2024-11-18T14:13:08+0000,1731939188,2025-02-03T11:51:28+0000,2025-01-31T11:18:18+0000,"The platform http components starter (Camel Spring Boot) is not feature-complete.The following features are missing:Tests for all these features are added in the PR https://github.com/apache/camel-spring-boot/pull/1286, some features were already implemented in the PR, the features not implemented yet have a failing (disabled) test.","['Claus Ibsen - 2025-01-08T14:39:21+0000 Some of these features has been backported to 4.8.3', 'Claus Ibsen - 2025-01-08T14:39:50+0000 Is the list in the top up to date with the outstanding work ?', 'Claus Ibsen - 2025-01-20T13:15:26+0000 Did we add more features then remember to keep that outstading list up to date', ""Federico Mariani - 2025-01-20T14:15:18+0000 Hi davsclaus I'll update the list, a couple of days ago Headers and Cookie handlers were fixed.""]"
21460,Bug,Pasquale Congiusti,Pasquale Congiusti,4.8.1,4.9.0,2024-11-18T09:28:31+0000,1731922111,2024-11-25T14:51:26+0000,2024-11-25T14:51:26+0000,"I'm testing the camel-opentelemetry component against Spring Boot runtime. I've followed the instructions but it seems that for some reason, the application can't start reporting the following error:","[""Pasquale Congiusti - 2024-11-18T15:24:25+0000 The problem is that we've developed certain new features in Camel core using the opentelemetry SDK version 1.43. This is fine, however, the Spring Boot BOM is forcing the dependency at runtime to version 1.37, creating such an error."", ""Pasquale Congiusti - 2024-11-19T09:18:57+0000 This problem only exists when you're using the BOM coming from Springboot org.springframework.boot:spring-boot-dependencies (ie, when using Camel Jbang) which is forcing the runtime dependencies to a different version than the one required. This will be naturally fixed when the Spring Boot BOM will align the dependencies to 1.43. In the while, the most immediate workaround is to provide the application pom.xml with the set of dependencies we want to force for Opentelemetry:\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-sdk</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-api</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-context</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-logs</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-metrics</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-sdk-common</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-sdk-metrics</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-sdk-logs</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-sdk-trace</artifactId>\n                <version>1.43.0</version>\n            </dependency>\n            <dependency>\n                <groupId>io.opentelemetry</groupId>\n                <artifactId>opentelemetry-api-incubator</artifactId>\n                <version>1.43.0-alpha</version>\n            </dependency>"", 'Claus Ibsen - 2024-11-25T08:07:55+0000 Can you try with the new SB 3.4.0 release', 'Pasquale Congiusti - 2024-11-25T08:38:16+0000 Hello. Yes, this is fixed with the new upgrade to 3.4.0. However it is still an issue on our 4.8.x version which is LTS. We cannot upgrade the springboot bom over there, so, I guess the only possibility to fix that is using the workaround proposed. I will add a documentation note on that branch to have it documented accordingly and close this one.', 'Claus Ibsen - 2024-11-25T08:44:17+0000 Yes great finding, and good to get it documented - its a bit of long tooth to add all these dependencies but its needed to make this work.']"
21459,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-16T09:48:55+0000,1731750535,2024-11-16T09:52:43+0000,2024-11-16T09:52:43+0000,No description available,No comments found
21458,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-11-15T17:04:37+0000,1731690277,2024-11-18T08:54:48+0000,2024-11-18T08:54:48+0000,No description available,No comments found
21457,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,None,2024-11-15T15:33:30+0000,1731684810,2024-11-27T09:16:38+0000,2024-11-27T09:16:38+0000,"Camel jbang kubernetes plugin trait Knative service does not yet allow for configuration of the timeout, as is available in CK (https://camel.apache.org/camel-k/2.5.x/traits/knative-service.html)The KnativeService model class is already up to date.",['Gaelle Fournier - 2024-11-27T09:16:08+0000 https://github.com/apache/camel/pull/16305']
21456,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.10.0,2024-11-15T15:29:31+0000,1731684571,2024-12-03T12:01:49+0000,2024-12-03T11:55:18+0000,"Camel jbang kubernetes plugin trait Ingress does not yet allow for configuration of TLS, as is available in CK (https://camel.apache.org/camel-k/2.5.x/traits/ingress.html).The Ingress model class is already up to date.",No comments found
21455,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.8.0,"4.4.5,4.8.2,4.9.0",2024-11-15T06:53:37+0000,1731653617,2024-11-15T09:12:29+0000,2024-11-15T06:56:42+0000,No description available,No comments found
21454,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-14T15:33:04+0000,1731598384,2024-11-14T15:35:28+0000,2024-11-14T15:35:28+0000,For example during testing camel-main you can see JVM shutdown hook because per test method can trigger this message.However the app is shutting down cleanly so we dont need to show this logging.,No comments found
21453,Task,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-11-14T14:31:09+0000,1731594669,2024-11-18T15:52:39+0000,2024-11-18T15:52:39+0000,Related to CAMEL-21166,No comments found
21452,Task,Federico Mariani,Otavio Rodolfo Piske,4.9.0,4.10.0,2024-11-14T13:27:08+0000,1731590828,2025-01-22T11:53:57+0000,2025-01-22T11:53:57+0000,"It turns out that the test infrastructure management code on the test-infra could be useful in multiple other scenarios (i.e.: for Camel JBang). However, there's a small set of classes that are bound to the test API used by Camel. These APIs would make re-purposing the test infra harder and inelegant for users of that code.It should be relatively simple to decouple this API (high-level steps, details may vary slightly):1. Split 
org.apache.camel.test.infra.common.services.TestService in 2 parts: one named InfrastructureService for the infrastructure code (containing registerProperties, initialize, shutdown and close) and another retaining the TestService name (containing the beforeAll and afterAll callbacks from JUnit's BeforeAllCallback, AfterAllCallback interfaces)
2. Rename the existing <Name>Service to <Name>TestService (i.e.: ElasticSearchTestService) and make sure it implements the TestService API
3. Create a new <Name>Service and make sure it DOES NOT implement the TestService API
4. Move the infrastructure code to src/main
5. Keep the Camel-specific test infra code (i.e.:  <Name>TestService) within src/testRepeat for all services in the test-infra.",['Otavio Rodolfo Piske - 2025-01-22T11:50:59+0000 I wonder if we can mark this one as completed. What do you think Federico Mariani and davsclaus  ?']
21451,Task,Thomas Diesler,Thomas Diesler,None,None,2024-11-14T11:11:06+0000,1731582666,2024-11-20T15:39:00+0000,2024-11-20T15:39:00+0000,"The team decided (in Brno) to commonly use JKube to generate k8s resource definitions. One set of documentation, properties, extension points for users and tools to integrate with.","['Claus Ibsen - 2024-11-14T11:29:09+0000 Yes this makes it consistent and much easier to maintain at Apache Camel and for end users to have similar experience. jkube is very flexible and can also do advanced via its fragement files.', 'Thomas Diesler - 2024-11-15T15:01:57+0000 You can now run k3s-export ...\nk3s-export:\n @jbang camel kubernetes export timer-log-route.yaml \\\n    --gav=examples:timer-log:1.0.0 \\\n           --image-registry k3s-registry:30443 \\\n    --trait container.image-pull-policy=Always \\\n    --trait container.image-push=true \\\n    --trait service.type=NodePort \\\n    --runtime=quarkus\nand it should generate a maven project very similar to the other runtimes. The quarkus entrypoint in the image is preserved.\nStanding up a k3s cluster has also been simplified a great deal - have a look at CAMEL-21450 to see how to do that.', 'Thomas Diesler - 2024-11-20T15:38:50+0000 Done']"
21450,Task,Thomas Diesler,Thomas Diesler,None,None,2024-11-14T11:07:39+0000,1731582459,2024-11-15T15:03:14+0000,2024-11-15T15:03:14+0000,No description available,"['Thomas Diesler - 2024-11-15T14:56:17+0000 ansible-playbook \\\n    -i ansible/hosts.ini \\\n    ansible/step00-prepare-vps.yml \\\n    ansible/step01-install-k3s.yml \\\n    ansible/step02-registry.yml\nhttps://github.com/tdiesler/camel-cloud-examples/blob/main/ansible/README.md', 'Thomas Diesler - 2024-11-15T15:03:14+0000 Done']"
21449,Bug,Unassigned,Aurélien Pupier,4.8.1,None,2024-11-14T08:40:01+0000,1731573601,2024-11-29T17:26:50+0000,2024-11-29T17:26:50+0000,revealed sometimes by test org.apache.camel.main.MainThreadPoolTest.testCustomThreadPool  :,"['Claus Ibsen - 2024-11-14T15:36:06+0000 This is hard to reproduce, even when setting @RepeatTest(2000) on the test methods. Have you seen this more than once ?', 'Aurélien Pupier - 2024-11-14T16:01:52+0000 I think I already seen this test failed in the past (but not had time to checked the stacktrace error nor report in the tracker).\nIn the little history of 5 builds on CI, it failed a single time.\nAlso in success for me locally when trying with @RepeatedTest(10000)']"
21448,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,None,4.9.0,2024-11-13T13:26:16+0000,1731504376,2024-11-15T09:17:53+0000,2024-11-15T09:17:53+0000,"This component seems largely unmaintained and suffering from problems with testing (CAMEL-21439). As all the tests are disabled and apparently there's no interest on it, we should deprecate it.",No comments found
21447,Dependency upgrade,Thomas Cunningham,Claus Ibsen,None,4.9.0,2024-11-13T12:03:36+0000,1731499416,2024-11-25T08:45:27+0000,2024-11-25T08:45:27+0000,No description available,No comments found
21446,Bug,Marco Carletti,Filip Jalaksa,4.8.1,"4.8.2,4.9.0",2024-11-13T11:28:03+0000,1731497283,2024-11-13T18:40:20+0000,2024-11-13T18:40:20+0000,Created a simple integration using KaravanOutput in my testing minikube container:So when using the default in property placeholders it will take precedence even if given key is present.,['Andrea Cosentino - 2024-11-13T11:31:18+0000 mcarlett already has a fix']
21445,Improvement,Andrea Cosentino,Claus Ibsen,None,"4.8.2,4.9.0",2024-11-13T11:06:21+0000,1731495981,2024-11-13T13:08:24+0000,2024-11-13T13:08:24+0000,See chathttps://camel.zulipchat.com/#narrow/channel/352237-camel-jbang/topic/export.20with.20vaultChange the default to false in the camel-main vault configuration.Add note about this change in the 4.9 upgrade guideTo enable you just setcamel.vault.kubernetes.refreshEnabled=true,No comments found
21444,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-12T19:59:59+0000,1731441599,2024-11-13T09:12:00+0000,2024-11-13T09:12:00+0000,"camel> catalog other --since-after=4
java.lang.NullPointerException: Cannot invoke ""String.length()"" because ""t1"" is null
    at org.apache.camel.dsl.jbang.core.common.VersionHelper.compare(VersionHelper.java:107)
    at org.apache.camel.dsl.jbang.core.common.VersionHelper.isGE(VersionHelper.java:55)
    at org.apache.camel.dsl.jbang.core.commands.catalog.CatalogBaseCommand.lambda$doCall$2(CatalogBaseCommand.java:137)
    at java.base/java.util.stream.ReferencePipeline$2$1.accept(ReferencePipeline.java:178)
    at java.base/java.util.ArrayList$ArrayListSpliterator.forEachRemaining(ArrayList.java:1625)
    at java.base/java.util.stream.AbstractPipeline.copyInto(AbstractPipeline.java:509)
    at java.base/java.util.stream.AbstractPipeline.wrapAndCopyInto(AbstractPipeline.java:499)
    at java.base/java.util.stream.ReduceOps$ReduceOp.evaluateSequential(ReduceOps.java:921)
    at java.base/java.util.stream.AbstractPipeline.evaluate(AbstractPipeline.java:234)
    at java.base/java.util.stream.ReferencePipeline.collect(ReferencePipeline.java:682)
    at org.apache.camel.dsl.jbang.core.commands.catalog.CatalogBaseCommand.doCall(CatalogBaseCommand.java:138)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)",No comments found
21443,New Feature,Guillaume Nodet,Guillaume Nodet,None,4.9.0,2024-11-12T15:50:56+0000,1731426656,2024-11-12T15:52:19+0000,2024-11-12T15:51:52+0000,No description available,No comments found
21442,Bug,Thomas Diesler,Aurélien Pupier,"4.8.1,4.8.2,4.9.0","4.8.4,4.10.0",2024-11-12T13:31:19+0000,1731418279,2025-01-25T07:31:18+0000,2025-01-25T07:31:18+0000,"it is a regression introduced in Camel 4.8.1, it is working fine with Camel 4.8.0Using jbang '-Dcamel.jbang.version=4.8.0' camel@apache/camel export --runtime=quarkus --gav=com.acme:myproject:1.0-SNAPSHOT is exporting successfully and then calling mvn quarkus:dev is working finePotential workarounds:","[""Claus Ibsen - 2024-11-14T06:31:07+0000 This command looks a bit wrong - as you have both * and *.xsl as the args to select the files to run. Also local-kamelet-dir is not intended to be current dir, but some shared dir.\njbang '-Dcamel.jbang.version=4.8.1' camel@apache/camel run * --dev --logging-level=info --local-kamelet-dir=. *.xsl"", 'Claus Ibsen - 2024-11-14T06:31:38+0000 Can you attach the files you use for this, it would be much easier to reproduce instead of we have to make up a project on our own which does not match what you attempt to do', ""Aurélien Pupier - 2024-11-14T07:49:51+0000 About kamelet-dir, hitting same kind of problem that the project structure needs to be reinvented. Usually users are creating kamelet at the same level than Camel routes. Also the Camel Jbang init is not giving any guidance and by default creating at the same level. So providing --kamelet-dir to current dir is the way to have it working by default.\nusing `jbang '-Dcamel.jbang.version=4.8.1' camel@apache/camel run test-with-xsl.camel.yaml --dev --logging-level=info --local-kamelet-dir=. *.xsl` is giving the same result. The *.xsl is used to select additional files to add the classpath, not to select files to run.\nAdded the project after the 3 steps example-test-with-xsl-before-export.zip :\njbang '-Dcamel.jbang.version=4.8.1' camel@apache/camel init 'test-with-xsl.camel.yaml'\ncreate an empty dummy.xsl file\njbang '-Dcamel.jbang.version=4.8.1' camel@apache/camel run test-with-xsl.camel.yaml --dev --logging-level=info --local-kamelet-dir=. *.xsl"", ""Aurélien Pupier - 2024-11-14T09:10:22+0000 when using a name for the Camel route file without 'xsl' in it, the error stacktrace is slightly different (or a coincidence and just picking one or the other?):\njava.nio.file.NoSuchFileException: .camel-jbang/work/src/main/resources/kamelets/my.xsl\n        at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)\n        at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)\n        at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)\n        at java.base/sun.nio.fs.UnixFileSystem.copyFile(UnixFileSystem.java:668)\n        at java.base/sun.nio.fs.UnixFileSystem.copy(UnixFileSystem.java:1060)\n        at java.base/sun.nio.fs.UnixFileSystemProvider.copy(UnixFileSystemProvider.java:300)\n        at java.base/java.nio.file.Files.copy(Files.java:1304)\n        at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.safeCopy(ExportBaseCommand.java:911)\n        at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.safeCopy(ExportBaseCommand.java:888)\n        at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.copySourceFiles(ExportBaseCommand.java:581)\n        at org.apache.camel.dsl.jbang.core.commands.ExportQuarkus.export(ExportQuarkus.java:105)\n        at org.apache.camel.dsl.jbang.core.commands.Export.export(Export.java:150)\n        at org.apache.camel.dsl.jbang.core.commands.Export.export(Export.java:63)\n        at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.doCall(ExportBaseCommand.java:248)\n        at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)\n        at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)\n        at picocli.CommandLine.executeUserObject(CommandLine.java:2045)\n        at picocli.CommandLine.access$1500(CommandLine.java:148)\n        at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)\n        at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)\n        at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)\n        at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)\n        at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)\n        at picocli.CommandLine.execute(CommandLine.java:2174)\n        at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:173)\n        at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:62)\n        at main.CamelJBang.main(CamelJBang.java:36)"", 'Aurélien Pupier - 2024-11-14T09:12:52+0000 when commenting out the line `camel.jbang.localKameletDir=file\\:.` in the .camel-jbang/camel-jbang-run.properties file, the export is working', 'Aurélien Pupier - 2024-11-14T09:14:37+0000 now im reproducing without the xsl so I will simplify the steps and update the title. It is related only to the kamelet-dir parameter', ""Aurélien Pupier - 2024-11-14T09:50:57+0000 note that `jbang '-Dcamel.jbang.version=4.8.1' camel@apache/camel export --runtime=quarkus --gav=com.acme:myproject:1.0-SNAPSHOT --local-kamelet-dir=.` is working when there wasn't a run done, so when there is no .camel-jbang/camel-jbang-run.properties\nEDIT: in fact it seems that the parameter is ignored and it is workign by the side effect that the kamelet is at same level than the Camel route file"", ""Aurélien Pupier - 2024-11-20T09:31:41+0000 completely sidetracked by other priorities.\nbranch on which I started to write some tests https://github.com/apupier/camel/pull/new/21442-FixRegressionExportWithLocalKameletDirSetToCurrentDir (but parameters doesn't seem to be passed correctly)"", 'Ricardo Martinez - 2025-01-09T11:17:06+0000 Would it be possible to increase the priority a bit on this? I think is a common pattern to test an integration locally first and then migrate it over into a project', 'Claus Ibsen - 2025-01-09T11:38:04+0000 Use --fresh when exporting', 'Claus Ibsen - 2025-01-10T09:47:08+0000 Did you try with --fresh during export', ""Aurélien Pupier - 2025-01-10T14:00:41+0000 same errro with --fresh (tried with 4.8.1 and 4.9.0)\napupier@localhost:~/ws/test-jbang-export$ jbang '-Dcamel.jbang.version=4.8.1' camel@apache/camel export --runtime=quarkus --gav=com.acme:myproject:1.0-SNAPSHOT --fresh\nGenerating fresh run data\njava.nio.file.NoSuchFileException: .camel-jbang/work/src/main/resources/kamelets/test.camel.yaml\n at java.base/sun.nio.fs.UnixException.translateToIOException(UnixException.java:92)\n at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:106)\n at java.base/sun.nio.fs.UnixException.rethrowAsIOException(UnixException.java:111)\n at java.base/sun.nio.fs.UnixFileSystem.copyFile(UnixFileSystem.java:668)\n at java.base/sun.nio.fs.UnixFileSystem.copy(UnixFileSystem.java:1060)\n at java.base/sun.nio.fs.UnixFileSystemProvider.copy(UnixFileSystemProvider.java:300)\n at java.base/java.nio.file.Files.copy(Files.java:1304)\n at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.safeCopy(ExportBaseCommand.java:911)\n at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.safeCopy(ExportBaseCommand.java:888)\n at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.copySourceFiles(ExportBaseCommand.java:581)\n at org.apache.camel.dsl.jbang.core.commands.ExportQuarkus.export(ExportQuarkus.java:105)\n at org.apache.camel.dsl.jbang.core.commands.Run.runQuarkus(Run.java:912)\n at org.apache.camel.dsl.jbang.core.commands.Run.run(Run.java:414)\n at org.apache.camel.dsl.jbang.core.commands.Run.runExport(Run.java:330)\n at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.runSilently(ExportBaseCommand.java:318)\n at org.apache.camel.dsl.jbang.core.commands.ExportQuarkus.export(ExportQuarkus.java:72)\n at org.apache.camel.dsl.jbang.core.commands.Export.export(Export.java:150)\n at org.apache.camel.dsl.jbang.core.commands.Export.export(Export.java:63)\n at org.apache.camel.dsl.jbang.core.commands.ExportBaseCommand.doCall(ExportBaseCommand.java:248)\n at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)\n at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)\n at picocli.CommandLine.executeUserObject(CommandLine.java:2045)\n at picocli.CommandLine.access$1500(CommandLine.java:148)\n at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)\n at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)\n at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)\n at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)\n at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)\n at picocli.CommandLine.execute(CommandLine.java:2174)\n at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:173)\n at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:62)\n at main.CamelJBang.main(CamelJBang.java:36)"", 'Claus Ibsen - 2025-01-24T06:51:31+0000 Thomas can you backport this to 4.8.x branch']"
21441,Bug,Unassigned,Salvatore Mongiardo,4.8.1,None,2024-11-12T13:18:06+0000,1731417486,2024-11-12T15:23:06+0000,2024-11-12T15:18:32+0000,"Camel cli configuration steps:Init / Export applicationSo, let's create a process (camel-1) using the exported project with maven:The command:doesn't work as expected. The behaviour is different if we run with the CLI:","['Claus Ibsen - 2024-11-12T14:52:21+0000 This is not a bug - the log command is for jbang only. When you run directly in SB or Q they have their own logging system.', ""Salvatore Mongiardo - 2024-11-12T15:08:45+0000 Thanks for clarifying this davsclaus. I'm pretty sure it was working on the previous versions, but if it's not planned to work on SB/Q runtimes, we can ignore this, so I can change my tests."", 'Claus Ibsen - 2024-11-12T15:23:06+0000 Okay I have added a note in the jbang docs about SB/Q not supported']"
21440,Bug,Unassigned,Salvatore Mongiardo,4.8.1,None,2024-11-12T13:14:24+0000,1731417264,2024-11-12T15:18:18+0000,2024-11-12T15:18:18+0000,"Camel cli configuration steps:Init / Export applicationLet's run the CSB application and retrieve it from the active processes list:The result is ""camel-1"", but generally it would have been named with the yaml name (""test"")Even changing the name through the specific option:The result is always the same:",['Claus Ibsen - 2024-11-12T14:54:02+0000 No its not a bug when you run in SB or Q the name is configured in application.properties']
21439,Test,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,None,2024-11-12T09:56:08+0000,1731405368,2024-11-13T13:33:08+0000,,Something has broken etcd3 very badly and tests are not working at all. This could indicate a serious problem with the component.Running the tests causes these messages to be printed:And the logs:,"['Claus Ibsen - 2024-11-12T19:28:56+0000 If etcd3 is hard to maintain we can consider deprecating it', ""Otavio Rodolfo Piske - 2024-11-13T07:06:58+0000 davsclaus is it widely used? I don't remember seeing much activity on this one, so we could consider deprecating it, indeed."", 'Claus Ibsen - 2024-11-13T08:52:08+0000 No its not really in use, its preview level for a long time', 'Claus Ibsen - 2024-11-13T08:52:31+0000 Camel is a very big project and from time to time then stuff needs to go for the project to be maintainable', ""Otavio Rodolfo Piske - 2024-11-13T09:31:24+0000 +1. Let's deprecate this one. Later I'll create the ticket and mark the code as deprecated so we can remove it after the next LTS.""]"
21438,Test,Unassigned,Otavio Rodolfo Piske,4.9.0,None,2024-11-12T09:36:04+0000,1731404164,2025-01-31T12:30:03+0000,,"We have multiple tests that run unreliably on platforms such as ppc64le, s390x and aarch64.At lot of these tests are related to concurrency and threading scenarios, which could indicate incorrect assumptions about the memory model behavior on these platforms.","['Jang-Vijay Singh - 2025-01-03T21:39:24+0000 Please share some observations of currently flaky tests. \nSome of the camel-kafka BreakOnFirstError* tests that were enabled on those platforms after significant changes seemed quite stable.\neg. \nhttps://issues.apache.org/jira/browse/CAMEL-20722\nNot all were enabled but worth examining the enabled ones, and identifying some examples of ones that are flaky now. \nI’d like to look in to this if that’s ok', 'Jang-Vijay Singh - 2025-01-03T21:41:48+0000 PS: Checking linked PRs for disabled tests', 'Otavio Rodolfo Piske - 2025-01-29T08:16:20+0000 Added several more flakies:\ncomponents/camel-barcode/src/test/java/org/apache/camel/dataformat/barcode/BarcodeDataFormatSpringTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/AntPathMatcherGenericFileFilterTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/FileConsumeDoneFileIssueTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerBeginAndCommitExpressionRenameStrategyTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerDirectoryMustExistBridgeErrorHandlerTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerFileFilterOptimizedTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerFilterFileTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/FileConsumerResumeFromOffsetStrategyTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/FileKeepLastModifiedTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/file/FileNoOpLockFileTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/seda/SedaWaitForTaskNewerOnCompletionTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/validator/ValidatorResourceResolverFactoryTest.java\ncore/camel-core/src/test/java/org/apache/camel/component/xslt/XsltCustomizeEntityResolverTest.java\ncore/camel-core/src/test/java/org/apache/camel/impl/DefaultCamelContextSuspendResumeRouteStartupOrderTest.java\ncore/camel-core/src/test/java/org/apache/camel/impl/DefaultProducerCacheTest.java\ncore/camel-core/src/test/java/org/apache/camel/impl/DurationRoutePolicyMaxSecondsTest.java\ncore/camel-core/src/test/java/org/apache/camel/impl/engine/DefaultSupervisingRouteControllerTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/MulticastParallelStreamingTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/MulticastParallelStreamingTimeoutTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/MulticastParallelStressTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/ShutdownCompleteCurrentTaskOnlyTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/WireTapBeanAsProcessorTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateCompleteAllOnStopTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateControllerTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateForceCompletionOnStopParallelTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/aggregator/AggregateForceCompletionOnStopTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/throttle/ThrottlingExceptionRoutePolicyHalfOpenHandlerSedaTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/throttle/ThrottlingExceptionRoutePolicyKeepOpenOnInitTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/throttle/concurrent/ConcurrentRequestsThrottlerTest.java\ncore/camel-core/src/test/java/org/apache/camel/processor/throttle/requests/ThrottlerTest.java', ""Jang-Vijay Singh - 2025-01-30T11:35:23+0000 Hi orpiske \nDo you have some logs related to the component.file flakies? \nI couldn't spot AntPathMatcherGenericFileFilterTest in the flakes in Jenkins builds 713 for main branch (earliest build that's still available).\nDidn't spot it in flakes in build 712 either as I downloaded the log a few days ago. \nI can see that in newer builds its skipped in build 716 onwards. \nJV""]"
21437,Improvement,Unassigned,Olivier Jacquemart,"4.8.0,4.8.1",None,2024-11-12T09:29:49+0000,1731403789,2024-11-12T10:06:59+0000,,"At the moment, the DefaultRestClientRequestValidator not give any information in case of an invalid json object.
It could be nice to have more info like a log in that particular case (and maybe other cases like empty body, not allowed query params or http headers).About the json validation, the json-validator module has another approach and allows to catch exception so we can decide what exception to log.",No comments found
21436,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-11T18:02:55+0000,1731348175,2024-11-13T11:07:16+0000,2024-11-13T11:07:16+0000,"A bean such as a database driverCan fail during export because camel-kubernetes fail withjava.lang.IllegalArgumentException: Secrets must be configured on Kubernetes vault configuration
at org.apache.camel.component.kubernetes.secrets.vault.SecretsReloadTriggerTask.doStart(SecretsReloadTriggerTask.java:96)",No comments found
21435,Bug,Claus Ibsen,Dmitrii Kriukov,None,4.9.0,2024-11-11T17:35:04+0000,1731346504,2024-11-13T09:32:25+0000,2024-11-13T09:20:48+0000,"Retry on the onException() clause seems to be impossible for producerPoolMaxTotal=1 (leads to call of GenericObjectPoolConfig.setMaxTotal())
This causes infinite hanging in case of network IO exceptions.
Netty attempts to utilize a new connection when the old one is still unreleased.
It boils down to method org.apache.commons.pool2.impl.GenericObjectPool::borrowObject(Duration borrowMaxWaitDuration) throws Exception {}
When producerPoolBlockWhenExhausted = true (the default value), the application hangs.
When producerPoolBlockWhenExhausted = false, I get an exception 
2024-11-11 13:41:44 ERROR [com.opt.obp.ser.ada.cam.Logger] (Camel Thread #2 - NettyClientTCPWorker) <> Exception occurred: java.util.NoSuchElementException: Pool exhausted 
So, either way it's impossible to serve","['Claus Ibsen - 2024-11-11T17:58:42+0000 Then its a bad idea to use such low pool, set the value higher', ""Dmitrii Kriukov - 2024-11-11T18:54:42+0000 Hi Claus,\nit's a limitation imposed on us by the other side of data exchange."", 'Claus Ibsen - 2024-11-13T09:20:48+0000 Added a note for the docs about the danger of setting this value too low.', 'Claus Ibsen - 2024-11-13T09:32:25+0000 I would suggest you try to run with TRACE logging at \norg.apache.camel.component.netty\n \nAnd then capture the logging activity what happens when you have the IO network error and how camel-netty is invalidating the pooled object and creating a fresh new.\nThis can maybe give hints if there is something that can be improved when the pool size is 1 vs having space in the pool.']"
21434,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.9.0,4.9.0,2024-11-11T14:52:56+0000,1731336776,2024-12-09T08:24:25+0000,2024-11-11T16:44:22+0000,There are a lot of references for Camel JBang in the Camel Kamelet Main module. This makes it harder to reuse this module for other tools and ideas that could benefit from the classes on that module.We should decouple Camel JBang references from it.,"['Otavio Rodolfo Piske - 2024-11-11T16:44:22+0000 Resolved with the linked PR.', 'Dinu Pavithran - 2024-12-08T19:13:21+0000 This introduced a bug. it broke running local kamelets. \nThe following line also needs to be adapted:\nhttps://github.com/apache/camel/blob/88dec40df31d8e5b3f423b47a3724830ff2b4992/dsl/camel-jbang/camel-jbang-core/src/main/java/org/apache/camel/dsl/jbang/core/commands/Run.java#L1563\n```\n            main = new KameletMain(sj.toString());\n— change to —\n            main = new KameletMain(CAMEL_INSTANCE_TYPE, sj.toString());\n```\norpiske', 'Claus Ibsen - 2024-12-09T08:24:25+0000 Thanks we are fixing that for 4.10']"
21433,Improvement,Claus Ibsen,Andrej Vano,4.8.1,4.10.0,2024-11-11T14:22:01+0000,1731334921,2025-02-02T08:16:53+0000,2025-02-02T08:16:53+0000,"I do:
1. mkdir app
2. camel init app/hello.yaml
3. camel run --runtime camel-quarkus app/hello.yamlAlso when I do camel export --runtime quarkus --dir app/export app/hello.yaml, hello.yaml is placed in src/main/resources/camel, but the content of application.properties is:","['Claus Ibsen - 2024-11-12T06:13:08+0000 This is not really intended, you export from the same dir, or use the --source-dir option.\nBut we can see if we can get this mix of path style better in the future', 'Claus Ibsen - 2025-02-02T08:16:53+0000 This seems working in the 4.10 release']"
21432,Bug,Nicolas Filotto,Abhi Ashok,4.4.3,"4.4.5,4.8.2,4.9.0",2024-11-11T14:04:21+0000,1731333861,2024-11-27T21:29:39+0000,2024-11-14T08:59:56+0000,"multicast function used in a Camel Route never returns back occasionally.Route Code snippet: 
from(getProcessMessageURI())
.routeId(getSourceId() + "".businessRoute"")
.autoStartup(this.getConfigValue(getRouteAutoStartup()))
.transacted(this.getPropagationRequiredPolicy())
.setHeader(""DESTINATION_URI"").simple(this.getConfigValue(getOutputQueue()))
.process(new InputMessageProcessor(this.getConfigValue(getOutputQueue())))
.bean(new JTEConfigReader(getConfigXml()), ""addJTEConfig(${body})"")
.bean(DMUtilityProcessor.class) exchange
.bean(TranslatorExchangeController.class)
.removeHeaders(""JMS*"")
.multicast()
.to(directOutput(), directPersist());Thread dump shows that the Processing Thread remains in RUNNABLE state.All Stuck instance of Threaddump shows access to SimpleLRUCache$OperationContext.close, where it gets stuck.Thread Dump:Name: Camel (camelContext) thread #11 - JmsConsumer[IFM.RTR.IFM.ITE.BFM.AKNKRAW.EXPRESS]
State: RUNNABLE
Total blocked: 13,338  Total waited: 13,968Stack trace: 
org.apache.camel.support.cache.SimpleLRUCache$OperationContext.close(SimpleLRUCache.java:318)
org.apache.camel.support.cache.SimpleLRUCache.putIfAbsent(SimpleLRUCache.java:125)
org.apache.camel.processor.MulticastProcessor.wrapInErrorHandler(MulticastProcessor.java:1074)
org.apache.camel.processor.MulticastProcessor.createProcessorExchangePair(MulticastProcessor.java:1023)
org.apache.camel.processor.MulticastProcessor.createProcessorExchangePairs(MulticastProcessor.java:990)
org.apache.camel.processor.MulticastProcessor.doProcess(MulticastProcessor.java:324)
org.apache.camel.processor.MulticastProcessor.process(MulticastProcessor.java:316)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:840)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:746)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:200)
org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:397)
org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:327)
org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)
org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:840)
org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:746)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)
org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)
org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)
org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)
org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)
org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)
org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)
org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)
org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)
org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)
org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:354)
org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:330)
org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166)
org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148)
org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59)
org.apache.camel.processor.Pipeline.process(Pipeline.java:163)
org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:354)
org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:330)
org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:82)
org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)
org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:132)
org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:783)
org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:741)
org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:719)
org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:333)
org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:246)
org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1257)
org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1247)
org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1140)
java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
java.lang.Thread.run(Thread.java:840)","['Abhi Ashok - 2024-11-11T18:34:08+0000 Hi davsclaus - Is there an alternative to Slack account verification. Unfortunately Slack is blocked in our organization.  Please let me know. Thx.', 'Claus Ibsen - 2024-11-11T18:43:13+0000 Sorry but what are you talking about ?', 'Abhi Ashok - 2024-11-11T19:31:13+0000 nvm. It might be just process. \nI  see on the Jira board, its asking me for slack verification if needed to see the discussions on this issue.', 'Claus Ibsen - 2024-11-12T06:04:51+0000 There is no slack in use at all, you can see all here in the comments', 'Claus Ibsen - 2024-11-12T06:06:00+0000 Try with latest release or SNAPSHOT and can you build a sample project that can reproduce the issue you see.', 'Abhi Ashok - 2024-11-12T15:34:31+0000 Thank you for the fix. We will check it out with version 4.9.0.', ""Nicolas Filotto - 2024-11-12T15:41:24+0000 I've published snapshots for version 4.4 (4.4.5-SNAPSHOT), you can get them from https://repository.apache.org/snapshots/. If you could provide your feedback using the snapshots, it would be very helpful for us."", 'Abhi Ashok - 2024-11-21T15:28:10+0000 Hi Nicholas, Calus - Thanks again for the fix. We have volume tested the fix using 4.4.5-SNAPSHOT and it appears to have resolved the issue.  No long running  ""RUNNABLE\' thread s noticed.', 'Nicolas Filotto - 2024-11-21T15:55:39+0000 Awesome, thx for the feedback', ""Jannik Schmeier - 2024-11-21T16:02:36+0000 Is there an ETA for 4.8.2 or a workaround that I can use until then? We have already deployed 4.8.1 to production and using SNAPSHOT versions there isn't an option."", 'Jannik Schmeier - 2024-11-21T16:20:34+0000 One more thing. I have noticed, that for us this happens for the bean expression, too. Is this accounted for in the bugfix?\n""Camel (camel-1) thread #2 - JmsConsumer[<hidden>]"" - Thread t@58\n   java.lang.Thread.State: RUNNABLE\n    at org.apache.camel.support.cache.SimpleLRUCache$OperationContext.close(SimpleLRUCache.java:318)\n    at org.apache.camel.support.cache.SimpleLRUCache.put(SimpleLRUCache.java:106)\n    at org.apache.camel.support.cache.SimpleSoftCache.put(SimpleSoftCache.java:114)\n    at org.apache.camel.component.bean.BeanComponent.addBeanInfoToCache(BeanComponent.java:96)\n    at org.apache.camel.component.bean.BeanInfo.<init>(BeanInfo.java:169)\n    at org.apache.camel.component.bean.ConstantBeanHolder.<init>(ConstantBeanHolder.java:50)\n    at org.apache.camel.language.bean.BeanExpression.invokeOgnlMethod(BeanExpression.java:435)\n    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:218)\n    at org.apache.camel.language.bean.BeanExpression.evaluate(BeanExpression.java:232)\n    at org.apache.camel.language.simple.SimpleExpressionBuilder$KeyedOgnlExpressionAdapter.evaluate(SimpleExpressionBuilder.java:1253)\n    at org.apache.camel.support.ExpressionAdapter.evaluate(ExpressionAdapter.java:45)\n    at org.apache.camel.model.language.ExpressionDefinition.evaluate(ExpressionDefinition.java:252)\n    at org.apache.camel.support.builder.ValueBuilder.evaluate(ValueBuilder.java:55)\n    at org.apache.camel.support.builder.BinaryPredicateSupport.matchesReturningFailureMessage(BinaryPredicateSupport.java:67)\n    at org.apache.camel.support.builder.BinaryPredicateSupport.matches(BinaryPredicateSupport.java:56)\n    at org.apache.camel.processor.FilterProcessor.matches(FilterProcessor.java:89)\n    at org.apache.camel.processor.FilterProcessor.process(FilterProcessor.java:72)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)\n    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)\n    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)\n    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)\n    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)\n    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)\n    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)\n    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:96)\n    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:208)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)\n    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler.process(RedeliveryErrorHandler.java:178)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.processTransacted(CamelInternalProcessor.java:390)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:320)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:119)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.doRun(RedeliveryErrorHandler.java:808)\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$RedeliveryTask.run(RedeliveryErrorHandler.java:714)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeFromQueue(DefaultReactiveExecutor.java:240)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.executeFromQueue(DefaultReactiveExecutor.java:77)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.await(DefaultAsyncProcessorAwaitManager.java:95)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:84)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.processByErrorHandler(TransactionErrorHandler.java:244)\n    at org.apache.camel.spring.spi.TransactionErrorHandler$1.doInTransactionWithoutResult(TransactionErrorHandler.java:207)\n    at org.springframework.transaction.support.TransactionCallbackWithoutResult.doInTransaction(TransactionCallbackWithoutResult.java:36)\n    at org.springframework.transaction.support.TransactionTemplate.execute(TransactionTemplate.java:140)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.doInTransactionTemplate(TransactionErrorHandler.java:200)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.processInTransaction(TransactionErrorHandler.java:155)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:123)\n    at org.apache.camel.spring.spi.TransactionErrorHandler.process(TransactionErrorHandler.java:132)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)\n    at org.apache.camel.processor.Pipeline$PipelineTask.run(Pipeline.java:102)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148)\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59)\n    at org.apache.camel.processor.Pipeline.process(Pipeline.java:163)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347)\n    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323)\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:82)\n    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32)\n    at org.apache.camel.component.jms.EndpointMessageListener.onMessage(EndpointMessageListener.java:132)\n    at org.springframework.jms.listener.AbstractMessageListenerContainer.doInvokeListener(AbstractMessageListenerContainer.java:787)\n    at org.springframework.jms.listener.AbstractMessageListenerContainer.invokeListener(AbstractMessageListenerContainer.java:742)\n    at org.springframework.jms.listener.AbstractMessageListenerContainer.doExecuteListener(AbstractMessageListenerContainer.java:720)\n    at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.doReceiveAndExecute(AbstractPollingMessageListenerContainer.java:333)\n    at org.springframework.jms.listener.AbstractPollingMessageListenerContainer.receiveAndExecute(AbstractPollingMessageListenerContainer.java:246)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.invokeListener(DefaultMessageListenerContainer.java:1257)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.executeOngoingLoop(DefaultMessageListenerContainer.java:1247)\n    at org.springframework.jms.listener.DefaultMessageListenerContainer$AsyncMessageListenerInvoker.run(DefaultMessageListenerContainer.java:1140)\n    at java.base@21.0.2/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1144)\n    at java.base@21.0.2/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:642)\n    at java.base@21.0.2/java.lang.Thread.runWith(Thread.java:1596)\n    at java.base@21.0.2/java.lang.Thread.run(Thread.java:1583)', ""Nicolas Filotto - 2024-11-21T16:52:24+0000 I'm afraid this bug fix won't have any effect on your use case since the cache size is set to 1 000 by default. I guess you can create a dedicated ticket for that with steps to reproduce"", 'Jannik Schmeier - 2024-11-22T11:30:05+0000 Thanks, I have created CAMEL-21467', 'Abhi Ashok - 2024-11-27T21:29:39+0000 Hi Nicholas, Calus - When can we get the release version 4.8.2 in maven central?  Thx, -Abhi']"
21431,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-11-11T12:53:58+0000,1731329638,2024-11-15T10:42:07+0000,2024-11-15T10:42:07+0000,"If you use dot when exporting then jbang does not let Camel know all the files, and you have an empty projectThis is wrongcamel export . --runtime=quarkus --gav=org.demo:mydemo:1.0.0 --dir=codeYou should usecamel export * --runtime=quarkus --gav=org.demo:mydemo:1.0.0 --dir=codeMaybe we can detect the dot, and let camel-jbang find all the files, as then we assume you want to do this",No comments found
21430,Bug,Unassigned,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-11-11T12:10:47+0000,1731327047,2024-11-12T17:31:56+0000,2024-11-12T17:31:56+0000,Reported athttps://github.com/apache/camel-quarkus/issues/6766,No comments found
21429,Dependency upgrade,Unassigned,Claus Ibsen,None,4.x,2024-11-11T12:00:37+0000,1731326437,2024-12-27T10:59:38+0000,,There may be some new options we can include in the camel-kafka componenthttps://kafka.apache.org/39/documentation.html#upgrade,['Claus Ibsen - 2024-11-12T17:41:24+0000 Spring Boot is based on Kafka Client 3.8.x for the upcoming 3.4.0 release.']
21428,Bug,Unassigned,Oystein Follo,4.8.1,None,2024-11-11T11:47:46+0000,1731325666,2024-11-27T08:16:44+0000,2024-11-27T08:16:44+0000,"We are experiencing a NullPointerException within the createTempFileName method. This error occurs when tempName is evaluated as null, and later in the code, a call to tempName.length() or tempName.lastIndexOf() results in an exception. This issue can disrupt the file processing flow.Relevant Code Segment:File: camel-file/components/file/GenericFileProducer.javaIssue Location:
The issue occurs in the line:If tempName is null, calling tempName.length() or tempName.lastIndexOf() will result in a NullPointerException.Steps to Reproduce:Expected Behavior:
The method should handle the case where tempName may be null. If tempName is null, a default value should be used or a check should be added to avoid invoking methods on a null object.Actual Behavior:
A NullPointerException is thrown when tempName is null, which may interrupt the file creation or processing flow.Suggested Solution:
Add a null check for tempName after it is assigned. For example:Alternatively, consider handling null scenarios with a fallback or error-handling mechanism to avoid this exception.Impact:
This issue disrupts file processing, potentially causing failures in downstream applications depending on file operations.","['Claus Ibsen - 2024-11-11T11:50:09+0000 What are you using for temp file name that can be eval as null response - this seems the problem. Can you tell what you do', 'Oystein Follo - 2024-11-11T12:37:50+0000 This occurs when calling Endpoint.createExchange() without setting the header values for CamelFileName and tempFileName, and then passing the exchange into CamelContext using the producer template', 'Claus Ibsen - 2024-11-11T12:45:49+0000 You must then have configured tempFileName on the file endpoint, what have you configured, can you show that', 'Claus Ibsen - 2024-11-13T09:32:57+0000 Can you provide more details ?', 'Oystein Follo - 2024-11-26T10:39:42+0000 After some more digging in our own systems we\'ve figured that we based our own logic on the old behavior (-> 4.7.0) where this returned the string ""null"" in the scenario mentioned above. Won\'t consider this as a bug, and we have fixed the issue on our end now. Sorry for the noise.', 'Claus Ibsen - 2024-11-27T08:16:44+0000 Thanks for reporting back']"
21427,Improvement,Claus Ibsen,Adriano Machado,4.8.1,4.9.0,2024-11-10T23:03:02+0000,1731279782,2024-11-15T15:42:06+0000,2024-11-15T15:42:06+0000,Pull request contains test showing the issue,['Claus Ibsen - 2024-11-11T11:14:11+0000 Thanks for reporting. This requires extra work to make the xml io writer aware of default values to be skipped.']
21426,New Feature,Unassigned,Claus Ibsen,None,4.x,2024-11-10T09:28:36+0000,1731230916,2024-11-12T19:55:07+0000,,We have a lot of mixed stuff athttps://github.com/apache/camel-kamelets-examplesWe should create a new camel-jbang-examples folder with a smaller set of examples that are better documented and aimed for users new to Camel or quickly want to try and see Camel in action.We should generate a table of content (like we do for the other examples repo) that has a summary and category so users can better find what they are looking for.,"['Claus Ibsen - 2024-11-12T19:51:00+0000 Lets start small and have a few examples that are doing basic from -> to for the most common components that shows correct configuration (database / bean / etc)\nAnd for EIPs is not a requirement but if anything then a small filter / choice etc. See the MQTT demo that is perfect.\nInclude up to date and clear instructions how to run and use the example for users that are not familiar with Camel.\nAnd show how to load this example into UI designer. And then talk about going from jbang -> export to SB/Q -> and if you need k8s/ocp/k3s.\nAnd if we have a single data transformation example using xslt / and another for json (maybe via jolt / jsonnet etc)', 'Claus Ibsen - 2024-11-12T19:52:13+0000 Also an example for SOAP/WS would be good, ie calling an existing WS (not exposing).\nAnd and example of exposing rest via code first, and another for contract first.', 'Claus Ibsen - 2024-11-12T19:55:07+0000 The examples should be automated to self install data in SQL tables (if needed) etc so they are very quick to startup / try / demo / show without many manual steps and stuff to do.']"
21425,New Feature,Unassigned,Claus Ibsen,None,4.11.0,2024-11-10T06:40:00+0000,1731220800,2025-01-09T09:19:38+0000,,"Installing camel jbang CLI is done the standard jbang way, but then you get the lastest release, and jbang has this auto-update checker that calls the internet which you may not want. We should have some camel command that can upgrade or dowgrade the CLI. Then users can be in more control and only use one CLI tool (not need to learn jbang first).",No comments found
21424,Improvement,Unassigned,Claus Ibsen,None,4.11.0,2024-11-10T06:36:21+0000,1731220581,2025-01-09T09:19:42+0000,,This can be needed when users want to trouble shoot and something does not work as expected then they can try to export in verbose mode that can help clarify where the problem is.,No comments found
21423,Bug,Zheng Feng,Zheng Feng,"4.4.4,4.8.1","4.4.5,4.8.2,4.9.0",2024-11-08T00:01:00+0000,1731024060,2024-11-09T07:57:39+0000,2024-11-09T07:57:39+0000,"Will not work, but with ""AES/GCM/NoPadding"", it expects to configure a GCMParamSpec.The related codes are in CryptoDataFormat.javaI think it could check (parameterSpec != null) at first.",No comments found
21422,Improvement,Claus Ibsen,Raymond,4.8.1,4.9.0,2024-11-06T12:31:50+0000,1730896310,2024-11-10T06:43:13+0000,2024-11-10T06:43:13+0000,"The ManagedRoute class (https://www.javadoc.io/doc/org.apache.camel/camel-management/latest/org/apache/camel/management/mbean/ManagedRoute.html) has three methods to get the CPU Usage:getLoad01()
getLoad05()
getLoad15()I noticed a bug and maybe also things that could be improved:1. Empty stringThe methods sometimes return an empty string. As I like to do calculations and tried to convert it to a BigDecimal I sometimes got:Probably better to always at least return 0

Note that statistics are enabled:But sometimes it still gives an empty (as like if it suddenly turned off). I don't know how to properly reproduce it, but I started like 100 routes, and measure the CPU. At first, it goes well, but after a while it returns empty values. According to a check, the statistics is still enabled at the time. 

2. Return type

The default return type is a String. As I understand this is a percentage, I would expect a return type that match that, like a BigDecimal (or a two decimal Double)

3. Method name

The name of the method is getLoad01(). This seems unclear:

What does load mean (cpu, network, memory)? And what does 01 mean?

Maybe 

BigDecimal cpuLoad = managedRoute.getCPULoad(LoadInterval.1minute)

Where loadInterval is an enumeration with all possible (int) values.

4. Time interval

If possible, that time interval could have more options between 1 minute to 1 hour.

5. Three decimals

To really get fine-grained statistics (especially on very powerful machine), a CPU stastics on three decimals would be helpful


--------------------------------------","['Claus Ibsen - 2024-11-09T08:29:24+0000 The load is 1,5 and 15 based on unix load average\nhttps://en.wikipedia.org/wiki/Load_(computing)', 'Claus Ibsen - 2024-11-09T08:47:53+0000 you need to deal with empty string yourself as the timer will return empty values during bootstrap until the first set of data comes in to be updated.', 'Claus Ibsen - 2024-11-09T08:58:38+0000 PR to use lock for update/read the values\nhttps://github.com/apache/camel/pull/16202', 'Raymond - 2024-11-09T21:05:24+0000 The wikipedia page states:\n""Therefore, it is not technically accurate that the 1-minute load average only includes the last 60 seconds of activity, as it includes 37% of the activity from the past, but it is correct to state that it includes mostly the last minute. ""\nThat\'s funny and good to know.\nNote that I was already dealt with empty string like this:\n  public static BigDecimal parseBigDecimal(String value) {\nif (value == null || value.isEmpty()) {\nreturn BigDecimal.ZERO; // or handle as needed\n}\nreturn new BigDecimal(value);\n}\n \nStill, when I was putting a lot of load on some routes, and then I got numbers. However suddenly the strings were getting empty. Thus, even though the routes were processing data I got empty strings.\nThe problem was sometimes it worked, and sometimes it didn\'t. So couldn\'t find a good reproducible case. I can retest this with 4.9.0 if this now works after the PR. If not, I can try again to find a reproducible case.', 'Claus Ibsen - 2024-11-10T06:43:13+0000 You are welcome to test the PR on main branch for 4.9.0 release']"
21421,Improvement,Andrea Cosentino,Adriano Machado,None,4.9.0,2024-11-06T08:52:32+0000,1730883152,2024-11-06T11:29:39+0000,2024-11-06T11:29:39+0000,No description available,No comments found
21420,Bug,Claus Ibsen,Adriano Machado,4.8.1,4.9.0,2024-11-05T23:19:07+0000,1730848747,2024-11-11T11:16:30+0000,2024-11-11T11:13:23+0000,Here's a unit test showing the problem:,['Claus Ibsen - 2024-11-11T11:13:23+0000 Thanks for reporting and the unit tests.']
21419,Bug,Federico Mariani,Felix Huisinga,4.8.1,"4.8.2,4.9.0",2024-11-05T14:25:24+0000,1730816724,2024-11-11T11:22:39+0000,2024-11-11T11:22:39+0000,"On upgrading from Camel 4.8.0 to 4.8.1, the app is resulting in application startup failure. The root cause is a conflict between two beans: applicationTaskExecutor and taskScheduler, both of which are being detected by org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration.Removing the @EnableScheduling fixes is as there will no longer be two Executor Beans. However, this will result in us not being able to use Spring scheduler.Below is the Log:2024-11-05T15:24:21.657+01:00  WARN 89193 — [service-name] [           main] ConfigServletWebServerApplicationContext : Exception encountered during context initialization - cancelling refresh attempt: org.springframework.beans.factory.UnsatisfiedDependencyException: Error creating bean with name 'org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration': Unsatisfied dependency expressed through field 'executor': No qualifying bean of type 'java.util.concurrent.Executor' available: expected single matching bean but found 2: applicationTaskExecutor,taskScheduler
2024-11-05T15:24:21.659+01:00  INFO 89193 — [service-name] [           main] o.apache.catalina.core.StandardService   : Stopping service [Tomcat]
2024-11-05T15:24:21.669+01:00  INFO 89193 — [service-name] [           main] .s.b.a.l.ConditionEvaluationReportLogger : 
 
Error starting ApplicationContext. To display the condition evaluation report re-run your application with 'debug' enabled.
2024-11-05T15:24:21.675+01:00 ERROR 89193 — [service-name] [           main] o.s.b.d.LoggingFailureAnalysisReporter   : 
 
***************************
APPLICATION FAILED TO START
***************************
 
Description:
 
Field executor in org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpAutoConfiguration required a single bean, but 2 were found:","['Claus Ibsen - 2024-11-10T06:44:16+0000 fmariani wonder if you have seen this', 'Federico Mariani - 2024-11-11T09:32:45+0000 Thanks for the heads up davsclaus']"
21418,Bug,Claus Ibsen,Olivier Jacquemart,"4.8.1,4.9.0","4.8.3,4.10.0",2024-11-05T13:39:03+0000,1730813943,2024-12-02T15:30:19+0000,2024-12-02T15:30:12+0000,"I have a problem regarding a rest route and a client sending multiple values in the Accept header. The route has the client request validation enabled.After a quick debug, I ended up in the RestUtil  class that returns false by default. It considers the accept header like invalid then and gives the 406.","['Claus Ibsen - 2024-11-14T06:34:33+0000 What runtime do you use to run this such as spring boot or quarkus, and do you use rest-dsl. In other words can you tell a bit more what you do', 'Claus Ibsen - 2024-12-02T15:13:12+0000 Thanks I found a way to reproduce this and have a fix on the way']"
21417,Test,Unassigned,Otavio Rodolfo Piske,4.9.0,4.9.0,2024-11-04T14:01:08+0000,1730728868,2024-11-28T10:35:19+0000,2024-11-28T10:35:19+0000,Various tests are broken for a long time:,"['Claus Ibsen - 2024-11-09T08:02:24+0000 The salesforce tests requires a fix coming in jackson 2.8.2', 'Claus Ibsen - 2024-11-28T10:35:16+0000 Jackson 2.8.2 has been released.']"
21416,Bug,Unassigned,Andrej Vano,4.8.1,None,2024-11-04T12:45:57+0000,1730724357,2024-11-11T14:11:16+0000,2024-11-11T14:11:16+0000,"What I did:1. jbang app install --force camel@apache/camel
2. camel init hello.yaml
3. camel run --runtime camel-quarkus hello.yamlthe same issues can be observed with runtime camel-spring-boot, with runtime camel-main it works.","['Claus Ibsen - 2024-11-11T12:28:48+0000 what does these output\njava --version\ncamel version', 'Claus Ibsen - 2024-11-11T12:30:52+0000 Works for me\n~/workspace/deleteme/argh ❯ java --version\nopenjdk 17.0.11 2024-04-16 LTS\nOpenJDK Runtime Environment Zulu17.50+19-CA (build 17.0.11+9-LTS)\nOpenJDK 64-Bit Server VM Zulu17.50+19-CA (build 17.0.11+9-LTS, mixed mode, sharing)\n~/workspace/deleteme/argh ❯ camel version\nJBang version: 0.119.0\nCamel JBang version: 4.8.1\n~/workspace/deleteme/argh ❯ camel run --runtime camel-quarkus hello.yaml\n~/workspace/deleteme/argh ❯ camel init hello.yaml                                                                                                                                   ✘ INT\n~/workspace/deleteme/argh ❯ camel run --runtime camel-quarkus hello.yaml\nRunning using Quarkus v3.15.1 (preparing and downloading files)\nExecuting ""/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home/bin/java -Dquarkus.platform.version=3.15.1 -Dquarkus.application.version=1.0-SNAPSHOT -Dquarkus.platform.artifact-id=quarkus-bom -Dquarkus.platform.group-id=io.quarkus.platform -Dquarkus.application.name=jbang-run-dummy -jar /Users/davsclaus/workspace/deleteme/argh/.camel-jbang-run/1731328222124/target/quarkus-app/quarkus-run.jar""\n__  ____  __  _____   ___  __ ____  ______\n --/ __ \\/ / / / _ | / _ \\/ //_/ / / / __/\n -/ /_/ / /_/ / __ |/ , _/ ,< / /_/ /\\ \\\n--\\___\\_\\____/_/ |_/_/|_/_/|_|\\____/___/\n2024-11-11 13:30:33,738 INFO  [org.apa.cam.qua.cor.CamelBootstrapRecorder] (main) Apache Camel Quarkus 3.15.0 is starting\n2024-11-11 13:30:33,741 INFO  [org.apa.cam.mai.MainSupport] (main) Apache Camel (Main) 4.8.0 is starting\n2024-11-11 13:30:33,779 INFO  [org.apa.cam.mai.BaseMainSupport] (main) Auto-configuration summary\n2024-11-11 13:30:33,779 INFO  [org.apa.cam.mai.BaseMainSupport] (main)     [MicroProfilePropertiesSource] camel.main.routesIncludePattern = camel/hello.yaml\n2024-11-11 13:30:33,810 INFO  [org.apa.cam.cli.con.LocalCliConnector] (main) Camel JBang CLI enabled\n2024-11-11 13:30:33,857 INFO  [org.apa.cam.imp.eng.AbstractCamelContext] (main) Apache Camel 4.8.0 (camel-1) is starting\n2024-11-11 13:30:33,924 INFO  [org.apa.cam.imp.eng.AbstractCamelContext] (main) Routes startup (total:1)\n2024-11-11 13:30:33,924 INFO  [org.apa.cam.imp.eng.AbstractCamelContext] (main)     Started route1 (timer://yaml)\n2024-11-11 13:30:33,924 INFO  [org.apa.cam.imp.eng.AbstractCamelContext] (main) Apache Camel 4.8.0 (camel-1) started in 65ms (build:0ms init:0ms start:65ms)\n2024-11-11 13:30:33,982 INFO  [io.quarkus] (main) jbang-run-dummy 1.0-SNAPSHOT on JVM (powered by Quarkus 3.15.1) started in 0.610s. Listening on: http://0.0.0.0:8080\n2024-11-11 13:30:33,982 INFO  [io.quarkus] (main) Profile prod activated.\n2024-11-11 13:30:33,982 INFO  [io.quarkus] (main) Installed features: [camel-attachments, camel-cli-connector, camel-console, camel-core, camel-management, camel-microprofile-health, camel-platform-http, camel-timer, camel-xml-io-dsl, camel-yaml-dsl, cdi, smallrye-context-propagation, smallrye-health, vertx]\n2024-11-11 13:30:34,938 INFO  [route1] (Camel (camel-1) thread #2 - timer://yaml) Hello Camel from route1\n2024-11-11 13:30:35,934 INFO  [route1] (Camel (camel-1) thread #2 - timer://yaml) Hello Camel from route1\n^C2024-11-11 13:30:36,524 INFO  [org.apa.cam.imp.eng.AbstractCamelContext] (Shutdown thread) Apache Camel 4.8.0 (camel-1) is shutting down (timeout:45s)\n2024-11-11 13:30:36,531 INFO  [org.apa.cam.imp.eng.AbstractCamelContext] (Shutdown thread) Routes stopped (total:1)\n2024-11-11 13:30:36,531 INFO  [org.apa.cam.imp.eng.AbstractCamelContext] (Shutdown thread)     Stopped route1 (timer://yaml)\n2024-11-11 13:30:36,535 INFO  [org.apa.cam.imp.eng.AbstractCamelContext] (Shutdown thread) Apache Camel 4.8.0 (camel-1) shutdown in 10ms (uptime:2s)\n2024-11-11 13:30:36,548 INFO  [io.quarkus] (Shutdown thread) jbang-run-dummy stopped in 0.037s', 'Andrej Vano - 2024-11-11T14:11:16+0000 strange, it also works for me now. Probably some mess in my env. Closing']"
21415,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-11-04T12:20:45+0000,1730722845,2024-11-14T06:35:09+0000,2024-11-14T06:35:09+0000,The configuration for Prometheus endpoint is hardcoded: https://github.com/apache/camel/blob/c7385e3e0542b8b754691d5015936c040c1cdf8d/components/camel-micrometer-prometheus/src/main/java/org/apache/camel/component/micrometer/prometheus/MicrometerPrometheus.java#L390We should add a configuration on the component to let the user configure.,No comments found
21414,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-11-04T12:20:45+0000,1730722845,2024-11-12T17:41:49+0000,2024-11-12T17:41:42+0000,The configuration for Prometheus endpoint is hardcoded: https://github.com/apache/camel/blob/c7385e3e0542b8b754691d5015936c040c1cdf8d/components/camel-micrometer-prometheus/src/main/java/org/apache/camel/component/micrometer/prometheus/MicrometerPrometheus.java#L390We should add a configuration on the component to let the user configure.,No comments found
21413,Wish,Unassigned,Raymond,None,None,2024-11-01T11:57:00+0000,1730462220,2024-11-09T21:23:36+0000,2024-11-09T07:48:25+0000,"WishThe wish is for a transaction log store in Camel to provide detailed tracking and performance metrics on end-to-end transactions across multiple exchanges/routes, storing metadata, exchange data, and performance metrics in a configurable, persistent registry to better monitor business processes.BackgroundA lot of data in tracing and observability is on the exchange level. How many exchanges are completed or failed, for example. In many cases, what I really want to know if a transaction is successful or failed.With a transaction I mean that the complete lifecycle of a message on Camel, this 
may contain many routes and exchanges. For example, when Seda or ActiveMQ is used 
a new exchange is created, but it's still the same transaction.
 
To have metrics and more insights on transactions, I would like to have a transaction log (through a separate registry?). This is a separate store with information about the transaction.Implementation ideasBelow are few ideas to implement this wish:1. Initialize the storeSetup a transaction log/store (either in memory or external store) through a registry. This is to enable it and to configure the store.2. Transaction itemA transaction item is a definition of a specific transaction. It may contain the following items:3. Tracking transactionsA transaction is probably best tracked by something like a breadcrumbId. Preferably a transactionId. At least something that cannot be edited by users (I sometimes see people change the breadcrumbId, to separate transactions into multiple segments).By default, only the start and end of a transaction is tracked. To get more fine-grained control, one could also track intermediate points like a route, a step, or a node.The transaction is tracked during processing, and then finished on completion. The whole counts as one ""UnitOfWork"".4. The transaction storeThe transaction store contains all the tracked items. Maybe there could be divided into separate segments like:- name (name of the transaction)
    - description (description of type of transaction)
    - transactionId
    - transactionHistory (similar to messageHistory)
    - correlationId(s)
    - timestamps
    - exceptions- headers, properties, variables
    - bodyType
    - body
    etc- load (CPU), memory (RAM), threads
    - number of transactions (completed, pending, failed)
    - throughput
    - response time
    - total process time of an transaction
    - average
    - etcIt should be possible to configure which of these items the user what want to store. By default, only metadata.5. Transaction API'sThere need to be an API to configure and operate the transaction store. (including JMX), similar to backlogtracer.Production
Some of the solutions I saw are only available during development or test, but the need is especially big for production environment. A solution needs to keep in mind that this would run for billion of messages. The flexibility to turn it easily on and off.For example, by default, the body of a message doesn't need to be stored. Or only the first 32kb need to be stored. But for specific case users, one to enable this on the fly for a specific transaction.Transactions are probably needed persistent, so either need a messagestore (disk) similar to brokers or an external database. I'm not sure what the best stores are for this kind of data. A normal SQL database like Postgres, a search database like Elastic, a metrics database like Prometheus or key/value store like Redis?End usersThe idea is that end users have a good insight in what is going on in the integration layer. So that they can question like the following:ConclusionThis is just an idea/wish, but something I see coming back from the start of my career as integration specialist (around 2007), until today.Most consultancy firms or end customers have built something themselves, I see with names like ""Track & Trace"", ""MessageStore"", ""ESB Collector"", ""Transactions"", ""Control center"".I also built a solution myself, and are happy to share this solution, or others I saw. A more generic solution to monitor (track & trace) transactions of business processes would be very welcome.","['Raymond - 2024-11-03T15:22:07+0000 As a small note, probably OpenTelemetry has the best connection to such an implementation as it can capture, process, and export telemetry data (such as metrics, traces, and logs) from Camel.', 'Claus Ibsen - 2024-11-09T07:48:25+0000 Camel is a framework.\nFeatures like this is for vendors to build', ""Raymond - 2024-11-09T21:23:36+0000 It's understandable that this is a bit outside the scope of the framework. And of course we also build\nsolutions for it, like I created the following:\nhttps://academy.dovetail.world/docs/pages/flow_manager/flow_tracing\nThe issues is a bit that:\n1. Camel framework concepts like exchanges, are hard to translate to concepts like transactions which are the customers of the vendors are looking for (and in my opinion every Camel user as well).\n2. Camel is very much route and exchange orientated, while users are more transaction and message orientated.\n3. It's hard to create solutions that work with big data / little overhead so they can always be active in production.\nMy hope is a bit that a combination of OpenTelemetry + Camel are providing a universal path towards this functionality.""]"
21412,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-31T15:57:46+0000,1730390266,2024-10-31T18:20:28+0000,2024-10-31T16:06:16+0000,The LanguageBuilderFactory makes it possible to do fluent builder to setup any kind of language with any of its supported options. This is part of RouteBuilder. But you may want to do the same in your test method with the mock to set expectations etc.,No comments found
21411,Improvement,Unassigned,Claus Ibsen,None,4.9.0,2024-10-31T15:25:07+0000,1730388307,2024-11-28T09:54:00+0000,2024-11-28T09:54:00+0000,Both when using camel-jbang and for CSB/CEQ etcYou need to use classpath to make it work,['Claus Ibsen - 2024-10-31T15:25:39+0000 org.apache.camel.FailedToStartRouteException: Failed to start route route1 because of The given OpenApi specification cannot be loaded from: orders.json\nat org.apache.camel.impl.engine.RouteService.setUp(RouteService.java:134)\nat org.apache.camel.impl.engine.InternalRouteStartupManager.doInitRoutes(InternalRouteStartupManager.java:92)']
21410,Task,Thomas Cunningham,Thomas Cunningham,None,4.9.0,2024-10-31T12:34:41+0000,1730378081,2024-11-14T06:35:36+0000,2024-11-14T06:35:36+0000,jamesnetherton pointed out that UTF_VALIDATOR is the default validation mode for Avro https://github.com/apache/avro/blob/release-1.12.0/lang/java/avro/src/main/java/org/apache/avro/Schema.java#L1433-L1435and that STRICT_VALIDATOR was more restrictive.    Change our use of NameValidator to use UTF_VALIDATOR rather than STRICT_VALIDATOR.,['Claus Ibsen - 2024-10-31T18:58:32+0000 This PR is only for unit tests']
21409,New Feature,Unassigned,Claus Ibsen,None,4.x,2024-10-31T11:19:12+0000,1730373552,2024-12-27T11:04:08+0000,2024-12-27T11:04:08+0000,We should add this connector,['Claus Ibsen - 2024-12-27T11:04:08+0000 it seems mariadb is GPL\nhttps://www.apache.org/legal/resolved.html#category-x']
21408,Task,Unassigned,Aurélien Pupier,4.8.1,None,2024-10-31T08:40:43+0000,1730364043,2024-11-12T09:06:23+0000,,"when calling something like:The genrated project is invalid.
The camel file is copied in src/main/resources/camel/democamel.yaml
The application.properties file contains:which is leading to this kind of error at runtime:Note that it also affects the Camel Kubernetes run as it is reusing the export.",No comments found
21407,Bug,Steve Storck,Steve Storck,4.8.0,"4.8.2,4.9.0",2024-10-30T21:31:06+0000,1730323866,2024-10-31T07:55:23+0000,2024-10-31T07:55:23+0000,"A user reported a problem with unsubscribing from dynamic router by using a control message, and it wasn't working.  However, unsubscribing with headers works as expected.",No comments found
21406,Bug,Claus Ibsen,Claus Ibsen,"4.4.0,4.8.0","4.4.5,4.8.2,4.9.0",2024-10-30T11:57:38+0000,1730289458,2024-10-30T12:02:51+0000,2024-10-30T12:01:32+0000,Reported on SOhttps://stackoverflow.com/questions/79137624/apache-camel-configuring-endpoints-using-class-or-bean,No comments found
21405,Improvement,Thomas Diesler,Gaelle Fournier,4.x,None,2024-10-30T11:04:03+0000,1730286243,2025-01-13T12:25:47+0000,2025-01-13T12:25:47+0000,"In Kubernetes plugin, Ingress trait (service exposure) is only available through the generated kubernetes manifest.To leverage quarkus cloud readyness we should add for quarkus runtime cases the use of : https://quarkus.io/guides/deploying-to-kubernetes#exposing-your-application-in-kubernetesThere is a bug on quarkus kubernetes extension that needs to be fixed before this can be done for non ""Prefix"" type-path route to work : https://github.com/quarkusio/quarkus/issues/43783","['Claus Ibsen - 2025-01-08T14:42:27+0000 Is this still relevant, or do we try to generate all the runtimes in the same way with jkube and if so, then this is maybe not needed anymore ?', 'Gaelle Fournier - 2025-01-13T12:25:08+0000 It is no longer relevant.']"
21404,Bug,Claus Ibsen,Claus Ibsen,4.8.1,"4.8.2,4.9.0",2024-10-30T10:36:13+0000,1730284573,2024-10-30T11:15:14+0000,2024-10-30T11:15:14+0000,https://camel.zulipchat.com/#narrow/channel/352237-camel-jbang/topic/IllegalArgumentException.20for.20files.20without.20extension,No comments found
21403,Bug,Unassigned,Mateusz Poncyliusz,4.8.1,"4.8.2,4.9.0",2024-10-30T09:07:25+0000,1730279245,2024-11-09T13:20:46+0000,2024-11-09T07:51:34+0000,"When I receive an EDI message Camel tries to generate MIC (Message Integrity Code) and calls public static byte[] getContent(HttpEntity entity) in EntityUtils, which then executes entity.writeTo(os) in ApplicationEntity.In line 67 [see code|https://github.com/apache/camel/blob/camel-4.8.x/components/camel-as2/camel-as2-api/src/main/java/org/apache/camel/component/as2/api/entity/ApplicationEntity.java] , the library incorrectly calculates the message length, which causes it to truncate the content. Here is the relevant line:In this line, this.ediMessage.getBytes(this.getCharset())
retrieves the message content as a byte array, but this.ediMessage.length() returns the length of the String in characters rather than in bytes. If the ediMessage contains any multi-byte characters (e.g., ""ó""), the length method returns the count in characters, not in bytes, which leads to truncation.For instance, in UTF-8, a character like ""ó"" uses two bytes, but ediMessage.length() will return 1, not 2. This discrepancy causes write() to only transfer part of the byte array, leading to an incorrect MIC calculation and potential verification issues on the receiving end.A potential fix is to use:instead of","['Claus Ibsen - 2024-10-30T09:13:51+0000 You are welcome to work on a patch and send as PR.\nAlso if you could include an unit test then that is appreciated', 'Mateusz Poncyliusz - 2024-11-04T10:08:07+0000 davsclaus https://github.com/apache/camel/pull/16148', 'Claus Ibsen - 2024-11-09T07:51:34+0000 Thanks for reporting and the PR']"
21402,Improvement,Dmitrii Kriukov,Dmitrii Kriukov,None,4.9.0,2024-10-29T20:12:42+0000,1730232762,2024-11-14T17:55:09+0000,2024-11-14T17:55:09+0000,"My test case was: partially random value in an added header. It's difficult to test the exact value with existing API, so I was thinking about verifying against a regex. This option requires usage of Expressions.","['Claus Ibsen - 2024-10-30T09:58:39+0000 You can use expressions today,\nSee for example the CiA2 book page 375', 'Dmitrii Kriukov - 2024-10-30T19:33:33+0000 davsclaus where I can see this book?\nPR: https://github.com/apache/camel/pull/16127', 'Claus Ibsen - 2024-10-30T19:36:53+0000 You can buy it or have your employeer buy it etc.', 'Dmitrii Kriukov - 2024-10-30T19:39:25+0000 What is the full title, who is the author?', 'Claus Ibsen - 2024-10-30T19:42:04+0000 https://camel.apache.org/community/books/', 'Claus Ibsen - 2024-10-30T19:43:04+0000 Of course help with improving the exising upstream docs is welcome - there are pages for testing / mock component that can be updated with more details by anyone - just send PRs', 'Claus Ibsen - 2024-11-14T17:55:09+0000 See PR\nhttps://github.com/apache/camel/pull/16280']"
21401,Bug,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-10-29T14:12:33+0000,1730211153,2024-10-29T19:57:30+0000,2024-10-29T19:57:21+0000,This can happen if custom beans are using factory-method and has not set a factory-class and uses the type name for that; which leads to ClassCastException as the result of the factory method can be any kind of Object.,['Claus Ibsen - 2024-10-29T17:41:31+0000 TODO: backport fix to 4.8.x DONE']
21400,Bug,Claus Ibsen,Antoine DESSAIGNE,4.7.0,4.10.0,2024-10-29T11:41:46+0000,1730202106,2024-12-13T08:30:04+0000,2024-11-30T16:53:48+0000,"Hello everyone,I just discovered a StackOverflowError when using reading files. Here's the smallest reprocase I could find.As mentioned in the example, it only seems to fail if the processor in the aggregation is a DefaultProcessor and not a DefaultAsyncProcessor
It still fails after converting my component to DefaultAsyncProcessor, so it's unrelated.Can you have a look? Thank you","[""Antoine DESSAIGNE - 2024-10-29T17:42:47+0000 Thanks to a git bisect, the regression is due to commit 6324bc0a6da from CAMEL-16829\nUnfortunately, I don't understand this part of the code. Please let me know if there's anything I can do to help. Thank you."", 'Claus Ibsen - 2024-10-30T12:23:30+0000 Can you put together this example as either a standalone project that is easy to run, or an unit test class, thanks.', ""Antoine DESSAIGNE - 2024-10-30T12:54:59+0000 Hi davsclaus,\nI'll be able to do that tonight.\nIf you want to check it earlier, you need a project with camel-core and camel-csv, copy/paste the code into a main java method, add a bit of sleep at the end and you're done.\nThis relies on CSV because it's how I found it, maybe there's a way without CSV to reproduce the issue."", 'Antoine DESSAIGNE - 2024-10-30T19:58:57+0000 Hi davsclaus,\nThank you for looking into it.\nI attached SplitAggregateTest.java to this ticket. You need to save it in components/camel-csv/src/test/java/org/apache/camel/dataformat/csv/ and run it.\nIf you run it with 4.6.0 it will work but if you run it with 4.7.0 it will fail.', 'Claus Ibsen - 2024-11-30T09:56:18+0000 Your example is also bad that you split and aggregate and have a completion size of 1 that is bad design.\nThis can lead to this situation as you have.', ""Antoine DESSAIGNE - 2024-11-30T10:14:35+0000 Hello davsclaus,\nThank you for looking at it.\nYes, it makes little sense but it's the simplest reprocase with public components and data I could find. We have the stackoverflowerror with a split then aggregate to batch process a CSV file."", 'Claus Ibsen - 2024-11-30T10:52:04+0000 The issue is the aggregator in completion size = 1 mode, will always trigger completion and it will reusing the incoming thread to continue.\nAnd because the incoming thread is doing a giant split, its stack-depth grows bigger and bigger.\nYou need to make the aggregator output using its own thread, such as adding\n \n.executorService(Executors.newSingleThreadExecutor())\n \nOr turn on parallel processing\n \n.parallelProcessing()', 'Claus Ibsen - 2024-11-30T16:53:48+0000 update the aggregate eip doc with some pointers about this', ""Antoine DESSAIGNE - 2024-12-13T08:30:04+0000 Hi davsclaus,\nThank you for taking the time to investigate this.\nIf someone else encounters the same issue: I'm going another way to solve this. As the completion size comes for a property {{aggregationSize}}, I'll wrap the aggregate in a choice with {{aggregationSize == 1}}""]"
21399,Bug,Unassigned,Bruno Meseguer,4.8.1,"4.8.2,4.9.0",2024-10-29T10:44:10+0000,1730198650,2024-11-26T17:39:10+0000,2024-11-26T17:39:10+0000,"All seems to work well in 4.8.0Operating the same commands using 4.8.1 fails.Create a Camel route, for example, with:Then using the commands below to deploy on OpenShift (tested in Developer Sandbox) runThe execution fails with:","['Claus Ibsen - 2024-10-29T11:40:24+0000 Yeah that IntRange has been reported before, try with 4.9 SNAPSHOT', 'Claus Ibsen - 2024-11-26T08:54:24+0000 tdiesler I assume this has been fixed or do we wait for a new fabric8 client release ?', 'Christoph Deppisch - 2024-11-26T14:12:51+0000 I think this is a duplicated to https://issues.apache.org/jira/browse/CAMEL-21361 which is to be fixed in 4.8.2']"
21398,New Feature,Unassigned,Claude Mamo,None,4.9.0,2024-10-29T08:54:57+0000,1730192097,2024-12-17T11:04:19+0000,2024-10-30T08:23:33+0000,Migrate the Smooks Data Format from https://github.com/smooks/smooks-camel-cartridge/ to the Apache Camel code base (see https://github.com/smooks/smooks-camel-cartridge/issues/211).,['Claus Ibsen - 2024-10-30T08:23:45+0000 Thanks for the migration']
21397,Bug,Unassigned,Sven,4.8.1,"4.8.2,4.9.0",2024-10-29T08:39:17+0000,1730191157,2024-10-30T09:54:18+0000,2024-10-30T09:54:18+0000,2 issues were found when testing this new feature on Windows with SMB shares:In short: enabling autoCreateStepwise will always fail to create files on Windows environments (SMB or not).,No comments found
21396,New Feature,Zheng Feng,Zheng Feng,None,4.9.0,2024-10-29T07:42:53+0000,1730187773,2024-10-30T08:18:19+0000,2024-10-30T08:18:19+0000,Apache Fury (incubating) is a blazingly-fast multi-language serialization framework powered by JIT (just-in-time compilation) and zero-copy,No comments found
21395,Task,Nicolas Filotto,Nicolas Filotto,4.8.1,"4.8.2,4.9.0",2024-10-28T13:49:46+0000,1730123386,2024-10-30T17:20:39+0000,2024-10-30T17:20:39+0000,"The project camel-debezium-common shares the same package with the other camel-debezium sub-projects, which causes issues on environments like OSGI. The goal of this task is to avoid the split packages issue",No comments found
21394,Bug,Unassigned,anas oufdou,4.8.0,None,2024-10-28T12:50:40+0000,1730119840,2024-10-28T13:03:01+0000,2024-10-28T13:02:30+0000,"Executing camel with camel-jbang docker doesn't work any more (it was working last week for me)I have the following Error :xxxxxxxxxxxxx:~$ docker run  --rm apache/camel-jbang:4.8.0 version --verbose
[jbang] [ERROR] *Could not download https://github.com/apache/camel/blob/HEAD/dsl/camel-jbang/camel-jbang-main/dist/CamelJBang.java*
[jbang] Run with --verbose for more detailsxxxxxxxxxxxxx:~$ wget https://github.com/apache/camel/blob/HEAD/dsl/camel-jbang/camel-jbang-main/dist/CamelJBang.java
-2024-10-28 13:44:10-  https://github.com/apache/camel/blob/HEAD/dsl/camel-jbang/camel-jbang-main/dist/CamelJBang.java
Resolving github.com (github.com)... 140.82.121.4
Connecting to github.com (github.com)|140.82.121.4|:443... connected.
HTTP request sent, awaiting response... 200 OK
Length: unspecified [text/html]
Saving to: ‘CamelJBang.java’CamelJBang.java                                                 [ <=>                                                                                                                                      ] 169.39K   919KB/s    in 0.2s2024-10-28 13:44:11 (919 KB/s) - ‘CamelJBang.java’ saved [173459]xxxxxxxxxxxxx:~$ cat CamelJBang.java<!DOCTYPE html>
<html
  lang=""en""
  
  data-color-mode=""auto"" data-light-theme=""light"" data-dark-theme=""dark""
  data-a11y-animated-images=""system"" data-a11y-link-underlines=""true""
  
  ><head>
    <meta charset=""utf-8"">
  <link rel=""dns-prefetch"" href=""https://github.githubassets.com"">
  <link rel=""dns-prefetch"" href=""https://avatars.githubusercontent.com"">
  <link rel=""dns-prefetch"" href=""https://github-cloud.s3.amazonaws.com"">
  <link rel=""dns-prefetch"" href=""https://user-images.githubusercontent.com/"">
  <link rel=""preconnect"" href=""https://github.githubassets.com"" crossorigin>
  <link rel=""preconnect"" href=""https://avatars.githubusercontent.com"">",['Claus Ibsen - 2024-10-28T13:03:01+0000 Ask for help first on user mailing list.']
21393,Dependency upgrade,Unassigned,Federico Mariani,4.9.0,4.9.0,2024-10-28T11:02:25+0000,1730113345,2024-10-30T12:41:18+0000,2024-10-30T12:41:18+0000,"JsonAnySetter is broken in Jackson 2.18, and we have a failing test in camel-salesforce-component, we should upgrade as soon as Jackson 2.18 is released.fyi jeremyross",No comments found
21392,New Feature,Thomas Diesler,Thomas Diesler,None,4.9.0,2024-10-28T10:29:25+0000,1730111365,2024-11-14T10:52:14+0000,2024-11-14T10:52:14+0000,"K3S is a popular Kubernetes distribution built for IoT & Edge computing.
https://k3s.io","['Claus Ibsen - 2024-11-12T09:05:14+0000 Thomas is this work complete?', 'Thomas Diesler - 2024-11-14T10:52:14+0000 Done']"
21391,New Feature,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-28T09:59:58+0000,1730109598,2024-10-29T17:40:58+0000,2024-10-29T17:40:58+0000,"In the old OSGi blueprint/spring xml via <beans> they had special support for configuring data formats globally in <dataFormats>. This is not in the DSL model of camel-core.We could considering add this, so its out of the box in xml-io and yaml DSL as well.However you would then refer to these global dataformats using <custom ref=""xxx""> style such as:","['Claus Ibsen - 2024-10-28T12:50:36+0000 This will also help with users migrating from old Camel to keep their XML files as before', 'Claus Ibsen - 2024-10-29T08:28:22+0000 TODO: xml-io-dsl DONE\nTODO: yaml-dsl DONE\nTODO: xml io dumper DONE\nTODO: xml jaxb dumper DONE\nTODO: yaml dumper DONE']"
21390,Task,Unassigned,Claus Ibsen,None,4.x,2024-10-28T08:28:48+0000,1730104128,2025-01-20T13:20:05+0000,,No description available,No comments found
21389,New Feature,Unassigned,Claus Ibsen,None,4.9.0,2024-10-27T13:32:27+0000,1730035947,2024-10-28T12:06:57+0000,2024-10-28T12:06:57+0000,https://github.com/apache/camel/pull/15911,No comments found
21388,Bug,Unassigned,Dominik Jelinek,"4.8.1,4.9.0",None,2024-10-25T11:31:56+0000,1729855916,2024-10-27T16:17:20+0000,2024-10-27T16:17:01+0000,"Following docs at https://camel.apache.org/manual/camel-jbang-kubernetes.html#_auto_reload_with_dev_optionConsider this command as reproducerThe '--dev' parameter was working as expected for Camel version 4.8.0 in combination with OpenShift cluster (but it was not working for a deployment into eg local Minikube cluster)Camel 4.8.1, the '--dev' stopped to work and it is failing with same error as when you try with local Minikube (see error below)interesting is that if I copy failed command from stack-trace above and execute manually, it is working just fineCamel 4.9.0 (4.9.0-SNAPSHOT), the '--dev' is ""working"", it will automatically spawn logs of running integration, BUT after termination of the process it should also remove deployment automatically, which unfortunately fails with another error (see below).. again, that was working fine in Camel 4.8.0","['Claus Ibsen - 2024-10-27T11:47:48+0000 tdiesler you are welcome to look at this also', 'Thomas Diesler - 2024-10-27T16:17:01+0000 This is a duplicate of the linked issues. Please try again once this PR got merged.\nhttps://github.com/apache/camel/pull/16091']"
21387,Improvement,John Poth,John Poth,4.8.0,4.9.0,2024-10-24T14:48:38+0000,1729781318,2024-11-25T13:34:27+0000,2024-10-28T10:46:48+0000,"Let's add spring-boot-starter-actuator to camel-opentelemetry-starter (as we do for camel-micrometer-starter) which will set up the Otel Tracer. Among other things, this has the added benefit of adding HTTP context propagators by default which is useful. Let's also add 
micrometer-tracing-bridge-otel which is also needed [1]. Thanks ![1] https://docs.spring.io/spring-boot/reference/actuator/tracing.html",No comments found
21386,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.2,4.9.0",2024-10-24T13:20:07+0000,1729776007,2024-10-28T11:10:28+0000,2024-10-28T11:10:28+0000,No description available,['Thomas Diesler - 2024-10-25T13:11:23+0000 You can now do ...\nhttps://github.com/tdiesler/camel-cloud-examples\n[camel-cloud-examples]$ make k8s-run RUN_MODE=dev\nor\n[camel-cloud-examples]$ make oce-run RUN_MODE=dev\nfor all runtimes']
21385,Improvement,Andrea Cosentino,Andrea Cosentino,None,None,2024-10-24T12:28:12+0000,1729772892,2024-11-27T11:58:43+0000,2024-11-27T11:58:43+0000,"This is something useful because otherwise the application will fail, because spring datasource will do autoconfiguration.","['Andrea Cosentino - 2024-11-27T11:58:37+0000 https://github.com/apache/camel-kamelets/issues/2278\nThis should resolve the problem, without any other addition']"
21384,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-10-24T08:34:43+0000,1729758883,2024-11-19T09:40:48+0000,2024-11-19T09:40:48+0000,"I've been testing the Camel-micrometer component with the different runtimes we have. So far, each of the runtime requires a different set of configuration and it exposes the metrics in a different endpoint:We should understand if it is feasible to harmonize somehow the configuration to be able to spit the metrics to the same endpoint OOTB.","['Claus Ibsen - 2024-10-28T12:14:45+0000 I would assume you can configure the url for SB for its actuator to be something different, and do this in application.properties or via some ENV override when running the SB container.', 'Pasquale Congiusti - 2024-10-28T12:21:28+0000 That\'s correct. It is something configurable, but it requires the user to do that ahead of time. And, on the ""consuming"" side, it requires the tool to know that information as well. It would be cool if we can have some mechanism to take care to default to some camel standard, instead of a given runtime standard. This problem here is specific to metrics exposure, but, we have a similar situation for health, logging and other tuning that may be consumed by third parties.', 'Pasquale Congiusti - 2024-11-19T09:40:48+0000 Fixed by introducing a new component, camel-observability-services, whose goal is to normalize the observability configuration among the different runtimes.']"
21383,Improvement,Christoph Deppisch,Christoph Deppisch,None,4.9.0,2024-10-24T07:17:27+0000,1729754247,2024-10-28T13:34:09+0000,2024-10-28T13:34:09+0000,"The Knative eventing broker may use OIDC (OpenID Connect) as an authorization protocol. Clients need to use the respective tokens to authenticate via Https when connecting to the Knative broker in order to produce events.OpenID Connect (OIDC) is an identity authentication protocol that works with OAuth 2.0 to standardize the process for authenticating and authorizing users.Knative eventing supports OIDC access tokens that get injected as part of a SinkBinding resource. The injection is done in the form of a volume mount on the sink binding subject (usually the app deployment). This means the OIDC access token is mounted as a file into the application container so Camel client may read the token and set proper Authorization Http headers on each request.
 
The OIDC tokens may expire and get renewed by Knative eventing. The renewal means that the volume mount is updated with the new token automatically.In order to refresh the token the Camel Knative client must read the token again. The Knative client options supports the token renewal on a `401 forbidden` response from the Knative broker. Once the client has received the forbidden answer it automatically reloads the token from the volume mount to perform the renewal.As an alternative to that you may disable the token cache on the client so the token is always read from the volume mount for each request.",No comments found
21382,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.2,4.9.0",2024-10-24T07:12:49+0000,1729753969,2024-10-24T08:21:16+0000,2024-10-24T08:21:16+0000,"A header may be Collection type and we call this code on JsonObject that throws a ClassCastException
 
String value = jo.getString(""value"");",No comments found
21381,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.2,4.9.0",2024-10-24T05:54:51+0000,1729749291,2024-10-28T11:10:11+0000,2024-10-28T11:10:11+0000,,"['Claus Ibsen - 2024-10-25T08:40:52+0000 Thomas can you help backport this to 4.8.x', 'Claus Ibsen - 2024-10-28T11:10:11+0000 Thanks']"
21380,Improvement,Jeremy Ross,Jeremy Ross,4.8.0,"4.8.2,4.9.0",2024-10-23T17:10:21+0000,1729703421,2024-10-24T14:27:56+0000,2024-10-23T20:01:06+0000,By default the underlying grpc implementation automatically uses any detected proxy server. Need the ability to override this and not use a proxy.,"['Jeremy Ross - 2024-10-24T14:23:41+0000 davsclaus Anything need to be done to get this backported to 4.8.x?', 'Claus Ibsen - 2024-10-24T14:27:56+0000 I have backported']"
21379,Bug,Jeremy Ross,Jeremy Ross,4.8.0,"4.8.2,4.9.0",2024-10-23T16:33:32+0000,1729701212,2024-10-23T20:01:01+0000,2024-10-23T20:01:01+0000,"Currently enters a tight, infinite loop of reconnect attempts.",No comments found
21378,Improvement,John Poth,John Poth,4.8.0,4.9.0,2024-10-23T13:33:38+0000,1729690418,2024-10-24T07:48:09+0000,2024-10-24T07:48:09+0000,"When camel-opentelemetry-starter is on the classpath, camel-opentelemetry should be setup by default.","['Claus Ibsen - 2024-10-23T18:58:12+0000 Ah yeah, and you can still disable it if you really need via the camel.xxx.enabled = false option without having to remove the dependency.', 'John Poth - 2024-10-24T07:34:33+0000 Exactly! I could have also removed the annotation `@CamelOpenTelemetry` but decided to leave it in case someone is using it (to avoid them having to recompile etc...). We could have also reused the springboot annotation ConditionalOnEnabledTracing', 'Claus Ibsen - 2024-10-24T07:48:09+0000 ok']"
21377,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-23T12:31:07+0000,1729686667,2024-11-13T06:43:37+0000,2024-11-13T06:43:37+0000,You cannot automatic have picolli output the default values for each option. We need to add this via some special token in the description text for each option.,['Claus Ibsen - 2024-11-12T09:19:04+0000 https://github.com/remkop/picocli/issues/2351']
21376,Bug,Unassigned,Grzegorz Rozanski,4.8.0,"4.8.2,4.9.0",2024-10-23T09:54:25+0000,1729677265,2024-10-27T11:46:43+0000,2024-10-27T11:46:43+0000,"I found a case when NullPointerException occurs in 
UseOriginalAggregationStrategy's aggregate method.
 
I have this route configuration:and in the DIRECT_ROUTE2 there is:When the zip file is invalid there's exception handling in UseOriginalAggregationStrategy::aggregate method:I checked javadoc about this aggregate method it says that:
Params:
oldExchange - the oldest exchange (is null on first aggregation as we only have the new exchange)
 
and I think this is what happens in my case when I get NullPointerException in line 78 (oldExchange is null):When I create my own aggregation strategy based on UseOriginalAggregationStrategy and modify this `else` part everything works properly:I see that similar null check already exists in checkCaughtException method.
 
 The full stack trace can be found as attachment to this ticket.This error does not happen on Camel 4.4.0.","['Claus Ibsen - 2024-10-23T11:48:37+0000 try with 4.8.1, we have fixed camel-zipfile.', 'Claus Ibsen - 2024-10-23T11:49:13+0000 But ideally that UseOriginalAggregationStrategy should check for != null as well, you are welcome to send a PR on main branch', ""Grzegorz Rozanski - 2024-10-24T13:28:15+0000 I will try to verify it in coming days. If I find time I'll also create a PR. Thank you"", 'Grzegorz Rozanski - 2024-10-25T13:48:48+0000 I tested 4.8.1 and got the same error.\nI created a PR here:\nhttps://github.com/apache/camel/pull/16093\nThanks Claus!', 'Claus Ibsen - 2024-10-27T11:46:43+0000 Thanks for reporting and the PR']"
21375,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-23T09:35:20+0000,1729676120,2024-10-23T10:25:14+0000,2024-10-23T10:25:14+0000,No description available,No comments found
21374,Bug,Claus Ibsen,Bruno Meseguer,"4.8.1,4.9.0","4.8.2,4.9.0",2024-10-23T08:54:01+0000,1729673641,2024-11-28T18:59:15+0000,2024-10-23T11:19:13+0000,"Running a Pipe using local kamelets seems to work well using the command:Then, the export command seems not able to find the kamelets when running the following command:Find attached the source files used to reproduce the problem.Read Environment details (top) to read how to reproduce the problem.",No comments found
21373,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-22T13:03:58+0000,1729602238,2024-10-23T07:09:25+0000,2024-10-23T07:09:25+0000,No description available,No comments found
21372,Bug,Claus Ibsen,Salvatore Mongiardo,4.8.0,"4.8.2,4.9.0",2024-10-22T12:27:06+0000,1729600026,2024-10-23T14:30:41+0000,2024-10-23T14:30:41+0000,"The export/run command doesn't work when a ""custom"" camel-version is set:camel config set deps=org.apache.camel.springboot:camel-timer-starter,camel:management,camel:cli-connector
camel config set runtime=spring-boot
camel config set gav=com.foo:acme:1.0-SNAPSHOT
camel config set camel-version=4.8.x-y
camel config set additional-properties=openshift-maven-plugin-version=1.17.0.y
camel config set camel-spring-boot-version=4.8.0.y
camel init test.yaml --directory=appExecuting:This exception is raised.The same happens with:If we unset the camel-version:camel config unset camel-versionthenworks fine.I guess the issue could be the way how the method Run.runCustomCamelVersion is called, basically loosing every previous relationship with the spec object","['Claus Ibsen - 2024-10-22T16:58:04+0000 please do not report commercial vendors issues here', 'Claus Ibsen - 2024-10-23T12:33:25+0000 You would need to set url to a maven repo that has your custom camel distro. ASF Camel only loads from maven central and ASF snapshot\n  camel config set repos= xxxx', ""Salvatore Mongiardo - 2024-10-23T12:52:38+0000 I'm sorry. I forgot to mention it in the description. That's the specific case tested:\ndependencies = org.apache.camel.springboot:camel-timer-starter,camel:management,camel:cli-connector\nruntime = spring-boot\ngav = com.foo:acme:1.0-SNAPSHOT\nbuild-properties = openshift-maven-plugin-version=1.17.0.xxxxx-yyyyy\ncamel-spring-boot-version = 4.8.0.xxxxx-yyyy\nrepos = https://maven.repository.[custom-ga.zz]/ga,https://[another-maven-dev-repo]/\ncamel-version = 4.8.0.xxxxx-wwwww""]"
21371,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-10-22T11:33:29+0000,1729596809,2024-11-14T15:52:45+0000,2024-10-22T11:56:39+0000,We have BufferedReader but we need for plain Reader,No comments found
21370,Task,Unassigned,Aurélien Pupier,4.x,None,2024-10-22T09:25:12+0000,1729589112,2025-01-08T14:43:46+0000,2025-01-08T14:43:46+0000,it regularly fails build on CI (failed 2 out the last 5 builds). it seems somethign which happens regularly since several years https://camel.zulipchat.com/#narrow/channel/364655-camel-core-dev/topic/Build.20failure.20Could.20not.20parse.20metadata.20on.20Jenkins.20CI/near/477219535It sounds an issue with the infrastructure.Are there ways to access the mentioned files on Jenkins to check their content? It might help on investigation to detect what is the root issue.i suspect that one file was badly downloaded and contains completely unrelated content. This could help report back to correct infra problem.,['Claus Ibsen - 2025-01-08T14:43:46+0000 Yeah its suspected some bad downloads and can happen some times. Not something we really can do much about to resolve. Or that it happens so often that its a problem.']
21369,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,"4.8.2,4.9.0",2024-10-22T09:16:16+0000,1729588576,2024-11-27T09:12:04+0000,2024-11-27T09:11:56+0000,"In Kubernetes plugin, Route trait (service exposure) are only available through the generated openshift manifest.To leverage quarkus cloud readyness we should add for quarkus runtime cases the use of  openshift: https://quarkus.io/guides/deploying-to-openshift#exposing_routes","['Gaelle Fournier - 2024-10-22T09:16:53+0000 Due to this issue the manifest is not available at the moment for openshift : https://issues.apache.org/jira/browse/CAMEL-21365', 'Gaelle Fournier - 2024-10-29T17:14:08+0000 The ingress generation will be excluded for now to another issue as it fails to be merged correctly: https://github.com/quarkusio/quarkus/issues/43783', 'Gaelle Fournier - 2024-10-30T11:04:44+0000 Separate issue created for Ingress : https://issues.apache.org/jira/projects/CAMEL/issues/CAMEL-21405', 'Gaelle Fournier - 2024-10-31T11:24:44+0000 davsclaus Is there any plan for a 4.8.2 version ? If so I would like to backport this fix.', 'Claus Ibsen - 2024-10-31T17:00:52+0000 Yes we will do a 4.8.2 in nov/dec', 'Gaelle Fournier - 2024-11-15T15:25:53+0000 No longer necessary due to : https://issues.apache.org/jira/browse/CAMEL-21451.', 'Claus Ibsen - 2024-11-26T08:53:04+0000 Okay so this ticket can be closed ?', 'Gaelle Fournier - 2024-11-26T10:01:26+0000 Yes. Also it has been added then removed with the decision to be full jkube. Not sure what it means in terms of ticket status.', 'Claus Ibsen - 2024-11-26T10:02:51+0000 okay you can close the ticket as ""wont do""']"
21368,Bug,Unassigned,Claude Mamo,"4.8.0,4.9.0",4.x,2024-10-21T12:07:47+0000,1729512467,2025-01-06T14:03:16+0000,,"When generating REST routes from the attached OpenAPI spec using Camel JBang, I get the following error:In version 4.5.0, I was able to generate the routes but something broke in 4.8.0. The command I'm running is: jbang ""-Dcamel.jbang.version=4.8.0"" camel@apache/camel generate rest --input us-core-server.openapi.json --output api.yaml . I've observed that the command works when there's a single path in the spec.","['Karen Lease - 2024-11-23T22:21:42+0000 The problem is caused by the external schema reference to an xsd file:\n""schema"": {\n  ""$ref"": ""https://hl7.org/fhir/R4/Bundle.xsd""\n}\nIn camel 4.7.0 the openapi-rest-dsl-generator, used by jbang, was modified to use the swagger.io openapi parser instead of apicurio.\nBy default, the swagger parser is configured to resolve both internal and external references. It doesn\'t handle the xsd reference and instead of ignoring it, it throws a RuntimeException which causes the following internal references not to be resolved. That\'s why the parameter refs are only resolved in the first path/operation.\nThe apicurio paser used in 4.5.0 did not attempt to resolve references while reading the openapi spec and the camel code only handled internal schema references, so the external xsd references was ignored and caused no problems.', 'Claus Ibsen - 2024-11-26T08:56:25+0000 Okay can we see if we can make swagger not resolve external schemas or find a way to hook into this. Or if not then report this to swagger to see if they can improve this in a future release.', 'Claus Ibsen - 2024-11-27T10:00:32+0000 java.lang.IllegalArgumentException: Cannot construct instance of `io.swagger.v3.oas.models.media.ObjectSchema` (although at least one Creator exists): no String-argument constructor/factory method to deserialize from String value (\'<?xml version=""1.0"" encoding=""UTF-8""?> <!-- Copyright (c) 2011 , HL7, Inc. All rights reserved.\nRedistribution and use in source and binary forms, with or without modification, are permitted provided that the following conditions are met\')\n at Source: UNKNOWN; byte offset: #UNKNOWN']"
21367,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-21T11:52:59+0000,1729511579,2024-12-17T11:04:28+0000,2024-10-22T07:41:06+0000,They did breaking API changes from RC4 to 2.0.1.,['Claus Ibsen - 2024-10-21T17:40:52+0000 https://github.com/smooks/smooks-camel-cartridge/commit/2de57c2f9f1779f34292d8fc61c2062cb1d84ca2']
21366,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,"4.8.2,4.9.0",2024-10-20T07:16:08+0000,1729408568,2024-10-28T09:44:49+0000,2024-10-28T09:44:49+0000,No description available,No comments found
21365,Bug,Gaelle Fournier,Christoph Deppisch,4.8.0,4.x,2024-10-18T09:22:40+0000,1729243360,2025-02-04T09:05:11+0000,2025-02-04T09:05:11+0000,When using cluster-type=openshift for the Camel JBang Kubernetes plugin export the resulting Kubernetes manifest is missing some information that causes apps to fail on OpenShift.We suppose that this is due to a slightly different behavior of the Quarkus Kubernetes extension compared to the Quarkus OpenShift extension when it comes to reading and merging the generated Kubernetes manifest pieces.This is presumably the root cause for several issues with the Camel JBang Kubernetes plugin when targeting OpenShift as a cluster.Let's make sure that the Camel JBang Kubernetes plugin generates the proper Kubernetes manifest so that it works with the OpenShift Quarkus extension just like it does with the Kubernetes Quarkus extension.,"['Gaelle Fournier - 2024-10-22T15:36:10+0000 https://github.com/quarkusio/quarkus/issues/44025', 'Gaelle Fournier - 2025-02-04T09:04:36+0000 Since we switched to full jkube this is no longer relevant.']"
21364,Task,Unassigned,Rhuan Rocha,None,None,2024-10-18T02:55:26+0000,1729220126,2024-10-18T05:57:38+0000,2024-10-18T05:57:38+0000,I'm trying to open an issue to camel-whatsapp component but it does not appear as an option.,"['Claus Ibsen - 2024-10-18T05:57:38+0000 Not every component has that, just type its name in the title']"
21363,Bug,Unassigned,Roberto Viani Junior,None,"4.8.1,4.9.0",2024-10-18T02:50:41+0000,1729219841,2024-10-19T07:51:22+0000,2024-10-19T07:51:22+0000,"There was no registered Camel WhatsApp component in the list of components for this Jira, so I went ahead and created it in the camel-core moduleAccording to the WhatsApp Cloud API documentation, the message_status field is expected in the successful response. However, the MessageResponse object fails to deserialize this field because it is not currently mapped in the Message class. This results in an UnrecognizedPropertyException. The Message class needs to be updated to include this field to ensure proper deserialization. This error occurs while sending a template messageError description:","['Rhuan Rocha - 2024-10-18T03:14:20+0000 I suggest configuring Message.java  with @JsonIgnoreProperties(ignoreUnknown = true) to prevent the component from crashing if WhatsApp introduces a new field in the message. Furthermore, we can add the ""message_status"" field to Message.', 'Claus Ibsen - 2024-10-18T05:58:23+0000 You are welcome to send a PR']"
21362,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.1,4.9.0",2024-10-17T14:44:16+0000,1729176256,2024-10-19T07:47:58+0000,2024-10-19T07:47:58+0000,The k8s plugin uses the camel integration label instead of the standard `app.kubernetes.io/name`,No comments found
21361,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.2,4.9.0",2024-10-17T13:35:05+0000,1729172105,2024-11-26T14:14:10+0000,2024-10-23T08:46:27+0000,This happens with the latest io.fabric8:kubernetes-client-6.13.4https://mvnrepository.com/artifact/io.fabric8/kubernetes-client/6.13.4,"['Thomas Diesler - 2024-10-17T14:39:13+0000 CrossRef: https://github.com/fabric8io/kubernetes-client/issues/6463', 'Thomas Diesler - 2024-10-22T20:28:56+0000 The root cause was a convoluted TCCL issue. In general, when you work with TCCL, you SHOULD reset it to its original value, like so ...\n        var tccLoader = Thread.currentThread().getContextClassLoader();\n        try {\n            ClassLoader cl = createClassLoader();\n            Thread.currentThread().setContextClassLoader(cl);\n\n            // do stuff\n\n        } finally {\n            Thread.currentThread().setContextClassLoader(tccLoader);\n        }']"
21360,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-17T11:05:10+0000,1729163110,2024-10-17T13:25:08+0000,2024-10-17T13:25:08+0000,No description available,No comments found
21359,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-10-17T10:25:43+0000,1729160743,2025-01-23T10:40:47+0000,2025-01-23T10:40:47+0000,We support this in camel-main/jbang and CEQ. But this could be missing in CSB,"['evan - 2024-11-01T07:12:26+0000 Anyone worked on this task?', 'Claus Ibsen - 2024-11-01T07:14:05+0000 You are welcome to work on this']"
21358,Improvement,Christoph Deppisch,Christoph Deppisch,None,4.9.0,2024-10-17T07:52:14+0000,1729151534,2024-10-24T07:14:43+0000,2024-10-24T07:14:43+0000,"Knative brokers may use TLS encrypted transport options as described in https://knative.dev/docs/eventing/features/transport-encryption/#overviewThis means that event producers need to use proper SSL authentication to connect to Https Knative broker endpoints with cluster-internal CA certificates.
 
Users need configuration options to enable SSL options on the Knative Http client that connects with the Knative broker endpoint.
 
System property and environment variable based configuration, something like",No comments found
21357,Improvement,James Netherton,James Netherton,None,"4.8.1,4.9.0",2024-10-16T15:46:05+0000,1729093565,2024-10-16T18:37:12+0000,2024-10-16T18:37:12+0000,"Relates to this Camel Quarkus issue:https://github.com/apache/camel-quarkus/issues/6651In CQ, there's already an existing scope where most JQ functions are already resolved at build time. So it'd be better for Camel to reuse it and then augment with its own custom functions.",No comments found
21356,Task,Unassigned,Aurélien Pupier,4.8.0,4.x,2024-10-16T14:49:48+0000,1729090188,2024-10-23T05:58:43+0000,,"currently the doclint is deactivated, which means that there are some wrong or badly displayed Javadoc in several places.
To be able to reativate it (here https://github.com/apache/camel/blob/0c63d15314d90e03da251214c7f9e12bf0f938dd/pom.xml#L714 and in some other places), we need to fix these Javadoc issues",No comments found
21355,Bug,Otavio Rodolfo Piske,Bruno Meseguer,4.8.0,"4.8.2,4.9.0",2024-10-16T08:24:54+0000,1729067094,2024-11-04T12:02:55+0000,2024-11-04T12:02:55+0000,"The Tools component is designed to provide functions to the LLM. However the LLM may decide not to invoke any of the given tools.In that scenario, the LLM replies directly instead of requesting the execution of a tool/function. The Camel Tools components seems unable to handle such use case and throws an exception.","[""Otavio Rodolfo Piske - 2024-10-24T08:36:44+0000 Just for the record, I am not entirely sure this is a problem. The LLM deciding not to call a tool is a valid scenario and throwing an exception lets applications deal with it accordingly (instead of, let's say, failing silently)."", 'Claus Ibsen - 2024-10-24T08:54:18+0000 Hmm could there be an option so you can control whether to throw an exception or ignore).\nIMHO throwing an exception seems unexpected, so maybe the default should be to not throw (ie ignore).', ""Bruno Meseguer - 2024-10-24T09:19:53+0000 This is an unorthodox one.\nCamel initiates a conversation with the LLM, which may or may not decide to call the tools. Not calling the tools is a valid use case, so I wouldn't treat it as an exception scenario.\nI wonder if we should pair the chat component as producer only and tools as consumer only."", ""Otavio Rodolfo Piske - 2024-10-24T10:41:58+0000 I think adding an option to throw/no-throw is a reasonable compromise and give the users some flexibility. What do you think bruno.meseguer ?\nMaybe we allow them do define some bean or processor to handle this? Maybe just cascade the response?\nAt this point, I'd prefer to avoid more complex scenarios involving adding other components as dependencies and try to favor something that can be flexible and simple (not saying, never, though ... just trying to minimize the scope of the fix)."", ""Bruno Meseguer - 2024-10-24T11:23:11+0000 I agree... connecting two different components will overcomplicate things.\nTo be honest, because no-tool calling is a valid scenario for the LLM I wouldn't throw an exception. I don't even see the need to define a parameter switch between throw/ignore the no-tool response (because it's valid).\nI would simply look at cases where the tool call from the LLM is mal-formed to throw an exception from Camel, or when any other non-expected error occurs when interacting with the LLM.\nWhat do you think?"", 'Claus Ibsen - 2024-10-24T14:13:34+0000 I agree with Bruno', 'Otavio Rodolfo Piske - 2024-10-24T14:35:48+0000 I get your suggestion, but there is something that is not very clear to me. How do you guys propose determining whether the tool call from the LLM is malformed?', 'Bruno Meseguer - 2024-10-24T15:13:13+0000 It may not conform to the API spec of LLM tools support for example', ""Otavio Rodolfo Piske - 2024-10-25T09:12:34+0000 I presume you are talking about, let's say, if the user pass invalid characters to the name of the function? Or is it something different? Can you please, give an example of how we could make that happen with Camel? Considering that we do not get that low level into the client API ...\nAdditionally, it's not just a malformed response that may cause the model to decide not to invoke anything. A model is non-deterministic by design and it may decide not to call a tool even if the request is well-formed. Considering this and letting the user decide what they want to do in the absence of a tool call response is a better compromise IMHO.\nAnd, please, I am not arguing for the sake of arguing or because of stubbornness, but I do need an specific and concrete scenario."", ""Otavio Rodolfo Piske - 2024-10-25T16:35:42+0000 Bruno and I had a great discussion today and as a result, I modified the code so that it sets a flag on the header (see the linked PR) to indicate to users if a tool has not been called. This satisfies both my intention to let users have a way to handle this scenario, while also providing a clean way to ignore it for users that don't have that need. The code was merged on 4.9 and I'll backport to 4.8.x next week (so, please, keep the ticket open)."", 'Otavio Rodolfo Piske - 2024-11-04T12:02:55+0000 The fix was merged and backported.']"
21354,Bug,Unassigned,John Yin,4.4.3,4.8.0,2024-10-15T19:09:29+0000,1729019369,2024-11-29T17:33:44+0000,2024-11-29T17:33:44+0000,Any custom setting of camel.main.shutdown-timeout is ignored when running 4.4.3.  The default 45s is used.  But it works correctly in 4.8.0.,['Claus Ibsen - 2024-10-23T05:59:55+0000 Try with 4.4.4']
21353,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-15T15:58:17+0000,1729007897,2024-10-19T09:23:06+0000,2024-10-19T09:22:56+0000,"We should have some kind of API for end users to plugin custom code, and also have out of the box easy configurations to set some condition before Camel continue booting. This should happen very early.For example to wait for a ENV variable to exist or match a value. Or to wait for a file to exist, etc.And there should be a timeout value and fail if not meet.This should be configurable something easily in camel.main.xxx,  maybe such ascamel.main.boot-condition.environment-variable=FOO_BARcamel.main.boot-condition-timeout=10000","['Claus Ibsen - 2024-10-16T08:19:44+0000 cdeppisch fyi', 'Claus Ibsen - 2024-10-17T17:05:30+0000 TODO: spring boot DONE', 'Claus Ibsen - 2024-10-17T18:03:45+0000 TODO: sig term during wait to graceful break and stop camel DONE', 'Claus Ibsen - 2024-10-18T07:39:02+0000 TODO: fail, stop, ignore DONE\nTODO: health checks to be registered beforehand so Q/SB can report this DONE', 'Claus Ibsen - 2024-10-19T09:23:06+0000 CEQ: https://github.com/apache/camel-quarkus/issues/6664']"
21352,Improvement,Jono Morris,Claus Ibsen,None,4.10.0,2024-10-15T15:35:51+0000,1729006551,2025-01-06T12:17:20+0000,2025-01-06T12:17:20+0000,Maybe we could let camel-smb extend camel-file (like camel-ftp / camel-jsch) and then have a lot more file related features out of the box.,"['Claus Ibsen - 2024-10-15T15:36:54+0000 Also asked on SO\nhttps://stackoverflow.com/questions/79074504/how-to-workaround-missing-functionality-in-camel-smb-component', 'Claus Ibsen - 2024-10-23T08:58:12+0000 SAP has their own custom smb component. They may have some options/features that would be good to get in the ASF component\nhttps://help.sap.com/docs/integration-suite/sap-integration-suite/configure-smb-reciever-adapter', 'Otavio Rodolfo Piske - 2024-11-13T13:40:30+0000 We already have it using WrappedFile and the consumer implements the ScheduledBatchPollingConsumer (also used by FileConsumer), so in theory, we have some common ground to work on this. Maybe we could start by trying to make it extend the `GenericFileConsumer` and that would cover a lot of what we need.', ""Claus Ibsen - 2025-01-01T14:11:31+0000 Jono, I started a bit on this. And pushed my work on a branch\nhttps://github.com/apache/camel/tree/smb2\nThe intention is to make a smb2 on the side at first as it's easier than changing the old code. And then update the tests to use smb2 to see how much is still working.\nAnd then when its all done, we can swap over and remove the old component, and rename smb2 to smb\nIf you did not already start then take a look at that branch. You can use that to continue the work."", ""Jono Morris - 2025-01-02T01:35:26+0000 Thanks Claus, I've got quite a few changes and I'll create a PR against your branch for you to have a look"", 'Claus Ibsen - 2025-01-03T15:55:04+0000 We should have a streamDownload or some similar name so we can support reading the file using InputStream directly ( and have some logic that auto-close stream on UoW done on the exchange)\nAs today the SmbFile reads the entire content into memory as byte[] and that does not work great for big files.\n \n@Override\npublic Object getBody()\n{ // use operations so smb file can be closed return operations.getBody(this.getAbsoluteFilePath()); }', 'Claus Ibsen - 2025-01-03T18:50:02+0000 TODO: More constants in SmbConstants (see ftp component) DONE\nTODO: streamDownload (see ftp component) DONE\nTODO: local work dir (see ftp component) DONE\nTODO: Add more constants to FtpConstants DONE', 'Claus Ibsen - 2025-01-05T16:23:48+0000 There is a potential issue with the SMB FileInputStream that gets closed due to error 40, instead of loading the data. Not sure if its reliable able to load files on-demand. Its a bit of shame if we need to load data into memory as byte array.', 'Claus Ibsen - 2025-01-06T07:14:35+0000 Okay found a solution for that', 'Claus Ibsen - 2025-01-06T08:30:05+0000 TODO: download option DONE', 'Claus Ibsen - 2025-01-06T09:27:03+0000 TODO: disconnect option DONE', 'Claus Ibsen - 2025-01-06T10:51:06+0000 TODO: dynamic send aware DONE\nTODO: fix move existing DONE', 'Claus Ibsen - 2025-01-06T10:57:27+0000 TODO: min and max depth DONE', 'Claus Ibsen - 2025-01-06T11:04:13+0000 TODO: SmbConsumerPartialReadNoPathIT DONE', 'Claus Ibsen - 2025-01-06T11:18:33+0000 jono okay I have fixed all the unit tests and also added some more options that the ftp component had that was good to have here as well.', 'Jono Morris - 2025-01-06T11:23:27+0000 Thanks for that davsclaus, I appreciate it.']"
21351,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-15T14:46:08+0000,1729003568,2024-10-16T07:08:55+0000,2024-10-16T07:08:55+0000,We need a header filter strategy that does not filter anything that can be used for trouble shooting or testing where you do not want Camel to drop some specific headers.,No comments found
21350,Task,Marco Carletti,Claus Ibsen,None,4.10.0,2024-10-15T11:22:29+0000,1728991349,2024-12-02T06:52:39+0000,2024-12-02T06:52:39+0000,We have old versions in this pom.xml (see properties)https://github.com/apache/camel-spring-boot-examples/blob/main/pom.xml,"['Claus Ibsen - 2024-10-15T11:23:29+0000 mcarlett I wonder if you would like to help with this', 'Claus Ibsen - 2024-11-29T17:01:30+0000 Thanks Marco is there more work, if not then this ticket can be resolved']"
21349,Improvement,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-10-15T11:12:18+0000,1728990738,2024-10-16T10:11:49+0000,2024-10-16T10:11:49+0000,"Currently, we only support ...This should work for OpenShift as well. Perhaps like this ...",No comments found
21348,Improvement,Marco Carletti,Marco Carletti,None,4.9.0,2024-10-15T10:15:47+0000,1728987347,2024-10-15T12:43:13+0000,2024-10-15T12:43:13+0000,Add an example to explain how to monitor a Camel on Spring Boot application with Jolokia and Hawtio,No comments found
21347,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-15T05:59:12+0000,1728971952,2024-10-15T11:19:24+0000,2024-10-15T11:19:24+0000,"See the S3HeadBucketITWe can add an option you can send with headBucket operation to return a true or false value, then you can use that more easily in routing. As you can store the result in a variable.",No comments found
21346,Test,Unassigned,Aurélien Pupier,4.9.0,4.10.0,2024-10-14T12:55:07+0000,1728910507,2025-01-08T14:46:22+0000,2025-01-08T14:46:22+0000,since build 460,"['Claus Ibsen - 2024-10-15T07:42:39+0000 This is due to jackson upgrade.', 'Claus Ibsen - 2024-10-15T07:48:43+0000 The @JsonAnySetter in PlatformEvent is no longer invoked by jackson. v2.17.1 calls this method, 2.18.0 does not.', 'Claus Ibsen - 2024-10-15T07:49:53+0000 https://github.com/FasterXML/jackson-databind/issues/4752', 'Claus Ibsen - 2024-10-15T07:51:19+0000 To be fixed in jackson 2.18.1', 'Claus Ibsen - 2024-10-31T07:59:53+0000 Also this one 31b82c1fc00553360e20522913bfae9e868924d0 causes failures in camel-salesforce for StreamingApiConsumerTest', 'Claus Ibsen - 2025-01-08T14:46:22+0000 this seems to be fixed in jackson 2.18.2']"
21345,Bug,Thomas Diesler,Thomas Diesler,4.8.0,"4.8.1,4.9.0",2024-10-14T10:43:04+0000,1728902584,2024-10-14T13:43:50+0000,2024-10-14T13:43:50+0000,`jbang camel k8s ... --cluster-type openshift` generates duplicate `deployment` sections in manifest,['Claus Ibsen - 2024-10-14T13:43:50+0000 Thanks Thomas']
21344,Dependency upgrade,Adriano Machado,Adriano Machado,"4.4.0,4.8.0","4.4.4,4.8.1,4.9.0",2024-10-13T13:21:43+0000,1728825703,2024-10-14T05:40:32+0000,2024-10-14T05:40:32+0000,"This is a follow-up of CAMEL-21202, by updating the OpenTelemetry dependencies and replacing the classes added on the original issue with classes from the OpenTelemetry SDK.",No comments found
21343,Task,Nicolas Filotto,Antoine DESSAIGNE,4.7.0,"4.8.1,4.9.0",2024-10-11T13:11:20+0000,1728652280,2024-10-11T16:44:53+0000,2024-10-11T16:44:53+0000,"Hello,Since this commit related to CAMEL-20934, it's no longer possible to recreate camel-vm because the prepareExchange method no longer returns an Exchange.Previously it was possible to write code like this one:Would it be possible to add back the ability to return the Exchange in the prepareExchange method?Thank you",No comments found
21342,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-11T11:50:21+0000,1728647421,2024-10-11T14:13:26+0000,2024-10-11T14:13:26+0000,To avoid this dependency we can make the openapi generator optional and dynamic when its really in use. This reduces dependency tree.,No comments found
21341,Bug,Unassigned,carsten madsen,4.8.0,None,2024-10-11T09:26:26+0000,1728638786,2024-10-16T10:29:00+0000,2024-10-16T09:19:30+0000,The following will make spring boot 3.3.4/camel 4.8.0 report this cyclecamel↑ ↓org.apache.camel.impl.health.DefaultHealthCheckRegistryContent of XmlConfigCircular.xml:Is this a bug or a faulty configuration issue?Using spring.main.allow-circular-references=true does allow my application to run.Looks like CAMEL-17220,"['Claus Ibsen - 2024-10-11T11:13:31+0000 See this example\nhttps://github.com/apache/camel-spring-boot-examples/tree/main/xml-import', 'carsten madsen - 2024-10-11T13:45:39+0000 I can not do the @ImportResource annotation in the Spring Boot main class, it must be controlled by a profile.\nIs\npublic static class XmlConfigInitializer implements\n   ApplicationContextInitializer<GenericApplicationContext> {\n  @Override\n  public void initialize(GenericApplicationContext context) {\n   String[] activeProfiles = context.getEnvironment()\n     .getActiveProfiles();\n   for (String profile : activeProfiles) {\n    if (""xml"".equals(profile)) {\n     XmlBeanDefinitionReader xmlReader = new XmlBeanDefinitionReader(\n       context);\n     xmlReader.loadBeanDefinitions(\n       new ClassPathResource(""XmlConfigCircular.xml""));\n    }\n   }\n  }\n }\nA safe alternative to\n@Configuration\n@Profile({ ""xml"" })\n@ImportResource({ ""classpath:XmlConfigCircular.xml"" })\nclass XmlConfiguration\n?', 'Claus Ibsen - 2024-10-12T15:36:46+0000 Can you put together a ready to try sample code/project and put on either github or attach as .zip to this JIRA', 'carsten madsen - 2024-10-14T07:31:47+0000 Will this do\nhttps://github.com/cmadsen/camel-profile\nhttps://github.com/cmadsen/camel-profile/blob/master/camel-profile/src/test/java/camel/issue/CamelCircularRef.java\n?', 'Claus Ibsen - 2024-10-15T12:59:43+0000 Can you update your example so it has the bug/issue out of the box, so we can just do mvn test and it shows the issue', 'carsten madsen - 2024-10-16T07:29:00+0000 Updated the test case to produce the error. mvn test will show it.', 'Claus Ibsen - 2024-10-16T08:31:49+0000 The problem is that you use old legacy spring-xml which is not really supported on camel spring boot, and this causes camel to be initialized by the old legacy camel-spring-xml which is not spring boot.', 'Claus Ibsen - 2024-10-16T09:19:22+0000 Okay your test configuration needs to turn on auto-configuration\n@Configuration\n@EnableAutoConfiguration\n@ImportResource(""classpath:XmlConfigCircular.xml"")\nstatic class TestConfig {\n}\n \nAnd you need to add camel-spring-boot-xml-starter JAR\n<dependency>\n    <groupId>org.apache.camel.springboot</groupId>\n    <artifactId>camel-spring-boot-xml-starter</artifactId>\n    <version>${camel.version}</version>\n</dependency>', 'carsten madsen - 2024-10-16T10:29:00+0000 Ok, thanks for the tip - much appreciated!']"
21340,Bug,Claus Ibsen,Olivier Jacquemart,4.8.0,"4.8.1,4.9.0",2024-10-11T07:37:37+0000,1728632257,2024-10-15T15:48:51+0000,2024-10-14T07:56:13+0000,"If a Camel 4.8.0 using Spring Boot is deployed in a standalone Tomcat with JNDI enabled an exception is thrown at startup:According to Spring boot #35091, one solution is to add a spring.properties file in the src/main/resoures folder with the content:Is there any other workaround solution?The problem seems to come from the ObjectMapper field from the JsonValidatorComponentAutoConfiguration configuration.Here is a repo to reproduce the problem: camel-reproducer, if it can help.","['Claus Ibsen - 2024-10-11T14:03:11+0000 So are you packing camel as a .war file and deploying that in a standalone Tomcat ?', 'Claus Ibsen - 2024-10-12T15:34:42+0000 Can you update the reproducer so its ready to use for tomcat', 'Olivier Jacquemart - 2024-10-14T07:05:33+0000 hi davsclaus,\nyes, in the real scenario, in producation, the application is a war file deployed in a standalone Tomcat.\nThe problem can be reproduced running the HelloApplication from the reproducer but I can upload a war file if needed.\nThe application contains the modifications from the Spring Boot ticket #35091 to reproduce the issue.', 'Claus Ibsen - 2024-10-14T07:56:13+0000 Thanks for the reproducer', 'Olivier Jacquemart - 2024-10-15T15:48:51+0000 Thanks davsclaus for the fix!']"
21339,Bug,Claus Ibsen,Olivier Jacquemart,4.8.0,"4.8.1,4.9.0",2024-10-11T07:11:53+0000,1728630713,2024-10-14T07:08:53+0000,2024-10-12T08:14:38+0000,"If you enable the client request validation at a global level, and have a GET rest endpoint, there is no need for a body validation.The problem is if the client sends the Content-type aplication/json. The Content-Type is not needed tbut I got the issue because a client sends this header all the time and I can't change it.I faced the issue while upgrading an application from 3.20.6 to 4.8.0. IHere are curl examples:In the problematic case, the DefaultRestClientRequestValidator will try to deserialize the json against an empty string and will fail because it's not a valid json.",['Olivier Jacquemart - 2024-10-14T07:08:53+0000 Thanks davsclaus for the quick fix']
21338,Task,Claus Ibsen,Claus Ibsen,4.9.0,4.9.0,2024-10-10T15:45:18+0000,1728575118,2024-11-28T09:54:36+0000,2024-11-28T08:52:09+0000,"We see this when running jbang locally, where it says 2.3 sec to load Java DSL, that should be faster as its local JAR","['Claus Ibsen - 2024-10-10T18:27:18+0000 It may be that its SNAPSHOT and then the resolver is slower the 4.8.0 is fast\n2024-10-10 20:26:46.684  INFO 13865 --- [- MavenDownload] .main.download.MavenDependencyDownloader : Resolved: org.apache.camel:camel-java-joor-dsl:4.8.0 -> [[org.apache.camel:camel-java-joor-dsl:4.8.0, org.apache.camel:camel-dsl-support:4.8.0, org.apache.camel:camel-support:4.8.0, org.apache.camel:camel-api:4.8.0, jakarta.xml.bind:jakarta.xml.bind-api:4.0.2, jakarta.activation:jakarta.activation-api:2.1.3, org.apache.camel:camel-management-api:4.8.0, org.apache.camel:camel-util:4.8.0, org.apache.camel:camel-util-json:4.8.0, org.apache.camel:camel-xml-jaxp-util:4.8.0, org.slf4j:slf4j-api:2.0.16, org.apache.camel:camel-core-model:4.8.0, org.apache.camel:camel-core-processor:4.8.0, org.apache.camel:camel-joor:4.8.0, org.jooq:joor:0.9.15]]\n2024-10-10 20:26:46.684  INFO 13865 --- [- MavenDownload] .main.download.MavenDependencyDownloader : Added classpath: org.apache.camel:camel-java-joor-dsl:4.8.0\n2024-10-10 20:26:46.684  INFO 13865 --- [- MavenDownload] .main.download.MavenDependencyDownloader : Added classpath: org.apache.camel:camel-joor:4.8.0\n2024-10-10 20:26:46.684  INFO 13865 --- [- MavenDownload] .main.download.MavenDependencyDownloader : Added classpath: org.jooq:joor:0.9.15\n2024-10-10 20:26:46.686  INFO 13865 --- [           main] .main.download.MavenDependencyDownloader : Resolved: org.apache.camel:camel-java-joor-dsl:4.8.0 (took: 205ms)\n2024-10-10 20:26:46.803  INFO 13865 --- [- MavenDownload] .main.download.MavenDependencyDownloader : Resolved: org.apache.camel:camel-endpointdsl:4.8.0 -> [[org.apache.camel:camel-endpointdsl:4.8.0, org.apache.camel:camel-core-engine:4.8.0, org.apache.camel:camel-api:4.8.0, jakarta.xml.bind:jakarta.xml.bind-api:4.0.2, jakarta.activation:jakarta.activation-api:2.1.3, org.apache.camel:camel-base-engine:4.8.0, org.apache.camel:camel-base:4.8.0, org.apache.camel:camel-core-reifier:4.8.0, org.apache.camel:camel-core-model:4.8.0, org.apache.camel:camel-core-processor:4.8.0, org.apache.camel:camel-management-api:4.8.0, org.apache.camel:camel-support:4.8.0, org.apache.camel:camel-util-json:4.8.0, org.apache.camel:camel-xml-jaxp-util:4.8.0, org.apache.camel:camel-util:4.8.0, org.slf4j:slf4j-api:2.0.16]]\n2024-10-10 20:26:46.803  INFO 13865 --- [- MavenDownload] .main.download.MavenDependencyDownloader : Added classpath: org.apache.camel:camel-endpointdsl:4.8.0\n2024-10-10 20:26:46.804  INFO 13865 --- [           main] .main.download.MavenDependencyDownloader : Resolved: org.apache.camel:camel-endpointdsl:4.8.0 (took: 118ms)']"
21337,Bug,Claus Ibsen,Tomas Veskrna,4.8.0,"4.8.1,4.9.0",2024-10-10T09:27:10+0000,1728552430,2024-10-10T13:25:35+0000,2024-10-10T13:25:35+0000,"Camel CLI use default group-id.Steps to reproduce:
Have jbang and camel cli installed. ThenSimilar issue is reported here: https://issues.apache.org/jira/browse/CAMEL-20816. Export on other hand works fine (it uses group-id as expected)",No comments found
21336,Improvement,Christoph Deppisch,Christoph Deppisch,4.8.0,"4.8.1,4.9.0",2024-10-10T09:17:36+0000,1728551856,2024-10-11T14:12:24+0000,2024-10-11T14:12:24+0000,Kamelets may be configured via environment variables following the property component syntax like CAMEL_KAMELET_AWS_S3_SOURCE_BUCKET_NAME_OR_ARN=myArnApparently the Kamelet property validation for required parameters raises exceptions when initializing the Kamelet. This is because the config properties configured via environment variables are not considered in the validation process.The raised exception looks like this:As a workaround users need to set an empty Kamelet property value e.g.g via application.properties to pass the Kamelet validation and then overwrite the value with the environment variable.,"['Claus Ibsen - 2024-10-10T15:55:05+0000 Ah okay, yeah you should use this to resolve the ENV\norg.apache.camel.util.IOHelper#lookupEnvironmentVariable']"
21335,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-09T19:32:11+0000,1728502331,2024-10-10T16:02:16+0000,2024-10-10T16:02:16+0000,We should a summary when stopping routes. We should add this for starting routes as well.,No comments found
21334,Task,Andrea Cosentino,Anushka Juli,None,4.9.0,2024-10-09T09:01:32+0000,1728464492,2024-10-17T06:35:34+0000,2024-10-17T06:35:34+0000,,"['Aurélien Pupier - 2024-10-10T06:35:33+0000 tests are failing on Ci\nfor instance https://ci-builds.apache.org/job/Camel/job/Camel%20Core%20(Build%20and%20test)/job/main/452/testReport/junit/org.apache.camel.component.opensearch.integration/OpensearchBulkIT/BuildAndTest___Matrix___JDK_NAME____jdk_17_latest___PLATFORM____ppc64le____Test______/\norg.testcontainers.containers.ContainerLaunchException: Container startup failed for image opensearchproject/opensearch:2.14.0\n at org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:359)\n at org.testcontainers.containers.GenericContainer.start(GenericContainer.java:330)\n at org.apache.camel.test.infra.opensearch.services.OpenSearchLocalContainerService.initialize(OpenSearchLocalContainerService.java:97)\n at org.apache.camel.test.infra.common.services.SingletonService.doInitializeService(SingletonService.java:54)\n at org.apache.camel.test.infra.common.services.SingletonService.addToStore(SingletonService.java:47)\n at org.apache.camel.test.infra.common.services.SingletonService.beforeAll(SingletonService.java:60)\n at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)\nCaused by: org.rnorth.ducttape.RetryCountExceededException: Retry limit hit with exception\n at org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:88)\n at org.testcontainers.containers.GenericContainer.doStart(GenericContainer.java:344)\n ... 6 more\nCaused by: org.testcontainers.containers.ContainerLaunchException: Could not create/start container\n at org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:563)\n at org.testcontainers.containers.GenericContainer.lambda$doStart$0(GenericContainer.java:354)\n at org.rnorth.ducttape.unreliables.Unreliables.retryUntilSuccess(Unreliables.java:81)\n ... 7 more\nCaused by: org.testcontainers.shaded.org.awaitility.core.ConditionTimeoutException: org.testcontainers.containers.GenericContainer expected the predicate to return <true> but it returned <false> for input of <InspectContainerResponse(args=[opensearch], config=ContainerConfig(attachStderr=false, attachStdin=false, attachStdout=false, cmd=[opensearch], domainName=, entrypoint=[./opensearch-docker-entrypoint.sh], env=[discovery.type=single-node, DISABLE_SECURITY_PLUGIN=true, PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/usr/share/opensearch/jdk/bin:/usr/share/opensearch/bin, JAVA_HOME=/usr/share/opensearch/jdk, LD_LIBRARY_PATH=:/usr/share/opensearch/plugins/opensearch-knn/lib], exposedPorts=[9200/tcp, 9300/tcp, 9600/tcp, 9650/tcp], hostName=6ded6b1d5db9, image=opensearchproject/opensearch:2.14.0, labels={DOCKERFILE=https://github.com/opensearch-project/opensearch-build/blob/main/docker/release/dockerfiles/opensearch.al2.dockerfile, org.label-schema.build-date=2024-06-15T19:15:50Z, org.label-schema.description=9820, org.label-schema.license=Apache-2.0, org.label-schema.name=opensearch, org.label-schema.schema-version=1.0, org.label-schema.url=https://opensearch.org, org.label-schema.vcs-url=https://github.com/opensearch-project/OpenSearch, org.label-schema.vendor=OpenSearch, org.label-schema.version=2.14.0, org.testcontainers=true, org.testcontainers.lang=java, org.testcontainers.sessionId=06904df3-1144-41e5-90dd-8e6c1cea42f0, org.testcontainers.version=1.20.2}, macAddress=null, networkDisabled=null, onBuild=null, stdinOpen=false, portSpecs=null, stdInOnce=false, tty=false, user=1000, volumes=null, workingDir=/usr/share/opensearch, healthCheck=null), created=2024-10-09T19:28:58.221930218Z, driver=overlay2, execDriver=null, hostConfig=HostConfig(binds=[], blkioWeight=0, blkioWeightDevice=null, blkioDeviceReadBps=null, blkioDeviceWriteBps=null, blkioDeviceReadIOps=null, blkioDeviceWriteIOps=null, memorySwappiness=null, nanoCPUs=0, capAdd=null, capDrop=null, containerIDFile=, cpuPeriod=0, cpuRealtimePeriod=0, cpuRealtimeRuntime=0, cpuShares=0, cpuQuota=0, cpusetCpus=, cpusetMems=, devices=null, deviceCgroupRules=null, deviceRequests=null, diskQuota=null, dns=null, dnsOptions=null, dnsSearch=null, extraHosts=[], groupAdd=null, ipcMode=shareable, cgroup=, links=[], logConfig=LogConfig(type=json-file, config={}), lxcConf=null, memory=0, memorySwap=0, memoryReservation=0, kernelMemory=null, networkMode=bridge, oomKillDisable=null, init=null, autoRemove=false, oomScoreAdj=0, portBindings={9300/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@38ed139b, 9200/tcp=[Lcom.github.dockerjava.api.model.Ports$Binding;@a5272be}, privileged=false, publishAllPorts=false, readonlyRootfs=false, restartPolicy=no, ulimits=null, cpuCount=0, cpuPercent=0, ioMaximumIOps=0, ioMaximumBandwidth=0, volumesFrom=[], mounts=null, pidMode=, isolation=null, securityOpts=null, storageOpt=null, cgroupParent=, volumeDriver=, shmSize=67108864, pidsLimit=null, runtime=runc, tmpFs=null, utSMode=, usernsMode=, sysctls=null, consoleSize=[0, 0], cgroupnsMode=private), hostnamePath=/var/lib/docker/containers/6ded6b1d5db91c11c8ea4e47004d652069569057e2c652fb162df7f1101ec407/hostname, hostsPath=/var/lib/docker/containers/6ded6b1d5db91c11c8ea4e47004d652069569057e2c652fb162df7f1101ec407/hosts, logPath=/var/lib/docker/containers/6ded6b1d5db91c11c8ea4e47004d652069569057e2c652fb162df7f1101ec407/6ded6b1d5db91c11c8ea4e47004d652069569057e2c652fb162df7f1101ec407-json.log, id=6ded6b1d5db91c11c8ea4e47004d652069569057e2c652fb162df7f1101ec407, sizeRootFs=null, sizeRw=null, imageId=sha256:bf1e1cd1fa30bd1da8596bff12630f5e67648dfb7720a52c773c495db1f0135a, mountLabel=, name=/thirsty_torvalds, restartCount=0, networkSettings=NetworkSettings(bridge=, sandboxId=, hairpinMode=false, linkLocalIPv6Address=, linkLocalIPv6PrefixLen=0, ports={}, sandboxKey=, secondaryIPAddresses=null, secondaryIPv6Addresses=null, endpointID=, gateway=, portMapping=null, globalIPv6Address=, globalIPv6PrefixLen=0, ipAddress=, ipPrefixLen=0, ipV6Gateway=, macAddress=, networks={bridge=ContainerNetwork(ipamConfig=null, links=[], aliases=null, networkID=7a4244e88b61040d49ee25986c069bc8e8a3e8b74648ce5ba96504311af33cd9, endpointId=, gateway=, ipAddress=, ipPrefixLen=0, ipV6Gateway=, globalIPv6Address=, globalIPv6PrefixLen=0, macAddress=)}), path=./opensearch-docker-entrypoint.sh, processLabel=, resolvConfPath=/var/lib/docker/containers/6ded6b1d5db91c11c8ea4e47004d652069569057e2c652fb162df7f1101ec407/resolv.conf, execIds=null, state=InspectContainerResponse.ContainerState(status=exited, running=false, paused=false, restarting=false, oomKilled=false, dead=false, pid=0, exitCode=1, error=, startedAt=2024-10-09T19:28:58.828219684Z, finishedAt=2024-10-09T19:28:59.03916237Z, health=null), volumes=null, volumesRW=null, node=null, mounts=[], graphDriver=GraphDriver(name=overlay2, data=GraphData(rootDir=null, deviceId=null, deviceName=null, deviceSize=null, dir=null)), platform=linux)> within 5 seconds.\n at org.testcontainers.shaded.org.awaitility.core.ConditionAwaiter.await(ConditionAwaiter.java:167)\n at org.testcontainers.shaded.org.awaitility.core.AbstractHamcrestCondition.await(AbstractHamcrestCondition.java:86)\n at org.testcontainers.shaded.org.awaitility.core.ConditionFactory.until(ConditionFactory.java:985)\n at org.testcontainers.shaded.org.awaitility.core.ConditionFactory.until(ConditionFactory.java:691)\n at org.testcontainers.shaded.org.awaitility.core.ConditionFactory.until(ConditionFactory.java:708)\n at org.testcontainers.containers.GenericContainer.tryStart(GenericContainer.java:466)\n ... 9 more', ""Anushka Juli - 2024-10-10T06:44:58+0000 apupier  Wrong image is used to build camel-opensearch on ppc64le arch, that's why it is failing. \nmvn clean verify -Dopensearch.container=icr.io/ppc64le-oss/opensearch-ppc64le:2.12.0\nNeed to pass like this in cmd or need to hardcode the image value in pom.xml file of camel-opensearch"", 'Aurélien Pupier - 2024-10-10T07:02:20+0000 I think we should:\nset another property in the container.properties file, something like opensearch.container.ppc64le=icr.io/ppc64le-oss/opensearch-ppc64le:2.12.0\ndetect in Java code if we are on ppc64le architecture and pick the other value in this case (I guess in the constructor org.apache.camel.test.infra.opensearch.services.OpenSearchLocalContainerService.OpenSearchLocalContainerService()\nit will allow:\nto have the list of images all at the same place\nbe able to launch the test from IDE directly without configuration in the IDE', 'Aurélien Pupier - 2024-10-14T12:17:50+0000 it is still failing on CI.\nThe not specific ppc64le image is still picked during IT test execution despite my last attempt (that I wasn\'t able to test on a ppc64le) https://github.com/apache/camel/pull/15923\nSo I guess this statement is not returning true\nSystemUtils.OS_ARCH == ""ppc64le""\non the machine used on CI for ppc64le architecture', 'Andrea Cosentino - 2024-10-14T12:21:29+0000 For the time being I would simply revert this stuff.', 'Aurélien Pupier - 2024-10-14T12:21:50+0000 anushkajuli Do you have time to try on a PowerPC machine and see what is the result of SystemUtils.OS_ARCH ?\nOr someone else with access to PowerPC machine?\nOtherwise, we will need to revert the activation of ppc64le tests by default.', 'Aurélien Pupier - 2024-10-14T12:52:18+0000 Provided PR to revert both changes https://github.com/apache/camel/pull/15946', 'Anushka Juli - 2024-10-15T04:17:27+0000 apupier I will test the changes to check it in PowerPC', 'Anushka Juli - 2024-10-15T05:02:37+0000 Yes it is failing on ppc64le machine as below statement is not giving true value. but when we printing it out it is giving ppc64le\nSystemUtils.OS_ARCH == ""ppc64le""\nOpensearch_build_on_ppc64le.txt', 'Anushka Juli - 2024-10-15T05:16:27+0000 Hi apupier \nif (""ppc64le"".equals(SystemUtils.OS_ARCH))\nNeed to change the if statement like above. Now it is working\nopensearc_build_successfull_on_ppc64le.txt', 'Aurélien Pupier - 2024-10-17T06:35:34+0000 test on success on Ci, for instance https://ci-builds.apache.org/job/Camel/job/Camel%20Core%20(Build%20and%20test)/job/main/471/testReport/org.apache.camel.component.opensearch.integration/OpensearchBulkIT/BuildAndTest___Matrix___JDK_NAME____jdk_17_latest___PLATFORM____ppc64le____Test___bulkCreateOperation/']"
21333,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-09T08:25:16+0000,1728462316,2024-10-09T12:44:01+0000,2024-10-09T10:40:51+0000,Today users need to use * to remove everything. We should make it default.,"['Claus Ibsen - 2024-10-09T10:17:59+0000 removeProperties should not remove internal properties as its required state for some EIPs', 'Claus Ibsen - 2024-10-09T10:39:02+0000 This will not work in yaml-dsl as you cannot define an EIP that is completely empty\n  - from:\n    uri: seda:b\n    steps:\n      - removeHeaders\n      - to:\n          uri: mock:result', 'Ricardo Martinez - 2024-10-09T12:44:01+0000 Thanks for checking davsclaus']"
21332,Test,Unassigned,Aurélien Pupier,4.9.0,4.9.0,2024-10-08T12:40:51+0000,1728391251,2024-10-09T09:31:05+0000,2024-10-09T09:31:05+0000,they failed 7 times in a row (but we already no more hae the changeset on the CI)they all have a connection refused like:,['Claus Ibsen - 2024-10-08T14:12:31+0000 Pushed some code to avoid port clash and to make test more stable']
21331,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.9.0,2024-10-08T08:27:46+0000,1728376066,2024-10-21T05:18:08+0000,2024-10-21T05:18:08+0000,The --trait-profile command parameter is used to select some default values for the kubernetes manifest.It contains some issues:It needs to be removed as a command parameter and the code using it adapted (especially knative code).,No comments found
21330,New Feature,Andrea Cosentino,Lukas Lowinger,None,4.9.0,2024-10-08T08:12:12+0000,1728375132,2024-10-23T10:45:00+0000,2024-10-23T10:26:30+0000,"To make Localstack work we need to set correct endpointOverride which is done in the common aws client used in Camel. The problem is PropertiesFunction doesn't provide such option.Just for reference, here is code which sets it in Camel Quarkus project.",No comments found
21329,Bug,Claus Ibsen,Claus Ibsen,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-10-08T07:31:48+0000,1728372708,2024-10-08T08:57:45+0000,2024-10-08T08:57:45+0000,We should backport this commit to LTS brancheshttps://github.com/apache/camel/commit/469f4229e2ba2920d14af5304b64965bc5a9ee20,"['Claus Ibsen - 2024-10-08T07:39:42+0000 Also camel-tarfile has the same problem, so backport commit 1a7924a8091be2af764ac7f95a8caeb39b2c3868']"
21328,Bug,Claus Ibsen,RAVI,4.8.0,"4.8.1,4.9.0",2024-10-07T17:39:58+0000,1728322798,2024-10-08T14:06:16+0000,2024-10-08T13:55:55+0000,"Hi Team,I currently don't have a workaround for this issue and would appreciate your insights.In my AS2 receiver application, which uses the Camel-AS2 dependency, we receive messages with micalg=sha-256 from the sender. However verification at sender is failing though the latest 4.8.0 Camel-AS2 code is referring all possible algorithms which were not in previous versions, as shown in the attached files.Is there a need to add another entry in constants file with sha-256 ( - in between)
String SHA_256_AS2_ALGORITHM_NAME = ""sha-256"";","['Claus Ibsen - 2024-10-08T10:21:44+0000 Hmm it seems it matched by UPPER vs LOWER case, so sha and SHA is not matched.', 'RAVI - 2024-10-08T14:06:16+0000 is there any chance to include lower case sha-256 in next release?']"
21327,Improvement,Unassigned,RAVI,4.5.0,4.x,2024-10-07T14:57:02+0000,1728313022,2025-01-09T09:19:53+0000,,"Hi Team,We are working on a POC using the Camel-AS2 project (version 4.5.0) to establish communication with OpenText/Boomi, as both tools utilize the AS2 protocol. Our goal is to eventually extend this setup for communication with trading partners.In our scenario, we have an application acting as a Camel-AS2 receiver that listens for incoming messages and uses Camel-AS2 for decryption, verification, and MDN handling. On the other side, Boomi/OpenText acts as the AS2 sender.When our Camel-AS2 receiver processes incoming messages, it successfully decrypts them but encounters a failure during verification with the error: ""message-digest attribute value does not match the calculated value."" After debugging the code, we observed that the ""writeTo"" method in the ApplicationEntity class utilizes the CanonicalOutputStream, which forces CRLF line endings as defined here:
 
java
Copy code
{{static}}
While this works fine for messages terminated with CRLF from OpenText, we encounter digest calculation errors when handling LF-terminated messages. After adjusting the code to accommodate both CRLF and LF line endings, the issue was resolved, and we can now process both types of messages successfully.However, we would prefer not to customize the Camel-AS2 code. Could you provide insights or suggest an alternative approach? We’ve noticed that the same line-ending standardization exists in the latest version within the CanonicalOutputStream class.Thank you for your help.","['Claus Ibsen - 2024-10-07T15:07:10+0000 Try with v4.8.0 first', 'Claus Ibsen - 2024-10-07T15:08:09+0000 And can you attach the code changes you did to this JIRA', 'RAVI - 2024-10-07T17:16:23+0000 Please find attached file. In that commented the lines and simply left with out.write in this method \npublic void write(int i)\n  Then it started working for me for the files terminating with LF line separator.', 'Claus Ibsen - 2024-10-08T10:17:21+0000 Okay so this is an old component that was written with CRLF hardcoded. I think this needs to be configurable, so you can let it be as before, or turn this off, and write the data as-is.\nOr let it be CRLF, LF, or NONE']"
21326,Improvement,Thomas Diesler,Claus Ibsen,None,4.9.0,2024-10-07T13:14:44+0000,1728306884,2024-10-23T09:18:43+0000,2024-10-23T09:18:43+0000,"When you run with kubernetes then the run command may take some time to export, build and run and whatelse happens. On a slow box it may take 2 mins to build and deploy and image due to downloading everything scratch from the internet.We should have a --verbose flag that details more what happens.And then use that to see if any of that information should also be shown by default without --verbose","['Thomas Diesler - 2024-10-09T10:10:26+0000 By default `camel k8s run` is quite verbose (i.e. it shows the entire maven build output)\njbang camel kubernetes run timer-log-route.yaml \\\n       --gav=examples:timer-log:1.0.0 \\\n       --trait container.imagePullPolicy=IfNotPresent \\\n       --trait service.type=NodePort \\\n       --runtime=camel-main\nThere a `--quiet` option to be more quiet.\njbang camel kubernetes run timer-log-route.yaml --quiet \\\n       --gav=examples:timer-log:1.0.0 \\\n       --trait container.imagePullPolicy=IfNotPresent \\\n       --trait service.type=NodePort \\\n       --runtime=camel-main\nYou can test it here', 'Thomas Diesler - 2024-10-09T11:09:06+0000 verify on openshift as well ..', 'Thomas Diesler - 2024-10-23T09:18:43+0000 Done']"
21325,Improvement,Thomas Diesler,Claus Ibsen,None,4.10.0,2024-10-07T13:10:07+0000,1728306607,2024-12-04T12:14:35+0000,2024-12-04T12:14:35+0000,"camel kubernetes run, stores temp data in .camel-jbang-run/NNNNNNN folder where NNNNN is some random numbers.We should cleanup old folders when they are not in use anymore",['Claus Ibsen - 2024-10-10T15:56:03+0000 tdiesler you are welcome to look at this too']
21324,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-07T09:35:12+0000,1728293712,2024-10-07T13:24:35+0000,2024-10-07T13:24:35+0000,"This is true for both the approach, the cloud trail one and the eventbridge one.",No comments found
21323,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-10-07T09:31:35+0000,1728293495,2024-10-07T11:54:25+0000,2024-10-07T11:54:25+0000,No description available,No comments found
21322,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-10-06T08:12:21+0000,1728202341,2024-10-06T16:38:01+0000,2024-10-06T16:38:01+0000,It would be good to have a specific event for routes being restarted by supervised route controller which happens on startup and a route cannot start.,No comments found
21321,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-10-05T08:14:41+0000,1728116081,2024-10-05T08:17:10+0000,2024-10-05T08:17:10+0000,So you can use underscore in the long names such as:,No comments found
21320,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-10-04T16:30:56+0000,1728059456,2024-10-05T08:15:12+0000,2024-10-05T06:12:16+0000,ENV variables should be able to configure camel.server and some other configurations on bootstrap. It may be a bit chicken and egg where some are initialized early vs having ENV able to override configuration.This ticket is to check out the situation,['Claus Ibsen - 2024-10-05T06:11:44+0000 You can now do\nCAMEL_SERVER_DOWNLOADENABLED=true CAMEL_SERVER_UPLOADENABLED=true CAMEL_SERVER_UPLOADSOURCEDIR=/tmp camel run *']
21319,Bug,Unassigned,Simon Alexander,4.4.1,None,2024-10-04T15:44:59+0000,1728056699,2024-10-08T08:20:38+0000,2024-10-07T17:46:56+0000,"Say I have two routes in a RouteBuilder:(in practice you would populate your message body - and read from an MQ Queue or whatever)When I start the application up, if either route can't connect to its producer, then the application will shut down - fine.SupervisingRouteController (See Docs) is intended to overcome this limitation - ""This controller is able to retry starting failing routes"".So I then configure my application.yaml to use this:However, if the first SMS-C is not running, the application won't start! It just shuts down after an attempt to start the route.Some digging showed me that the ""warmup"" that the camel context does starts the processors (i.e. calling startup in SmppProducer.java to open the connection to the SMS-C) before the SupervisingRouteController kicks in and takes over control of the route.In my mind, this shouldn't happen. If the Producer can't connect, it should either retry until it can (or at least that should be a configurable option); or the SRC should be able to take control (by not starting the endpoint on warmup, but rather on route startup).Additionally, and weirdly, with my example above, if the second SMS-C (on port 2776) is down, but the one on port 2775 is up, then the application behaves exactly as I would expect – the SRC takes over and retries the second route until the connection is available again. It's almost like Camel is only warming up the first route? But I'm not 100% sure on that point.Anyway, the DefaultSupervisingRouteController code is working as intended - it only kicks in after warmup. But the camel-smpp code isn't allowing it to do its job because the warmup kills the application too soon.","[""Claus Ibsen - 2024-10-04T16:42:08+0000 You can use lazy start producer, and for retry you have camel's error handler that can be configured a million ways"", ""Simon Alexander - 2024-10-04T17:46:45+0000 Thanks Claus, but that doesn't work if the SMPP component is set up for a transceiver (TRX) connection - then it really needs to try and connect as soon as possible, as it's acting as both a producer and a consumer"", 'Claus Ibsen - 2024-10-06T07:35:02+0000 Okay maybe you can take a look in the camel-smpp source code and see if there is something to fix/improve. We love contributions\nhttps://camel.apache.org/community/contributing/', 'Claus Ibsen - 2024-10-06T07:39:53+0000 Okay so are you using messageReceiverRouteId in the producer that seems to be creating that TRX connection you talk about? And it setup this during doStart unless you turn on lazySessionCreation or lazyStartProducer', 'Claus Ibsen - 2024-10-06T08:10:41+0000 Added unit test using supervised and it will restart the route until the connector works\nhttps://github.com/apache/camel/commit/9955251f90963e6b0c1108782e45258198935f7f\nTry with latest Camel 4.8.x release', ""Simon Alexander - 2024-10-07T09:50:31+0000 It's odd then - there's basically no difference between my actual code and your test code, but even when running 4.8.x my supervising route controller doesn't seem to be catching it. I can run your new integration test and it acts as I would expect.\nThe only difference is that I am using `SpringApplication.run(Application.class, args);` to start my application, then I'm using `@Bean CommandLineRunner init...`  and calling `context.addRoutes` (where context is `@Autowired`). So I'm starting the application using Spring. Could that make a difference?"", 'Claus Ibsen - 2024-10-07T10:02:57+0000 I dont know - we only support running camel on spring via camel-spring-boot and its standard way. If you do something a bit custom, then its better you research yourself', ""Simon Alexander - 2024-10-08T08:20:38+0000 For completeness, I reverted back to not using the conmandlinerunner and it's working fine now - so that's odd. Something about how spring camel deals with exceptions that way I guess""]"
21318,Bug,Federico Mariani,Federico Mariani,4.8.0,"4.8.1,4.9.0",2024-10-04T09:46:07+0000,1728035167,2024-10-04T12:33:24+0000,2024-10-04T12:33:24+0000,"The actual implementation of camel-platform-http-starter is not working as expected, in particular, when using undertow for example, after a couple of request the following exception is thrown:The route to reproduce this issue is the following, a really trivial one:Analyzing the stacktrace you can notice that we are mixing Async execution via CompletableFuture and non-Async Spring Boot code, therefore a single request is executed on multiple threads not handled by the underlying server or spring boot, that causes the concurrent modification exception.",No comments found
21317,Task,Gaelle Fournier,Gaelle Fournier,"4.8.0,4.x","4.8.1,4.x",2024-10-04T07:54:40+0000,1728028480,2024-10-07T17:46:43+0000,2024-10-07T17:46:43+0000,This is a follow up from this fix : https://github.com/apache/camel/pull/15450.The behavior of route (the openshift resource) should be the same as ingress.The documentation needs to be updated.,No comments found
21316,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-10-04T07:27:00+0000,1728026820,2024-10-04T11:40:20+0000,2024-10-04T11:40:20+0000,When using secret then export will not include camel-kubernetes. This is likely the same for other property placeholder functions / vaults,No comments found
21315,Improvement,Claus Ibsen,Shawn Fu,4.8.0,4.9.0,2024-10-03T19:54:03+0000,1727985243,2024-10-07T10:18:13+0000,2024-10-07T10:18:13+0000,"Most of the route builder configurations allow multiple ToDefinitions, e.g.:But the Rest DSL only supports the last defined ""to"" component, any other ""to"" components are overwritten silently by Camel.Is it possible to add a mechanism in the Rest component to let the user know only the last ""to"" will be in use? Like in the org.apache.camel.model.rest.VerbDefinition#setTo method can an Assert being added to make sure this.to is null before the assignment?",No comments found
21314,Task,Andrea Cosentino,Aurélien Pupier,4.8.0,4.x,2024-10-03T14:10:03+0000,1727964603,2024-10-31T07:59:31+0000,,it is currently not possible. There is this test in error:Tried with localstack/localstack:3.7.0 and localstack/localstack:3.7.2to investigate if it is just a matter of test update or there is a real breakage with latest version of AWS,"['Aurélien Pupier - 2024-10-10T06:40:20+0000 Upgrade of container from 3.6 to a 3.7+ (3.8) has been done despite the test failing so it is now failing on the main branch\nhttps://github.com/apache/camel/commit/6d908ba20b9c90fe727772236d230aaacafd15bd', 'Claus Ibsen - 2024-10-15T05:36:35+0000 software.amazon.awssdk.services.s3.model.S3Exception: The object was stored using a form of Server Side Encryption. The correct parameters must be provided to retrieve the object. (Service: S3, Status Code: 400, Request ID: ab39a700-8191-4c53-b2c6-2f27c232b67a, Extended Request ID: s9lzHYrFp76ZVxRcpX9 5cjAnEH2ROuNkd2BHfIa6UkFVdtjf5mKR3/eTPFvsiP/XV/VLi31234=)', 'Claus Ibsen - 2024-10-15T05:40:04+0000 https://docs.aws.amazon.com/AmazonS3/latest/userguide/ServerSideEncryptionCustomerKeys.html', 'Claus Ibsen - 2024-10-15T07:15:03+0000 In that link if you open ""Using the AWS SDKs to specify SSE-C for PUT, GET, Head, and Copy operations"" then there is some Java SDK sample code for copyObject that uses SSEC keys but I cannot find these APIs in camel-aws we can use instead.\n CopyObjectRequest copyRequest = new CopyObjectRequest(bucketName, keyName, bucketName, targetKeyName) .withSourceSSECustomerKey(SSE_KEY) .withDestinationSSECustomerKey(newSSEKey);', ""Andrea Cosentino - 2024-10-15T07:20:14+0000 I'll have a look this week.""]"
21313,Test,Unassigned,Otavio Rodolfo Piske,4.9.0,None,2024-10-03T13:35:49+0000,1727962549,2024-10-03T13:41:41+0000,,"The tests do too much. Ideally, each test should test one thing and only one.The actual test code should NOT:1. Setup the environment, routes or the test itself
2. Manage the context lifecycle (unless the context lifecycle is primarily relevant to the test itself)
3. Should not isolate the test in an anonymous code blockIdeally, the test should do one thing and one thing only: assert that the condition under test pass or fail. Everything else is either setup, cleanup or management and should not be in the test method.","['Otavio Rodolfo Piske - 2024-10-03T13:40:47+0000 Ideally, it should also:\n1. replace lots of those concatenations in the routes with fromF as well.\n2. use assertDoesNotThrow instead of try/catch']"
21312,Dependency upgrade,Andrea Cosentino,Claus Ibsen,None,4.9.0,2024-10-03T11:47:17+0000,1727956037,2024-10-04T10:23:45+0000,2024-10-04T10:23:45+0000,No description available,No comments found
21311,Improvement,Andrea Cosentino,Mikael Koskinen,4.8.0,4.9.0,2024-10-03T08:49:59+0000,1727945399,2024-10-08T09:53:44+0000,2024-10-08T09:53:44+0000,"The current code in NatsConfiguration.java adds the nats:// -prefix automatically to the server connection string:String prefix = ""nats://"";This causes issues, because NATS supports other protocols like Websockets, where the prefix is ws:// or wss:// instead of nats://Looking at the examples provided by NATS, the prefix is something that the user of the NATS should provide as it defines the protocol between the client and the server. For example: https://natsbyexample.com/examples/messaging/pub-sub/javaI was wondering if the auto-prefixing could be removed but then that would be a breaking change.Maybe a new configuration parameter could be added for defining the prefix (the protocol) and that could default to nats:// like currently?","['Andrea Cosentino - 2024-10-03T09:05:36+0000 It makes sense, I think this would also be not invasive for eventually backporting to 4.8.x, because I see this more as limitation/bug, not really an improvement. cc cibsen@e-ma.net', 'Claus Ibsen - 2024-10-03T11:42:33+0000 You do not need a new parameter, you can update the splitServers method to check if there is a protocol already and use as-is, otherwise then it uses nats:// as today.\nThen you can configure servers with servers=ws:fooserver:1234', 'Mikael Koskinen - 2024-10-03T12:43:11+0000 Yes, that\'s a better idea.\nI\'m not sure if NATS supports connecting to multiple different servers using different protocols (for example nats:// to first and ws:// to second server). If it is supported and the protocol is parsed from ""servers"", we don\'t lose that functionality. We do if a new ""procotol/prefix"" parameter is added because it affects all the servers.', 'Claus Ibsen - 2024-10-03T12:57:12+0000 Since you also need to configure the server hostname / port and then having protocol in the uri-path is weird.\nIdeally you configure the server once for. the component and reuse it - like kafka etc']"
21310,Dependency upgrade,Radovan Netuka,Claus Ibsen,None,4.9.0,2024-10-03T07:12:09+0000,1727939529,2024-10-22T05:23:52+0000,2024-10-22T05:23:52+0000,There is a new feature in jackson to better support 4-byte unicode chars uses by asian languages.We should add information about this option and make it easier to configure.,"['Claus Ibsen - 2024-10-03T07:13:16+0000 rnetuka would you help with this as you help added this new option to jackson', 'Radovan Netuka - 2024-10-03T12:26:59+0000 Hi davsclaus. Yes, sure.', 'Radovan Netuka - 2024-10-11T10:43:25+0000 PR: https://github.com/apache/camel/pull/15925']"
21309,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-10-03T05:21:29+0000,1727932889,2024-10-03T11:23:02+0000,2024-10-03T11:23:02+0000,"Due to CAMEL-21302 then camel-cxf does not work out of the box with camel-opentelemetry / opentelemtry, when using CXF async client mode.So we should automatic run the synchronous client (like we do for transactions).",No comments found
21308,Task,Unassigned,Claus Ibsen,None,None,2024-10-03T05:12:48+0000,1727932368,2024-12-21T08:52:44+0000,2024-12-21T08:52:44+0000,"[ERROR] Tests run: 1, Failures: 1, Errors: 0, Skipped: 0, Time elapsed: 10.02 s <<< FAILURE! – in sample.camel.MyCamelApplicationTest
[ERROR] sample.camel.MyCamelApplicationTest.shouldPushConvertedHl7toFhir – Time elapsed: 10.01 s <<< FAILURE!
java.lang.AssertionError: mock://fhir:transaction/withResources Received message count. Expected: <1> but was: <0>
at org.apache.camel.component.mock.MockEndpoint.fail(MockEndpoint.java:2015)
at org.apache.camel.component.mock.MockEndpoint.assertEquals(MockEndpoint.java:1950)
at org.apache.camel.component.mock.MockEndpoint.doAssertIsSatisfied(MockEndpoint.java:453)
at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:431)
at org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:421)
at sample.camel.MyCamelApplicationTest.shouldPushConvertedHl7toFhir(MyCamelApplicationTest.java:46)
at java.base/java.lang.reflect.Method.invoke(Method.java:568)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
at java.base/java.util.ArrayList.forEach(ArrayList.java:1511)
 
[INFO]
[INFO] Results:
[INFO]
[ERROR] Failures:
[ERROR] sample.camel.MyCamelApplicationTest.shouldPushConvertedHl7toFhir
[ERROR]   Run 1: MyCamelApplicationTest.shouldPushConvertedHl7toFhir:46 mock://fhir:transaction/withResources Received message count. Expected: <1> but was: <0>
[ERROR]   Run 2: MyCamelApplicationTest.shouldPushConvertedHl7toFhir:46 mock://fhir:transaction/withResources Received message count. Expected: <1> but was: <0>
[ERROR]   Run 3: MyCamelApplicationTest.shouldPushConvertedHl7toFhir:46 mock://fhir:transaction/withResources Received message count. Expected: <1> but was: <0>","['Claus Ibsen - 2024-10-03T07:13:50+0000 Not sure if you would have time jpoth to look at this', 'Aurélien Pupier - 2024-12-19T16:03:07+0000 on last build, it seems the tests are in success in both fhir project in camel-sprint-boot-examples repository:\nhttps://github.com/apache/camel-spring-boot-examples/actions/runs/12161192269/job/34663853560#step:5:885\nhttps://github.com/apache/camel-spring-boot-examples/actions/runs/12161192269/job/34663853560#step:5:962\nOr is it from elsewhere?', 'Claus Ibsen - 2024-12-21T08:52:44+0000 no it was a SB example']"
21307,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-10-02T17:52:06+0000,1727891526,2024-10-03T17:05:42+0000,2024-10-03T17:05:42+0000,The component should provide the file name using the Exchange.FILE_NAME header.,['Otavio Rodolfo Piske - 2024-10-03T17:05:42+0000 Resolved with https://github.com/apache/camel/pull/15815']
21306,Bug,Claus Ibsen,Claus Ibsen,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-10-02T17:47:32+0000,1727891252,2024-10-03T04:56:45+0000,2024-10-03T04:56:45+0000,https://camel.zulipchat.com/#narrow/stream/257298-camel/topic/jsonpath.20to.20null.20value.20throws.20exception,No comments found
21305,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-10-02T16:24:31+0000,1727886271,2024-10-03T17:02:13+0000,2024-10-03T17:02:13+0000,"When using the stream cache, converting the byte array to a document causes a silent failure due to missing converter from InputStream.",['Otavio Rodolfo Piske - 2024-10-03T17:02:13+0000 Resolved with https://github.com/apache/camel/pull/15809']
21304,Improvement,Thomas Diesler,Aurélien Pupier,4.8.0,4.9.0,2024-10-02T15:45:21+0000,1727883921,2025-01-02T09:10:17+0000,2025-01-02T09:10:17+0000,"leads to have this message:Tried also with cluster-type openshift
it would be better if the AnsiLooger Stream is correctly configured out of the box","['Claus Ibsen - 2024-10-09T11:16:49+0000 tdiesler maybe something you could look into', 'Thomas Diesler - 2024-10-09T12:32:18+0000 sure, will do', 'Thomas Diesler - 2024-10-10T11:02:28+0000 apupier can pls see TestCreate.java?', 'Aurélien Pupier - 2024-10-10T11:26:09+0000 it is the file created with Camel JBang init as described. Nothing specific in it:\nimport org.apache.camel.builder.RouteBuilder;\n\npublic class TestCreate extends RouteBuilder {\n\n    @Override\n    public void configure() throws Exception {\n        from(""timer:java?period=1000"")\n            .setBody()\n                .simple(""Hello Camel from ${routeId}"")\n            .log(""${body}"");\n    }\n}', 'Claus Ibsen - 2024-12-27T11:06:05+0000 Is this still happening with 4.9.0 or 4.8.2 release', 'Aurélien Pupier - 2025-01-02T09:10:17+0000 I do not see the message anymore with 4.9.0']"
21303,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-10-02T09:49:27+0000,1727862567,2024-10-02T12:36:30+0000,2024-10-02T12:36:22+0000,"When closing streams then it may already be closed or something. We should just log this at DEBUG level by default as WARN is too noisy.And you may end up with double loggings and whatnot2024-10-02T11:46:19.545+02:00  WARN 44994 — [onPool-worker-1] org.apache.camel.util.IOHelper           : Cannot close. Reason: Response not usable after response errors.
 
org.springframework.web.context.request.async.AsyncRequestNotUsableException: Response not usable after response errors.
at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleHttpServletResponse.obtainLockOrRaiseException(StandardServletAsyncWebRequest.java:335) ~[spring-web-6.1.13.jar:6.1.13]
at org.springframework.web.context.request.async.StandardServletAsyncWebRequest$LifecycleServletOutputStream.close(StandardServletAsyncWebRequest.java:424) ~[spring-web-6.1.13.jar:6.1.13]
at org.apache.camel.util.IOHelper.close(IOHelper.java:421) ~[camel-util-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.util.IOHelper.close(IOHelper.java:481) ~[camel-util-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.util.IOHelper.close(IOHelper.java:491) ~[camel-util-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.http.common.DefaultHttpBinding.copyStream(DefaultHttpBinding.java:489) ~[camel-http-common-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.http.common.DefaultHttpBinding.doWriteDirectResponse(DefaultHttpBinding.java:552) ~[camel-http-common-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.http.common.DefaultHttpBinding.doWriteResponse(DefaultHttpBinding.java:451) ~[camel-http-common-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.http.common.DefaultHttpBinding.writeResponse(DefaultHttpBinding.java:371) ~[camel-http-common-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpConsumer.afterProcess(SpringBootPlatformHttpConsumer.java:135) ~[camel-platform-http-starter-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpConsumer.handleService(SpringBootPlatformHttpConsumer.java:124) ~[camel-platform-http-starter-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at org.apache.camel.component.platform.http.springboot.SpringBootPlatformHttpConsumer.lambda$service$0(SpringBootPlatformHttpConsumer.java:75) ~[camel-platform-http-starter-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]
at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1804) ~[na:na]
at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796) ~[na:na]
at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373) ~[na:na]
at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182) ~[na:na]
at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655) ~[na:na]
at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622) ~[na:na]
at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165) ~[na:na]",No comments found
21302,Bug,Freeman Yue Fang,John Poth,None,"4.4.5,4.8.2,4.9.0",2024-10-02T09:08:51+0000,1727860131,2024-10-24T15:46:03+0000,2024-10-24T15:45:43+0000,"There seems to be a Otel context leak when using a CXF producer in async mode. This causes different requests to have the same traceId. As a workaround, setting synchronous=true on the CXF producer resolves the issue. Here's a reproducer:I've added the complete unit here: https://github.com/apache/camel/blob/7d83a62b8e442dc9ac6fd79b153192add940301e/components/camel-opentelemetry/src/test/java/org/apache/camel/opentelemetry/AsyncCxfTest.java","['Claus Ibsen - 2024-10-02T11:11:35+0000 This is very likely a CXF issue; where CXF needs to ensure otel compliance when you use CXF with its own async processing client.', ""Freeman Yue Fang - 2024-10-04T13:52:26+0000 A quick update of this issue.\nI noticed this error in log\njava.lang.IllegalStateException: Thread [ForkJoinPool-1-worker-1] opened scope, but thread [default-workqueue-1] closed it\n        at io.opentelemetry.context.StrictContextStorage$StrictScope.close(StrictContextStorage.java:205) ~[opentelemetry-context-1.42.1.jar:1.42.1]\n        at org.apache.camel.tracing.ActiveSpanManager$Holder.closeScope(ActiveSpanManager.java:140) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n        at org.apache.camel.tracing.ActiveSpanManager.deactivate(ActiveSpanManager.java:80) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n        at org.apache.camel.tracing.Tracer$TracingEventNotifier.notify(Tracer.java:266) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n        at org.apache.camel.support.EventHelper.doNotifyEvent(EventHelper.java:1495) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n        at org.apache.camel.support.EventHelper.notifyExchangeSent(EventHelper.java:969) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n        at org.apache.camel.processor.SendProcessor.lambda$process$0(SendProcessor.java:193) ~[camel-core-processor-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n        at org.apache.camel.component.cxf.jaxrs.CxfRsProducer$CxfInvocationCallback.completed(CxfRsProducer.java:732) [camel-cxf-rest-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n        at org.apache.camel.component.cxf.jaxrs.CxfRsProducer$CxfInvocationCallback.completed(CxfRsProducer.java:680) [camel-cxf-rest-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\nOtel expects the scope should be opened and closed in the same thread, if in different threads, we see exception here. And I highly believe this is the root cause which messes up scope/span stacks here and causes the same traceId is used in different invocations.\nFor the camel-cxf producer endpoint, if async is used, the cxf client(code in org.apache.cxf.transport.http.HTTPConduit) will handleResponseOnWorkqueue(so camel-cxf producer opens otel scope and sends request in one thread which is from camel managed threadpool, but handles response and closes otel scope in another thread which is managed by cxf threadpool), here cxf creates org.apache.cxf.workqueue.WorkQueue extends java.util.concurrent.Executor if can't find an Executor instance from cxf Exchange.\nSo back to the exception\njava.lang.IllegalStateException: Thread [ForkJoinPool-1-worker-1] opened scope, but thread [default-workqueue-1] closed it\nThe ForkJoinPool-1-worker-1 is from camel managed threadpool but default-workqueue-1 is from cxf threadpool.\nI think this would be a pretty common scenario for the async client(send and receive using different threads) and Otel should be able to accommodate this scenario(And I found related otel document like propagate Otel Context across threads seems promising).\nAnother thing is that we probably can grab camel managed threadpool and set it to cxf exchange in async mode, so the shared threadpool is used here.\nStill experimenting..."", 'John Poth - 2024-10-04T14:44:30+0000 Yeah it is likely the source of the problem and sharing the threadpools is a great idea! Depending on how reactive the CXF client is, hopefully it will use the same thread for request/response... If this is really the issue I guess other async components could face the same issue ...', ""Freeman Yue Fang - 2024-10-18T17:52:55+0000 Hi jpoth, davsclaus,\nI have more update of this issue after reading code in camel-tracing and camel-opentelemetry.\n1. For the scenario that a camel producer endpoint using asynchronous way to send request and handle response in different threads, actually in camel-tracing and camel-opentelemetry have the mechanism to accommodate this scenario already.\nThere is a ExchangeAsyncStartedEvent which calls into org.apache.camel.tracing.ActiveSpanManager\n/**\n     * If the underlying span is active, closes its scope without ending the span. This method should be called after\n     * async execution is started on the same thread on which span was activated. ExchangeAsyncStartedEvent is used to\n     * notify about it.\n     *\n     * @param exchange The exchange\n     */\n    public static void endScope(Exchange exchange) {\n        Holder holder = exchange.getProperty(ExchangePropertyKey.ACTIVE_SPAN, Holder.class);\n        if (holder != null) {\n            holder.closeScope();\n        }\n    }\nwhen a asynchronous camel producer(for example, a camel-cxf producer) endpoint sends request asynchronously. And this ExchangeAsyncStartedEvent and endScope method in org.apache.camel.tracing.ActiveSpanManager ensures the producer CLIENT scope can be closed in the expected thread.\n2. Why we have the issue exposed in AsyncCxfTest.java?\nThe problem actually comes from the DirectProduer used in the testcase.\nThe leak context actually is from DirectProducer but not CxfRsProducer(direct CLIENT but not cxfrs CLIENT)\nThere must be no leaking span after test ==> expected: <{}> but was: <{opentelemetry-trace-span-key=SdkSpan{traceId=c29955d3b94b5673cc9ab23f43938a92, spanId=d6fa2ad9cdd6c636, parentSpanContext=ImmutableSpanContext{traceId=c29955d3b94b5673cc9ab23f43938a92, spanId=c0f0bed8f3615a2d, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, name=send, kind=CLIENT, attributes=AttributesMap{data={url.scheme=direct, camel.uri=direct://send, url.path=send, component=camel-direct}, capacity=128, totalAddedValues=4}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1729272514478877531, endEpochNanos=1729272514491415078}}>\nAnd if we take a look at the related code in DirectProducer.java\n} else {\n                // the consumer may be forced synchronous\n                if (consumer.getEndpoint().isSynchronous()) {\n                    consumer.getProcessor().process(exchange);\n                    callback.done(true);\n                    return true;\n                } else {\n                    return consumer.getAsyncProcessor().process(exchange, callback);\n                }\n            }\nThe above code\n         return consumer.getAsyncProcessor().process(exchange, callback);\nwill call the next DirectConsumer endpoint in the same thread, which will create Direct INTERNAL span/scope and this messes the scope/span stack, this causes that the previous camel-direct producer CLIENT scope can't be closed properly and hence causes the leak.\nI just sent a PR\nhttps://github.com/apache/camel/pull/16008\nAnd in the PR\nhttps://github.com/apache/camel/pull/16008/commits/b9bf81b24c8a3c24117cc5454cafac906e8dd136#diff-62012c8f6e9737b3fe210a2abbb42fee51e22315ad31b82caf9df4ba3c53e9f5\nI added CurrentSpanTest.testDirectToDirectToAsync which exposes the same problem even without cxfrs endpoint involved.\nBest Regards\nFreeman"", 'Claus Ibsen - 2024-10-22T09:58:00+0000 Thanks Freeman.\nWe should look at only setting that exchange property in the direct producer if tracing is enabled as otherwise this will set it for everyone else when its not really needed', 'Claus Ibsen - 2024-10-22T10:41:16+0000 Are you sure it really works, I see DEBUG errors when running AsyncCxfTest in the log if I enable this via\n+logger.otel.name=org.apache.camel.tracing\n+logger.otel.level=TRACE', 'Claus Ibsen - 2024-10-22T12:12:02+0000 2024-10-22 14:07:44,387 [Pool-2-worker-1] DEBUG ActiveSpanManager              - Failed to close span scope. This exception is ignored.\njava.lang.IllegalStateException: Thread [ForkJoinPool-1-worker-1] opened scope, but thread [ForkJoinPool-2-worker-1] closed it\n    at io.opentelemetry.context.StrictContextStorage$StrictScope.close(StrictContextStorage.java:205) ~[opentelemetry-context-1.43.0.jar:1.43.0]\n    at org.apache.camel.tracing.ActiveSpanManager$Holder.closeScope(ActiveSpanManager.java:147) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.tracing.ActiveSpanManager.deactivate(ActiveSpanManager.java:87) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.tracing.Tracer$TracingEventNotifier.notify(Tracer.java:266) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.support.EventHelper.doNotifyEvent(EventHelper.java:1574) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.support.EventHelper.notifyExchangeSent(EventHelper.java:1048) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.processor.SendProcessor.lambda$process$0(SendProcessor.java:193) ~[camel-core-processor-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.AsyncCallback.run(AsyncCallback.java:44) ~[camel-api-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.opentelemetry.CurrentSpanTest$AsyncMockEndpoint$1.lambda$process$1(CurrentSpanTest.java:339) ~[test-classes/:?]\n    at java.base/java.util.concurrent.CompletableFuture$UniRun.tryFire(CompletableFuture.java:787) [?:?]\n    at java.base/java.util.concurrent.CompletableFuture.postComplete(CompletableFuture.java:510) [?:?]\n    at java.base/java.util.concurrent.CompletableFuture$AsyncRun.run(CompletableFuture.java:1810) [?:?]\n    at java.base/java.util.concurrent.CompletableFuture$AsyncRun.exec(CompletableFuture.java:1796) [?:?]\n    at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373) [?:?]\n    at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182) [?:?]\n    at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655) [?:?]\n    at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622) [?:?]\n    at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165) [?:?]\nCaused by: io.opentelemetry.context.StrictContextStorage$CallerStackTrace: Thread [ForkJoinPool-1-worker-1] opened scope for {opentelemetry-trace-span-key=SdkSpan{traceId=d1c56f92efbcbfee77db67d3fce5581e, spanId=3397200e7a63509c, parentSpanContext=ImmutableSpanContext{traceId=d1c56f92efbcbfee77db67d3fce5581e, spanId=79c4b170505d1064, traceFlags=01, traceState=ArrayBasedTraceState{entries=[]}, remote=false, valid=true}, name=asyncmock1, kind=CLIENT, attributes=AttributesMap{data={camel.uri=asyncmock1://result, url.path=result, component=camel-asyncmock1, url.scheme=asyncmock1}, capacity=128, totalAddedValues=4}, status=ImmutableStatusData{statusCode=UNSET, description=}, totalRecordedEvents=0, totalRecordedLinks=0, startEpochNanos=1729598864373351708, endEpochNanos=0}} here:\n    at org.apache.camel.opentelemetry.OpenTelemetrySpanAdapter.makeCurrent(OpenTelemetrySpanAdapter.java:118) ~[classes/:?]\n    at org.apache.camel.tracing.ActiveSpanManager$Holder.<init>(ActiveSpanManager.java:128) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.tracing.ActiveSpanManager.activate(ActiveSpanManager.java:67) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.tracing.Tracer$TracingEventNotifier.notify(Tracer.java:250) ~[camel-tracing-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.support.EventHelper.doNotifyEvent(EventHelper.java:1574) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.support.EventHelper.notifyExchangeSending(EventHelper.java:1005) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.processor.SendProcessor.process(SendProcessor.java:166) ~[camel-core-processor-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.support.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:104) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.support.processor.DelegateAsyncProcessor.process(DelegateAsyncProcessor.java:104) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$SimpleTask.handleFirst(RedeliveryErrorHandler.java:440) ~[camel-core-processor-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.processor.errorhandler.RedeliveryErrorHandler$SimpleTask.run(RedeliveryErrorHandler.java:416) ~[camel-core-processor-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.doRun(DefaultReactiveExecutor.java:199) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.executeReactiveWork(DefaultReactiveExecutor.java:189) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.tryExecuteReactiveWork(DefaultReactiveExecutor.java:166) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor$Worker.schedule(DefaultReactiveExecutor.java:148) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultReactiveExecutor.scheduleMain(DefaultReactiveExecutor.java:59) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.processor.Pipeline.process(Pipeline.java:163) ~[camel-core-processor-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.CamelInternalProcessor.processNonTransacted(CamelInternalProcessor.java:347) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.CamelInternalProcessor.process(CamelInternalProcessor.java:323) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.component.direct.DirectProducer.process(DirectProducer.java:100) ~[camel-direct-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.SharedCamelInternalProcessor.processNonTransacted(SharedCamelInternalProcessor.java:156) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.SharedCamelInternalProcessor.process(SharedCamelInternalProcessor.java:133) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.SharedCamelInternalProcessor$1.process(SharedCamelInternalProcessor.java:89) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:82) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.SharedCamelInternalProcessor.process(SharedCamelInternalProcessor.java:86) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.support.cache.DefaultProducerCache.send(DefaultProducerCache.java:178) ~[camel-support-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:176) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:172) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultProducerTemplate.send(DefaultProducerTemplate.java:153) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:187) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultProducerTemplate.sendBody(DefaultProducerTemplate.java:195) ~[camel-base-engine-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.opentelemetry.CurrentSpanTest.testDirectToDirectToAsync(CurrentSpanTest.java:122) ~[test-classes/:?]\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke0(Native Method) ~[?:?]\n    at java.base/jdk.internal.reflect.NativeMethodAccessorImpl.invoke(NativeMethodAccessorImpl.java:77) ~[?:?]\n    at java.base/jdk.internal.reflect.DelegatingMethodAccessorImpl.invoke(DelegatingMethodAccessorImpl.java:43) ~[?:?]\n    at java.base/java.lang.reflect.Method.invoke(Method.java:568) ~[?:?]\n    at org.junit.platform.commons.util.ReflectionUtils.invokeMethod(ReflectionUtils.java:767) ~[junit-platform-commons-1.11.3.jar:1.11.3]\n    at org.junit.jupiter.engine.execution.MethodInvocation.proceed(MethodInvocation.java:60) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InvocationInterceptorChain$ValidatingInvocation.proceed(InvocationInterceptorChain.java:131) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.extension.TimeoutExtension.intercept(TimeoutExtension.java:156) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestableMethod(TimeoutExtension.java:147) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.extension.TimeoutExtension.interceptTestMethod(TimeoutExtension.java:86) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker$ReflectiveInterceptorCall.lambda$ofVoidMethod$0(InterceptingExecutableInvoker.java:103) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.lambda$invoke$0(InterceptingExecutableInvoker.java:93) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InvocationInterceptorChain$InterceptedInvocation.proceed(InvocationInterceptorChain.java:106) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InvocationInterceptorChain.proceed(InvocationInterceptorChain.java:64) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InvocationInterceptorChain.chainAndInvoke(InvocationInterceptorChain.java:45) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InvocationInterceptorChain.invoke(InvocationInterceptorChain.java:37) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:92) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.execution.InterceptingExecutableInvoker.invoke(InterceptingExecutableInvoker.java:86) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.lambda$invokeTestMethod$8(TestMethodTestDescriptor.java:217) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.invokeTestMethod(TestMethodTestDescriptor.java:213) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:138) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.jupiter.engine.descriptor.TestMethodTestDescriptor.execute(TestMethodTestDescriptor.java:68) ~[junit-jupiter-engine-5.11.3.jar:5.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:156) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.exec(ForkJoinPoolHierarchicalTestExecutorService.java:274) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.execSync(ForkJoinPoolHierarchicalTestExecutorService.java:247) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.executeSync(ForkJoinPoolHierarchicalTestExecutorService.java:194) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:166) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.exec(ForkJoinPoolHierarchicalTestExecutorService.java:274) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.execSync(ForkJoinPoolHierarchicalTestExecutorService.java:247) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService.invokeAll(ForkJoinPoolHierarchicalTestExecutorService.java:159) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$6(NodeTestTask.java:160) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$8(NodeTestTask.java:146) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.Node.around(Node.java:137) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.lambda$executeRecursively$9(NodeTestTask.java:144) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ThrowableCollector.execute(ThrowableCollector.java:73) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.executeRecursively(NodeTestTask.java:143) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.NodeTestTask.execute(NodeTestTask.java:100) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    at org.junit.platform.engine.support.hierarchical.ForkJoinPoolHierarchicalTestExecutorService$ExclusiveTask.exec(ForkJoinPoolHierarchicalTestExecutorService.java:274) ~[junit-platform-engine-1.11.3.jar:1.11.3]\n    ... 5 more', 'Claus Ibsen - 2024-10-22T12:16:41+0000 Using synchronous=true resolves the issue and the logs are clean without any exceptions', ""Freeman Yue Fang - 2024-10-22T12:31:32+0000 Hi davsclaus,\nThe exception\nFailed to close span scope. This exception is ignored.\nexists even without my changes when async mode is used here.\nAnd it comes from the code\n                } else if (event instanceof CamelEvent.ExchangeAsyncProcessingStartedEvent eap) {\n\n                    // no need to filter scopes here. It's ok to close a scope multiple times and\n                    // implementations check if the scope being disposed is current\n                    // and should not do anything if scopes don't match.\n                    ActiveSpanManager.endScope(eap.getExchange());\n                }\nIf I read comments here correctly, this is by design.\n                    // no need to filter scopes here. It's ok to close a scope multiple times and\n                    // implementations check if the scope being disposed is current\n                    // and should not do anything if scopes don't match.\nIf we close the scope already in the expected thread, it should be OK to close it again in another thread, and that's why we see this exception and can ignore it. And as long as we close the scope already in the expected thread, there would be no context leak.\nAnd for your comment\nWe should look at only setting that exchange property in the direct producer if tracing is enabled as otherwise this will set it for everyone else when its not really needed\nYes, I will do it accordingly.\nBest Regards\nFreeman"", 'Freeman Yue Fang - 2024-10-22T19:54:02+0000 I think we also want this in 4.4.x and 4.8.x LTS version', 'Claus Ibsen - 2024-10-23T06:17:35+0000 Okay so the StrictContextStorage is only used during testing which has a serious overhead as it collects stack-traces for every request and throws exception for double closing.\nThe default storage is thread-local which does not do that, and ignore double closing, so under normal operation this is working faster and better.', 'John Poth - 2024-10-23T07:39:08+0000 Yeah those are just warnings. We do check if there are any leaks at the end of each tests.', 'Claus Ibsen - 2024-10-23T18:58:49+0000 Freeman, you can backport to older branches.', 'Freeman Yue Fang - 2024-10-24T15:46:03+0000 davsclaus, done!\nCheers\nFreeman']"
21301,Bug,Pasquale Congiusti,Pasquale Congiusti,4.8.0,"4.8.1,4.9.0",2024-10-02T08:55:13+0000,1727859313,2024-10-03T13:03:23+0000,2024-10-03T11:56:49+0000,Camel Jbang version:Camel Main OK:Camel Quarkus KO:Camel Spring Boot KO:,"['Claus Ibsen - 2024-10-03T11:56:49+0000 Thanks for helping with the jbang commands', 'Pasquale Congiusti - 2024-10-03T12:54:01+0000 I am still working on backporting and testing against 4.8.1. It is needed to fix the regression over there.', 'Pasquale Congiusti - 2024-10-03T13:03:23+0000 Done in https://github.com/apache/camel/pull/15832']"
21300,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-10-02T07:54:51+0000,1727855691,2024-10-02T12:36:30+0000,2024-10-02T11:09:21+0000,"When Camel route is done and platform-http consumer (vertx / spring-boot) is writing a response, then this can fail due to networking issues. In those causes a LOG is written but the Exchange in Camel is completed succesfully.If you use onCompletion in routes then this is completed succesfully. You may want to get the caused exxeption from vertx / SB instead. So in other words Camel route is okay, but vertx/SB failed during writing response on network level.",No comments found
21299,Dependency upgrade,Claus Ibsen,Claus Ibsen,4.4.3,4.4.4,2024-10-02T07:18:32+0000,1727853512,2024-10-02T07:24:17+0000,2024-10-02T07:24:17+0000,No description available,No comments found
21298,Improvement,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-10-02T07:04:13+0000,1727852653,2024-10-02T07:15:04+0000,2024-10-02T07:15:04+0000,This makes it possible to get this released version information in json format that makes it easier to 3rd party tooling to use.,No comments found
21297,Test,Andrea Tarocchi,Andrea Tarocchi,4.8.0,"4.4.4,4.8.1,4.9.0",2024-10-01T16:08:50+0000,1727798930,2024-10-03T14:10:24+0000,2024-10-03T14:10:24+0000,camel-test-infra-dispatch-router not working due to SEGFAULT in running qdrouterd in the container.I fear is a general fedora issue and I opened a bug there as well https://bugzilla.redhat.com/show_bug.cgi?id=2315943we might use in the meantime just a simple generic container with this image quay.io/interconnectedcloud/qdrouterd:latest,"['Andrea Tarocchi - 2024-10-01T16:09:31+0000 wdyt orpiske ?', 'Otavio Rodolfo Piske - 2024-10-01T16:28:37+0000 Hm, nice catch.\n1+ for the generic container ... Maybe we could use the qrouterdcloud permantently. I am not sure if we still have reasons to use a custom image if we can get the same from a reputable source ...', 'Claus Ibsen - 2024-10-02T11:10:30+0000 I assume we can backport this to 4.8.x branch', ""Otavio Rodolfo Piske - 2024-10-02T12:32:41+0000 Maybe even all the way to 4.4. This hasn't changed much recently."", 'Andrea Tarocchi - 2024-10-03T13:42:24+0000 I think has been fixed by https://github.com/apache/camel/pull/15803\nand backported to 4.8.x with https://github.com/apache/camel/pull/15805\nand to 4.4.x with https://github.com/apache/camel/pull/15807']"
21296,Bug,Unassigned,RAVI,4.5.0,4.8.0,2024-10-01T15:24:48+0000,1727796288,2024-10-04T11:41:03+0000,2024-10-04T11:41:03+0000,"Hi Team,
 
We are conducting a POC using the Camel-AS2 project (version 4.5.0) to facilitate communication with the OpenText tool, with plans to extend this setup for communication with our trading partners in the future.
 
We’ve implemented a Camel-AS2 sender application, which has been configured to send EDI messages to the OpenText AS2 receiver. The OpenText AS2 receiver successfully receives the messages and sends back a signed MDN. However, our Camel-AS2 sender application encounters the following exception during MDN validation.
 
Based on the Camel documentation, it appears that MDN verification on the client side isn’t fully supported by Camel. To address this, we are utilizing the org.apache.camel.component.as2.api.util.SigningUtils.isValid() method, but this is where the exception arises.
 
We’ve identified that the message digest value computed on the MDN by OpenText (included in the Signature object) doesn’t match the one computed by the Camel-AS2 sender application upon receiving the MDN.
 
We suspect this discrepancy may be related to line separator differences in the MDN message. Could you provide further insights or guidance on this issue?
 
Here’s the relevant code snippet we are using to validate after recieving response from Open text:
 
if (exchange.getMessage().getBody() instanceof MultipartSignedEntity)org.bouncycastle.cms.CMSSignerDigestMismatchException: message-digest attribute value does not match calculated value
at org.bouncycastle.cms.SignerInformation.verifyMessageDigestAttribute(SignerInformation.java:550) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.bouncycastle.cms.SignerInformation.doVerify(SignerInformation.java:452) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.bouncycastle.cms.SignerInformation.verify(SignerInformation.java:659) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.bouncycastle.cms.CMSSignedData.verifySignatures(CMSSignedData.java:436) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.bouncycastle.cms.CMSSignedData.verifySignatures(CMSSignedData.java:411) ~[bcpkix-debug-jdk18on-1.77.jar:1.77.00.0]
at org.apache.camel.component.as2.api.util.SigningUtils.isValidSigned(SigningUtils.java:155) ~[classes/:na]
at org.apache.camel.component.as2.api.util.SigningUtils.isValid(SigningUtils.java:191)","['Claus Ibsen - 2024-10-02T04:55:23+0000 Can you try with 4.8.0 release and report back', 'RAVI - 2024-10-03T19:06:26+0000 Thank you, it\'s working with version 4.8.0.\nCould you provide details on the specific changes made in 4.8.0 related to this issue?\nEven we encountered a similar issue with message digest errors when the Camel AS2 receiver application processed and attempted to verify messages from OpenText. After debugging, we identified that in the ""ApplicationEntity"" class, the ""writeTo"" method utilizes the ""CanonicalOutputStream,"" which enforces a CRLF line terminator:\nstatic\n{ newline = new byte[2]; newline[0] = (byte) \'\\r\'; newline[1] = (byte) \'\\n\'; }\nAs a result, CRLF-terminated messages from OpenText are processed correctly, but we face digest calculation errors with LF-terminated messages. After modifying this code to handle both CRLF and LF line endings, the issue was resolved, and the system now works for both types of messages.\nBut I still see standardized code in 4.8.0 as well. Wondered how is it working.']"
21295,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.x,2024-10-01T13:29:20+0000,1727789360,2024-10-03T11:32:00+0000,2024-10-03T11:31:50+0000,"Following the removal of CK CRD dependency, we can now implements knative traits options `knative.filters` and `knative.filter-event-type` in the kubernertes plugin.The expected behavior is decribed here: https://camel.apache.org/camel-k/next/traits/knative.html.Some existing code is already there:https://github.com/apache/camel/blob/d3142c3611d11c95fcc9c3bf8407c7ee0682097b/dsl/camel-jbang/camel-jbang-plugin-kubernetes/src/main/java/org/apache/camel/dsl/jbang/core/commands/kubernetes/traits/knative/KnativeTrait.java#L291-L303",No comments found
21294,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-10-01T09:39:18+0000,1727775558,2024-10-03T08:20:56+0000,2024-10-03T08:20:56+0000,"The run/export is hardcoding the dependency for platform-http when using either runtime Quarkus or Spring Boot. I think we need to let the CLI to include it or not based on the real presence of such a component.I am working to fix this, however I am not sure if by any chance there is a reason why we need to keep it hardcoded and always exported in those runtimes.",No comments found
21293,Bug,Claus Ibsen,Claus Ibsen,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-10-01T09:17:08+0000,1727774228,2024-10-01T09:47:17+0000,2024-10-01T09:47:17+0000,https://camel.zulipchat.com/#narrow/stream/364655-camel-core-dev/topic/Unmarshaller.20does.20not.20close.20the.20stream,"['Claus Ibsen - 2024-10-01T09:17:50+0000 This affects windows users as files for example cannot be renamed/deleted, if you start a route from a file']"
21292,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-30T10:26:34+0000,1727691994,2024-10-01T09:01:51+0000,2024-10-01T09:01:51+0000,"When using 3rd party JARs like pooled-jms, then it should be mapped to quarkus-pooled-jms. So we need to have a mapping file for this, to maintain versions. To have this convenient out of the box.",No comments found
21291,Bug,Jiri Ondrusek,Jiri Ondrusek,4.8.0,"4.8.1,4.9.0",2024-09-30T10:23:54+0000,1727691834,2024-09-30T14:41:38+0000,2024-09-30T14:41:38+0000,"There are 2 bugs in ""smb"" producer.","['Claus Ibsen - 2024-09-30T10:29:21+0000 The WrappedFile is intended for that where there is a common set of headers, such as using CamelFileName for the file name and so on.', 'Jiri Ondrusek - 2024-09-30T10:47:51+0000 AFAIK the Wrapped file will be used by @orpiske in the next bigger fix of camel-smb, this is meant mainly as a fix to be backported into 4.8 (so minimal changes, just to avoid NPE)', 'Jiri Ondrusek - 2024-09-30T10:49:07+0000 And the first issue is like a small bug in implementation, which makes the component fail with default values.']"
21290,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-30T10:17:38+0000,1727691458,2024-09-30T10:19:36+0000,2024-09-30T10:19:36+0000,https://camel.zulipchat.com/#narrow/stream/352237-camel-jbang/topic/Run.20with.20camel-activemq,No comments found
21289,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-30T09:05:15+0000,1727687115,2024-09-30T09:47:14+0000,2024-09-30T09:47:14+0000,If you use custom kamelets from some local-dir then during export they are not copied over to src/main/resources/kamelets folder.Also the pom.xml includes ASF kamelets JARs which would not be needed.,No comments found
21288,Bug,Unassigned,Michal Stepan,4.1.0,4.2.0,2024-09-30T08:09:09+0000,1727683749,2024-10-03T06:46:43+0000,2024-10-03T06:46:43+0000,"Given random data generator function:And two processors - first generates 20 batches and second would generate 20k rows in each batch (tweak as you want):And a route:The processing would fail on OOM when used limited memory setting ( -Xmx512m in my case of macbook m1 pro 16Gb ram).The problem is on the line:Where upon analysis, the expression evaluation stores the content of the body into memory (ok), but keep it referrenced even after leaving the split. This is happening only when the generated data are objects (Random usage in this case) - when using unboxed int values, the problem is not there. Our original case was using sql component, that returned database data (boxed in objects).You can mitigate the problem by using external processor instead of log:or using groovy:In both cases, referrences are cleaned up - not causing OOM.This behavior seems very unexpected.","['Claus Ibsen - 2024-09-30T08:19:30+0000 What camel version do you use, and what runtime (SB / Q etc)', 'Michal Stepan - 2024-09-30T08:27:28+0000 My bad. Camel 4.1.0, Spring Boot 3.1.5, Java 17.', 'Claus Ibsen - 2024-09-30T08:30:16+0000 Its a rather old Camel, can you maybe try with 4.8.0 or attach a ready to run code to this Jira so its quicker for others to try and investigate.', 'Michal Stepan - 2024-09-30T08:32:54+0000 I would give it a try on camel 4.8.0.', 'Claus Ibsen - 2024-10-02T15:32:16+0000 Did you test on 4.8.0 ?', 'Michal Stepan - 2024-10-03T05:36:43+0000 Yes I did. It works correctly on 4.8.0. I also tested it on 4.2.0 and worked too. I guess you can close the ticket. \n  Thanks for your time.', 'Claus Ibsen - 2024-10-03T06:46:43+0000 Thanks for reporting and testing newer versions']"
21287,Bug,Unassigned,Sven,4.8.0,"4.8.1,4.9.0",2024-09-30T07:51:17+0000,1727682677,2024-09-30T09:48:00+0000,2024-09-30T09:48:00+0000,The API calls to azure fileshares using a bearer token (credentialType=AZURE_IDENTITY) requires the header x-ms-file-request-intent to be set. Currently it seems the API only supports the value 'backup'.I'll create a PR.,No comments found
21286,Improvement,Claus Ibsen,Adriano Machado,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-09-27T16:31:46+0000,1727454706,2024-10-02T06:35:22+0000,2024-10-02T06:35:22+0000,Camel is calling `JaxbHelper.getJaxbElementFactoryMethod` and the result is not being cached. This expensive call on apps with schemas deployed on nested jars on Spring Boot apps running on Openshift.,"['Claus Ibsen - 2024-09-27T17:12:11+0000 Can you tell more what exactly you are doing as this is in camel-jaxb that can be used as ""jaxb"" data format, or as some legacy JAXB type converter for XML to POJO classes.\nWhat is it that makes it expensive, and do you only see this on a fat-jar SB on OCP or would it also be ""slow"" running local with mvn spring:boot in developer mode.', ""Adriano Machado - 2024-09-27T19:38:17+0000 davsclaus, the app is using both JAXB data type and conversions from DOM to JAXB POJOs.\nPlease see attached screenshots with an analysis from an APM tool. I'm trying to upload a few screenshots from the APM tool, but Jira is not allowing me (failing with an internal error).\nI couldn't get the same results by running locally, only coming from the APM tool capturing executions from an OCP cluster."", 'Claus Ibsen - 2024-09-30T16:03:14+0000 From the camel source it looks like this classloader is only in use of JAXB classes has not been annotated with JAXB annotations and does not have jaxb.index files.\nAnd this seems to require enabling this mode specially in camel via \nFallbackTypeConverter#setObjectFactory(true) or via a camel global option CamelJaxbObjectFactory\nhttps://github.com/apache/camel/blob/f0b4bb237331c5f9d595286dd0f2097cee8c43f7/components/camel-jaxb/src/main/java/org/apache/camel/converter/jaxb/FallbackTypeConverter.java#L141\n \nCan you check what your example are doing in this regard in Camel Spring Boot. As this seems for a special use-case and we need to understand this better before we can find a good solution.', 'Adriano Machado - 2024-09-30T18:42:51+0000 davsclaus, in this example, classes are annotated with the JAXB annotations, and the file `jaxb.index` is present on the package, as long with the episode file at `META-INF/sun-jaxb.episode`. \nWhat is there to note is that the XML namespace is ""http://www.company.com/schemas/private/1"", which generates classes on the `com.company.schemas._private._1`, but I\'m not sure this could cause any problem with the converters.', 'Adriano Machado - 2024-09-30T19:05:29+0000 Just complementing the previous comment... The packages and all classes are annotated with JAXB annotations, but no class in that package has the `@XmlRootElement` annotation.', 'Claus Ibsen - 2024-10-01T07:38:41+0000 Can you see if CamelJaxbObjectFactory has been set true somewhere, or anything that calls setObjectFactory', 'Adriano Machado - 2024-10-01T12:56:11+0000 Yes, the application is setting `camel.spring.global-options.CamelJaxbObjectFactory=true`.']"
21285,Bug,Pasquale Congiusti,Pasquale Congiusti,4.9.0,4.9.0,2024-09-27T10:41:38+0000,1727433698,2024-09-27T14:14:42+0000,2024-09-27T14:14:42+0000,While working on some strengthening export test to validate the output I bumped into this bug:would produce a wrong export as it correctly set the route into src/main/resources/camel but it wrongly set the application.properties with camel.main.routes-include-pattern=camel/tmp/test.yamlThe result is an application that fails to execute.The same problem happens with Java which are distributed to a different folder and a different application properties configuration.,"['Claus Ibsen - 2024-09-27T11:06:29+0000 It was not intended to export from any arbitrary folder, but to export from current folder. (or what was run previously).\nIts just getting a bit more and more ""messy"" with all these relative / absolute paths.', 'Pasquale Congiusti - 2024-09-27T12:07:14+0000 I see. The problem is that I was developing some test to verify that the exported content has all the expected output. You cannot test without recurring to an ""external"" path from Junit. I will try to see how we can have a simple generic approach without adding more complexity to the actual implementation.', 'Claus Ibsen - 2024-09-27T13:28:00+0000 You are welcome to see if a fix can be made somewhat easy. Its maybe to strip the relative path when files are copied into resource folders. So tmp/foo.yaml becomes foo.yaml', 'Pasquale Congiusti - 2024-09-27T13:47:36+0000 Yeah. We were already altering the content coming from the .camel-jbang property file but without taking in consideration any possible extra path. It should be now fixed with in https://github.com/apache/camel/pull/15743']"
21284,Improvement,Unassigned,Nicolò Scarpa,4.9.0,4.x,2024-09-27T09:34:40+0000,1727429680,2025-01-09T09:19:58+0000,,"The new camel-clickup component relies on the camel-webhook (meta-)component for providing webhook functionality. This is actually the encouraged design for implementing new webhooks capable components, but it's a bit hacky since the specialized component won't be actually used as an endpoint, but it would be rather used as the delegate for the camel-webhook component (i.e. the URI for creating a camel-clickup endpoint is ""webhook:clickup:<workspaceId>"", instead of ""clickup:<workspaceId>"").See if it's possibile to make camel-webhook reusable by other components, so no code duplication is needed to implement webhook functionality.Its fine to have camel-webhook in pom.xml, but make the clickup as a pure component without the ""webhook:xxx"" prefix in its URI.In other words, the goal is to make clickup a first-class component that is like others and also tooling/dsl friendly.",No comments found
21283,Bug,Aurélien Pupier,Aurélien Pupier,4.8.0,4.8.1,2024-09-27T07:04:43+0000,1727420683,2024-09-27T11:36:09+0000,2024-09-27T11:36:09+0000,"using camel-version and a providing a specific Maven repository is no more posible with Camel JBang CLI when camel-version and is 4.7- included.This is due to the renaming of --repos transfomed to --repository without transforming the parameter when the new process for another camel-version is used.It is affecting only Run and export as they are the only commands for which it was renamed, all other commands remained with --repos (which is leading to not coherent naming between commands).This renaming was initially done in an effort to be able to provide parameter using style --repository=xxx --repository=yyy instead of --repos=xxx,yyy but it was already reverted during 4.8 development, so we need to use --repository=xxx,yyy making the singular instead of plural not a good fit anymore.",No comments found
21282,Improvement,Claus Ibsen,Sven,4.8.0,"4.8.1,4.9.0",2024-09-26T16:00:15+0000,1727366415,2024-09-30T12:28:07+0000,2024-09-30T12:26:07+0000,"We are using camel-file to write to an Azure File Share, but this fails sometimes because our routes can create files in nested folders.This works fine for a Windows share but Azure shares apparently don't support creating multiple folders at once.The code shows it only does this iteratively if there are permissions set but the file share doesn't support Posix (we're running in Windows), setting permissions throws an UnsupportedOperationException.From org.apache.camel.component.file.FileOperations:would it be possible to add a parameter to have autoCreate create folders in parts, as is done when a permission is set?","['Claus Ibsen - 2024-09-26T17:20:41+0000 Are you using camel-file or camel-azure-files - just to be sure.', ""Sven - 2024-09-27T07:07:11+0000 Yes currently we're still using camel-file. We plan to move to azure-files for which we detected the other issue that's now fixed"", 'Claus Ibsen - 2024-09-27T08:23:43+0000 Well so are you asking to add some option to camel-file until you migrate to azure-files by which time you dont need the ""hack"" in camel-file anymore ?', ""Sven - 2024-09-27T08:30:53+0000 Well in our case yes because we can't use SMB in Azure on container apps, but this doesn't negate the fact that camel-file using Azure file share SMB is not isofunctional with using other SMB file shares (due to a restriction on Azure Files). MS already indicated they have no intention of resolving this limitation.."", 'Claus Ibsen - 2024-09-30T12:26:07+0000 You can turn on autoCreateStepwise', 'Sven - 2024-09-30T12:28:07+0000 Great, thanks Claus!']"
21281,Task,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-09-26T14:23:05+0000,1727360585,2024-12-05T06:19:26+0000,2024-12-05T06:19:26+0000,No description available,No comments found
21280,Bug,Unassigned,Sven,"4.7.0,4.8.0","4.8.1,4.9.0",2024-09-26T14:19:37+0000,1727360377,2024-09-26T17:29:21+0000,2024-09-26T17:29:21+0000,"In FilesOperations the client builder only handles the SHARED_ACCOUNT_KEY CredentialType, the others are misplaced under that if:Fix should be easy:","['Claus Ibsen - 2024-09-26T14:21:31+0000 Did you try 4.8.0, and if its still a problem you are welcome to send a PR with a fix for main branch', ""Sven - 2024-09-26T14:26:32+0000 Yes the bug is still there. I'll create a PR, thanks.""]"
21279,Improvement,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-26T13:32:48+0000,1727357568,2024-09-27T13:40:13+0000,2024-09-27T13:40:13+0000,There seems to be that camel-kamelets-catalog and camel-kamelets-util JARs are added even if they are not in use due to using custom kamelets.We should trim down.,"['Claus Ibsen - 2024-09-26T16:37:50+0000 TODO: exporting with custom kamelets in same folder, should be moved into kamelets folder. DONE\nTODO: kamelets is created as a file and not dir DONE\nTODO: camel-kamelet is missing in pom.xml DONE\nTODO: remove camel-kamelets-catalog in pom.xml DONE\nTODO: only include camel-kamelets if using any of the ASF kamelets DONE']"
21278,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.11.0,2024-09-26T13:11:43+0000,1727356303,2025-02-13T10:24:57+0000,,This is a follow-up from https://issues.apache.org/jira/browse/CAMEL-21152.Clean-up identified:,"['Claus Ibsen - 2025-02-01T08:20:25+0000 Is there more work to do here', 'Gaelle Fournier - 2025-02-13T10:24:57+0000 The test refactoring part is still needed.']"
21277,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,4.9.0,2024-09-26T12:02:38+0000,1727352158,2024-10-03T17:03:06+0000,2024-10-03T17:03:06+0000,This is a follow up from CAMEL-21264. The SMB component should use be using WrappedFile to avoid leaking implementation details and integrate well with Camel JBang.,['Otavio Rodolfo Piske - 2024-10-03T17:03:06+0000 Resolved with https://github.com/apache/camel/pull/15810']
21276,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-09-26T10:39:58+0000,1727347198,2024-10-11T14:12:04+0000,2024-09-27T16:03:51+0000,This is only about kamelets (not general bootstrap configuration when using SB/Q or camel-main) as that depends on how those runtimes behave.CAMEL_KAMELET_AWS_S3_SOURCE_BUCKETNAMEORARNThe last option is bucketNameOrArn in the kamelet. But for readability we may improve camel-kamelet to support both naming stylesCAMEL_KAMELET_AWS_S3_SOURCE_BUCKET_NAME_OR_ARNCAMEL_KAMELET_AWS_S3_SOURCE_BUCKETNAMEORARN,No comments found
21275,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-26T09:44:33+0000,1727343873,2024-10-02T09:10:26+0000,2024-10-02T09:10:26+0000,No description available,No comments found
21274,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-09-26T08:06:04+0000,1727337964,2024-12-31T13:19:09+0000,2024-12-31T13:19:09+0000,When running unit tests you may want to tell Camel to dump routes to XML or YAML in the log (or files).This should be configurable in test-class / annotation / and also as JVM system property so you can do this via command line.You can configure setDumpRoutes(xml | yaml) on camel context.,No comments found
21273,Improvement,Zheng Feng,Zheng Feng,4.8.0,"4.8.1,4.9.0",2024-09-26T08:03:31+0000,1727337811,2024-09-26T13:22:46+0000,2024-09-26T13:22:46+0000,It could be similar with jta issue CAMEL-21117 and need to detect the saga() dsl,No comments found
21272,Task,Unassigned,Claus Ibsen,None,4.9.0,2024-09-26T07:30:35+0000,1727335835,2024-09-26T14:23:11+0000,2024-09-26T14:22:42+0000,The new camel kubernetes plugin has superceded the older camel-k jbang plugin.This should be moved over to the camel-k project for maintenance or the plugin should be removed.,"[""Pasquale Congiusti - 2024-09-26T08:21:20+0000 Yeah, we've briefly discussed this with cdeppisch and gfournier. We probably better deprecate it and remove in any future version the plugin at all. There's no need to maintain actively it in CK repo as the plugin would duplicate the effort of the existing CLI and is not probably used widespread."", 'Claus Ibsen - 2024-09-26T10:23:36+0000 Okay so lets deprecate this for 4.9 and remove in the near future']"
21271,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-26T05:31:34+0000,1727328694,2024-09-26T07:32:33+0000,2024-09-26T07:32:33+0000,"jbang  export does not work for properties configured as custom.number=env:CUSTOM_NUMBER:12345 and injected as
    @PropertyInject(""custom.number"")
    private Integer number;
Error:
Caused by: org.apache.camel.TypeConversionException: Error during type conversion from type: java.lang.String to the required type: java.lang.Integer with value @@CamelMagicValue@@ due to java.lang.NumberFormatException: For input string: ""@@CamelMagicValue@@""",No comments found
21270,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,4.8.0,2024-09-25T19:57:46+0000,1727294266,2025-01-09T10:28:55+0000,2025-01-09T10:28:55+0000,"We have a few tests creating lots of files in the $TMP directory of the build host during tests. This can cause instability for nodes that are not transient. Temporary files should be created, ideally, in the target directory ... so that they are cleaned by Jenkins (or by mvn clean).",['Otavio Rodolfo Piske - 2025-01-09T10:28:55+0000 This was fixed with the linked PR.']
21269,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-09-25T19:32:33+0000,1727292753,2024-10-01T12:26:22+0000,2024-10-01T12:25:49+0000,"byCharacter, byLine, byWord, bySentence, byParagraph are not part of the Camel catalog for langchain4j tokenizer
https://github.com/apache/camel/blob/bd427fb7b288011aafafce88076e7792168f8da7/catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/models/langChain4j.json#L15There is an incomplete definition of the tokenizer DSL that prevents it from being used in YAML.",['Otavio Rodolfo Piske - 2024-10-01T12:25:49+0000 Resolved with the linked PRs (backported with https://github.com/apache/camel/pull/15788)']
21268,Improvement,Unassigned,Kurt Schoovaerts,None,None,2024-09-25T16:31:59+0000,1727281919,2024-10-16T10:04:08+0000,,"The Camel JMS transfers the message headers from sender to receiver. This enables for example end-to-end use of the same breadcrumbId across all routes processing data in the integration environment.Proposal is to align functioning of the Camel Google PubSub component with the functioning of the Camel JMS component in passing the message headers as attributes on the Google PubSub message when publishing a message. Likewise, on receipt of a message by a subscriber, copy all pubsub message attributes to camel message headers.",['Claus Ibsen - 2024-10-16T10:04:08+0000 that breadcrumb is a camel only feature - today you can use opentelemetry etc.']
21267,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-25T14:39:38+0000,1727275178,2024-09-26T05:07:54+0000,2024-09-26T05:07:54+0000,"Since we are now creating unique/indexed export directories for k8s run, the existing k8s delete command may not see those export dirs.This did not show in tests because of a stale .jbang-camel-run dir",No comments found
21266,Task,Claus Ibsen,Otavio Rodolfo Piske,None,4.10.0,2024-09-25T13:53:50+0000,1727272430,2024-12-19T08:50:05+0000,2024-12-19T08:50:05+0000,"We are creating the SmbClient in the SmbConsumer constructor, whereas our pattern is to create them in the doStart. Although this has the (pretty bad) downside of causing it to not be final anymore, it may be better to follow the existing convention. This could avoid problems for tooling and others that rely on this pattern.",No comments found
21265,New Feature,Andrea Cosentino,Federico Mariani,None,4.9.0,2024-09-25T13:26:56+0000,1727270816,2024-10-17T13:25:16+0000,2024-10-17T13:25:12+0000,"As a user, I would like to use vaults and easily resolve properties as I do in Camel routes, but during Spring startup, setting a property like spring.datasource.password=aws:... should be possible.This is the list of the components that may benefit from it:Something similar was done for the camel-jasypt-starter component https://github.com/apache/camel-spring-boot/commit/18116fc727d747b3ecd63586f64d21b452deb03c#diff-ca96b9726dc6672f349a50ca707d332d93aa716def7a553948b4622a9912ae57R21So far it was done for Camel Spring Boot only, but it would be nice to investigate if something similar can be done for Camel Quarkus.","[""Andrea Cosentino - 2024-10-09T14:34:00+0000 Thanks Federico Mariani for the Hashicorp part.\nI'm going to do the same for AWS, GCP and Azure\nHashicorp - done\nAWS - done\nGCP - done\nAzure Key Vault - Done"", 'Andrea Cosentino - 2024-10-16T16:27:11+0000 We need to add a section about early resolving properties in the Spring Boot section of the components doc.']"
21264,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-09-25T11:41:52+0000,1727264512,2024-10-02T17:52:06+0000,2024-09-26T12:04:35+0000,The component leaks implementation details by letting users handle smbj file types. Our code already provides a good way to avoid that and we should use it.Ideally we should be using WrappedFile to avoid this problem (and integrate well with Camel JBang),"['Claus Ibsen - 2024-09-25T13:21:49+0000 Also in SmbConsumer in Camel we should move the logic that creates SMBClient from constructor to doStart where it better belongs', 'Otavio Rodolfo Piske - 2024-09-25T13:54:37+0000 davsclaus I created https://issues.apache.org/jira/browse/CAMEL-21266 for that. It has a pretty bad downside of requiring the SmbClient to not be final anymore, but it may be safer to follow the existing convention.', 'Otavio Rodolfo Piske - 2024-09-26T12:04:35+0000 The issue was resolved with https://github.com/apache/camel/pull/15700']"
21263,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-09-25T11:40:54+0000,1727264454,2024-09-26T12:05:23+0000,2024-09-26T12:05:23+0000,The consumer is recreating the connection for every poll. This causes problems because  consumers cannot read the files after the connection has been closed.,['Otavio Rodolfo Piske - 2024-09-26T12:05:23+0000 The issue was resolved with the linked PRs.']
21262,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-25T10:29:58+0000,1727260198,2024-10-09T14:26:01+0000,2024-10-09T14:26:01+0000,No description available,No comments found
21261,Improvement,John Poth,John Poth,"4.4.3,4.8.0","4.4.4,4.8.1,4.9.0",2024-09-25T10:02:50+0000,1727258570,2024-09-25T13:47:16+0000,2024-09-25T13:47:16+0000,The OpenTelemetryTracer should use it's own ContextPropagators and not rely on the global ones,No comments found
21260,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-09-25T08:38:38+0000,1727253518,2024-09-25T09:35:04+0000,2024-09-25T09:34:52+0000,CXF behaves differently in async (default) vs sync mode. And it may be desirable to configure sync=true globally for all of CXF WS / RS,No comments found
21259,Improvement,Pasquale Congiusti,Pasquale Congiusti,4.x,4.9.0,2024-09-25T08:13:24+0000,1727252004,2024-10-11T07:22:01+0000,2024-10-11T07:22:01+0000,"As in $summary. We should have a similar experience like the one offered for Camel Quarkus, having the prototype with Dockerfile also for the other runtimes.","['Claus Ibsen - 2024-09-25T13:48:55+0000 It was not originally intended, as exporting to SB or Q was intended to be the same as when you use their tools like start.spring.io or code.quarkus.io. And only quarkus has an opninionated docker file out of the box.', 'Pasquale Congiusti - 2024-09-25T14:05:13+0000 Thanks, I did not know about that. I find it useful to have a precompiled Dockerfile as I can immediately run on Docker and have the application containerized. I am working to have the very same development as it happens with Quarkus: do you think it does make sense to proceed?', 'Claus Ibsen - 2024-09-25T14:22:37+0000 Yes it does, its something I also think SB lacks. \ncamel-main is not as high priority as most will be using either SB or Q.', 'Claus Ibsen - 2024-10-10T15:56:52+0000 Is all of this done or is there more work ?', 'Pasquale Congiusti - 2024-10-11T07:22:01+0000 Sorry, I forgot to close.']"
21258,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-25T05:10:47+0000,1727241047,2024-09-25T13:50:29+0000,2024-09-25T13:50:29+0000,Related to CAMEL-21255We should make it easier to have custom logic in before/after Executor methods in thread pools that is needed by opentelemtry and other libraries that needs to do instrumentation on tasks executed that are thread bound.,No comments found
21257,Improvement,Claus Ibsen,Chris Slater,4.8.0,4.10.0,2024-09-24T20:17:19+0000,1727209039,2025-02-02T08:09:20+0000,2025-02-02T08:09:20+0000,"In the GitHub consumer documentation, https://camel.apache.org/components/4.8.x/github-component.html#_consumer_endpoints, the body type for the commit endpoint is listed as a org.eclipse.egit.github.core.RepositoryCommit.  However, it is not.  It is a String with the commit message.I'm not sure if this is a problem with the documentation or the code.  Changing the body to a RepositoryCommit would be consistent with the other consumers.  For example, the tag consumer does provide a body type of RepositoryTag.  Additionally, more information would be available from a RepositoryCommit object compared to the commit message and a few headers with some of the other information.","['Chris Slater - 2024-09-24T20:20:51+0000 Perhaps a new parameter can be created to specify that a RepositoryCommit object should be used as the body and maintain backwards compatibility.', 'Claus Ibsen - 2024-09-25T13:56:25+0000 Yeah however it seems CAMEL-15998 changed it to that message. I guess it was easier for prototyping / logging. However the actual RepositoryCommit is better as you may need to know what files was in the commit and so on.\nSo I think the consumer should be changed to store the RepositoryCommit and we can do that from 4.9 onwards. And just add a note in the upgrade guide.']"
21256,Bug,Unassigned,Chris Slater,4.8.0,"4.8.1,4.9.0",2024-09-24T18:17:02+0000,1727201822,2024-09-26T14:34:47+0000,2024-09-26T14:34:47+0000,I encountered an issue using startingSha=last with a repository with a large history.  The last sha is not correctly resolved.   CAMEL-17473 did not resolve this issue.  I am putting together a pull request with a possible solution.The following issues were discovered from real-world testing and a unit test:,"['Chris Slater - 2024-09-24T18:47:41+0000 Pull Request:  https://github.com/apache/camel/pull/15678', 'Claus Ibsen - 2024-09-26T14:34:47+0000 Thanks for reporting and the PR']"
21255,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-09-24T07:23:05+0000,1727162585,2024-09-25T11:40:45+0000,2024-09-25T11:40:45+0000,This is needed to allow to trap when a ThreadFactory is created to be able to control some custom behavior needed by camel-opentelemetry.,No comments found
21254,Improvement,Andrea Cosentino,Andrea Cosentino,None,None,2024-09-24T07:15:21+0000,1727162121,2024-11-25T07:58:25+0000,,"https://camel.zulipchat.com/#narrow/stream/257301-camel-spring-boot/topic/camel.20google-biqqueryThe use case is particular, the user needs to move stuff from one GCP project to another one, in Kubernetes environment.",No comments found
21253,Improvement,Andrea Cosentino,Andrea Cosentino,4.8.0,"4.8.1,4.9.0",2024-09-23T19:32:50+0000,1727119970,2024-09-26T17:40:36+0000,2024-09-24T13:45:11+0000,"KCL Consumers, make the ConfigsBuilder for metrics of the Scheduler enable/disable",No comments found
21252,Task,Thomas Cunningham,Thomas Cunningham,4.8.0,"4.8.1,4.9.0",2024-09-23T17:54:15+0000,1727114055,2024-10-11T14:04:06+0000,2024-10-11T14:04:06+0000,sync-properties-maven-plugin only synchronizes properties that fit the patternwhich means that properties likehttps://github.com/apache/camel/blob/main/parent/pom.xml#L504C9-L504C45are allowed but do not get synced to camel-dependencies.     I'd like to add a check for properties not meeting that pattern and fix the zeebe.version-> zeebe-version so that it gets generated in camel-dependencies.,"['Claus Ibsen - 2024-09-24T04:59:12+0000 We use dash in the Camel naming style so it should be zeebe-version', 'Claus Ibsen - 2024-10-10T15:57:28+0000 Did this get backported as we will do patch releases next week', 'Thomas Cunningham - 2024-10-10T19:37:45+0000 Whoops!    Submitted a PR for the backport :\nhttps://github.com/apache/camel/pull/15916']"
21251,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-23T15:57:11+0000,1727107031,2024-09-25T09:50:36+0000,2024-09-25T09:50:36+0000,https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-reads.html,No comments found
21250,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-09-23T13:35:08+0000,1727098508,2025-01-02T13:27:09+0000,2025-01-02T13:27:09+0000,"When using camel-report:route-coverage and you have many routes in XML files without route ids, then they are not correlated in coverage data. Maybe we can find a wat to make this possible for anonymous routes.",No comments found
21249,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-23T09:01:27+0000,1727082087,2024-10-11T12:44:51+0000,2024-10-10T19:46:21+0000,No description available,['Andrea Cosentino - 2024-10-11T12:44:51+0000 Removed also the stuff on Kamelets side and all seems to work.']
21248,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-23T08:29:41+0000,1727080181,2024-09-23T16:11:28+0000,2024-09-23T16:11:28+0000,https://docs.aws.amazon.com/AmazonS3/latest/userguide/conditional-writes.html,No comments found
21247,Improvement,Unassigned,Claus Ibsen,None,4.9.0,2024-09-21T08:09:42+0000,1726906182,2025-01-21T07:42:48+0000,2024-09-22T06:39:56+0000,"In CamelThreadFactory then we use new Thread... code.However to prepare for JDK21 virtual threads, we should create it via Thread.platformOf vs Virtual Threads. (require JDK21 runtime)","['Claus Ibsen - 2024-09-21T08:11:05+0000 Mind that this may be JDK21 only and we use 17 as base-line, so this may be not so easy.', 'Nicolas Filotto - 2024-09-21T11:30:38+0000 Do you mean this https://github.com/apache/camel/blob/main/core/camel-util/src/main/java21/org/apache/camel/util/concurrent/CamelThreadFactory.java#L76? Which is only enabled when we use Java 21+ at runtime with the system property camel.threads.virtual.enabled set to true', 'Claus Ibsen - 2024-09-22T06:37:56+0000 Ah yeah that seems its already there. And just to be sure, this class will only be in the JAR if the project is built with a JDK21 compiler. And the Camel releases are now done with that.', 'Nicolas Filotto - 2024-09-22T06:50:50+0000 Yes, exactly, that is why the release needs to be done with a JDK 21. You will end up with multi-releases jars, the class corresponding to the version of the JDK used at runtime will then be loaded.']"
21246,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-09-20T15:18:55+0000,1726845535,2024-09-21T06:44:38+0000,2024-09-21T06:44:38+0000,"Enabling viacamel.main.devConsoleEnabled = true
camel.server.devConsoleEnabled = trueShould add dependencycamel-consolecamel-management",No comments found
21245,Bug,Unassigned,Aurélien Pupier,None,None,2024-09-20T09:22:21+0000,1726824141,2024-09-25T19:32:33+0000,2024-09-25T13:58:24+0000,"byCharacter, byLine, byWord, bySentence, byParagraph are not part of the Camel catalog for langchain4j tokenizer
https://github.com/apache/camel/blob/bd427fb7b288011aafafce88076e7792168f8da7/catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/models/langChain4j.json#L15Or they are missing because the Yaml language is not supporting to specify them?","['Ricardo Martinez - 2024-09-20T12:49:48+0000 For inspiration, I think this parameters could behave like the languages from the `setHeader` EIP or the data formats from `marshal` EIP\n        - setHeader:\n            id: setHeader-2549\n            expression:\n              simple:\n                expression: A freedom expression\n            name: X-hey-there\nPerhaps something like this:\n        - langChain4j:\n            id: langChain4j-1917\n            tokenizerType: OPEN_AI\n            maxTokens: 100\n            maxOverlap: 1\n            paragraph: {}', ""Andrea Cosentino - 2024-09-20T12:54:19+0000 Essentially there is no model for the different tokenizers implementation, so there couldn't be any YAML generated code. The only model is for the Langchain4jTokenizer itself."", 'Claus Ibsen - 2024-09-25T13:59:28+0000 Those langchain stuff can be made more tooling friendly but that should be another Jira ticket']"
21244,New Feature,Andrea Cosentino,Nicolò Scarpa,None,4.9.0,2024-09-19T12:18:09+0000,1726748289,2024-09-26T09:40:52+0000,2024-09-26T09:40:51+0000,A new Camel component to receive events from webhooks by adopting the camel-webhook meta-component.ClickUp developer guide for webhooks: https://clickup.com/api/developer-portal/webhooks/The component may be further extended to support read/write to ClickUp REST APIs.,No comments found
21243,Bug,Thomas Cunningham,Thomas Cunningham,4.8.0,"4.8.1,4.9.0",2024-09-19T11:56:00+0000,1726746960,2024-09-20T17:55:18+0000,2024-09-20T17:55:18+0000,"I get the following error trying to build camel-braintree-starterIt looks like org.osgi:org.osgi.core:8.0.0 does not exist - the last version was 6.0.0, and then it was renamed to org.osgi:osgi.core - https://mvnrepository.com/artifact/org.osgi/osgi.corecom.braintreepayments.gateway:braintree-java:3.35.0 uses org.osgi:org.osgi.core:4.2.0 https://repo1.maven.org/maven2/com/braintreepayments/gateway/braintree-java/3.35.0/braintree-java-3.35.0.pom but my guess is something wrong with the manifest settings?    I'd like to add a dependencyManagement entry to force use of org.osgi:org.osgi.core:4.2.0 so that camel-braintree-starter compiles.",['Claus Ibsen - 2024-09-19T18:02:56+0000 Can you backport this to 4.8.x branch']
21242,New Feature,Marco Carletti,Marco Carletti,None,"4.8.1,4.9.0",2024-09-19T08:27:05+0000,1726734425,2024-10-09T09:38:30+0000,2024-10-09T09:38:30+0000,"In order to monitor Camel on Spring Boot applications it would be useful to have a configurable starter that make the configuration easy and to allow a Jolokia agentless solution, based on existing  Support for Jolokia in Spring Boot
This library already exposes (optionally) the Jolokia endpoint using Spring Boot Actuator, but it would be more configurable having a separated endpoint dedicated to Jolokia, completely separated from actuator and running on separated thread(s) according to Jolokia server specifications.
Moreover it prepares a basic setup on Kubernetes platform",No comments found
21241,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-19T05:19:11+0000,1726723151,2024-09-19T14:23:53+0000,2024-09-19T14:23:53+0000,"When you use property placeholders with ENV, or other functions then you would like to know the actual value, and be able to show that in dev console. We should capture this details.",['Claus Ibsen - 2024-09-19T10:24:55+0000 TODO: properties component DONE\nTODO: dev console DONE\nTODO: jbang command DONE\nTODO: nested values vs original value DONE\nTODO: properties function as source so you know that the value is from configmap / security vault etc. DONE']
21240,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-19T05:13:07+0000,1726722787,2024-09-19T05:14:24+0000,2024-09-19T05:14:24+0000,No description available,No comments found
21239,Bug,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-09-18T13:30:46+0000,1726666246,2024-09-23T07:27:05+0000,2024-09-18T13:39:47+0000,"Caused by: java.lang.NullPointerException: Cannot invoke ""org.w3c.dom.Node.getNodeValue()"" because the return value of ""org.w3c.dom.NamedNodeMap.getNamedItem(String)"" is null
    at org.apache.camel.parser.helper.RouteCoverageHelper.parseDumpRouteCoverageByRouteId (RouteCoverageHelper.java:70)
    at org.apache.camel.maven.RouteCoverageMojo.grabDumpData (RouteCoverageMojo.java:263)
    at org.apache.camel.maven.RouteCoverageMojo.execute (RouteCoverageMojo.java:228)
    at org.apache.maven.plugin.DefaultBuildPluginManager.executeMojo (DefaultBuildPluginManager.java:126)","['Matthew Robson - 2024-09-18T14:04:31+0000 davsclaus I am not sure this fix [1] is the root cause of the regression.\n[1] https://github.com/apache/camel/commit/e8c8cdbfa811762785d872a9fd7977afadb0e267\nCamel 4.0.x works with camel-report-maven-plugin 4.4.3... but camel 4.4.x does not... so something else changed in core... I see the doc text calls out:\nIMPORTANT: Routes that can be route coveraged **MUST** have a unique id assigned, in other words you cannot use anonymous routes.\nBut this was not actually the case. It was working with anonymous routes.\nBut this was not actually the case. It was previously working with anonymous routes.\nStarting with 4.3.x, I can see:\n[WARNING] No route coverage data found for route: hello-1. Make sure to enable route coverage in your unit tests and assign unique route ids to your routes. Also remember to run unit tests first.\n[WARNING] No route coverage data found for route: hello-2. Make sure to enable route coverage in your unit tests and assign unique route ids to your routes. Also remember to run unit tests first.', 'Claus Ibsen - 2024-09-18T14:09:11+0000 Yes you must have IDs now', 'Matthew Robson - 2024-09-19T18:18:08+0000 davsclaus Built a 4.4.4 snapshot locally to test. The NPE is fixed, but there is still a regression in behaviour.\nRoute coverage only detects the initial from with the id on the route... None of the subsequent steps are verified.\n[INFO] --- camel-report:4.4.4-SNAPSHOT:route-coverage (route-coverage) @ mustunderstand_reproducer ---\n[INFO] Discovered 3 routes\n[INFO] Route coverage summary:\n\nFile: camel/camel-context.xml\nRoute: hcp.directory.v2.route.main\n\n  Line #       Count    Route\n  ------       -----    -----\n       7           1    from\n       8           0      log\n      10           0      setProperty\n      13           0      setBody\n      18           0      to\n      21           0      to\n      23           0      log\n      24           0      log\n\nCoverage: 1 out of 8 (12.5% / threshold 100.0%)\nStatus: Failed\nFrom the reproducer:\n    <route id=""hcp.directory.v2.route.main"">\n        <from uri=""cxf:bean:hcp.directory.v2.proxy?headerFilterStrategy=#cxfHeaderFilterStrategy""/>\n        <log message=""${routeId} ${body}""/>\n\n        <setProperty name=""originalBody"">\n            <simple>${body}</simple>\n        </setProperty>\n        <setBody>\n            <simple>null</simple>\n        </setBody>\n\n        <!-- call the second web service -->\n        <to uri=""direct:rm.mail.invoker""/>\n\n        <!-- call the third web service -->\n        <to uri=""direct:rm.fax.invoker""/>\n\n        <log message=""Final step""/>\n        <log message=""${routeId} ${body}""/>\n    </route>\nYou would now need to add id:\'s to every single step as well. This was not needed or was handled transparently previously.', 'Claus Ibsen - 2024-09-23T07:26:49+0000 Okay I have fixed so all the data is now in the report\n  [INFO] --- camel-report:4.9.0-SNAPSHOT:route-coverage (default-cli) @ camel-example-spring-boot ---\n[INFO] Discovered 1 routes\n[INFO] Route coverage summary:Class:    sample.camel.MyCamelRouter\nRoute:    hello  Line #       Count    Route\n  ------       -----    -----\n      38           1    from\n      40           1      bean\n      42           1      to\nCoverage: 3 out of 3 (100.0% / threshold 100.0%)\nStatus: Success\n[INFO]\n[INFO] Overall coverage summary:Coverage: 3 out of 3 (100.0% / threshold 0.0%)\nStatus: Success']"
21238,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-18T11:21:14+0000,1726658474,2024-09-26T05:06:32+0000,2024-09-25T12:01:08+0000,When running a project with `--dev` like this ...I see ...without image re-build/deploy,"['Claus Ibsen - 2024-09-18T11:31:24+0000 Okay so reloading locally is to let quarkus trigger reloading in the same JVM where source files are updated and its out of the box in quarkus.\nReloading in k8s can be\nsame as local, need to sync source code from camel-jbang user to running k8s container in the right folder.\ndo a container rebuild and restart the container\nAnd we can argue whether reload (dev mode) in k8s run should be supported or not.', ""Thomas Diesler - 2024-09-19T11:21:23+0000 I'd say there is little benefit in k8s reload. AFAICS, it would do the same as stopping/deleting the current container (ctrl+c) followed by k8s run.\nCan we remove the reload functionality from KubernetesRun?"", 'Claus Ibsen - 2024-09-19T11:38:00+0000 christophd did most of this command - so it may be good to get his perspective', 'Christoph Deppisch - 2024-09-19T11:55:59+0000 When a source file changes it will rerun the project export, rebuild the container image and redeploy the application to Kubernetes. In your case the file changes should have been triggered the export. If it is not this is a bug. When you are running on MacOS the file change listener is known to be less performant and more unreliable compared to running on other operating systems.\nThe rationale behind this is the same as local --dev mode. You do not need to manually stop and remove the deployment and you do not manually have to call the Camel JBang commands to re-export. It saves you some commands. Also, doing the re-export and doing a full redeploy has been the first simple approach. We could think of uploading the changed files to the running container and skip the re-export and re-deployment which also would be much faster. This needs to be explored and refined though.\nDo you folks really think that there is no benefit from --dev mode when connected to Kubernetes?', 'Claus Ibsen - 2024-09-19T12:03:51+0000 Thanks.\nYes I see benefit - its similar to Camel K, for folks that wants to quickly run directly inside k8s via the CLI and be able to edit a few files locally.\nThe other mode can be explored later (create a Jira ticket for that).', ""Thomas Diesler - 2024-09-19T12:11:33+0000 I fixed a few issues with re-export that prevented re-deploy. Now, re-deploy starts, but there is an issue with the shutdown hook and re-capturing the output of the new k8s process. Currently (as you say), there is no in-container hot swap of camel resources in a running container (as we had in camel-k) and given all complexities and even the questionable idea of swapping stuff in an otherwise immutable container, I'd prefer the cleaner route of re-export + re-deploy.\nFrom the usage perspective, it is ...\nctrl+c\ncamel k8s run ...\nstopping the container already removes the k8s resources (because --dev cleanup)\ncamel k8s run, is the re-export + re-deploy\nyes, I really think that there is little benefit and lots of potential headache with hot swapping resources (i.e. what if I want to change two files)"", 'Thomas Diesler - 2024-09-23T08:32:27+0000 Most modern IDEs (e.g. IntelliJ, Eclipse) autosave modified source files. How would the --dev mode work when there are multiple edits?\nWould it not be better to let the user trigger the (potentially lengthy) image build/deploy cycle for k8s.', 'Thomas Diesler - 2024-09-24T12:20:51+0000 PR: https://github.com/apache/camel/pull/15672\nThe suggested change takes a fresh look at k8s run --dev, it detail ...\nexport directory is different for each reload\navoid duplicate labels (due to reexport)\npod logging is more lenient and patiently waits for the reloaded pod (as for the original)\nfile watching a setup anew for each reload', 'Thomas Diesler - 2024-09-25T12:01:08+0000 Done', 'Claus Ibsen - 2024-09-25T12:02:54+0000 Hi @tdiesler your PR actually caused other tests to fail, as it seems like the export append -000 inside .camel-jbang-run folder or some number to the name, so for example kubernetes delete test cannot find the project - because it does not know about the -000 stuff.\nCan you help fix these tests', 'Claus Ibsen - 2024-09-25T12:03:13+0000 See for example \nKubernetesDeleteTest']"
21237,Improvement,Claus Ibsen,Calle Andersson,None,4.9.0,2024-09-18T05:46:16+0000,1726638376,2024-09-18T10:58:18+0000,2024-09-18T10:58:18+0000,Rest DSL should allow the usage of Endpoint DSL in 'to'. E.g:,No comments found
21236,Task,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-17T12:29:42+0000,1726576182,2024-09-26T05:06:12+0000,2024-09-18T11:10:14+0000,The quarkus default seems to push by default when `-Dquarkus.container-image.push` is not set. For a local closter (e.g. DockerDesktop K8s) this would not be necessary.The default setting for `camel k8s run` is not to push - this should be passed on to quarkus properties,"['Claus Ibsen - 2024-09-18T10:59:00+0000 Thanks I assume this ticket is done now', 'Thomas Diesler - 2024-09-18T11:10:14+0000 Done']"
21235,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-17T12:14:16+0000,1726575256,2024-09-26T14:36:36+0000,2024-09-26T14:36:36+0000,No description available,"['Claus Ibsen - 2024-09-18T10:59:29+0000 Thanks for helping with the run k8s commands', 'Thomas Diesler - 2024-09-26T12:08:55+0000 Related in Quarkus: KubernetesDeployer may report incorrect target namespace\nhttps://github.com/quarkusio/quarkus/issues/43527']"
21234,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-17T11:56:44+0000,1726574204,2024-09-18T07:13:40+0000,2024-09-18T07:13:40+0000,https://camel.zulipchat.com/#narrow/stream/257298-camel/topic/Log.20messages/near/470945409,['Claus Ibsen - 2024-09-18T07:13:37+0000 I had to add ${logExchange} as the new function so it did not clash with exchange as it would make it more complicated to let ${exchange} be Exchange vs String log text.']
21233,Task,Unassigned,Otavio Rodolfo Piske,None,None,2024-09-17T09:28:41+0000,1726565321,2024-09-17T09:31:42+0000,2024-09-17T09:31:29+0000,We had to rollback the upgrade as it seems to break camel-http.,['Otavio Rodolfo Piske - 2024-09-17T09:31:42+0000 See CAMEL-21232']
21232,Dependency upgrade,Andrea Cosentino,Claus Ibsen,None,4.9.0,2024-09-17T08:52:56+0000,1726563176,2024-09-25T13:47:54+0000,2024-09-25T13:47:54+0000,"The 5.3 release causes some test failures. We would need to investigate why and if something needs to be changed in camel-http, or its some new bugs in http 5.3.","['Peter Palaga - 2024-09-24T07:49:15+0000 There are new releases client 5.4 and core 5.3', ""Andrea Cosentino - 2024-09-25T08:33:28+0000 We merged this https://github.com/apache/camel/pull/15634 with 5.4, from Github Actions everything seems fine, let's see on ASF CI."", 'Andrea Cosentino - 2024-09-25T09:06:25+0000 Failing, we had to revert.', 'Claus Ibsen - 2024-09-25T13:47:54+0000 Jono has fixed and upgraded']"
21231,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.1,4.9.0",2024-09-17T08:36:30+0000,1726562190,2024-09-30T07:07:17+0000,2024-09-30T07:07:17+0000,camel-jq uses this libraryhttps://github.com/eiiches/jackson-jqAnd its not so active maintained. And last release is a -preview release and it would be good to get it active and do a 1.0 ga release.If it stays inactive we may consider deprecating this in Camel.,"['Claus Ibsen - 2024-09-17T08:49:48+0000 Added comments to\nhttps://github.com/eiiches/jackson-jq/issues/328', 'Claus Ibsen - 2024-09-18T13:16:12+0000 The maintainer would like to release current as a 1.0 - so lets give him time to do that', 'Claus Ibsen - 2024-09-30T07:05:25+0000 1.0.0 has been released, so we are upgrading in older releases']"
21230,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.4.4,2024-09-17T07:46:45+0000,1726559205,2024-09-24T05:16:12+0000,2024-09-24T05:16:12+0000,No description available,['Claus Ibsen - 2024-09-23T15:12:02+0000 Upgrade to Jetty 12.0.13 may need some other fix\nThose are fixed via CAMEL-20830']
21229,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,"4.8.1,4.9.0",2024-09-17T07:46:05+0000,1726559165,2024-09-20T05:02:48+0000,2024-09-20T05:02:48+0000,To be released later this week,No comments found
21228,Bug,Unassigned,Andrias Sundskarð,4.8.0,None,2024-09-16T14:11:27+0000,1726495887,2024-09-16T15:00:04+0000,2024-09-16T15:00:04+0000,"I have created a demo project on github showing my issue: https://github.com/minteo-as/camel-missing-routes-bugWhen I set Camel version to 4.6.0 in gradle/libs.versions.toml all routes are starting. However in 4.8.0 only some routes are starting.
Please see README.md for details.Am I doing something wrong? The idea of having an abstract class for global exception handling has been taken directly from the documentation.","['Claus Ibsen - 2024-09-16T14:22:10+0000 When using spring boot then you should have `@Component` annotation on all your java route classes for Camel to detect them via SB.', 'Andrias Sundskarð - 2024-09-16T14:24:14+0000 Including the abstract MainRoutes?', 'Claus Ibsen - 2024-09-16T14:28:16+0000 No not abstracts.\n  Oh its because camel is inlined rest-dsl routes so you have less routes started. See the upgrade guides where you can find more details about it, and how to turn it off if you really do not want inlining.', 'Andrias Sundskarð - 2024-09-16T14:32:43+0000 Disabling inlining gives me the following:\n2024-09-16T14:30:52.846Z  INFO 2477 --- [           main] o.a.c.impl.engine.AbstractCamelContext   : Routes startup (total:3 rest-dsl:2)\n2024-09-16T14:30:52.846Z  INFO 2477 --- [           main] o.a.c.impl.engine.AbstractCamelContext   :     Started route2 (direct://authenticate)\n2024-09-16T14:30:52.846Z  INFO 2477 --- [           main] o.a.c.impl.engine.AbstractCamelContext   :     Started data (rest://post:/data/graphql:/)\n2024-09-16T14:30:52.846Z  INFO 2477 --- [           main] o.a.c.impl.engine.AbstractCamelContext   :     Started route1 (rest-api://v3/api-docs) \nThe direct:data route is still missing.', 'Claus Ibsen - 2024-09-16T14:57:00+0000 Something weird on your side this is what I see\ncamel:\n  rest:\n    inline-routes: false \n2024-09-16T14:55:33.329Z  INFO 1802 --- [           main] o.a.c.impl.engine.AbstractCamelContext   : Routes startup (total:4 rest-dsl:2)\n2024-09-16T14:55:33.329Z  INFO 1802 --- [           main] o.a.c.impl.engine.AbstractCamelContext   :     Started route2 (direct://authenticate)\n2024-09-16T14:55:33.329Z  INFO 1802 --- [           main] o.a.c.impl.engine.AbstractCamelContext   :     Started route3 (direct://data)\n2024-09-16T14:55:33.329Z  INFO 1802 --- [           main] o.a.c.impl.engine.AbstractCamelContext   :     Started data (rest://post:/data/graphql:/)\n2024-09-16T14:55:33.329Z  INFO 1802 --- [           main] o.a.c.impl.engine.AbstractCamelContext   :     Started route1 (rest-api://v3/api-docs)', 'Andrias Sundskarð - 2024-09-16T14:59:58+0000 Aha! Sorry - my bad! I did not see the application.yml parameter. Thanks!']"
21227,Bug,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-09-16T11:02:02+0000,1726484522,2024-09-26T05:05:59+0000,2024-09-18T04:37:14+0000,`camel k8s run --output=json` ignores output format and prints yaml instead,No comments found
21226,New Feature,Federico Mariani,Federico Mariani,4.8.0,4.9.0,2024-09-16T09:30:57+0000,1726479057,2024-09-16T09:34:32+0000,2024-09-16T09:34:32+0000,"Currently, the camel-jasypt-starter can successfully encrypt/decrypt properties inside or outside the camel context, as seen in the documentation examplesBut.. when I try to use it as a source for other SpringBoot properties, it does not decrypt.For example, I have this plain property for SSL certs on the server, the example runsserver.ssl.key-store-password=temporalBut using the encrypted value, the example fails with a ""Caused by: java.io.IOException: Keystore was tampered with, or password was incorrect""
exceptionserver.ssl.key-store-password=ENC(9Orox+Cq+.../dF/3h4fb)We can hook into Spring Boot lifecycle, and decrypt properties earlier into the life cycle, before Spring Boot context initialization.",['Federico Mariani - 2024-09-16T09:31:36+0000 https://github.com/apache/camel-spring-boot/pull/1219']
21225,Dependency upgrade,Claus Ibsen,Claus Ibsen,3.22.2,3.22.3,2024-09-16T07:56:07+0000,1726473367,2024-09-16T10:55:13+0000,2024-09-16T10:55:13+0000,No description available,No comments found
21224,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-16T07:11:29+0000,1726470689,2024-09-16T07:22:24+0000,2024-09-16T07:22:24+0000,"Instead of having total with two digits, for combined/remote then lets use a boolean option to show remote only. And let is show total as before (by default)",No comments found
21223,Improvement,Claus Ibsen,Claus Ibsen,None,"4.8.3,4.10.0",2024-09-14T14:19:05+0000,1726323545,2024-12-26T14:59:29+0000,2024-12-23T15:39:53+0000,"It may not work with the split eip to go into the sub route of the splitter.Ideally we would have ""step in"" and ""step over"" so you can debug quicker. However the CLI only accept ENTER as to continute (we cannot trap Fn keys). So it may be that you type something and press ENTER.","['Claus Ibsen - 2024-12-19T08:52:15+0000 This is because the sub exchange has a different id so the step mode does not match', 'Claus Ibsen - 2024-12-19T11:14:03+0000 This is a bit tricky to get implemented as the debugger is based on single exchange stepping']"
21222,New Feature,Unassigned,Claus Ibsen,None,4.x,2024-09-14T13:09:59+0000,1726319399,2024-09-14T13:09:59+0000,,https://www.linkedin.com/posts/herve-ciaravolo-silvain-ab453b2_etl-dataprocessing-dataengineering-activity-7239918712500232192-PMYf/We could consider a new EIP that can be configured to keep only N top or bottom records. Where N can be defined via some logic (correlation key) etc.,No comments found
21221,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-14T13:07:56+0000,1726319276,2024-09-15T17:39:44+0000,2024-09-15T17:39:44+0000,The CamelXXX headers are not end-user headers and we should skip these by default like happening in other components.,No comments found
21220,Improvement,Claus Ibsen,Claus Ibsen,None,None,2024-09-14T10:00:14+0000,1726308014,2024-10-09T12:05:53+0000,2024-10-09T12:05:53+0000,"Lets see if we can just make it default split the body, otherwise people need to undertand this and fiddle with simple = ${body}",['Claus Ibsen - 2024-10-09T11:48:52+0000 This is a bit difficult as split is model on expression output that automatic has expression as required']
21219,Bug,Claus Ibsen,Claus Ibsen,4.0.6,"4.8.1,4.9.0",2024-09-14T09:29:17+0000,1726306157,2024-09-16T05:04:11+0000,2024-09-16T05:04:11+0000,Reported on user mailing list,['Claus Ibsen - 2024-09-14T10:03:07+0000 TODO: backport to 4.8.x DONE']
21218,Bug,Unassigned,Bruno Meseguer,None,4.x,2024-09-13T13:23:40+0000,1726233820,2024-09-18T11:26:43+0000,2024-09-18T11:26:43+0000,"It seems Camel Quarkus is not able to pick up beans defined with:When defined outside a RouteBuilder.However, if ported inside a RouteBuilder all seems good.Developers may want to define Beans outside the RouteBuilder class, it makes sense Camel Quarkus finds them when starting up.Find attached a reproduceable.If started with:it will fail.Then try uncommenting the ""myProcessor"" code inside the RouteBuilder in the file ""routes.java""/Camel Quarkus the starts and succeeds to execute.","['Otavio Rodolfo Piske - 2024-09-13T13:30:01+0000 Linking likely related items.', 'Claus Ibsen - 2024-09-17T07:37:25+0000 jamesnetherton - I wonder if you have seen this ticket.', 'James Netherton - 2024-09-17T08:25:32+0000 It works for routes because the bean post processor runs which discovers any BindToRegistry annotated stuff in the bean class.\nWe can probably discover any BindToRegistry bits at build time and get them bound to the registry.', 'Claus Ibsen - 2024-09-18T11:00:35+0000 James that would be good, as there would be users that may use these camel annotations and then export to CEQ and then would be happy if it just keeps working', ""James Netherton - 2024-09-18T11:24:48+0000 There's a CQ issue to track the work here:\nhttps://github.com/apache/camel-quarkus/issues/6479\nSince we're close to cutting an LTS release, I'll leave it for >= CQ 3.16.0. We could consider backporting it for 3.15.x later."", 'Claus Ibsen - 2024-09-18T11:26:37+0000 Thanks James, we will track this ticket in CEQ and close this']"
21217,Improvement,Unassigned,Giacomo Carnevale,"4.7.0,4.8.0",4.9.0,2024-09-13T13:11:22+0000,1726233082,2024-09-16T07:41:53+0000,2024-09-16T07:41:53+0000,"Creation of the Java class OpenApiUtils for handling request and response types.For media types of application/json, type and outType are set. Arrays and primitive types are also handled.This change allows for the automatic unmarshalling of request bodies if bindingPackageScan is defined.",No comments found
21216,Bug,Zheng Feng,Dirk Fiedler,4.7.0,"4.8.1,4.9.0",2024-09-13T13:07:24+0000,1726232844,2024-09-25T05:13:13+0000,2024-09-25T05:13:13+0000,"Hi Team,we are using the Apache Camel LRA components within Java Springboot projects to implement saga services.Till now, we are using Narayana as an LRA-Coordinator. Now we want to switch to Oracl MicroTX 
(https://docs.oracle.com/en/database/oracle/transaction-manager-for-microservices/24.2/tmmdg/lra-transaction-protocol.html).After configuring Oracle MircoTX instead of Narayana, we are facing two problems within the 
Apache Camel LRA component code.1) While joining an LRA Transaction, the payload sent by Apache Camel is URL encoded
2) The Query parameter sent by Oracle LRA coordinator are url encoded, but will not be decoded by Apache Camal LRA (see also: CAMEL-21197)I will set up a branch with my suggested code changes and link this afterwards to this jira bug.
The code changes are completely backwards compatible with Narayana (already tested).1) Joining an LRA TransactionThe class 'LRAClient' is using 'LRAUrlBuilder' inside Method 'join'. All parts of the http put body are url encoded. 
Within Oracle LRA Coordinator log i can see the incomming request from Apache Camel:This url encoded query param 'Camel-Saga-Complete=direct%3A%2F%2Fsaga1_sagaService_complete' will be encoded again on Oracle LRA Coordinator side.
This is causing the error message within Apache Camel LRA:When logging the result http code and bodyi am getting this:The problem can be solved by not url encoding the given urls within the joinLRA payload.
 
org.apache.camel.service.lra.LRAUrlBuilder -> query:
 
This code should not be executed:2) Decode given query parameter from Oracle LRA-Coordinator callAfter solving 1), i am getting a new exception:After finalizing the saga, the Oracle LRA-Coordinator is calling the 'onComplete' for all participants and the service.Within o.a.c.s.l.LRASagaRoutes.verifyRequest(LRASagaRoutes.java:107) the extracted query param 'Camel-Saga-Compensate' is still url encoded:Therefore the check within LRASagaRoutes.verifyRequest fails, because the valid (indexed) uri isThe problem can completely solved by CAMEL-21197. In the meantime in will provide a suggestion for an workaround.best regards
Dirk",['Dirk Fiedler - 2024-09-13T13:53:43+0000 i have created a pull request with my change: https://github.com/apache/camel/pull/15558']
21215,Bug,Unassigned,Otavio Rodolfo Piske,4.8.0,4.9.0,2024-09-13T09:52:39+0000,1726221159,2024-09-18T11:01:17+0000,2024-09-18T11:01:17+0000,"Trying to export a java file with beans annotated with @BindToRegistry to a CEQ project, causes it to fail with:Caused by: org.apache.camel.NoSuchBeanException: No bean could be found in the registry for: createChatMessage of type: org.apache.camel.ProcessorThis error is sporadic and doesn't happen 100% of the time (it seems to be more reproducible on shared cloud environments).To reproduce: save the model.java and the route-main.yaml files and run:camel export * --runtime=quarkus --gav=org.demo:agent:1.0.0 --dep=io.quarkiverse.langchain4j:quarkus-langchain4j-core:0.17.2,io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.17.2 --ignore-loading-errorAdding @BindToRegistry(lazy=true) makes the export work reliably, but that generates a project that is non-buildable.","['Otavio Rodolfo Piske - 2024-09-13T09:53:33+0000 This issue is NOT caused by CAMEL-21208, but the messy exporter code certainly makes fixing this more complicated that it should.', 'Claus Ibsen - 2024-09-16T08:30:21+0000 If you want to export to Quarkus its likely better to use CDI annotations. I have attached a fixed model.java class that works in jbang and quarkus', 'Claus Ibsen - 2024-09-18T11:01:17+0000 CAMEL-21138 resolves this']"
21214,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-13T07:44:13+0000,1726213453,2024-09-13T15:57:46+0000,2024-09-13T15:57:46+0000,Today you get all the data when you just want to count the size.Also for count size we need a time for first/last messages to make it easier to know when the messages was created.,No comments found
21213,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-13T06:21:38+0000,1726208498,2024-09-13T07:48:52+0000,2024-09-13T07:48:52+0000,"ExchangeHelper.populateVariableMap uses a slightly different naming style than simple language, so its harder to learn and use both styles. Lets harmonize.",No comments found
21212,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-13T04:34:11+0000,1726202051,2024-09-13T08:14:42+0000,2024-09-13T08:14:42+0000,"To make it possible to do log.info(""hey i am inside groovy"") in a groovy script",No comments found
21211,Bug,Dylan Piergies,Dylan Piergies,"4.4.2,4.4.3,4.6.0,4.7.0,4.8.0","4.4.4,4.8.1,4.9.0",2024-09-12T16:41:11+0000,1726159271,2024-09-16T04:46:00+0000,2024-09-16T04:46:00+0000,The default HeaderFilterStrategy created when automatic header propagation was implemented for the Service Bus did not take steps to ensure that propagated headers are of a Java type that can be encoded as an application property by the underlying client libraries.This would lead to errors of the form: com.azure.messaging.servicebus.ServiceBusException: No encoding is known for map entry value of type: <unmappable class name>,['Claus Ibsen - 2024-09-13T05:05:57+0000 TODO: backport to 4.8.x DONE']
21210,Bug,Claus Ibsen,Claus Ibsen,4.8.0,"4.8.1,4.9.0",2024-09-12T12:30:04+0000,1726144204,2024-09-16T05:06:10+0000,2024-09-16T05:06:10+0000,No description available,['Claus Ibsen - 2024-09-12T12:41:45+0000 TODO: backport to 4.8.x branch DONE']
21209,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,"4.8.1,4.9.0",2024-09-12T12:00:00+0000,1726142400,2024-09-16T05:07:04+0000,2024-09-16T05:07:04+0000,The enums parameter on the LangChain4jToolsEndpoint class makes it much harder for tooling to generate valid YAML out of it.,['Claus Ibsen - 2024-09-13T05:05:38+0000 TODO: backport to 4.8.x DONE']
21208,Improvement,Unassigned,Otavio Rodolfo Piske,"4.7.0,4.8.0",None,2024-09-12T08:01:20+0000,1726128080,2024-09-13T09:53:33+0000,,"We have several places were we create the export files by code. Not only this bug-prone, but this is also extremely hard to read, test, maintain and evolve. The code on Camel JBang is full of code like this.Using a template engine allow us to separate the template source, from the text/code generation logic, resulting in a code that is easier to maintain.We should pick a template engine, convert the all that code to the appropriate format and cleanup the code generation.","['Otavio Rodolfo Piske - 2024-09-12T08:02:54+0000 There is some similarity with CAMEL-21181, but I feel that one is more about serializing objects, than generating code. Nonetheless, it may be possible to come up with a solution that fits both of the problems.']"
21207,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-12T06:03:10+0000,1726120990,2024-09-12T13:25:09+0000,2024-09-12T13:25:09+0000,No description available,No comments found
21206,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-12T05:15:13+0000,1726118113,2024-09-12T05:58:57+0000,2024-09-12T05:58:57+0000,No description available,No comments found
21205,Task,Claus Ibsen,Aurélien Pupier,None,4.9.0,2024-09-11T18:37:46+0000,1726079866,2024-10-07T17:44:10+0000,2024-10-07T17:44:10+0000,"it was experimental butnot marked as deprecated,, maybe need to state it as experimental for 4.9 and remove in 4.10 only?Note: take care to remove only the DSL part, not the language expression part.",No comments found
21204,Task,Claus Ibsen,Aurélien Pupier,None,4.9.0,2024-09-11T18:36:51+0000,1726079811,2024-10-07T15:19:34+0000,2024-10-07T15:19:34+0000,JavaScript DSl was deprecated in 4.6,No comments found
21203,Task,Claus Ibsen,Aurélien Pupier,None,4.9.0,2024-09-11T18:36:03+0000,1726079763,2024-10-07T15:05:22+0000,2024-10-07T15:05:22+0000,JavaShell DSL was deprecated in 4.6,['Claus Ibsen - 2024-10-07T14:30:56+0000 TODO: Remove on CSB DONE']
21202,New Feature,Adriano Machado,Adriano Machado,4.4.0,"4.4.4,4.8.1,4.9.0",2024-09-11T13:51:02+0000,1726062662,2024-10-13T13:21:43+0000,2024-10-03T08:46:45+0000,"Add a ThreadPoolFactory to propagate OpenTelemetry contexts, as per OpenTelemetry's documentation:https://opentelemetry.io/docs/languages/java/instrumentation/#context-propagation-between-threads",No comments found
21201,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-11T12:39:07+0000,1726058347,2024-09-11T13:17:28+0000,2024-09-11T13:17:28+0000,"You see a generic exception such asileOperationFailedException - Error writing file [ID-2925776a-703a-11ef-9df5-3ab92e8528c7]]
org.apache.camel.component.file.GenericFileOperationFailedException: Error writing file [ID-2925776a-703a-11ef-9df5-3ab92e8528c7]But the FTP client has status code and text which we should include so the user can understand the error better.",['Claus Ibsen - 2024-09-11T12:48:11+0000 org.apache.camel.component.file.GenericFileOperationFailedException: File operation failed: 500 Illegal PORT command.\n Error writing file [ID-06f198e5-703c-11ef-b52b-3ab92e8528c7]. Code: 500\n    at org.apache.camel.component.file.remote.FtpOperations.storeFile(FtpOperations.java:717) ~[camel-ftp-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.component.file.GenericFileProducer.writeFile(GenericFileProducer.java:342) ~[camel-file-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.component.file.GenericFileProducer.processExchange(GenericFileProducer.java:154) ~[camel-file-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]\n    at org.apache.camel.component.file.remote.RemoteFileProducer.process(RemoteFileProducer.java:61) ~[camel-ftp-4.9.0-SNAPSHOT.jar:4.9.0-SNAPSHOT]']
21200,Bug,Unassigned,Francois Papon,3.22.0,3.22.3,2024-09-11T12:09:07+0000,1726056547,2024-09-12T06:53:16+0000,2024-09-11T18:03:01+0000,"The OSGi range of the javax.jms is not correct and break the installation of the bundle in Karaf.The range is define is javax.jms;version=""[1.1,2)"" but the bundle depend on camel-jms which the range is javax.jms;version=""[1.1,3)""We should align the range of camel-activemq to the camel-jms one.",No comments found
21199,Bug,Radovan Netuka,Radovan Netuka,None,4.9.0,2024-09-11T11:40:46+0000,1726054846,2024-10-17T13:30:13+0000,2024-09-25T14:19:57+0000,"Camel-jackson doesn't handle 4-byte characters well. Marshalling a 4-byte Japanese kanji character results in two UTF-16 escapes to be written instead of the character itself. While this is ok for emoji an such, it's not for natural languages.Jackson issue: FasterXML/jackson-core#223Reproducer:with the file input.txt containing:Expected output seen in the log: ""システム𩸽""Actual output seen in the log: ""システム\uD867\uDE3D""","[""Radovan Netuka - 2024-09-11T11:44:39+0000 It's problem of Jackson-core's UTF8JsonGenerator. Their other generator - WriterBasedJsonGenerator - doesn't seem to suffer from this issue. \n  While it'd be great to have this fixed on Jackson side, they keep the issue open from 2015 and rejected several PRs which were trying to provide a fix.\n  PR bellow tries to avoid the issue by forcing Jackson to use WriterBasedJsonGenerator. \n  PR:\nhttps://github.com/apache/camel/pull/15515\n^ Closed as there will be (better) replacement utilizing a newly added Jackson option"", 'Radovan Netuka - 2024-09-18T13:42:16+0000 Fixed in Jackson 2.18.0 - https://github.com/FasterXML/jackson-core/pull/1335. Once we upgrade to that version, all that needs to be done is to enable the new option (in Jackson) COMBINE_UNICODE_SURROGATES_IN_UTF8.', 'Claus Ibsen - 2024-09-18T13:53:58+0000 Thanks for getting this into jackson itself (best place).\nIt will take a while as we need Spring Boot and Quarkus to also upgrade to jackson 2.18.x', 'Claus Ibsen - 2024-09-25T14:19:57+0000 Added your unit test with useWriter.\nWhen Jackson 2.18 is released then we can add an option in Camel to configure this new option, and deprecate useWriter option.', 'Radovan Netuka - 2024-10-15T11:52:05+0000 PR: https://github.com/apache/camel/pull/15958']"
21198,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.11.0,2024-09-11T08:51:46+0000,1726044706,2025-02-19T15:28:34+0000,2025-02-19T15:28:34+0000,https://github.com/IBM/secrets-manager-java-sdk,No comments found
21197,Bug,Unassigned,Dirk Fiedler,4.7.0,None,2024-09-11T08:39:52+0000,1726043992,2024-09-19T08:06:11+0000,2024-09-16T12:16:08+0000,"Hi team,while using URISupport.parseQuery the given query was not correctly decoded:Sample JUnit test (org.apache.camel.util.URISupportTest):If i handover the query 'Camel-Saga-Complete=direct%3A%2F%2Fsaga1_sagaService_complete' 
i expect the decoded value for 'Camel-Saga-Complete' as 'direct://saga1_sagaService_complete'.I am wrong? Did i understand the utility class wrong?Within the code i can see, that the string was adjusted to replace '%', this is 
causing the issue:URIScanner.addParameter:best regards
Dirk","['Claus Ibsen - 2024-09-11T08:44:16+0000 What are you trying to do for real', ""Dirk Fiedler - 2024-09-11T08:56:29+0000 Hi Claus,\nwe are using the Apache Camel LRA within a Java SpringBoot project.\nUntil last week, we are using Narayana as an LRA Coordinator .. now we try\nto switch to Oracle MicroTX.\nWe found two problems.\nThis one occurs while 'org.apache.camel.service.lra.LRASagaRoutes' is verifying\nthe incomming request from the LRA Coordinator. The call is URL encoded from Oracle:\nPUT /camel/complete?Camel-Saga-Complete=direct%3A%2F%2Fsaga1_sagaService_complete HTTP/1.1Host\nWithin LRASagaService the util is used:\nURISupport.parseQuery(exchange.getIn().getHeader(Exchange.HTTP_QUERY, String.class)); \nThe LRA code expects / needs the decoded value, but get the encoded one from the Util.\nFor the second problem i am preparing a solution .. will create a Jira ticket and will try to contribute ..\nBefore i do this, i want to be sure, that i understood this util correct ..\nbest regards\nDirk"", 'Zheng Feng - 2024-09-19T05:45:07+0000 The replacePercent method looks like wierd\n   public static String replacePercent(String input) {\n        if (input.contains(""%"")) {\n            return input.replace(""%"", ""%25"");\n        }\n\n        return input;\n    }\nIt replaces all ""%"" but if the inputs is percent-encoded, the ""%"" before such ""%3A"" should not be replaced.', 'Zheng Feng - 2024-09-19T05:58:24+0000 It could be better to replaces every % NOT followed by a two-digit (hex) number with %25\nby using such codes\n    return input.replace(""/%(?![0-9][0-9a-fA-F]+)/g"", ""%25"");\ndavsclaus WDYT?', 'Claus Ibsen - 2024-09-19T08:06:11+0000 Camel has its own code for parsing its endpoints that resemble URIs and have various optimized code for this.\nThis code is NOT intended as general purpose URI utils for any end users or whatever they do. Its for working with Camel.\nThe issue was an Oracle TX manager that has some issue - focus on fixing it there.\nCamel v5 has a goal of changing this URI endpoint parsing inside Camel (there is a Jira ticket somewhere).']"
21196,Test,Nikita_Konovalov,Otavio Rodolfo Piske,4.8.0,4.x,2024-09-11T08:30:30+0000,1726043430,2024-09-26T17:21:16+0000,,Code like the one below should be modified to use modern JUnit 5 assertions:This should be replaced with Assertions.assertDoesNotThrow and Assertions.assertThrows as needed.,No comments found
21195,Test,Unassigned,Otavio Rodolfo Piske,4.8.0,4.x,2024-09-11T08:06:57+0000,1726042017,2025-01-31T08:49:27+0000,,Fix flaky tests for Camel 4.9.Some flakies: https://ge.apache.org/scans/tests?search.rootProjectNames=Camel&search.tasks=verify&search.timeZoneId=Europe%2FParis,"['Claus Ibsen - 2024-11-28T10:28:12+0000 Can that flaky report (link above) be made to only show for linux/ubuntu.\nAs the IBM platforms is too flaky and not for our community to support.', 'Otavio Rodolfo Piske - 2024-11-29T09:04:31+0000 davsclaus yes, you have to enter the following information on the fields:\nhostname:\n*gridcore* \nlabel:\nmain\n  The first one filters all x86 machines and the second filters only the main branch.', 'Otavio Rodolfo Piske - 2024-11-29T09:06:02+0000 I am currently unassigning this from Nikita as he is currently focusing on CSB stuff.', 'Claus Ibsen - 2025-01-30T20:16:27+0000 Error\nmock://result Received message count. Expected: <1> but was: <0>\nStacktrace\njava.lang.AssertionError: mock://result Received message count. Expected: <1> but was: <0>\nat org.apache.camel.component.mock.MockEndpoint.fail(MockEndpoint.java:2015)\nat org.apache.camel.component.mock.MockEndpoint.assertEquals(MockEndpoint.java:1950)\nat org.apache.camel.component.mock.MockEndpoint.doAssertIsSatisfied(MockEndpoint.java:453)\nat org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:431)\nat org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:421)\nat org.apache.camel.component.mock.MockEndpoint.assertIsSatisfied(MockEndpoint.java:220)\nat org.apache.camel.ContextTestSupport.assertMockEndpointsSatisfied(ContextTestSupport.java:900)\nat org.apache.camel.component.xslt.XsltFromFileExceptionTest.testXsltFromFileExceptionOk(XsltFromFileExceptionTest.java:36)\nat java.base/java.lang.reflect.Method.invoke(Method.java:580)\nat java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:387)\nat java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1312)\nat java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1843)\nat java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1808)\nat java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:188)', ""Otavio Rodolfo Piske - 2025-01-31T08:49:27+0000 BTW, our builds disappeared from develocity, so we don't have updated information about flakies. I opened a ticket for infra.\n  https://issues.apache.org/jira/browse/INFRA-26486""]"
21194,Bug,Claus Ibsen,Claus Ibsen,4.8.0,4.8.0,2024-09-10T12:09:58+0000,1725970198,2024-09-11T04:44:07+0000,2024-09-11T04:44:07+0000,"The camel run unfortuantely has a bug that causes it to not detect file extensions correctly for yaml kamelets and routes, and will fail.For example this example
https://github.com/apache/camel-kamelets-examples/tree/main/jbang/hello-yamlcamel run *orcamel run hello.camel.yamlAll causes failureorg.apache.camel.RuntimeCamelException: Failed to resolve source file: hello.camel.yaml
    at org.apache.camel.dsl.jbang.core.common.SourceHelper.resolveSource(SourceHelper.java:46)
    at org.apache.camel.dsl.jbang.core.commands.Run.knownFile(Run.java:1544)
    at org.apache.camel.dsl.jbang.core.commands.Run.run(Run.java:645)
    at org.apache.camel.dsl.jbang.core.commands.Run.doCall(Run.java:310)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
    at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
    at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
    at picocli.CommandLine.access$1500(CommandLine.java:148)
    at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
    at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
    at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
    at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
    at picocli.CommandLine.execute(CommandLine.java:2174)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:173)
    at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:62)
    at main.CamelJBang.main(CamelJBang.java:36)",No comments found
21193,New Feature,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-10T11:50:57+0000,1725969057,2024-10-10T13:11:25+0000,2024-10-10T13:11:25+0000,"You can send via `camel cmd send` but we need a `camel cmd receive` so you can just listen to new messages from a system such as kafka, jms, sql, file etc.",No comments found
21192,Bug,Thomas Diesler,Thomas Diesler,None,None,2024-09-10T09:52:05+0000,1725961925,2024-09-11T11:50:30+0000,2024-09-11T11:50:24+0000,,['Thomas Diesler - 2024-09-11T11:50:24+0000 Out of Date']
21191,Bug,Claus Ibsen,Claus Ibsen,4.8.0,4.8.0,2024-09-10T07:41:02+0000,1725954062,2024-09-11T04:44:43+0000,2024-09-11T04:44:40+0000,No description available,No comments found
21190,Task,Aurélien Pupier,Claus Ibsen,None,4.x,2024-09-09T07:37:15+0000,1725867435,2025-01-27T13:58:11+0000,,There is some cruft that says java 8 and so on.We had trouble with the CSB release and its outdated javadoc plugin,No comments found
21189,Improvement,Claus Ibsen,Pascal Schumacher,None,4.9.0,2024-09-08T20:23:48+0000,1725827028,2024-09-10T06:34:45+0000,2024-09-09T20:03:17+0000,Spring 5.3.5 added DefaultMessageListenerContainer#idleReceivesPerTaskLimit in https://github.com/spring-projects/spring-framework/issues/26195 as a better way than DefaultMessageListenerContainer#maxMessagesPerTask to control the number of dynamic concurrent consumers. It would be great to have this be supported by camel-jms.,['Pascal Schumacher - 2024-09-10T06:34:45+0000 Thank you very much!']
21188,Bug,Claus Ibsen,Pascal Schumacher,4.7.0,4.9.0,2024-09-08T20:16:47+0000,1725826607,2024-09-10T06:57:32+0000,2024-09-09T14:26:39+0000,"For Camel 4.7.0 camel-activemq was reverted to Active MQ 5.x and camel-activemq6 was created for Active MQ 6.x, but there is no EndpointBuilder for camel-activemq6, so the Java DSL can not be used to configure endpoints for this component.",['Pascal Schumacher - 2024-09-10T06:57:32+0000 Thank you very much!']
21187,Test,Unassigned,Claus Ibsen,None,4.x,2024-09-08T18:52:16+0000,1725821536,2024-09-11T11:31:07+0000,2024-09-11T11:31:07+0000,"[INFO] Running org.apache.camel.component.disruptor.vm.DisruptorVmInOutChainedTest
Exception in thread ""Camel (camel-84) thread #391 - disruptor-vm://a"" java.lang.RuntimeException: java.lang.InterruptedException
    at com.lmax.disruptor.FatalExceptionHandler.handleEventException(FatalExceptionHandler.java:45)
    at com.lmax.disruptor.dsl.ExceptionHandlerWrapper.handleEventException(ExceptionHandlerWrapper.java:18)
    at com.lmax.disruptor.BatchEventProcessor.handleEventException(BatchEventProcessor.java:257)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:187)
    at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
    at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.InterruptedException
    at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1640)
    at com.lmax.disruptor.BlockingWaitStrategy.waitFor(BlockingWaitStrategy.java:47)
    at com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(ProcessingSequenceBarrier.java:56)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:159)
    ... 4 more
Exception in thread ""Camel (camel-84) thread #392 - disruptor-vm://b"" java.lang.RuntimeException: java.lang.InterruptedException
    at com.lmax.disruptor.FatalExceptionHandler.handleEventException(FatalExceptionHandler.java:45)
    at com.lmax.disruptor.dsl.ExceptionHandlerWrapper.handleEventException(ExceptionHandlerWrapper.java:18)
    at com.lmax.disruptor.BatchEventProcessor.handleEventException(BatchEventProcessor.java:257)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:187)
    at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
    at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.InterruptedException
    at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1640)
    at com.lmax.disruptor.BlockingWaitStrategy.waitFor(BlockingWaitStrategy.java:47)
    at com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(ProcessingSequenceBarrier.java:56)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:159)
    ... 4 more
Exception in thread ""Camel (camel-84) thread #393 - disruptor-vm://c"" java.lang.RuntimeException: java.lang.InterruptedException
    at com.lmax.disruptor.FatalExceptionHandler.handleEventException(FatalExceptionHandler.java:45)
    at com.lmax.disruptor.dsl.ExceptionHandlerWrapper.handleEventException(ExceptionHandlerWrapper.java:18)
    at com.lmax.disruptor.BatchEventProcessor.handleEventException(BatchEventProcessor.java:257)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:187)
    at com.lmax.disruptor.BatchEventProcessor.run(BatchEventProcessor.java:125)
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)
    at java.base/java.lang.Thread.run(Thread.java:840)
Caused by: java.lang.InterruptedException
    at java.base/java.util.concurrent.locks.AbstractQueuedSynchronizer$ConditionObject.await(AbstractQueuedSynchronizer.java:1640)
    at com.lmax.disruptor.BlockingWaitStrategy.waitFor(BlockingWaitStrategy.java:47)
    at com.lmax.disruptor.ProcessingSequenceBarrier.waitFor(ProcessingSequenceBarrier.java:56)
    at com.lmax.disruptor.BatchEventProcessor.processEvents(BatchEventProcessor.java:159)
    ... 4 more
[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 40.05 s – in org.apache.camel.component.disruptor.vm.DisruptorVmInOutChainedTest",['Claus Ibsen - 2024-09-11T11:31:07+0000 Cannot see these problems today']
21186,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-06T16:08:59+0000,1725638939,2024-09-11T08:44:32+0000,2024-09-11T08:44:32+0000,https://docs.aws.amazon.com/secretsmanager/latest/apireference/API_BatchGetSecretValue.htmlThis will help on the cost side.,No comments found
21185,Bug,Claus Ibsen,Mark Wimpory,4.7.0,4.8.0,2024-09-06T08:07:55+0000,1725610075,2024-09-07T07:25:02+0000,2024-09-07T07:25:02+0000,The docs state that the shutdown timeout can be set via JMX.  However I cannot find this setting on the bean.  I will attach a screenshot,['Claus Ibsen - 2024-09-07T06:17:06+0000 The timeout can also be set in the camel context mbean']
21184,Improvement,Claus Ibsen,Claus Ibsen,None,4.10.0,2024-09-06T05:39:16+0000,1725601156,2025-01-06T13:35:26+0000,2025-01-06T13:35:26+0000,Lets see if we can make more components support BrowseableEndpoint,"['Claus Ibsen - 2024-09-09T07:13:45+0000 components/camel-azure/camel-azure-files/src/generated/resources/META-INF/org/apache/camel/component/file/azure/azure-files.json:    ""browsable"": true,\ncomponents/camel-browse/src/generated/resources/META-INF/org/apache/camel/component/browse/browse.json:    ""browsable"": true,\ncomponents/camel-dataset/src/generated/resources/META-INF/org/apache/camel/component/dataset/dataset-test.json:    ""browsable"": true,\ncomponents/camel-dataset/src/generated/resources/META-INF/org/apache/camel/component/dataset/dataset.json:    ""browsable"": true,\ncomponents/camel-file/src/generated/resources/META-INF/org/apache/camel/component/file/file.json:    ""browsable"": true,\ncomponents/camel-ftp/src/generated/resources/META-INF/org/apache/camel/component/file/remote/ftp.json:    ""browsable"": true,\ncomponents/camel-ftp/src/generated/resources/META-INF/org/apache/camel/component/file/remote/ftps.json:    ""browsable"": true,\ncomponents/camel-ftp/src/generated/resources/META-INF/org/apache/camel/component/file/remote/sftp.json:    ""browsable"": true,\ncomponents/camel-jsch/src/generated/resources/META-INF/org/apache/camel/component/scp/scp.json:    ""browsable"": true,\ncomponents/camel-mock/src/generated/resources/META-INF/org/apache/camel/component/mock/mock.json:    ""browsable"": true,\ncomponents/camel-seda/src/generated/resources/META-INF/org/apache/camel/component/seda/seda.json:    ""browsable"": true,\ncomponents/camel-smb/src/generated/resources/META-INF/org/apache/camel/component/smb/smb.json:    ""browsable"": true,\ncomponents/camel-stub/src/generated/resources/META-INF/org/apache/camel/component/stub/stub.json:    ""browsable"": true,']"
21183,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-06T05:38:17+0000,1725601097,2024-09-09T11:10:21+0000,2024-09-09T11:10:21+0000,"The method currentlyList<Exchange> getExchanges();
 
Should have a limit and filter predicate so you can filter first",['Claus Ibsen - 2024-09-07T16:03:22+0000 TODO: BrowsableEndpoint to have getter/setter for limit (default 100) so we do not capture too much data OOTB - But users can see the latest 100 messages DONE\nTODO: MBean to have dump as json DONE\nTODO: catalog to have browseable: true|false DONE']
21182,Bug,Claus Ibsen,Claus Ibsen,4.7.0,4.8.0,2024-09-06T05:21:25+0000,1725600085,2024-09-06T05:24:18+0000,2024-09-06T05:24:18+0000,"ERROR StatusConsoleListener Unable to locate appender ""out"" for logger config ""loggingJson""",No comments found
21181,Improvement,Unassigned,Otavio Rodolfo Piske,None,None,2024-09-05T13:59:36+0000,1725544776,2024-09-12T08:02:54+0000,,"Currently our code has a very rudimentary way to generate String-based output (i.e.: such as those used for the DevConsole). 
Typically, we generate those strings appending code using a StringBuilder over multiple append calls, spawning several lines of code and, in many cases, generating transient objects in the process.
In some other (much worse) cases, we concatenate them.The code snippets below present some examples of the kind of thing we do.JvmDevConsoleFile:...DefaultAsyncProcessorAwaitManager:BacklogTracer:This approach has several problems:1. Maintenance hell: this approach leads to code that is hard to read, modify and maintain. It is also usually hard to test due to tightly coupling the String generation with the data sources.
2. It leads to performance degradation if the underlying buffer is not properly sized. 
3. It can also lead to performance degradation due to increased GC pressure caused by an excessive creation of transient objects. 
4. Typically, the methods generating the objects are so large that they are not inlinable by JIT.-In particular, problem number 3 makes the whole set of *Console classes entirely unsuitable for high-performing / low-latency integrations. -Update: I had originally singled out console code as a pain point, but looking further, there are other places that could lead to code like this in production (i.e.: the code in camel-management is also badly affected by this).","['Claus Ibsen - 2024-09-05T15:10:48+0000 Ad 3) The *consoles* are NOT intended for production use - they are development only.', ""Otavio Rodolfo Piske - 2024-09-06T10:52:07+0000 davsclaus thanks for the clarification. Fair enough and certainly very good that we don't endorse this feature for production usage. It makes the point 3 a lot less worse .... but still, we shouldn't pessimize the experience for the users (specially those not lucky enough to have decent computers)."", 'Otavio Rodolfo Piske - 2024-09-06T11:00:40+0000 BTW, although I had singled out the DevConsoles are the worst offenders, they are not the only ones abusing this bad practice. We have quite a few other places with code that is just as bad (i.e.: CSimpleCodeGenerator, DefaultBacklogTracerEventMessage, DefaultManagementObjectNameStrategy) ... camel-management is pretty full of these as well.']"
21180,Bug,Unassigned,Harish Annamalai,3.22.0,None,2024-09-05T13:49:09+0000,1725544149,2024-09-07T06:59:21+0000,2024-09-05T14:12:54+0000,"We have come across a special case when Simple Expression is used to invoke OGNL replaceAll of String method with regex. The expression evaluation fails when the replaceAll is called with a regular Expression with only Special Character such as \\r\\n .Examples 1:from(""timer:getter?period=1000&repeatCount=1"")
                .setBody(constant(""foobar\nfoobar""))
                .setBody(simple(""${body.replaceAll('[o\\r\\n]','')}""))
                .to(""log://expr"")
                .end();
Output:[ timer://getter] expr                                     : Exchange[ExchangePattern: InOnly, BodyType: String, Body: fbarfbar]
Here the replaceAll works correctly.However, in Example 2:from(""timer:getter?period=1000&repeatCount=1"")
                .setBody(constant(""foobar\nfoobar""))
                .setBody(simple(""${body.replaceAll('\\r\\n','')}""))
                .to(""log://onlyspecial"")
                .end();
The Example 2 fails with expression:
Caused by: java.lang.IllegalArgumentException: name must be specified and not emptyWe find it strange because when the replaceAll Simple expression itself creates a new line in case of \\r\\n while it handles it correctly if the expression is r
n.
using a valid regular expression \\r\\n fails, while `\r\n' works correctly.We are using Camel 3.x and we have used bodyOneLine as an alternative. However, the OGNL expression seems to behave weirdly when it is used within Square Brackets , for example \\t also fails in ${body.replaceAll('\\t','')}It appears simple expression parser is unable to handle only Escape Sequences, even [o\\t] works.","['Claus Ibsen - 2024-09-07T06:59:21+0000 Camel 3 is only very critical bug fixes and Camel specific CVEs.\nCamel 4 has a replace function. For v3 you can use a custom bean method, groovy or something else.']"
21179,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-05T13:41:50+0000,1725543710,2024-09-11T06:07:52+0000,2024-09-11T06:07:52+0000,"There was a question about Hashicorp Vault support in Camel-Karavanhttps://github.com/apache/camel-karavan/issues/1348As of today, this is not feasible, mainly because the ""/"" symbol is used to distinguish between the secret name and the subkey you want to resolve.To complete this issue we might need to review the syntax, so something like this should be doneThis could extended to the other functions, but since it is a breaking change it won't go in 4.8.0 and it will need to be documented in the migration guide.Essentially we'll need to introduce a different symbol for prefixing the subkey.","[""Andrea Cosentino - 2024-09-09T14:06:57+0000 Hashicorp Vault - Done.\nAWS Secrets Manager - Done.\nGoogle Secret Manager - Done, but just to harmonize the syntax, since GCP Secret Manager doesn't allow to use / in the secret name.\nAzure Key Vault - Done, but just to harmonize the syntax, since Azure Key Vault doesn't allow to use / in the secret name.""]"
21178,New Feature,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-05T12:39:16+0000,1725539956,2024-09-05T17:22:24+0000,2024-09-05T17:22:24+0000,Lets see if we can make a camel cmd browse --endpoint=activemq:cheese --limit=10 to browse pending messages on the queue and so forth,['Claus Ibsen - 2024-09-05T13:23:05+0000 TODO: dev console DONE\nTODO: jbang command DONE']
21177,Improvement,James Netherton,James Netherton,None,4.8.0,2024-09-05T09:22:38+0000,1725528158,2024-09-05T09:45:04+0000,2024-09-05T09:45:04+0000,"The main motivation here is for Camel Quarkus. It'd be nice to avoid doing resource discovery in a static initializer within DatasonnetLanguage and allow any discovered resources to be passed in via a constructor.On CQ, this avoids the need for classgraph since resource discovery can be done at build time.",No comments found
21176,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-04T18:48:14+0000,1725475694,2024-09-05T04:35:47+0000,2024-09-05T04:35:47+0000,exchange variables are new to Camel and we can add support for this in DefaultExchangeHolder. It would be similar to exchange properties.,No comments found
21175,Improvement,Aurélien Pupier,Aurélien Pupier,None,4.8.0,2024-09-04T14:49:19+0000,1725461359,2024-09-05T07:22:04+0000,2024-09-05T07:22:04+0000,"I think it would be convenient to automatically add package name when creating a Camel route with Java DSL in a src/main/java subfolder.
it will allow to use it directly inside Camel Quarkus and Camel Spring Boot projects.Having a package name still allow to launch with Camel Jbang directly.",No comments found
21174,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-09-04T13:38:51+0000,1725457131,2024-09-13T11:49:18+0000,2024-09-13T11:49:18+0000,"When users just want to log message body or header with a little bit of their own text, then groovy sometimes is easier as you dont need to use ${ } placeholders,We can have some kind of option to enable using groovy for the log EIP.",No comments found
21173,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T13:26:01+0000,1725456361,2024-09-05T09:59:43+0000,2024-09-05T09:59:43+0000,No description available,No comments found
21172,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T13:25:47+0000,1725456347,2024-09-05T13:59:49+0000,2024-09-05T13:59:49+0000,No description available,No comments found
21171,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T10:46:42+0000,1725446802,2024-09-04T13:50:36+0000,2024-09-04T13:50:36+0000,No description available,No comments found
21170,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-04T10:15:03+0000,1725444903,2024-09-04T14:14:24+0000,2024-09-04T14:14:24+0000,"When you use camel run and that it may immedietely start processing messages or if you use kafka then the logs get spammed by kafka on startup.Then its easy to miss what happened on startup, and you would need to scroll up, or something.We can make the camel log command easy to just show the startup logscamel log --startupAnd if we have a dev console that can capture this then its also easier available for other tooling.",No comments found
21169,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T09:07:02+0000,1725440822,2024-09-04T12:40:52+0000,2024-09-04T12:40:52+0000,No description available,No comments found
21168,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-04T07:22:48+0000,1725434568,2024-09-04T13:34:49+0000,2024-09-04T13:34:49+0000,"Camel makes it possible to configure via properties file / JVM sys / ENV variable and so on. And users can override these values which is common in docker containers / k8s etc. However you may not always easily know what the actual value used by Camel really is.We print this in a startup summary in camel-main, and we should have this information as a dev console and jbang cli command as well. This makes it accessible for wider tooling also.",No comments found
21167,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-09-04T06:18:14+0000,1725430694,2024-09-04T08:29:09+0000,2024-09-04T08:29:09+0000,No description available,No comments found
21166,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.9.0,2024-09-04T06:17:47+0000,1725430667,2024-11-18T08:54:53+0000,2024-11-18T08:54:53+0000,No description available,No comments found
21165,Bug,Unassigned,Nilanjan Gogoi,4.7.0,None,2024-09-04T06:00:23+0000,1725429623,2024-09-04T06:23:00+0000,2024-09-04T06:15:20+0000,"Hi,I am trying to connect to EventHub Emulator and Azurite storage blob container emulator from my Springboot service which is using the latest Azure SDK BOM(1.2.26) to support azure test containers and Apache Camel v4.7.0 (primarily for Azure Endpoint route builder configurations). I am seeing 403 Blob storage authentication failures due to signature mismatch. Could you kindly suggest which version of Azure SDK bom and Apache Camel are compatible for recent Emulators to unblock this issue ? Let me know if any more details are needed from my end.Below is the snippet from my error stacktrace:Error occurred in partition processor for partition NONE, com.azure.storage.blob.models.BlobStorageException: If you are using a StorageSharedKeyCredential, and the server returned an error message that says 'Signature did not match', you can compare the string to sign with the one generated by the SDKBelow are the properties my application.yaml using azure event hub emulator configurationsazure:
container-name: ""static-container""
event-hub-connection-string: ""Endpoint=sb://localhost;SharedAccessKeyName=RootManageSharedAccessKey;SharedAccessKey=SAS_KEY_VALUE;UseDevelopmentEmulator=true;""
inbound-event-hub-consumer-group: cg1
inbound-event-hub-name: ev1
namespace: emulatorns1
outbound-event-hub-consumer-group: cg2
outbound-event-hub-name: ev2storage-account-name: devstoreaccount1
storage-connection-string: ""AccountName=devstoreaccount1;AccountKey=accountkey;DefaultEndpointsProtocol=http;BlobEndpoint=http://127.0.0.1:10000/devstoreaccount1;""Thanks,
Nilanjan Gogoi","['Andrea Cosentino - 2024-09-04T06:15:57+0000 This is not a bug, this is more a discussion, please write to dev or users mailing list, or open a thread in Zulip.', 'Andrea Cosentino - 2024-09-04T06:16:16+0000 https://camel.apache.org/community/support/', 'Nilanjan Gogoi - 2024-09-04T06:23:00+0000 Hi acosentino ,\nI have opened a thread on zulip reg this issue\nhttps://camel.zulipchat.com/#narrow/stream/257295-general/topic/Azure.20EventHub.20Emulator.20.2B.20camel.20Authentication.20issue.\nThanks']"
21164,Bug,Unassigned,Claus Ibsen,"4.4.3,4.7.0","4.4.4,4.8.0",2024-09-04T04:52:28+0000,1725425548,2024-09-07T06:12:47+0000,2024-09-07T06:12:47+0000,But when access http://localhost:8080/restContext/api the OpenApi json doesn't present the resolved placeholders:,"['Avinash Dongre - 2024-09-04T05:30:41+0000 Hi davsclaus, I would like to work on this fix, if possible.', 'Claus Ibsen - 2024-09-04T05:45:45+0000 Yes you are welcome']"
21163,Bug,Zheng Feng,Zheng Feng,None,4.8.0,2024-09-04T00:07:45+0000,1725408465,2024-09-04T08:42:11+0000,2024-09-04T08:42:11+0000,"Currently this does not work OOTB. The problem is that the ConnectionFactory and DataSource are synthetic ClientProxy beans. When you do reflection on them, the methods that get returned are those of the generated proxy and not the actual target type.We could maybe investigate doing ClientProxy.unwrap before beans get returned from RuntimeBeanRepository.",No comments found
21162,Bug,Claus Ibsen,Cristian,"4.4.0,4.5.0,4.6.0,4.7.0",4.8.0,2024-09-03T12:30:39+0000,1725366639,2024-09-05T07:13:40+0000,2024-09-05T07:13:40+0000,"During a migration path that will take us from Camel 3.x to Camel 4.x we encountered a problem with one of our Routes.
Our Route tries to save the body of an http request to disk.
The raised error preventing the correct execution of the route is the following: ""Cannot reset stream from file /tmp/camel-cache/cos7703786668416470635.tmp"".
After debugging to understand the reason, I noticed that the execution flow compared to version 3 has changed with the introduction of the change that leads the WrappedInputStream class to implement the StreamCache -> Var headers interface (#12960).
In fact, a downgrade to version 4.3.0, the version prior to the introduction of the change, solved our problem and the route started working again.
The problem, which occurs when streamcaching spools to disk, is due to the fact that in the convertToStreamCache method of the StreamCachingHelper class the body of the message enters the else because it is an instance of StreamCache and does not continue towards the tryStreamCache method as in previous versions.
In our case, when we save the body of the http request to disk, the temp file used for spooling is deleted (FileInputStreamCache.cleanUpTempFile) before all StreamCache resets are performed (StreamCachingAdvice.after).
At that point, during the StreamCache reset, the code finds that the temp file has been deleted and raises the reported RuntimeCamelException exception.I attached an example that reproduces the problem.",['Claus Ibsen - 2024-09-03T12:53:24+0000 Thanks for reporting and the sample project']
21161,Bug,Andrea Cosentino,Guillem Folch,"4.4.0,4.7.0","4.4.4,4.8.0",2024-09-03T10:52:46+0000,1725360766,2024-09-04T06:52:37+0000,2024-09-04T06:50:04+0000,"The Camel component camel-aws2-s3 has a producer boolean option called multiPartUpload.
Based on the documentation, when this attribute is set to true, the upload will be with multipart format in case the file is larger than the partSize (another attribute). 
This is not happening, when multiPartUpload is set to true, the upload is always in multipart format unless the fileSize is 0, which is a corner case.The root cause of the problem is in the  AWS2S3Producer code around line 151.
        long partSize = getConfiguration().getPartSize();
        if (contentLength == 0 && contentLength < partSize) {
            // optimize to do a single op if content length is known and < part size
            LOG.debug(""File size < partSize. Uploading file in single operation: {}"", filePayload);
            processSingleOp(exchange);
            return;
        }
If the contentLength is not 0, the condition ""contentLength < partSize"" is never met so the upload is always done as multipart.This is really affecting performance upload when files are below the partSize.The proposed fix is just to change the condition to: 
if (contentLength == 0 || contentLength < partSize) {
...","['Claus Ibsen - 2024-09-03T11:09:17+0000 I think it should be\ncontentLength > 0 && xxxx\nThe length must be known ahead of time, if the length is 0 then its unknown and multipart must be used instead.', ""Andrea Cosentino - 2024-09-03T12:25:17+0000 Once it's fixed I'll merge this."", 'Claus Ibsen - 2024-09-03T16:18:22+0000 Ah okay so there was also a need for uploading empty files so the content length would be 0 in those situations', 'Claus Ibsen - 2024-09-03T16:20:36+0000 Ah sorry yeah using || is more correct, so the attached patch can be used.', 'Claus Ibsen - 2024-09-04T05:34:03+0000 PR\nhttps://github.com/apache/camel/pull/15416']"
21160,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-09-03T09:42:20+0000,1725356540,2024-09-03T11:05:14+0000,2024-09-03T11:05:14+0000,"The consumer is not being properly configured after creation, which may lead to problems with error handling and API misuse.",['Otavio Rodolfo Piske - 2024-09-03T11:05:14+0000 Resolved with the linked PR.']
21159,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-09-03T09:11:25+0000,1725354685,2024-09-03T09:45:00+0000,2024-09-03T09:45:00+0000,This generated invalid metadata in the catalog.,['Otavio Rodolfo Piske - 2024-09-03T09:45:00+0000 Resolved with the linked PR.']
21158,Wish,Claus Ibsen,Raymond,4.7.0,4.9.0,2024-09-03T08:34:46+0000,1725352486,2024-09-17T11:09:07+0000,2024-09-17T11:09:07+0000,"Currently, the simple language has ${exception} available as variable. When checking other expression languages like Groovy, JavaScript, Velocity etc. these are often not available.I tried to get the exception in those languages through the exchange variable which is mostly available, something like:exchange.getException()orexchange.exceptionBut these returned null.It would be more convenient when the exception is directly available as a predefined variable.","['Claus Ibsen - 2024-09-17T11:07:56+0000 Added to groovy DONE', 'Claus Ibsen - 2024-09-17T11:09:03+0000 Also added to various template languages DONE']"
21157,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-09-03T07:53:52+0000,1725350032,2024-09-03T09:19:22+0000,2024-09-03T09:19:22+0000,You may want to start a task that keeps running forever instead of small period tasks.,No comments found
21156,Improvement,James Netherton,James Netherton,None,4.8.0,2024-09-03T06:42:14+0000,1725345734,2024-09-03T07:06:51+0000,2024-09-03T07:06:51+0000,Currently you can use the SecretPath header on the getSecret operation. It'd be nice if you could do likewise for createSecret & deleteSecret.,No comments found
21155,Bug,Unassigned,Ricardo Martinez,4.8.0,4.8.0,2024-09-02T15:01:51+0000,1725289311,2024-09-02T15:23:02+0000,2024-09-02T15:23:02+0000,"In the model json for the poll eip there's no `parameters` option, whereas in the Camel YAML DSL schema there is","['Claus Ibsen - 2024-09-02T15:14:13+0000 Ah its not a bug - poll works the same as ""to""\nSo you can use ""parameters"" to define key=values for your endpoint', ""Ricardo Martinez - 2024-09-02T15:22:49+0000 Thanks for checking it out, I'm closing it then""]"
21154,Bug,James Netherton,James Netherton,None,"4.4.4,4.8.0",2024-09-02T13:42:01+0000,1725284521,2024-09-02T14:25:16+0000,2024-09-02T14:25:16+0000,"It can happen that the REST invocation for fetching secrets returns a 404. Internally, spring-vault will return null from VaultTemplate.read.This is not handled in HashicorpVaultProducer, so an NPE is thrown when the secret data is attempted to be extracted from the VaultResponse object.",No comments found
21153,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-09-02T13:32:21+0000,1725283941,2024-12-03T09:14:44+0000,2024-09-03T11:05:34+0000,"Currently, our implementation of function calling requires potential consumers of those routes to be directly linked to those producers. This means that there is an exclusive 1-to-MANY relationship between the producer and the consumers.This implementation brings limitations and problems:",['Otavio Rodolfo Piske - 2024-09-03T11:05:34+0000 Resolved with the linked PR.']
21152,Improvement,Gaelle Fournier,Gaelle Fournier,4.x,4.9.0,2024-09-02T08:25:10+0000,1725265510,2024-12-03T08:59:07+0000,2024-09-26T13:38:09+0000,The Camel Jbang kubernetes plugin use the maven org.apache.camel.k:camel-k-crds for the traits.It does not make sense to have Camel K dependency in the Kubernetes plugin. We need to remove this dependencyhttps://github.com/apache/camel/blob/9214670e640d7b3df39be2aa2d4f48ede2ce8ee4/dsl/camel-jbang/camel-jbang-plugin-kubernetes/pom.xml#L64-L70,['Pasquale Congiusti - 2024-09-26T08:51:40+0000 Also this one was requested: CAMEL-21272']
21151,Test,Unassigned,Adriano Machado,4.8.0,None,2024-09-01T23:42:28+0000,1725234148,2025-01-03T10:40:47+0000,,"Multiple tests are failing on MacOS using Java 21.0.4 on the main branch.For `camel-openapi-java`, it seems that there's a problem with timezones on my machine, I'm checking what's happening.For `camel-jms`, it is apparently failing due to connection issues to the container used in the test.For `camel-opentelemetry`, I think the issue is related to CAMEL-19667, which https://github.com/apache/camel/pull/15182 introduced test improvements.","['Adriano Machado - 2024-09-02T17:45:12+0000 Failing tests on `camel-opentelemetry` might be related to https://issues.apache.org/jira/projects/CAMEL/issues/CAMEL-21147.', 'Claus Ibsen - 2025-01-03T10:40:47+0000 Adriano did you look more into this, especially the one about timezone']"
21150,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-30T15:17:14+0000,1725031034,2024-09-01T05:51:36+0000,2024-09-01T05:51:36+0000,"So the camel trace command will then enable tracing on-demand, where you can also use it to start/stop tracing.camel trace --start
camel trace
camel trace --stopThis avoids doing tracing when its not really going to be in use.",['Claus Ibsen - 2024-08-31T07:27:52+0000 TODO: dev console DONE\nTODO: jbang commands DONE\nTODO: Json body is null DONE']
21149,Bug,Unassigned,Aurélien Pupier,4.7.0,4.8.0,2024-08-30T12:11:15+0000,1725019875,2024-09-02T07:56:45+0000,2024-09-02T07:56:45+0000,"When using the the environment variable CAMEL_DEBUGGER_SUSPEND or the system property org.apache.camel.debugger.suspend to true (see https://camel.apache.org/manual/debugger.html#_camel_route_debugger_through_jmx ), the route is awaiting at start but when attach is called, the route stays blocked.When setting to false, the route is started and the debug is working fine.","['Claus Ibsen - 2024-08-30T12:42:02+0000 Is this only SB or do you see the same at CEQ', 'Aurélien Pupier - 2024-08-30T12:58:37+0000 it is working fine with Camel Quarkus', 'Aurélien Pupier - 2024-08-30T13:09:56+0000 It was working fine with 4.4.0\n(requires to add also org.apache.camel.springboot:camel-spring-boot-xml as a dependency, not only org.apache.camel.springboot:camel-debug-starter)', 'Aurélien Pupier - 2024-08-30T13:13:27+0000 working also in 4.5.0 and 4.6.0', 'Claus Ibsen - 2024-08-30T14:47:48+0000 Try set camel.debug.waitForAttach=true in application.propeties', 'Claus Ibsen - 2024-08-30T14:49:46+0000 And try SNAPSHOT with this fix\nhttps://github.com/apache/camel-spring-boot/commit/a083fec6897e5869fc4d69839073170e93d431cf', ""Aurélien Pupier - 2024-09-02T07:56:39+0000 with camel.debug.waitForAttach=true in application.properties and 4.7.0 and environment variable CAMEL_DEBUGGER_SUSPEND set to true, it is working fine\nso that's a workaround for 4.7-\nwithout camel.debug.waitForAttach=true in application.properties and 4.8.0-SNAPSHOT and environment variable CAMEL_DEBUGGER_SUSPEND set to true , it is working""]"
21148,Bug,Claus Ibsen,Bruno Meseguer,4.8.0,4.8.0,2024-08-30T08:21:15+0000,1725006075,2024-08-31T08:53:12+0000,2024-08-31T08:52:22+0000,"Running the following commands:also with:It seems to get Camel JBang in a loop, stuck at startup time. This is the output:","['Claus Ibsen - 2024-08-31T06:30:45+0000 Hmmm I cannot reproduce this today', 'Claus Ibsen - 2024-08-31T06:31:43+0000 You can get the double logging but that is sorta expected when you use this --camel-version\n~/workspace/deleteme/stuck ❯ camel run --fresh hello.java ✘ INT 7s\nRunning integration with the following configuration:\n--camel-version=4.8.0-SNAPSHOT\nRunning integration with the following configuration:\n--camel-version=4.8.0-SNAPSHOT\n2024-08-31 08:31:10.946 INFO 99071 — [ main] org.apache.camel.main.MainSupport : Apache Camel (JBang) 4.8.0-SNAPSHOT is starting\n2024-08-31 08:31:11.044 INFO 99071 — [ main] org.apache.camel.main.MainSupport : Using Java 17.0.11 with PID 99071. Started by davsclaus in /Users/davsclaus/workspace/deleteme/stuck', ""Bruno Meseguer - 2024-08-31T08:50:08+0000 davsclaus, something I didn't test was upgrading JBang itself to the latest version.\nThis morning, I tried again and upgraded JBang to 0.117.1. Now, the command with the 4.8.0-SNAPSHOT does not get stuck.\nIt was my fault for not having tried with the most recent JBang version before. Sorry for the inconvenience."", 'Claus Ibsen - 2024-08-31T08:52:12+0000 Oh I did not suspect jbang itself, but glad its working again. It is a little tricky to switch version as you need to start camel-jbang first, and then detect version switch, and then ""sorta restart yourself on the fly"".', ""Bruno Meseguer - 2024-08-31T08:53:12+0000 Just a quick note... I got confused because 4.7.0 did not have the problem, but 4.8.0-SNAPSHOT did. Something changed from one version to another, but I'm not sure it is worth investigating the difference at this point.""]"
21147,Test,Unassigned,Aurélien Pupier,4.8.0,4.8.0,2024-08-30T07:47:14+0000,1725004034,2024-09-13T07:04:27+0000,2024-09-13T07:04:27+0000,it has failed on the last 5 builds on all platforms:,No comments found
21146,Test,Aurélien Pupier,Aurélien Pupier,4.8.0,4.8.0,2024-08-30T07:43:48+0000,1725003828,2024-08-30T12:41:48+0000,2024-08-30T12:41:48+0000,they failed on all platforms 8 times in a row:,No comments found
21145,Test,Unassigned,Aurélien Pupier,4.8.0,4.10.0,2024-08-30T07:40:34+0000,1725003634,2025-01-09T09:20:23+0000,2025-01-09T09:20:23+0000,it failed 10 times in a row:,"['Aurélien Pupier - 2024-08-30T07:56:32+0000 this component was reactivated 6 weeks ago https://github.com/apache/camel/commit/86023c2d0064292a6310df6b9c468fd3c000c572 CAMEL-20996\ngiven that last successful build is on 7th June, I have no proof it has ever worked directly on CI', 'Aurélien Pupier - 2024-08-30T08:04:29+0000 one weird thing is that 9.6.1 in Camel codebase is used since the 22 July 2024 but the image on docker hub for 9.6.1 is marked as last updated on the 23 August 2024', 'Aurélien Pupier - 2024-08-30T08:07:03+0000 the 6 days is potentially the time since when the tests started to fail', ""Aurélien Pupier - 2024-08-30T08:11:03+0000 there are no changes in the solr-docker https://github.com/apache/solr-docker repository in the last 3 months so doesn't explain a potential need of providing new versions of Solr docker images 6 days ago on an existing tag"", 'Aurélien Pupier - 2024-08-30T08:21:40+0000 asked on Solr Slack channel for reasons on the new build https://apachesolr.slack.com/archives/C01GVPZSSK0/p1725005947995369', 'Claus Ibsen - 2025-01-08T14:47:55+0000 This may fix this\nhttps://github.com/apache/camel/commit/8376227609a09ad0faaabf95d4d439dfda57c25a']"
21144,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-29T17:48:50+0000,1724953730,2024-08-30T15:17:27+0000,2024-08-30T12:57:34+0000,"When you split big data, and use group exchange (bad as its in-memory too).",['Claus Ibsen - 2024-08-30T10:34:56+0000 TODO: backlogSize default to 100 DONE\nTODO: max body size default to 32kb (size should be real size and not clipped size) for big data DONE']
21143,Test,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.8.0,4.8.0,2024-08-29T12:44:43+0000,1724935483,2024-08-31T07:51:32+0000,2024-08-31T07:51:32+0000,I have noticed that Tahu tests sometimes block my own test systems and cause the build to hang for an indefinite amount of time.A thread dump is attached for reference.,"['Claus Ibsen - 2024-08-30T12:43:46+0000 I assume you disabled the test on CI', ""Otavio Rodolfo Piske - 2024-08-30T13:09:21+0000 Yes. I'm waiting one or two more builds on the ASF CI to make sure it's truly gone, but the results on my own systems are already much better"", 'Otavio Rodolfo Piske - 2024-08-31T07:51:32+0000 Resolved with the linked PR (the test has been disabled on CIs).']"
21142,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-29T12:34:30+0000,1724934870,2024-09-04T08:29:04+0000,2024-09-04T08:29:04+0000,"We have already reload tasks in AWS, GCP and Azure Key Vault for triggering a context reload on particular events. The aim of this issue is to do the same in a cloud context, when we are using a particular secret or configmap from the Kubernetes environment.",No comments found
21141,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-08-29T10:18:49+0000,1724926729,2024-08-30T13:29:14+0000,2024-08-30T13:28:53+0000,"With the lazy = true|false on @BindToRegistry then we could also have lazy in beans created in xml/yaml DSL in the model.This may be more complicated when they use builder/factory methods and other means. So this is just to see how complex it may be, and if not, then we can consider having lazy. As users can then declare beans that would only be created if in-use.",No comments found
21140,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-29T10:16:18+0000,1724926578,2024-08-30T13:27:17+0000,2024-08-30T13:27:17+0000,"You may want to just create a class and have it automatic register with id, and then also have lifecycle methods invoked.We have init and destroy methods on beans created in yaml/xml DSL.We can also consider if the class is a Camel `org.apache.camel.Service` then it would automatic use this for init / destroy methods so users can rely on this.",['Claus Ibsen - 2024-08-29T11:48:34+0000 TODO: init/destroy on BindToRegistry DONE\nTODO: auto detect destroy methods like spring does with naming close / shutdown DONE\nTODO: camel service beans to auto init/destroy DONE\nTODO: lazy = true should we also support init/destroy methods WONT FIX']
21139,Bug,Claus Ibsen,Claus Ibsen,4.7.0,4.8.0,2024-08-29T08:55:40+0000,1724921740,2024-08-29T09:04:05+0000,2024-08-29T09:04:05+0000,This works for camel-main but not for SB or Q,No comments found
21138,Improvement,Claus Ibsen,Claus Ibsen,None,4.9.0,2024-08-29T06:47:25+0000,1724914045,2024-09-16T12:15:37+0000,2024-09-16T12:15:31+0000,When using beans via @BindToRegistry we should make these lazy as we don't need to create these beans when discovering dependencies and doing export,No comments found
21137,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-28T19:13:01+0000,1724872381,2024-08-29T10:19:06+0000,2024-08-29T08:32:55+0000,"You may want to lazy bind beans so they are only created / started on-demand, such as when its used on class or method.",No comments found
21136,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-28T12:04:59+0000,1724846699,2024-09-05T11:33:11+0000,2024-09-05T11:33:11+0000,This can help with the `camel cmd send` command to be able to send to running Camel via HTTP,No comments found
21135,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-28T11:45:51+0000,1724845551,2024-08-28T12:44:45+0000,2024-08-28T12:44:45+0000,No description available,No comments found
21134,Bug,Claus Ibsen,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-28T11:29:21+0000,1724844561,2024-08-29T09:54:12+0000,2024-08-29T09:24:41+0000,"Related to CAMEL-21133.Some users might be inclined to try generating the project with the correct dependencies in one shot as a way to try to work-around the problem:camel export --dependency=io.quarkiverse.langchain4j:quarkus-langchain4j-core:0.16.4 --dependency=io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.16.4 --runtime=quarkus Weather.javaHowever, that fails with:java.lang.IllegalStateException: Unable to locate CDIProvider)","['Claus Ibsen - 2024-08-28T13:11:31+0000 Use --ignore-loading-error', 'Otavio Rodolfo Piske - 2024-08-28T13:35:37+0000 Thanks, so I tried the --ignore-loading-error but I still got the CDI Error:\n{{/code/tmp/ai-export$ jbang -Dcamel.jbang.version=4.8.0-SNAPSHOT camel@apache/camel export --ignore-loading-error --dependency=io.quarkiverse.langchain4j:quarkus-langchain4j-core:0.16.4 --dependency=io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.16.4 --runtime=quarkus Weather.java\n[jbang] [WARN] Detected missing or out-of-date dependencies in cache.\n[jbang] Resolving dependencies...\n[jbang] org.apache.camel:camel-bom:4.8.0-SNAPSHOT@pom\n[jbang] org.apache.camel:camel-jbang-core:4.8.0-SNAPSHOT\n[jbang] org.apache.camel.kamelets:camel-kamelets:4.7.0\n[jbang] Dependencies resolved\nGenerating fresh run data\njava.lang.IllegalStateException: Unable to locate CDIProvider\n....}}', 'Claus Ibsen - 2024-08-29T09:18:09+0000 Okay so the --ignore-loading-error has been fixed as it was not working correctly for SB/Q', ""Otavio Rodolfo Piske - 2024-08-29T09:37:58+0000 Thanks. I tried, but I still get:\njbang -Dcamel.jbang.version=4.8.0-SNAPSHOT camel@apache/camel export --ignore-loading-error --dependency=io.quarkiverse.langchain4j:quarkus-langchain4j-core:0.16.4 --dependency=io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.16.4 --runtime=quarkus Weather.java\n[jbang] Resolving dependencies...\n[jbang] org.apache.camel:camel-bom:4.8.0-SNAPSHOT@pom\n[jbang] org.apache.camel:camel-jbang-core:4.8.0-SNAPSHOT\n[jbang] org.apache.camel.kamelets:camel-kamelets:4.7.0\n[jbang] Dependencies resolved\n[jbang] Building jar for CamelJBang.java...\nGenerating fresh run data\njava.lang.IllegalStateException: Unable to locate CDIProvider\nI am thinking I'm doing something wrong. Any suggestions?\nObs.: this was just after rebuilding the current code from main."", 'Otavio Rodolfo Piske - 2024-08-29T09:41:08+0000 Hm. My code may not have the last 2 commits you just pushed. Let me retry.', 'Otavio Rodolfo Piske - 2024-08-29T09:54:03+0000 davsclaus worked perfectly. Thanks for the fix!']"
21133,Bug,Unassigned,Otavio Rodolfo Piske,4.7.0,4.9.0,2024-08-28T11:24:01+0000,1724844241,2024-09-17T11:10:19+0000,2024-09-17T11:10:19+0000,"When trying to export a project using the export feature, the resulting project does not compile due to the following error (see build.log attachment for details).Step 1: export the project
camel export --dependency=dev.langchain4j:langchain4j-core:0.33.0 --dependency=dev.langchain4j:langchain4j-open-ai:0.33.0 --runtime=quarkus Weather.javaStep 2: try to build the generated project
mvn verifyResult:
Compilation fails with the following error:[error]: Build step io.quarkiverse.langchain4j.deployment.BeansProcessor#handleProviders threw an exception: io.quarkus.runtime.configuration.ConfigurationException: A ChatLanguageModel or StreamingChatLanguageModel bean was requested, but no langchain4j providers were configured. Consider adding an extension like 'quarkus-langchain4j-openai'The problem is that the generated project should be using io.quarkiverse.langchain4j:quarkus-langchain4j-core:0.16.4 and io.quarkiverse.langchain4j:quarkus-langchain4j-openai:0.16.4 instead.Adjusting the pom.xml file to manually replace the dependencies solve the problem.","['Claus Ibsen - 2024-08-28T11:30:28+0000 You cannot expect jbang to know that the manual deps you specify should be something else. So if you run in Q and want to use those quarkvise JARs then specify using these maven coordinates.\ncamel-jbang will only export to SB/Q and adjust maven coordinates for its own JARs.', 'Claus Ibsen - 2024-08-28T13:13:17+0000 It can be improved if this kind of code that is not Camel\n    ChatLanguageModel model = OpenAiChatModel.builder()\n                .apiKey(""EMPTY"")\n                // .modelName(""sam4096/qwen2tools:0.5b"")\n                .modelName(""llama3.1:latest"")\n                .baseUrl(""http://localhost:8000/v1/"")\n                // .temperature(0.0)\n                .timeout(ofSeconds(60))\n                // .responseFormat(""json_object"")\n                .logRequests(true)\n                .logResponses(true)\n                .build();\n\n     getContext().getRegistry().bind(""chatModel"", model);\nIs moved out of configure as that is for the route. And that this code is not in use during exporting.', 'Claus Ibsen - 2024-08-28T13:16:16+0000 If this code is in its own java file, and that we come up with a way to tell Camel that this bean should not be instantiated during export.', 'Claus Ibsen - 2024-08-28T13:22:54+0000 Can you try with moving the code into a supplier like this. Then I can export\n    @Override\n    public void configure() throws Exception {\n        getContext().getRegistry().bind(""chatModel"", ChatLanguageModel.class, () -> {\n            return OpenAiChatModel.builder()\n                    .apiKey(""EMPTY"")\n                    // .modelName(""sam4096/qwen2tools:0.5b"")\n                    .modelName(""llama3.1:latest"")\n                    .baseUrl(""http://localhost:8000/v1/"")\n                    // .temperature(0.0)\n                    .timeout(ofSeconds(60))\n                    // .responseFormat(""json_object"")\n                    .logRequests(true)\n                    .logResponses(true)\n                    .build();\n        });\n\n        List<ChatMessage> messages = new ArrayList<>();\n    ...', 'Claus Ibsen - 2024-08-28T13:24:56+0000 And when I run it starts but fails because I of course dont have all those API keys setup\n~/workspace/deleteme/ai/code ❯ mvn quarkus:run                                                                                                                                   4s\n[INFO] Scanning for projects...\n[INFO]\n[INFO] --------------------< org.example.project:Weather >---------------------\n[INFO] Building Weather 1.0-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- quarkus:3.13.3:run (default-cli) @ Weather ---\nExecuting ""/Library/Java/JavaVirtualMachines/zulu-17.jdk/Contents/Home/bin/java -Dquarkus.platform.version=3.13.3 -Dquarkus.application.version=1.0-SNAPSHOT -Dquarkus.platform.artifact-id=quarkus-bom -Dquarkus.platform.group-id=io.quarkus.platform -Dquarkus.application.name=Weather -jar /Users/davsclaus/workspace/deleteme/ai/code/target/quarkus-app/quarkus-run.jar""\nConfiguration validation failed:\n SRCFG00014: The config property quarkus.langchain4j.openai.api-key is required but it could not be found in any config source\nException in thread ""Shutdown thread"" java.lang.NullPointerException: Cannot invoke ""io.quarkus.runtime.Application.isStarted()"" because ""app"" is null\n at io.quarkus.runtime.ApplicationLifecycleManager$ShutdownHookThread.run(ApplicationLifecycleManager.java:455)\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  2.866 s\n[INFO] Finished at: 2024-08-28T15:24:23+02:00\n[INFO] ------------------------------------------------------------------------', 'Claus Ibsen - 2024-08-28T13:27:02+0000 We can consider having some kind of mapping for CEQ and CSB where we can type in gav -> gav so we can have a list of known JARs that should be remapped.\nThen we can map to those special quarkus JARs - it may be that in the future there are others to come.', 'Otavio Rodolfo Piske - 2024-08-28T13:38:23+0000 Thanks Claus. Yeah, you actually have to provide a key (or configure it in the properties using ""NO_API_KEY"" for Ollama).\nI got your point and I\'m thinking what we can do to ensure that users don\'t do it this way (this code was actually provided by a user). I think it\'s reasonable to expect that they will try to do the model configuration similarly to what is here, so I am not sure what we could to do prevent that.', ""Otavio Rodolfo Piske - 2024-08-29T09:55:39+0000 davsclaus for this one, let's hold the fix for after 4.8. I have some ideas, but I need some time to think carefully about them."", 'Claus Ibsen - 2024-09-17T11:10:19+0000 This would works with 4.9 onwards']"
21132,Task,Unassigned,Jiri Ondrusek,None,None,2024-08-28T10:45:06+0000,1724841906,2024-08-28T10:45:06+0000,,Automatic CLI tests are missing in https://github.com/apache/camel-upgrade-recipes/,No comments found
21131,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.9.0,2024-08-28T10:38:13+0000,1724841493,2024-12-05T08:50:28+0000,2024-12-05T08:50:28+0000,"Test camelAPIsPropertiesTest is wrongly defined (default method uses wrong active recipe).
If the issue is fixed, it uncovers a missing recipe in the list of 4.0.yaml recipe.",No comments found
21130,Improvement,Zheng Feng,Claus Ibsen,None,4.8.0,2024-08-28T10:35:26+0000,1724841326,2024-08-29T14:12:27+0000,2024-08-29T14:12:26+0000,Lets see if we can have .java supported as well. Currently it works for xml/yaml routes. But java are added package name during export. In dev mode we can avoid this and copy to root so the source can copy via symbolic link for supporting reload on save.,['Zheng Feng - 2024-08-29T00:39:02+0000 The java sources have to be recompiled to trigger the restrat in Spring Boot. So it should not be supported to reload by camel-jbang.']
21129,Bug,Claus Ibsen,Thomas Jodes,4.7.0,4.8.0,2024-08-28T10:05:09+0000,1724839509,2024-08-28T10:51:55+0000,2024-08-28T10:41:16+0000,"Rest Route creation fails with a NPE, setup usingrestConfiguration().clientRequestValidation(true)with a JSON-binding to a Java type like:rest(""/foo"").get(""/bar"").outType(MyType.class).to(""bean:one?method=baz"").Root cause:  Changes from 4.6 to 4.7 in RestBindingAdvisorFactory#build(...)
local variable ""outJson"" is always null, leading to the NPE for sure at the line seen in the exception trace below.In 4.6, ""outJson"" is created for sure hereIn 4.7, ""outJson"" remains null here (because of the new if-else) and will lead to the NPE here.Caused by: java.lang.NullPointerException: Cannot invoke ""Object.getClass()"" because ""target"" is null
    at org.apache.camel.impl.engine.IntrospectionSupport.setProperty(IntrospectionSupport.java:551)
    at org.apache.camel.impl.engine.IntrospectionSupport.setProperty(IntrospectionSupport.java:691)
    at org.apache.camel.impl.engine.DefaultBeanIntrospection.setProperty(DefaultBeanIntrospection.java:220)
    at org.apache.camel.support.processor.RestBindingAdviceFactory.setupJson(RestBindingAdviceFactory.java:174)
    at org.apache.camel.support.processor.RestBindingAdviceFactory.build(RestBindingAdviceFactory.java:80)Setting restConfiguration().clientRequestValidation(false) will overgo the critical unit of code.","['Claus Ibsen - 2024-08-28T10:30:13+0000 Yeah binding mode is off by default, and the outJson should not be created - but we should avoid the NPE in this situation', ""Thomas Jodes - 2024-08-28T10:51:55+0000 In my case (clientRequestValidation true and binding mode 'off' -> 'jackson' here) that leads to a NPE, will it be adressed in 4.8.0?""]"
21128,Improvement,Saravanakumar Selvaraj,Claus Ibsen,None,4.9.0,2024-08-28T09:18:38+0000,1724836718,2024-10-17T12:09:02+0000,2024-10-16T19:25:56+0000,"The SSL in camel-core allows to setup trust store and certifcates and all of that. However sometimes you just need to have a trust all (for development purpose) and that is harder to do.https://github.com/apache/camel-karavan/discussions/1366We should have a way to make this easier, and also make some WARN logging that this is for development only.","['Claus Ibsen - 2024-10-16T07:26:23+0000 It would be good to have this in camel-spring-boot also. You would need to add the new option there, and configure it to use the trust all if enabled and do the WARN log like in camel-main\nhttps://github.com/apache/camel-spring-boot/tree/main/core/camel-spring-boot/src/main/java/org/apache/camel/spring/boot/security', 'Saravanakumar Selvaraj - 2024-10-16T19:19:40+0000 Hi Claus,\nCurrently in spring boot its not even possible to pass key store or trust store filename as String through configuration properties. Ultimately we will need to rely on Java based configurations, and we can anyways just import the singleton class org.apache.camel.support.jsse.TrustAllManager class and use it wherever required.\nThanks,\nSaravanakumar']"
21127,Task,Adriano Machado,Aurélien Pupier,4.7.0,4.9.0,2024-08-28T09:11:44+0000,1724836304,2024-09-09T10:28:39+0000,2024-09-09T10:28:39+0000,"it is used in several places https://github.com/search?q=repo%3Aapache%2Fcamel%20%22import%20org.apache.maven.plugins.annotations.Component%22&type=codeit was deprecated in org.apache.maven.plugins:maven-plugin-plugin  3.15.0 , see MPLUGIN-530",No comments found
21126,Bug,Claus Ibsen,Claus Ibsen,4.7.0,4.8.0,2024-08-28T08:08:42+0000,1724832522,2024-08-28T08:55:14+0000,2024-08-28T08:55:14+0000,"2024-08-28 09:54:16.095  INFO 25130 — [ ReloadOnDemand] camel.support.RouteWatcherReloadStrategy : Reloading properties: file:reload-csv2/application.properties. (Only Camel routes and components can be updated with changes)
2024-08-28 09:54:16.103  WARN 25130 — [ ReloadOnDemand] amel.support.RouteOnDemandReloadStrategy : Error reloading routes due to Cannot find RoutesBuilderLoader in classpath supporting file extension: csv. This exception is ignored.
java.lang.IllegalArgumentException: Cannot find RoutesBuilderLoader in classpath supporting file extension: csv
	at org.apache.camel.impl.engine.DefaultRoutesLoader.resolveRoutesBuilderLoader(DefaultRoutesLoader.java:319) ~[camel-base-engine-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.impl.engine.DefaultRoutesLoader.findRoutesBuilders(DefaultRoutesLoader.java:124) ~[camel-base-engine-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.impl.engine.DefaultRoutesLoader.findRoutesBuilders(DefaultRoutesLoader.java:101) ~[camel-base-engine-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.impl.engine.DefaultRoutesLoader.updateRoutes(DefaultRoutesLoader.java:292) ~[camel-base-engine-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.support.RouteWatcherReloadStrategy.onRouteReload(RouteWatcherReloadStrategy.java:290) ~[camel-support-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.support.RouteOnDemandReloadStrategy.doOnReload(RouteOnDemandReloadStrategy.java:114) ~[camel-support-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.support.RouteOnDemandReloadStrategy.onReload(RouteOnDemandReloadStrategy.java:74) ~[camel-support-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at org.apache.camel.impl.console.ReloadDevConsole.lambda$doCallJson$1(ReloadDevConsole.java:102) ~[camel-console-4.8.0-SNAPSHOT.jar:4.8.0-SNAPSHOT]
	at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) [?:?]
	at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) [?:?]
	at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) [?:?]
	at java.base/java.lang.Thread.run(Thread.java:840) [?:?]",No comments found
21125,Test,Unassigned,Aurélien Pupier,4.8.0,4.8.0,2024-08-27T14:42:43+0000,1724769763,2024-09-18T13:18:23+0000,2024-09-18T13:18:19+0000,"they are often failing, both in opentelemetry and observation (for instance failed in the last 3 run)",['Aurélien Pupier - 2024-08-30T07:48:39+0000 failed in the last 5 builds so sounds more than flaky or very very flaky https://issues.apache.org/jira/browse/CAMEL-21147']
21124,Bug,Unassigned,Marco Carletti,4.7.0,4.8.0,2024-08-27T14:31:56+0000,1724769116,2024-08-28T07:24:23+0000,2024-08-28T07:24:23+0000,"As documented, the properties can be loaded from the application.properties fileIn the current version, it is not possible anymore. Downgrading the Camel JBang version to 4.6.0 it worksSteps to reproduce (to be executed in an empty folder):expected message:current message:","['Claus Ibsen - 2024-08-27T16:28:09+0000 I think we have fixed this already for 4.8', 'Marco Carletti - 2024-08-28T07:14:54+0000 the commit d0008cf1760d82a63132f6757feb948b49904c6d fixes the issue']"
21123,Test,Unassigned,Aurélien Pupier,4.8.0,4.8.0,2024-08-27T12:30:46+0000,1724761846,2024-09-13T07:05:19+0000,2024-09-13T07:05:19+0000,"This test is often failing (and often with all the parameterized tests when it happens):it failed on ubuntu and ppc64lein the last 5 builds, there was at least one failure of these parameterized teststhe timeout mentioned was already doubled recently from 10 to 20 seconds. This is suspicious and given that iti related to a ""concurrent"" access, there might be a real problem in th elogic.I wasn't able to reproduce locally even after launching a lot of times",No comments found
21122,Improvement,Unassigned,Otavio Rodolfo Piske,4.7.0,4.x,2024-08-27T12:07:51+0000,1724760471,2024-08-27T12:33:46+0000,,"Currently, AvailablePort only works when defined as a static field. Some components, such as Jetty, need them to be transient (i.e.: regenerated after every test), as such the current implementation is not compatible (it causes flakiness on camel-jetty).",No comments found
21121,Test,Unassigned,Claus Ibsen,None,4.x,2024-08-27T08:48:38+0000,1724748518,2025-01-03T10:43:29+0000,2025-01-03T10:43:29+0000,No description available,"['Claus Ibsen - 2024-08-27T08:49:05+0000 https://camel.zulipchat.com/#narrow/stream/364655-camel-core-dev/topic/Camel.20v4.20.28help.20wanted.29/near/465111539', 'Marco Carletti - 2024-08-27T09:44:16+0000 the module camel-jbang-it uses target/data/[container id] folder as shared temporary folder, where [container id] is the id of the docker container managed by testcontainers used to run jbang test environment. It is configurable as system property pom.xml#L232 and it should be deleted after each test JBangTestSupport.java#L87', 'Claus Ibsen - 2025-01-03T10:43:29+0000 Assume its fixed/better now']"
21120,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-26T17:13:11+0000,1724692391,2024-08-30T15:08:13+0000,2024-08-30T15:08:13+0000,"When using inlined groovy script in camel-jbang, then on reload (such as --dev) then the cache should be flushed so groovy is recompiled and updated.","['Claus Ibsen - 2024-08-28T10:37:26+0000 We now flush on stop. However on reload its not essential - but we can consider some kind of flushing. Though if we flush all then reloading a single route will cause all groovy to be recompiled.', 'Claus Ibsen - 2024-08-30T15:08:13+0000 We now also flush on reload in dev mode']"
21119,New Feature,Guillaume Nodet,Guillaume Nodet,None,4.8.0,2024-08-26T14:09:56+0000,1724681396,2024-08-26T14:11:14+0000,2024-08-26T14:11:14+0000,Provides better support for conveying java.nio.file.Path objects in messages with the same converters that are registered for java.io.File objects.,No comments found
21118,Improvement,Marco Carletti,Marco Carletti,None,4.8.0,2024-08-26T08:12:14+0000,1724659934,2024-08-28T13:29:37+0000,2024-08-28T13:29:37+0000,"Add an example to show how to work with Camel CXF and OpenTelemetry, using cxf-integration-tracing-opentelemetry module",No comments found
21117,Improvement,Zheng Feng,Zheng Feng,None,4.8.0,2024-08-26T07:20:34+0000,1724656834,2024-09-05T14:58:28+0000,2024-09-05T14:58:28+0000,No description available,"['Claus Ibsen - 2024-08-27T11:53:07+0000 An example would maybe be possible at\nhttps://github.com/apache/camel-kamelets-examples/tree/main/jbang\nie if you can run camel vanilla and include the narayana tx manager or what is needed to run standalone.\nAnd then some hints in the readme when exporting to Q or SB then they offer TX that you should use.', 'Zheng Feng - 2024-09-03T00:29:17+0000 Sure, I will take a look.', 'Claus Ibsen - 2024-09-05T14:58:28+0000 an example can be added later (only if there is some time)']"
21116,Improvement,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-26T06:17:25+0000,1724653045,2024-08-26T07:19:28+0000,2024-08-26T07:19:28+0000,No description available,No comments found
21115,Bug,Unassigned,Eugene Berman,4.7.0,None,2024-08-23T15:07:57+0000,1724425677,2024-08-23T18:50:33+0000,2024-08-23T18:50:33+0000,"I have a custom unit test which requires access to Camel context. My code is as simple as:@QuarkusTest
public class MyCustomTest {
@Inject
protected CamelContext camelContext;It worked just fine prior to upgrading to Camel 4.7.0 and Quarkus 3.13.0 but now I'm getting error: java.lang.NullPointerException: Cannot invoke ""org.apache.camel.CamelContext.getCamelContextExtension()"" because ""camelContext"" is null and running the code in the debug mode confirms that the camelContext is indeed null. Is it a known bug?","['Eugene Berman - 2024-08-23T18:50:15+0000 Sorry, my mistake, I used javax Inject instead of Jakarta Inject.']"
21114,Bug,Claus Ibsen,Andre Weickel,"3.14.10,3.22.2",4.8.0,2024-08-23T12:36:15+0000,1724416575,2024-09-02T11:14:09+0000,2024-09-02T11:14:09+0000,"A transacted route with ZipSplitter and Aggregation Strategy does not aggregate the last zip file entry. The issue only occurs for transacted routes.Example:Zip ArchiveBoth splits are processed but only for the first exchange (A.xml) the aggregate method is called.For a zip archive with two entries the doRun() method of MulticastTransactedTask is called three times. The third time iterator.next() returns null although hasNext() was true. As a result the doDone() method is called but there is still a task in the queue (with the second exchange). This task is processed after doDone() was executed but it’s not aggregated because of a done check in aggregate() of MulticastTransactedTask.We found the problem in Camel 3.14, but it is still present in Camel 3.22.It can be reproduced with the following test (it works if you remove the transacted tag from the route)","['Claus Ibsen - 2024-08-26T04:36:10+0000 Camel 3.14 is EOL. Try with 3.22 or latest 4.x release.', 'Andre Weickel - 2024-08-26T07:03:45+0000 As mentioned the issue also occurs with 3.22', 'Claus Ibsen - 2024-08-26T07:05:00+0000 Try with 4.7.0 if you can and report back', 'Andre Weickel - 2024-08-27T12:29:58+0000 Same issue with 4.7.0', 'Claus Ibsen - 2024-09-01T08:02:27+0000 Okay its the zip iterator that does not work well with next / hasNext in transacted mode']"
21113,Dependency upgrade,Unassigned,Claus Ibsen,None,4.4.4,2024-08-23T07:57:22+0000,1724399842,2024-08-26T08:08:29+0000,2024-08-26T08:08:29+0000,No description available,No comments found
21112,Bug,Claus Ibsen,Alexander Zobkov,"3.22.1,4.7.0","3.22.3,4.4.4,4.8.0",2024-08-22T13:14:16+0000,1724332456,2024-08-27T13:11:25+0000,2024-08-26T13:36:47+0000,"It seems there is an issue when using simple language to lookup parameters on producer endpoint in batch mode, like the following:DefaultSqlPrepareStatementStrategy and particular method lookupParameter(…)  in class PopulateIterator tries to evaluate the specified simple expression on a body of the exchange. However when body is iterator that contains the parameter iterators for batch mode (as told in the doc: https://camel.apache.org/components/4.4.x/sql-component.html#_treatment_of_the_message_body) then simple language expression written for an object to be returned by the parameter iterator makes no sense and will always fail.It seems when batch mode is enabled than DefaultSqlPrepareStatementStrategy.PopulateIterator needs to create a kind of fake Exchange from an object to be returned by the parameter iterator and pass to the simple language engine.Vanilla code
https://github.com/apache/camel/blob/0e6dd1ea1ddb566fc4ee4eb4757d4a3c703ca06f/components/camel-sql/src/main/java/org/apache/camel/component/sql/DefaultSqlPrepareStatementStrategy.java#L262Suggested code change:","['Claus Ibsen - 2024-08-26T08:43:36+0000 Can you perhaps provide an unit test in this batch mode that tests this, we can use for looking into implemented a fix.', 'Claus Ibsen - 2024-08-26T12:10:27+0000 Okay I am working on an unit test', 'Claus Ibsen - 2024-08-26T12:16:10+0000 Here is a PR\nhttps://github.com/apache/camel/pull/15315', 'Alexander Zobkov - 2024-08-26T18:08:30+0000 Thank you for the fix! Would you please backport the fix to Camel 3.22.x line? \nAs of now, it would be problematic for us migrate to Camel 4.x line but willing eagerly to get rid of applied workaround for the issue.', 'Claus Ibsen - 2024-08-27T07:42:55+0000 Okay I found some time to backport to 3.x', 'Alexander Zobkov - 2024-08-27T13:11:25+0000 Great! Thanks']"
21111,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.x,2024-08-22T13:00:31+0000,1724331631,2024-12-16T08:54:20+0000,,"Upgrade tests are currently resolving all camel-dependencies required for the test from the highest version defined by the recipe. This brings a lot of dependencies (with recipes 4.6->4.7 the number of test dependencies is 50+)The highest possible version might not be neccessary.
Let say change in camel-api is happening between version 4.7.0 and 4.6.0. Current junit test would load dependency camel-api:4.6.0 (eventhough camel-ap:4.5.0 might be already loaded and would satisfy the recipe test)I think that it should be possible to change resolving so the number of dependencies would stay lower.",No comments found
21110,New Feature,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-22T11:10:23+0000,1724325023,2024-09-03T11:05:01+0000,2024-09-03T11:05:01+0000,"Lets make it easy to have some camel routes and html/js/png files so you can have a web front page and let Camel automatic service this via its embedded http server (platform-http).And then when export to Q/SB then these files should be in src/main/resources (and whatever folder they may have for html stuff).And the files should not be cached so you can update and reload the webpage for updates.This makes it easier to build prototypes with camel and web apps.
Its just for serving those files, not for a template library like thymaleaf or qute etc.","['Claus Ibsen - 2024-08-22T11:21:37+0000 We can have options to configure the serving http\ncamel.server.serving-enabled = true\ncamel.server.serving-path = web\ncamel.server.serving-allow = *.html,xxxx (to filter what files is allowed)\ncamel.server.serving-deny = zzzz\nThen the http url will be localhost:8080/web/*\nIt may be root as default, but mind we have /q/info /q/dev and so on for other parts.\nAnd if there is an index.* file then that is serviced by default. Otherwise it matches by file name.\nAnd should not be cached so you can update files.', ""Bruno Meseguer - 2024-08-22T14:31:31+0000 I've added sample files to use and try out:\nserver.xml (Server side Camel routes)\nindex.html (Home page)\nstyle.css (style for HTML)\nThe dynamic HTML page simulates a chat conversation and sends data to Camel, and Camel responds.\nThe idea would be to come up with some simple approach where you could run something similar to:\ncamel run *\nand the user can open the browser and display the page with:\nhttp://localhost:8080 \nAs a workaround the samples include a Camel route that serves the HTML resources to simulate the desired behaviour."", 'Claus Ibsen - 2024-08-23T05:21:23+0000 SB serving static content\nhttps://docs.spring.io/spring-boot/reference/web/servlet.html#web.servlet.spring-mvc.static-content', 'Claus Ibsen - 2024-08-23T07:03:16+0000 Q serving static content\nhttps://quarkus.io/guides/web\nhttps://quarkus.io/guides/http-reference', 'Claus Ibsen - 2024-09-02T14:39:43+0000 TODO: export to SB DONE\nTODO: export to Q DONE\nstatic files should be in their special folders, and also turn on this feature in their runtimes is different than pure Camel']"
21109,Bug,Claus Ibsen,Harish Annamalai,3.x,"3.22.3,4.4.4,4.8.0",2024-08-22T10:47:04+0000,1724323624,2024-08-26T07:51:54+0000,2024-08-26T07:51:54+0000,"Choice evaluation works inconsistently if the condition contains Predicates with String, but the value is float.Consider the choice expression:${exchangeProperty.left} >= ${exchangeProperty.right}If the both the properties are 'left' and 'right', but value contained in them is float like '4.0' '7.5' etc, the expression is compared as Strings and returns false. However, if the value contained in them is ""Pure"" Integer, then they are compared as ""Numbers"" and Comparision returns true.Please see the Examples:Example 1:from(""timer:getter?period=1000&repeatCount=1"")
                .setProperty(""left"", simple(""40""))
                .setProperty(""right"", simple(""7.5""))
                .choice()
                .when(simple(""${exchangeProperty.left} >= ${exchangeProperty.right}""))
                .to(""log://match"")
                .otherwise()
                .to(""log://otherwise"")
                .end();
                
The Predicate in Example 1, evaluation returns false for the case above as it compares 40 and 7.5 as Strings.Example 2:                
        from(""timer:getter?period=1000&repeatCount=1"")
                .setProperty(""left"", simple(""40""))
                .setProperty(""right"", simple(""7""))
                .choice()
                .when(simple(""${exchangeProperty.left} >= ${exchangeProperty.right}""))
                .to(""log://match"")
                .otherwise()
                .to(""log://otherwise"")
                .end();
                
The Predicate in Example 2, evaluation returns true for the case above as it compares 40 and 7 as Numbers.We debugged the Camel Code, and compared the behavior against Camel 2x, we can see that the predicate evaluation takes ""Double"" also into consideration.Camel 2x Code:
ObjectHelper.javapublic static int typeCoerceCompare(TypeConverter converter, Object leftValue, Object rightValue) {// if both values is numeric then compare using numeric
        Long leftNum = converter.tryConvertTo(Long.class, leftValue);
        Long rightNum = converter.tryConvertTo(Long.class, rightValue);
        if (leftNum != null && rightNum != null)// also try with floating point numbers
        Double leftDouble = converter.tryConvertTo(Double.class, leftValue);
        Double rightDouble = converter.tryConvertTo(Double.class, rightValue);
        if (leftDouble != null && rightDouble != null)Camel 3x Code:
ObjectHelper.javapublic static int typeCoerceCompare(TypeConverter converter, Object leftValue, Object rightValue) {// optimize for common combinations of comparing numbers
        if (leftValue instanceof String && rightValue instanceof String) {
            String leftNum = (String) leftValue;
            String rightNum = (String) rightValue;
            if (isNumber(leftNum) && isNumber(rightNum))return leftNum.compareTo(rightNum);
        } else if (leftValue instanceof Integer && rightValue instanceof Integer) {","['Claus Ibsen - 2024-08-22T11:00:37+0000 Yeah that would require adding support for Float.', 'Harish Annamalai - 2024-08-23T05:15:12+0000 davsclaus : Thanks for providing a Fix to this issue in a very short duration.\nCould this also be patched to camel-3.x version as Camel 3.22 still supported for next 3-4 months?', 'Harish Annamalai - 2024-08-23T14:57:37+0000 We humbly request you to provide a this same patch to camel-3.x series of branches as Camel 3.22 is supported up to Dec 2024.']"
21108,Test,Aurélien Pupier,Aurélien Pupier,4.8.0,4.8.0,2024-08-22T08:47:47+0000,1724316467,2024-08-22T10:36:07+0000,2024-08-22T09:57:05+0000,"after a bisect, it started to fail with Junit upgrade https://github.com/apache/camel/commit/89e67f210aa4e1d81c0f984d6fbe7df8a639ff25",['Aurélien Pupier - 2024-08-22T08:51:38+0000 we hit the only breaking change:\nhttps://junit.org/junit5/docs/5.11.0/release-notes/#release-notes-5.11.0-junit-platform-deprecations-and-breaking-changes\nhttps://junit.org/junit5/docs/5.11.0/user-guide/index.html#extensions-supported-utilities-search-semantics\n  workaround is to use -Djunit.platform.reflection.search.useLegacySemantics=true when launching the test']
21107,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.10.0,2024-08-22T07:57:08+0000,1724313428,2025-01-29T09:12:54+0000,2025-01-29T09:12:54+0000,No description available,"['Andrea Cosentino - 2024-08-30T13:07:23+0000 Secrets - Done\nJob - Done\nCron jobs - Done\nNamespaces - Done', 'Claus Ibsen - 2024-11-28T08:53:30+0000 Is there more work on this?', 'Andrea Cosentino - 2024-11-28T09:00:27+0000 Yes, there are still producers to work on.', 'Claus Ibsen - 2025-01-20T13:21:00+0000 Is there more work on this?']"
21106,Task,Claus Ibsen,Claus Ibsen,4.8.0,4.8.0,2024-08-22T07:05:55+0000,1724310355,2024-08-22T10:35:13+0000,2024-08-22T10:35:13+0000,"Recent refactorings removed this which we should add back, so you can easily build and package docker based apps on pure camel.",No comments found
21105,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-22T05:58:48+0000,1724306328,2024-08-22T07:56:26+0000,2024-08-22T07:56:26+0000,No description available,No comments found
21104,Improvement,Claus Ibsen,Aurélien Pupier,None,4.9.0,2024-08-21T13:34:30+0000,1724247270,2024-09-18T10:36:32+0000,2024-09-18T10:36:32+0000,"currently when creating a Camel project , the used files are copied to th enew project;
When it is exported to another folder that sounds fine but when creating in-place, the files sounds as duplicated.it will facilitate this important use case:","['Claus Ibsen - 2024-08-26T08:44:53+0000 I dont really understand what you explain.', 'Aurélien Pupier - 2024-08-26T09:00:10+0000 example of classical flow:\ncamel init my-route.camel.yaml\nExperiment locally\nshare changes via git push\nexperiment potentially more and git push more modifications\nproject ready to go to ""productization"" step, camel export\ngit push the Maven project\n--> currently the file my-route.camel.yaml will be duplicated. it will be both at the root of repository and inside src/main/resources\nThe expected behavior is to remove the my-route.camel.yaml file which is at the root of repository. So to do a move instead of a copy.\nI think we need to keep the files when exporting to a completely different folder.', 'Claus Ibsen - 2024-09-17T11:13:35+0000 Ah okay so you are not really intended to export to current dir.\nAnd if you do, then yeah we could have a `–clean` flag or something so when the export is finishing it can clean the target dir first', 'Claus Ibsen - 2024-09-18T10:35:46+0000 Okay the flag is called --clean-dir\n   camel export --gav=com.foo:acme:1.0 --runtime=camel-main --clean-dir']"
21103,New Feature,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-21T11:55:20+0000,1724241320,2024-08-21T13:59:31+0000,2024-08-21T13:59:31+0000,"To make it easier to browse and download the Camel routes and other resource files, that can be used for troubleshooting, and better tooling.",No comments found
21102,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-08-21T11:36:09+0000,1724240169,2024-12-27T12:50:07+0000,,https://aws.amazon.com/about-aws/whats-new/2024/08/amazon-s3-conditional-writes/,"['Claus Ibsen - 2024-12-27T12:50:07+0000 Andrea, did we already implement this ?']"
21101,Bug,Andrea Cosentino,Andrea Cosentino,None,"4.4.4,4.8.0",2024-08-21T07:21:30+0000,1724224890,2024-08-21T09:01:41+0000,2024-08-21T09:01:41+0000,Only the header.,No comments found
21100,Bug,James Netherton,James Netherton,None,4.8.0,2024-08-20T14:16:03+0000,1724163363,2024-08-21T04:19:09+0000,2024-08-21T04:19:09+0000,"Unless I misunderstand something, if you choose to use AZURE_IDENTITY as the credentialType option, then there should be no need to supply either a sharedAccessName or sharedAccessKey. Those are only required when the component automatically builds a connection string (E.g CONNECTION_STRING credentialType option).But when AZURE_IDENTITY is used, you get a validation error:I think we can skip this validation for AZURE_IDENTITY, given that all of the authentication info should get discovered by the azure-identity internals.",No comments found
21099,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-20T13:56:58+0000,1724162218,2024-08-21T13:59:24+0000,2024-08-21T13:59:24+0000,"A way to only list files.
And then to load a file in raw mode",['Claus Ibsen - 2024-08-21T13:38:07+0000 CAMEL-21103 is a better solution - use this instead.']
21098,Task,Otavio Rodolfo Piske,Claus Ibsen,4.8.0,4.8.0,2024-08-20T05:28:25+0000,1724131705,2024-08-21T08:50:10+0000,2024-08-21T08:50:10+0000,"This causes camel-ftp tests to fail, but would fail for other kind of test-infra that would use global store from junit to store values that Camel access.",No comments found
21097,Improvement,Unassigned,Claus Ibsen,None,4.8.0,2024-08-19T14:27:53+0000,1724077673,2024-10-08T10:22:23+0000,2024-08-21T08:50:21+0000,https://stackoverflow.com/questions/78887678/apache-camel-as2-mic-algorithms-restricted-to-md5-and-sha1,No comments found
21096,Bug,Claus Ibsen,Tomek,"4.5.0,4.6.0,4.7.0",4.8.0,2024-08-19T08:29:28+0000,1724056168,2024-08-21T07:14:10+0000,2024-08-19T16:26:52+0000,"In our application we have a base rout builder class in which we would like to intercept all REST routes executions (REST requests)All our routes extend this class and are constructed like the code below:This approach worked fine in Camel 3., but in Camel 4. my processor is not executed.I've made some investigation and:, but still my processor is not executed after REST request.Could you please check this issue?","[""Tomek - 2024-08-19T11:06:21+0000 I've downgraded Camel to version 4.4.3 (latest one from 4.* family), because the intercept changes were introduced within version 4.5 (https://camel.apache.org/manual/camel-4x-upgrade-guide-4_5.html)\nIt looks like everything works fine using 4.4.3"", 'Claus Ibsen - 2024-08-19T11:10:34+0000 You can set inlineRoutes=false in rest-dsl as doced in the guide\nhttps://camel.apache.org/manual/camel-4x-upgrade-guide-4_5.html#_rest_dsl', 'Tomek - 2024-08-21T07:14:10+0000 Thank you very much for the hint. Setting the camel.rest.inline-routes flag to false solved the issue.']"
21095,New Feature,Unassigned,Claus Ibsen,None,4.x,2024-08-18T08:58:36+0000,1723971516,2025-01-02T16:29:31+0000,,You can configure this in classic XML DSL (spring) (see CAMEL-20774) and in camel-main/SB you can configure this via properties in camel.ssl.However it would be great to have it first-class in XML IO and YAML DSL as well so its easier to configure there also and for tooling. Configure SSL is complex and this can help with better tooling assistance.,No comments found
21094,New Feature,Unassigned,ALEXANDRE DAVI ZANELATTO,None,4.8.0,2024-08-16T21:25:59+0000,1723843559,2024-08-20T09:54:28+0000,2024-08-20T09:54:28+0000,Use the PDFMergerUtility from Apache PDFBox to be able to merge multiple PDF files into a single one,['Claus Ibsen - 2024-08-17T07:23:04+0000 You are welcome to work on such feature and send a PR against main branch']
21093,Bug,Aurélien Pupier,Aurélien Pupier,4.7.0,4.8.0,2024-08-16T14:17:10+0000,1723817830,2024-09-04T15:21:06+0000,2024-08-19T16:35:56+0000,https://github.com/apache/camel-spring-boot-examples/tree/main/fhir-auth-txUncheck class was added in commons-io 2.12.0 https://commons.apache.org/proper/commons-io/apidocs/org/apache/commons/io/function/Uncheck.html so between the 2 conflicting versions.,"['Aurélien Pupier - 2024-08-16T14:25:59+0000 Provided a PR to worjkaround the version clash in the example. But do we need something more generic? Force more recent commons-io on camel-fhir component? Try to have fhir component to upgrade commons-io?', 'Claus Ibsen - 2024-08-17T07:23:51+0000 Can you try to change the camel-fhir pom.xml to use the newer commons-io so its aligned to same version']"
21092,Bug,Aurélien Pupier,Aurélien Pupier,4.7.0,None,2024-08-16T13:04:19+0000,1723813459,2024-08-19T13:51:19+0000,2024-08-19T13:51:19+0000,"when using Camel JBang init to genrate an xml file, it genrates:which is giving this xsd validation:","['Aurélien Pupier - 2024-08-16T13:10:19+0000 replacing camel tag by routes is respecting the xsd and is working at runtime.', 'Aurélien Pupier - 2024-08-16T13:13:02+0000 example is also using routes https://github.com/apache/camel-examples/blob/a3324456d2b20fa69c917dec1fb49dfca14c6904/main-xml/src/main/resources/routes/my-route.xml#L20 (even if not including the xsd)', 'Aurélien Pupier - 2024-08-16T13:18:59+0000 the tag camel is mentioned on the xml io page https://camel.apache.org/components/4.4.x/others/java-xml-io-dsl.html#_example but there are never an xsd associated, so would be more complicated for end-users to leverage it.\nthe tag routes is also used in one example of the Camel xml io https://camel.apache.org/components/4.4.x/others/java-xml-io-dsl.html#_example', 'Adriano Machado - 2024-08-16T13:55:37+0000 Is this related to https://issues.apache.org/jira/browse/CAMEL-20921?   Changing the tag to `route` will allow adding `routeConfiguration`s?', ""Aurélien Pupier - 2024-08-16T14:40:13+0000 The xsd does not allow to add a `routeConfiguration` in `routes` tag. So changing to routes won't allow to add the same things than before.\nI found no xsd containg the `camel` tag. in case we really want/need this camel tag, we must provide an xsd to know what is allowed and not and to have tooling to guide users.""]"
21091,Bug,Unassigned,Dylan Piergies,"3.x,4.x",None,2024-08-16T09:57:59+0000,1723802279,2024-08-19T19:39:54+0000,2024-08-19T19:39:46+0000,The Azure Service Bus consumer makes a call to complete messages even when the receive mode is RECEIVE_AND_DELETE. Messages do not require acknowledgement in this receive mode and the Service Bus client throws an exception when attempting to complete messages:java.lang.UnsupportedOperationException: 'COMPLETED' is not supported on a receiver opened in ReceiveMode.RECEIVE_AND_DELETE.,"['Claus Ibsen - 2024-08-19T16:55:55+0000 Are you working on a PR to fix this ?', 'Dylan Piergies - 2024-08-19T19:38:53+0000 Yes, PR incoming shortly.']"
21090,Bug,Claus Ibsen,Claude Mamo,4.7.0,4.8.0,2024-08-15T07:31:53+0000,1723707113,2024-08-15T13:25:05+0000,2024-08-15T13:25:05+0000,Docs in https://camel.apache.org/components/next/as2-component.html are saying that AS2 endpoint parameters can be set with the header name pattern CamelAs2.parameter but parameters can only be set with the header name pattern CamelAS2.parameter as shown in https://github.com/apache/camel-examples/blob/camel-examples-4.4.0/as2/src/main/resources/META-INF/spring/camel-context.xml#L72,"['Claus Ibsen - 2024-08-15T07:45:16+0000 You are welcome to send a PR', 'Claude Mamo - 2024-08-15T07:52:25+0000 Which is suggested, updating the docs or updating the expected header prefix? The docs seem to be auto-generated.', ""Claus Ibsen - 2024-08-15T08:05:47+0000 Yeah it should be in upper case AS2 - The doc is sadly some wild auto generate typescript code that can't deal with this\nhttps://github.com/apache/camel-website/blob/main/util/jsonpath-util.js#L88"", 'Claus Ibsen - 2024-08-15T12:47:46+0000 Okay I checked all API based components and its only this camel-as2 that has this problem. Lets adjust its header prefix to be consistent like the others, and use CamelAs2']"
21089,Improvement,James Netherton,James Netherton,None,"4.4.4,4.8.0",2024-08-15T07:04:30+0000,1723705470,2024-08-15T09:07:16+0000,2024-08-15T07:59:15+0000,Relates to an issue reported in Camel Quarkus where a user was trying to configure a byte component option for SMPP.https://github.com/apache/camel-quarkus/issues/6350Seems that CamelBaseBulkConverterLoader does not have a condition to match the conversion type on primitive byte.class.https://github.com/apache/camel/blob/e5ab1649bdb5c5a9c332af2c5b201c143f611539/core/camel-base/src/generated/java/org/apache/camel/converter/CamelBaseBulkConverterLoader.java#L202-L216Indeed the Maven mojo that generates the bulk converter does not handle byte as a primitive option.https://github.com/apache/camel/blob/e5ab1649bdb5c5a9c332af2c5b201c143f611539/tooling/maven/camel-package-maven-plugin/src/main/java/org/apache/camel/maven/packaging/TypeConverterLoaderGeneratorMojo.java#L220-L240,['Claus Ibsen - 2024-08-15T08:07:13+0000 Can you backport to 4.4.x']
21088,Improvement,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-08-15T06:02:51+0000,1723701771,2024-09-04T10:47:30+0000,2024-09-04T10:47:30+0000,The Camel JBang Kubernetes run command is based on the export command. Some of the options available on the export are not available in the run command.We should aim to have almost identical configuration options for export and run because run can be seen as a export + automatic deployment.Some of the export options (e.g. --quiet) may be set statically in the run command though because it does not make sense to have these options configurable on the run command.,No comments found
21087,New Feature,Thomas Diesler,Christoph Deppisch,None,4.x,2024-08-15T05:49:08+0000,1723700948,2025-01-13T20:00:44+0000,,The jolokia/prometheus trait seems to be valuable for users. Add them to the Kubernetes plugin for Camel JBang,"['Thomas Diesler - 2025-01-13T13:41:07+0000 Are we talking about migrating this code https://github.com/tdiesler/camel-k/blob/main/pkg/trait/jolokia.go\nwith these docs https://camel.apache.org/camel-k/next/traits/jolokia.html\nto the java code base, or is the jolokia/prometheus trait something different?', ""Gaelle Fournier - 2025-01-13T16:47:21+0000 tdiesler  For Jolokia yes, that's probably the idea.\nThere is also the prometheus trait : https://github.com/tdiesler/camel-k/blob/main/pkg/trait/prometheus.go\nIn any case we should probably separate them in two different issues and see if how different it should be in the plugin for both of them. From what I remember Jolokia involves a java agent in CK. Also for prometheus CK uses PodMonitor but there was some discussion about the possibility to use a sidecar.""]"
21086,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-14T15:37:06+0000,1723649826,2024-08-15T08:12:29+0000,2024-08-15T08:12:29+0000,"Some complex functions was not possible to generate as java source, but due to CAMEL-21081 we have improved the code generator that should make it possible to add more of the functions into csimple.",No comments found
21085,Improvement,Claus Ibsen,Aurélien Pupier,4.7.0,4.9.0,2024-08-14T14:28:02+0000,1723645682,2024-09-18T15:27:12+0000,2024-09-18T15:27:12+0000,currently it is failing with this kind of error:,"[""Aurélien Pupier - 2024-08-14T14:31:00+0000 a workaround is to specify empty string for the dir parameter, so something like:\napupier@localhost:~/ws/record-gif-readme$ jbang '-Dcamel.jbang.version=4.7.0' camel@apache/camel init /home/apupier/ws/record-gif-rea\ndme/target-folder/anothersecondone.camel.yaml --dir="", 'Claus Ibsen - 2024-09-18T14:16:48+0000 You should really use --dir for the folder, and the file should just be the file name.', 'Aurélien Pupier - 2024-09-18T15:04:37+0000 it is (was) not possible to use --dir because it is deleting the mentioned --dir']"
21084,Improvement,Unassigned,Ivan Kulaga,None,None,2024-08-14T13:04:21+0000,1723640661,2024-08-14T13:59:50+0000,,See CAMEL-20237We need to configure an auto-discovery for users' own org.apache.camel.component.platform.http.vertx.auth.AuthenticationConfig.AuthenticationConfigEntry definitions or something similar to this. So that users can write their own auth logic and have it auto-discovered.,['Claus Ibsen - 2024-08-14T13:59:47+0000 This is not so important yet - lets leave it for those out of the box.']
21083,Improvement,Unassigned,Ivan Kulaga,None,None,2024-08-14T12:57:02+0000,1723640222,2024-08-14T14:00:56+0000,,"See CAMEL-20237We should add more http authentication options that can be configured via properties.
Here are lists of currently existing Vert.x AuthenticationHandlers and AuthenticationProviders:
https://vertx.io/docs/apidocs/io/vertx/ext/web/handler/AuthenticationHandler.html
https://vertx.io/docs/apidocs/io/vertx/ext/auth/authentication/AuthenticationProvider.htmlThink we want to be able to configure via properties at least these:",No comments found
21082,Bug,Aurélien Pupier,Aurélien Pupier,4.7.0,4.8.0,2024-08-14T12:51:01+0000,1723639861,2024-08-17T07:22:30+0000,2024-08-17T07:22:30+0000,the firstone.camel.yaml file is createdthe firstone.camel.yaml file is deleted (without warning) and secondone.camel.yaml is created,"['Claus Ibsen - 2024-08-15T07:48:34+0000 See the IMPORTANT note in the docs at: https://camel.apache.org/manual/camel-jbang.html#_creating_and_running_camel_routes', 'Aurélien Pupier - 2024-08-16T06:50:30+0000 What is the reason for this behavior?\nI cannot imagine a scenario in which it is interesting to have this behavior when creating a new Camel Route. Can you share some?', 'Claus Ibsen - 2024-08-16T07:29:47+0000 The --dir is for creating a new empty folder. If you want to create a new route in some existing place then do NOT use --dir but specify the name using folders.', 'Claus Ibsen - 2024-08-16T07:55:04+0000 We could add an option `--cleanDir=true|false` that you can use to control whether to clean the dir first.\nWe can then change the default to false, so the dir is not cleaned.\nHowever the original intention was that you can quickly start a fresh prototype in some junk folder you may use all the time\ncamel init foo.yaml --dir=myjunk\nWe use this many times when users on Camel report this or that does not work, and we want to quickly get something up to reproduce what they do.', 'Aurélien Pupier - 2024-08-16T13:29:05+0000 From end-user point of view, the init command is to create a new Camel route. Not to quickly set something to reproduce an issue. i think this use case for end-user is more importnant.\nThe pattern of deleting folders without warning to end-user is not a user-friendly one. usually from command-line when it happens we need to precise a --force and/or a --recursive options.\nFrom tooling point of view, it would be convenient to use this command to create a new camel route in an existing folder, not just for prototyping. Not blocking anyway on this part as we can specify the relative path with folder names.\nHaving a cleanDir option sounds fine BUT with the default value to be false to be sure that end-users knows that it is deleting the folder.']"
21081,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-14T11:52:20+0000,1723636340,2024-08-15T08:12:33+0000,2024-08-15T08:12:33+0000,https://github.com/apache/camel/pull/14888The ternary function:predicate ? value1 : value2Would be nice to have in simple language. However the predicate vs expression mode means that the language is optimized differently.So using a function is better as this is possible in both modes.,No comments found
21080,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.x,2024-08-14T08:31:10+0000,1723624270,2024-10-23T11:05:49+0000,,Create a few legacy interfaces for code that relies on deprecated methods.,No comments found
21079,Bug,Unassigned,Petr Kuzel,3.22.2,None,2024-08-14T07:16:36+0000,1723619796,2024-09-17T11:16:02+0000,2024-09-17T11:16:02+0000,"I have observed following, if an exchange carries
an exception, like in the onException() block, then:.log(...)
  .doTry()
  .removeProperty(...)behaves very differently from:// .log(...)
  .doTry()
  .removeProperty(...)If the exchange carries an exception, then with log(),
the doTry() block body executes. Without log(),
the doTry() block body does not execute.I'd expect that doTry() should not consider the prior exception
but it should rather consider only exceptions thrown
in the doTry() block itself, like the regular Java try block.(A check at the mailing list if it was a design intent has been inconclusive so following common sense and classifying as a bug.)",['Claus Ibsen - 2024-08-14T07:57:10+0000 Can you attach some sample route code / test that shows better what you do']
21078,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-13T14:55:00+0000,1723560900,2024-08-14T04:55:41+0000,2024-08-14T04:55:41+0000,"This has been reported both on StackOverflow as well as on the users' mailing list.Looking more closely, enabling/disabling the adviceWith is totally within the expectations of what users of the CamelTestSupport class are expected to do, therefore having it as protected is incorrect: it prevents enabling a user-related feature.",No comments found
21077,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.7.0,2024-08-13T14:09:40+0000,1723558180,2024-12-13T13:18:35+0000,2024-12-13T13:18:35+0000,Cover migrations described by  migration guide(Only a few of migration can be covered by recipes),['Claus Ibsen - 2024-10-10T15:59:56+0000 Is this not done as the 4.8 upgrade was released and I assume it has 4.6 -> 4.7 upgrades included']
21076,Bug,Claus Ibsen,Iliya Grushevskiy,"3.x,4.x",4.8.0,2024-08-12T21:55:04+0000,1723499704,2024-08-13T15:49:18+0000,2024-08-13T15:49:08+0000,"When specifying an array of objects as a request type (in PUT/POST methods), the generated OpenAPI schema does not match the expected result.For example:Will generate:While expected schema should be:","[""Iliya Grushevskiy - 2024-08-12T22:14:55+0000 Branch with fix https://github.com/iliya-gr/camel/tree/CAMEL-21076 \nCan't create pull request, because recovering my 2FA access to Github"", 'Claus Ibsen - 2024-08-13T06:51:44+0000 Can you attach your modified source code files to this JIRA thanks', ""Iliya Grushevskiy - 2024-08-13T06:57:13+0000 The commit is already in the branch https://github.com/iliya-gr/camel/tree/CAMEL-21076  I just can't login and make pull request.\nHere is the patch CAMEL-21076_Fix_REST_route_definition_and_OpenAPI_schema_generation_for_array_type_request.patch"", 'Claus Ibsen - 2024-08-13T07:03:08+0000 There is also an outType can you take a look at that too, and if it also need some fixing', 'Iliya Grushevskiy - 2024-08-13T07:07:25+0000 Ok. I will check it.', 'Iliya Grushevskiy - 2024-08-13T07:16:41+0000 Out type seems fine. I added check in test for out type array.\n  CAMEL-21076_Fix_REST_route_definition_and_OpenAPI_schema_generation_for_array_type_request1.patch', 'Claus Ibsen - 2024-08-13T15:49:18+0000 Thanks for the patch']"
21075,Bug,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-12T15:38:38+0000,1723477118,2024-08-13T06:40:28+0000,2024-08-13T06:13:47+0000,"The LangChain4J Chat component fails to cleanup the cached consumers. In some circumstances (such as when restarting the route), it may cause the code to try to use a reference to an outdated consumer.This is particularly problematic for function calling / tools, as it may cause and wrong tool to be called.",['Otavio Rodolfo Piske - 2024-08-13T06:13:47+0000 Resolved with the linked PR.']
21074,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-12T13:16:12+0000,1723468572,2024-08-23T05:04:08+0000,2024-08-23T05:04:08+0000,SB is released later this month.,No comments found
21073,Task,Unassigned,Aurélien Pupier,4.7.0,None,2024-08-12T12:20:04+0000,1723465204,2024-08-14T07:57:45+0000,,"there is several times the error:```
package com.google.protobuf does not exist
```building camel-salesforce locally with `mvn clean install` is working fine",['Aurélien Pupier - 2024-08-12T12:20:40+0000 this is the last commit related to protobuf on the camel salesforce comonent I found: https://github.com/apache/camel/commit/da694a7a0fdc29a6840e072ffd2730ffc78cb55f']
21072,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-12T09:12:18+0000,1723453938,2024-09-05T08:25:37+0000,2024-09-05T08:25:37+0000,Testcontainers now provide a container for Ollama. We should adjust the code to use that one instead.,"['Claus Ibsen - 2024-09-05T08:04:34+0000 is this complete', 'Otavio Rodolfo Piske - 2024-09-05T08:25:37+0000 Resolved with the linked PR.']"
21071,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-10T08:10:37+0000,1723277437,2024-08-10T10:34:32+0000,2024-08-10T10:34:32+0000,We do this for RestConsumerFactory and we should do the same for RestApiConsumerFactory,No comments found
21070,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-10T07:25:58+0000,1723274758,2024-08-11T09:09:49+0000,2024-08-11T09:09:49+0000,If you export then rest and rest-openapi-java are included because we configure them with some special options in KameletMain. But we should only include them if needed. And also include this configuration in application.properties for the export,No comments found
21069,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-10T05:53:17+0000,1723269197,2024-09-05T13:16:52+0000,2024-09-05T13:16:52+0000,"We have multiple components referencing outdated stuff:Details such as these should be removed from the code
.",['Otavio Rodolfo Piske - 2024-09-05T13:16:52+0000 Resolved with the linked PR.']
21068,Improvement,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-08-09T19:09:12+0000,1723230552,2024-09-26T05:05:46+0000,2024-09-11T11:48:27+0000,`camel kubernetes run ...` is currently limited to `--runtime=quarkus`,"['Claus Ibsen - 2024-09-11T11:46:11+0000 Thanks Thomas. Is there more work or can this ticket be resolved', 'Thomas Diesler - 2024-09-11T11:48:27+0000 Done', ""Thomas Diesler - 2024-09-11T12:49:35+0000 This provides basic run functionality. I'd still like to review --wait --dev --log and a few other settings across all runtimes""]"
21067,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-09T12:01:37+0000,1723204897,2024-08-11T05:58:16+0000,2024-08-11T05:58:07+0000,The project univocity-parsers is now deprecated an unmaintained. It should be marked as deprecated and removed in the future.https://github.com/uniVocity/univocity-parsers/issues/534,No comments found
21066,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-09T09:48:43+0000,1723196923,2024-09-05T13:14:49+0000,2024-09-05T13:14:49+0000,We have multiple components referencing outdated stuff:Details such as these should be removed from the documentation.,['Otavio Rodolfo Piske - 2024-09-05T13:14:49+0000 Resolved with the linked PRs.']
21065,Improvement,Aurélien Pupier,Aurélien Pupier,None,4.8.0,2024-08-09T09:45:45+0000,1723196745,2024-08-10T07:01:52+0000,2024-08-10T07:01:52+0000,similar to CAMEL-20947,No comments found
21064,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.0",2024-08-09T09:24:22+0000,1723195462,2024-08-12T10:45:21+0000,2024-08-10T08:03:58+0000,https://stackoverflow.com/questions/78826002/apache-camel-as2-error-disposition-modifier-in-mdn-is-not-recognized-due-to-wro,No comments found
21063,Improvement,Thomas Diesler,Thomas Diesler,None,"4.8.1,4.9.0",2024-08-09T08:44:05+0000,1723193045,2024-09-26T05:05:35+0000,2024-09-10T11:33:35+0000,"`camel export` used to provide a health endpoint for all runtimes (i.e. main, quarkus, spring boot) - this is no longer the case for main.I suppose a health endpoint is useful in the context of cloud deployments and should therefore always be generated through `camel kubernetes export`",['Thomas Diesler - 2024-09-10T11:33:35+0000 Done']
21062,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-09T08:12:30+0000,1723191150,2024-08-19T09:39:56+0000,2024-08-19T09:14:06+0000,No description available,No comments found
21061,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-09T08:12:14+0000,1723191134,2024-08-19T09:24:40+0000,2024-08-19T09:04:33+0000,No description available,No comments found
21060,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-08-09T08:11:57+0000,1723191117,2024-08-19T08:52:05+0000,2024-08-19T08:52:05+0000,No description available,['Andrea Cosentino - 2024-08-19T08:52:02+0000 Already done.']
21059,Bug,Claudio Miranda,Claudio Miranda,4.7.0,4.8.0,2024-08-08T14:51:01+0000,1723128661,2024-08-09T11:43:51+0000,2024-08-09T11:43:51+0000,A bug when trying to run or export an integration with the last parameter before the file name is set with arity=*.See Conversation in zulip chat about the reproducer and context.,No comments found
21058,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.8.0,2024-08-08T13:38:14+0000,1723124294,2024-09-05T14:58:07+0000,2024-09-05T14:58:07+0000,Cover migrations described by https://camel.apache.org/manual/camel-4x-upgrade-guide-4_6.html#_upgrading_camel_4_5_to_4_6(Only a few of migration can be covered by recipes),"['Claus Ibsen - 2024-08-27T11:51:20+0000 is this work done?', 'Claus Ibsen - 2024-09-05T14:58:07+0000 assuming its done and its also in another git repo']"
21057,Bug,Zheng Feng,Lukas Lowinger,"3.18.8,4.7.0","4.4.4,4.8.0",2024-08-08T13:07:53+0000,1723122473,2024-08-19T11:08:13+0000,2024-08-19T11:08:13+0000,Given simple routeI getReproducer:,"['Lukas Lowinger - 2024-08-08T13:12:26+0000 The problem is, that camel somehow isn\'t able to figure out the basePath of URL based on relative part in openapi.json (""servers"":[\n{""url"":""/api/v3""}\n]).', 'Lukas Lowinger - 2024-08-08T13:21:43+0000 When i use manually `?host=http://localhost:8080` it works. But looks more like workaround than fix.', 'Zheng Feng - 2024-08-08T14:16:32+0000 Hmm, do you check it with camel-4.x ?', 'Lukas Lowinger - 2024-08-08T14:31:45+0000 zhfeng With Cemel 4.7.0 it fails with different error\n[el-1) thread #1 - timer://test] TimerConsumer                  WARN  Error processing exchange. Exchange[5DDB809D0CED7B5-0000000000000000]. Caused by: [org.apache.camel.http.base.HttpOperationFailedException - HTTP operation failed invoking http://localhost:8080/api/v3/api/v3/pet with statusCode: 404]\norg.apache.camel.http.base.HttpOperationFailedException: HTTP operation failed invoking http://localhost:8080/api/v3/api/v3/pet with statusCode: 404', 'Zheng Feng - 2024-08-13T05:05:51+0000 Yeah, it does not handle the relative url correctly. Refer to the spec https://swagger.io/docs/specification/api-host-and-base-path/\nThe URLs in the servers array can be relative, such as /v2. In this case, the URL is resolved against the server that hosts the given OpenAPI definition.', 'Claus Ibsen - 2024-08-13T15:23:53+0000 Maybe this should be backported to 4.4.x branch', 'Zheng Feng - 2024-08-14T00:07:04+0000 Sure, I will do', 'Claus Ibsen - 2024-08-19T06:36:45+0000 Did you backport this ?', 'Zheng Feng - 2024-08-19T10:43:50+0000 Yeah, it is backport to 4.4.x']"
21056,Bug,Claus Ibsen,Stephan Balmer,3.20.6,3.22.3,2024-08-07T15:33:28+0000,1723044808,2024-08-09T11:08:53+0000,2024-08-08T09:40:24+0000,"When using the file component with the readLockMinAge setting, consuming each file incurs a delay the length of readLockMinAge . So when `readLockMinAge=5s` and there are 1000 files, it takes 5000 seconds to consume all files.Example route URL: file:/tmp/test?readLock=changed&amp;readLockMinAge=5s&amp;recursive=true&amp;delete=trueThis has two disadvantages:Camel up to version 3.20.5 processes files instantly as soon as the min age is reached. Since version 3.20.6 files are not processed instantly even if they are older than min age. Instead, the file component will wait for readLockMinAge for each file individually.This regression was introduced in commit https://github.com/apache/camel/commit/5459f1da2673205a6c24041a8631ac99088b5eae I can sympathize with the goal of that change, as I've experienced that problem as well because file-managers preserve last-changed dates when copying files to new places. However I do judge the importance of throughput in the usual case higher than avoiding premature processing of files in the edge case. I think the change should be reverted. A separate strategy or option for that use-case could be introduced.","['Claus Ibsen - 2024-08-07T16:51:59+0000 Try with latest 3.22.x version', 'Claus Ibsen - 2024-08-07T17:02:53+0000 This has been reverted here\nhttps://github.com/apache/camel/commit/b89d9573f6e591eee7030605af65a213367b4fa0', 'Claus Ibsen - 2024-08-07T17:04:00+0000 Its a bit tricky to change in a patch release for 3.22.x as 3.x is EOL soon.', 'Claus Ibsen - 2024-08-08T09:40:24+0000 Okay we have reverted this for the 3.22.3 release. Added a note in the upgrade guide as well.', 'Claus Ibsen - 2024-08-08T09:40:53+0000 You can use 3.20.5, or use a custom read lock strategy and copy the old code and use that with 3.20.6', 'Stephan Balmer - 2024-08-09T11:08:53+0000 Thanks for the quick reply and action! That motivates me to take the plunge into Camel 4']"
21055,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-07T14:58:12+0000,1723042692,2024-08-09T11:16:43+0000,2024-08-09T11:16:43+0000,These 2 EIPs do not have disabled. We should have them on all EIPs so its easy to turn them on|off during development.,"['Claus Ibsen - 2024-08-08T11:05:48+0000 Okay so disabled is there, but the marshal/unmarshal has no label = eip so some tools cannot handle this']"
21054,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-07T14:56:55+0000,1723042615,2024-08-13T15:41:48+0000,2024-08-13T15:41:48+0000,"When using pollEnrich EIP / enrich EIP then they use a language for URI. However we may want to have a variation that are like `to` with a static uri.This makes it easier for tooling so they can have a UI that works better. So pollEnrich can be either in static or dynamic mode, and in static mode the UI tooling can be more powerful as it would be able to have a component specific UI instead of just a dynamic form for typing in a simple uri language.",No comments found
21053,Improvement,Claus Ibsen,Claus Ibsen,None,"3.22.3,4.4.4,4.8.0",2024-08-07T12:49:44+0000,1723034984,2024-08-08T05:03:47+0000,2024-08-08T05:03:47+0000,Reported in user mailing listwe migrate from Camel 2.x to 3.x. and figured out that since Camel 3.9 the method getProperties() only returns user properties but no more internal properties. To get all properties the method getAllProperties() has to be used.,No comments found
21052,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-07T12:46:26+0000,1723034786,2024-08-08T15:04:34+0000,2024-08-08T15:04:34+0000,When you export then camel-jbang is not as much in use anymore. We should possible avoid including camel-cli-connector JAR as when its present then it runs in developer mode that enables all sort of extra details.Users can include the JAR if they want camel jbang CLI to still work with their Q/SB apps.,['Claus Ibsen - 2024-08-08T14:42:40+0000 Its only quarkus that adds\n<dependency>\n<groupId>org.apache.camel.quarkus</groupId>\n<artifactId>camel-quarkus-cli-connector</artifactId>\n</dependency>']
21051,Bug,Claus Ibsen,Manuel Hartl,"4.5.0,4.7.0",4.8.0,2024-08-07T10:43:32+0000,1723027412,2024-08-08T07:08:00+0000,2024-08-08T07:08:00+0000,"The Methodorg.apache.camel.component.file.remote.SftpOperations#retrieveFileToStreamInBody executed operations in finally-block which potentially hides exceptions from try-block.In my case i have an out of memory exception happening during reading the sftp-data, but i dont see it because changeCurrentDirectory() in the finally block throws another exception.",No comments found
21050,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.8.0,2024-08-07T08:53:56+0000,1723020836,2024-09-05T14:57:59+0000,2024-09-05T14:57:59+0000,Cover migrations described by https://camel.apache.org/manual/camel-4x-upgrade-guide-4_5.html#_upgrading_camel_4_4_to_4_5(Only a few of migration can be covered by recipes),"['Claus Ibsen - 2024-08-27T11:51:15+0000 is this work done?', 'Claus Ibsen - 2024-09-05T14:57:59+0000 assuming its done and its also in another git repo']"
21049,Improvement,Unassigned,Christoph Deppisch,None,4.x,2024-08-06T13:17:25+0000,1722950245,2024-08-12T07:29:26+0000,,"Kamelets represent declarative route templates in Apache Camel. The Kamelets were born out of Camel K but soon became part of the Apache Camel project, too. This means today you can use Kamelets in Apache Camel also without Camel K being involved.Kamelets are still kind of separated from the Camel core project. The Kamelets live in a separate GitHub project repository (https://github.com/apache/camel-kamelets) and follow a separate release lifecycle. This means we do a follow-up release of the Kamelet catalog after each Apache Camel release in order to keep the Kamelets aligned with the most recent Camel versions.In addition to that, writing and maintaining Kamelets is no fun as it boils down to writing YAML files manually. Testing and verifying the Kamelets is separated from the Camel core project, too.Problems that arise due to separate GitHub repositories for Apache Camel and Kamelets:Problems with YAML as Kamelet definition:The proposal is to bring Kamelets to the Camel core project in order to make them a natural part of the Camel components.",No comments found
21048,Bug,Unassigned,David Eibl,4.7.0,"4.4.4,4.8.0",2024-08-06T12:35:58+0000,1722947758,2024-08-06T15:02:50+0000,2024-08-06T15:02:50+0000,"When receiving a HL7 Message via Camel MLLP an ACK (see: https://hl7-definition.caristix.com/v2/HL7v2.5.1/TriggerEvents/ACK) is being sent.The Header contains a timestamp in MSH-7.1 (see: https://hl7-definition.caristix.com/v2/HL7v2.5.1/Fields/MSH.7.1).Unfortuantelly this timestamp is using an invalid format, missing dot after seconds.It is using yyyyMMddHHmmssSSSZZZZ instead of yyyyMMddHHmmss.SSSZZZZMissing dot is invalid, see: https://hl7-definition.caristix.com/v2/HL7v2.5.1/DataTypes/DTMTo fix this, timestamp in org.apache.camel.component.mllp.internal.Hl7Util needs to be changed.","['Claus Ibsen - 2024-08-06T13:05:47+0000 You are welcome to send a PR', 'David Eibl - 2024-08-06T14:04:18+0000 PR: https://github.com/apache/camel/pull/15030', 'Claus Ibsen - 2024-08-06T15:02:50+0000 Thanks for reporting and the PR']"
21047,Task,Jiri Ondrusek,Jiri Ondrusek,4.8.0,4.8.0,2024-08-06T09:34:00+0000,1722936840,2024-08-06T11:10:13+0000,2024-08-06T11:10:13+0000,"PgpDataFormat was extracted from crypto component (see CAMEL-20922)
Therefore bouncycastle dependencies can be removed from `camel-crypto`.",No comments found
21046,Improvement,Unassigned,Kartik,3.22.2,None,2024-08-06T08:48:27+0000,1722934107,2024-08-06T09:02:19+0000,2024-08-06T09:02:19+0000,"Currently, the camel component if it is non lenient will throw an exception when unknown properties are passed when creating an endpoint.Considering multi-tenant cloud environments, there can be cases with the same endpoints. For example, take a Kafka endpoint, 2 tenants can create a camel route having the same localhost broker with the same topic and group id which results in an error.To overcome this the component should expose certain APIs to filter & ignore unknown properties.I do see that in DefaultComponent#validateParameters function takes""
optionPrefix"" which ignores the properties starting with the provided prefix, This should be exposed to users.","['Kartik - 2024-08-06T08:50:16+0000 davsclaus Do you think if this can be achieved for Kafka component?', 'Claus Ibsen - 2024-08-06T09:02:14+0000 No you just create a kafka2 component that you use for that other broker, that is how you always do that, like with JMS as well.\nOr use kamelets that work in isolation']"
21045,Bug,Claus Ibsen,Claus Ibsen,4.8.0,4.8.0,2024-08-06T05:15:26+0000,1722921326,2024-08-06T11:09:35+0000,2024-08-06T11:09:35+0000,You then have to type 'q' to quit the quarkus app for the export to complete,No comments found
21044,Bug,Unassigned,Dylan Piergies,"3.x,4.x","4.4.4,4.8.0",2024-08-05T21:04:49+0000,1722891889,2024-08-06T07:29:44+0000,2024-08-06T07:29:43+0000,The Azure Service Bus client requires a fully qualified namespace (FQNS) to be specified when a connection string is not used.The configuration logic does not currently set the FQNS when the credentialType option is set to AZURE_IDENTITY.,No comments found
21043,Improvement,James Netherton,James Netherton,None,4.8.0,2024-08-05T11:17:11+0000,1722856631,2024-08-05T12:40:34+0000,2024-08-05T12:40:34+0000,I was digging into why Dependabot is not updating some Maven plugins in CQ and it turns out it's because camel-dependencies has an old org.apache:apache parent.https://github.com/apache/camel/blob/main/tooling/maven/sync-properties-maven-plugin/src/main/resources/camel-dependencies-template.xml#L27It should be aligned with whatever Camel has in its root pom.xml. E.g thishttps://github.com/apache/camel/blob/main/pom.xml#L24-L28We should be able to get the sync-properties-maven-plugin to figure out the correct version instead of hard coding it.,No comments found
21042,Task,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-08-05T06:29:16+0000,1722839356,2024-08-08T10:09:08+0000,2024-08-08T10:09:08+0000,https://github.com/google/guava/wiki/EventBusExplained,No comments found
21041,Bug,Unassigned,Mohanavalli A,3.22.3,None,2024-08-02T04:55:13+0000,1722574513,2025-02-02T08:17:25+0000,2025-02-02T08:17:25+0000,"camel-azure-filesIn camel-azure-files, if the path specified for moveFailed is not already present on the AFS share, the camel-azure-files moveFailed operation takes too long to complete.
It is so long that we suspect a thread leak.If the path is already present on the AFS share, the operation completes without any delay.Can you please fix this.Thanks,Mohanavalli A","['Claus Ibsen - 2024-08-05T06:43:37+0000 Can you try with latest Camel v4', 'Mohanavalli A - 2024-08-07T09:24:00+0000 We will not be able to migrate from Camel 3 to Camel 4 immediately due to other dependencies. Do we have a fix in Camel 3 for this?', 'Claus Ibsen - 2024-08-15T10:53:05+0000 No but you can see if you can reproduce this on v4 in some test environment.', 'Claus Ibsen - 2024-08-15T11:05:23+0000 How long time does it take to complete, and what values are you using for moveFailed.', 'Claus Ibsen - 2025-01-06T14:02:22+0000 We cannot reproduce this. Can you provide more details such as what name you rename the file as. Also how long time does it take ?', 'Claus Ibsen - 2025-02-02T08:17:25+0000 No response from user']"
21040,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-08-01T14:43:17+0000,1722523397,2024-09-05T13:15:11+0000,2024-09-05T13:15:11+0000,"In CAMEL-20410 we did a comprehensive review of the documentation for multiple components. Since 4.5.0 we added a few more. This is a ticket for the documentation review of those components.Components:---------- Original text from CAMEL-20410.The documentation for our components is full of minor mistakes that can be easily found using IntelliJ's grammar tool.To fix this issue, open the full project on IntellIj and follow these steps:1. Choose a component and go to src/main/docs/
2. Open the file with the extension adoc. 
3. On Intellij, in the problems tab, it will list several errors and problems 
4. Ignore the errors (the items with the red icon) 
5. Look for the grammar warnings (the ones with the green check icon underlined with red).Note 1: See the attachment named ""grammar-problems"" for an example. 
Note 2: Make sure to check what components have been already fixed. Use the following command to do so:Note 3: Make sure the commit follows this pattern:",['Otavio Rodolfo Piske - 2024-09-05T13:15:11+0000 Resolved with the linked PRs.']
21039,Improvement,Thomas Diesler,Thomas Diesler,None,None,2024-08-01T08:28:19+0000,1722500899,2024-09-06T12:38:21+0000,2024-09-06T12:38:13+0000,"Currently, we use different techniques for generating k8s resources depending on -runtime. Although very similar, the result is not identical. Check, whether it makes sense to use JKube for -runtime=quarkus too.","['Thomas Diesler - 2024-08-01T10:13:02+0000 PR: https://github.com/apache/camel/pull/15017', 'Thomas Diesler - 2024-09-06T12:38:13+0000 We decided to not use JKube for runtime quarkus']"
21038,Task,Thomas Cunningham,Thomas Cunningham,None,4.8.0,2024-07-31T20:08:13+0000,1722456493,2024-08-08T09:58:12+0000,2024-08-08T09:58:12+0000,"From Zineb :I was wondering if I'm the only one that gets this file catalog/camel-catalog/src/generated/resources/org/apache/camel/catalog/schemas/camel-spring.xsd updated every time I build the camel projectI have been seeing this too and it looks to me like the cause is EipDocumentationEnricherMojo - it uses a set of json files to enrich the xsd, but there are actually two ""bean.json"" files that get pulled into the set of files used for enrichment.     I'd like to fix this so that we consistently choose the correct bean.json and the results of enrichment are consistent and this file is not constantly updated by the build somewhat randomly.",No comments found
21037,Improvement,Thomas Diesler,Andrea Cosentino,None,None,2024-07-31T13:15:47+0000,1722431747,2024-08-05T08:17:50+0000,2024-08-05T08:17:50+0000,"I guess this needs to be addressed. By following the documentation, deploying on OCP doesn't work with the current POM template.","['Andrea Cosentino - 2024-07-31T13:16:20+0000 tdiesler I assigned this to you, because you worked on the feature. Let me know if you have time.', 'Thomas Diesler - 2024-08-05T08:17:50+0000 I believe, this is a duplicate']"
21036,New Feature,Pasquale Congiusti,Pasquale Congiusti,None,4.8.0,2024-07-31T08:08:27+0000,1722413307,2024-08-13T14:08:40+0000,2024-08-13T14:08:40+0000,"When we run a Camel application on the cloud we may leverage the cloud native way of setting configuration. For example, when running on Kubernetes we may leverage the configmap and secret which are typically mounted as a key/value files.Given the following Secret:and the following Camel application Deployment volume mounted leveraging such a secret:We may expect that at startup, the application scans a given directory (ie /etc/camel/conf.d/_configmaps|_secrets/) and add the parameter to the regular properties available to the context. From that moment onward, the application could leverage the properties placeholder, ie using org.acme.my-key.Ideally we should have a couple of properties to control the behavior, ie:cloud.config.scan=false (not sure if enable this by default)
cloud.config.location=/etc/camel/conf.d","['Pasquale Congiusti - 2024-08-01T08:14:50+0000 As an additional note, this would be different from the existing Kubernetes component [1] feature which requires the user to lock-in the configuration by specifying the configmap/secret in the route development. The idea is that the feature has to be agnostic so that the configuration of the secret could be an operation that the developer must not be necessarily aware of and can be performed separately.\nAs a consequence, the development of the route can happen locally without the need to interact with a cluster. Later, the op team would set the secret configuration during release phase.\n[1] https://camel.apache.org/manual/using-propertyplaceholder.html#_using_kubernetes_property_placeholder_functions', 'Claus Ibsen - 2024-08-05T06:46:02+0000 I think you already can configure this via\nhttps://camel.apache.org/manual/using-propertyplaceholder.html#_configuring_mount_paths_for_configmaps_and_secrets', 'Pasquale Congiusti - 2024-08-05T07:27:13+0000 Thanks davsclaus, but IIUC, the above would work by explicitly defining in the route the existence of a configmap/secret, ie secret:my-sec/org.acme.my-key whilst I was thinking a transparent method in order to use the property straight as it happens normally for the rest of properties, ie org.acme.my-key. Or is it already working in this way?', 'Claus Ibsen - 2024-08-05T08:51:26+0000 Ah okay so you want to use standard camel property placeholders style myKey and then ""magically"" automatic detect config-maps/secret files from a given folder and load these.\nThe camel-kubernetes only works for ""secret:"" and ""configmap:"" style where you explicit declare and use this (no magic).\nWe have to be mindful that Camel users run camel in different runtimes and also standalone, and that the camel-core project is ""neutral"".\nSo if you use Q or SB then we should look at what is the practice these runtimes offers for loading configmap/secret properties file during development (if they have anything).\nFor camel-main then its standalone and we can make something Camel specific for that (but this runtime is mostly used for quick prototyping via camel-jbang).\nInstead of adding `cloud.xxx` as a key then I would recommend to keep it naming consistent and let it be `camel.xxx` as that indiciate its Camel specific and will not cause trouble for end users.\nYou can take a look at the existing properties component, as loading secret/configmap files as .properties from a file-path during bootstrap does not require kubernetes API / Jar so the code can be in camel-core. Then this would be generic for all of Camel.\nIf all you want/need is camel-jbang only, then there is also possible to make this jbang only, and have extra code in camel-jbang / camel-kamelet-main (yeah its a bit of bad name but this is the main that runs camel jbang). This is where all the jbang magic is located and this also allows to do some magic for export.', 'Pasquale Congiusti - 2024-08-05T12:17:05+0000 Thanks Claus, the approach you\'re suggesting in:\n> You can take a look at the existing properties component, as loading secret/configmap files as .properties from a file-path during bootstrap does not require kubernetes API / Jar so the code can be in camel-core. Then this would be generic for all of Camel.\nis exactly was I was aiming for. The idea of this feature is to be able to decouple the development from the operation which may happen on cloud or on premises whichever the runtime it is. In this way we will simplify the testing and release when running on cloud, without affecting the execution of on prem workloads.\nThe ""cloud.xxx"" was just a placeholder we will replace with the proper configuration as you\'re suggesting.\nI will do some draft work and submit in the following weeks.', 'Claus Ibsen - 2024-08-06T15:12:28+0000 squakez we have until end of this month before the deadline for getting stuff done for the 4.8 LTS release', 'Pasquale Congiusti - 2024-08-07T06:29:14+0000 Okey. I will try to have it ready by then.', 'Claudio Miranda - 2024-08-08T10:02:23+0000 For reference, in quarkus kubernetes extension, this is already supported, see Passing application configuration.', 'Pasquale Congiusti - 2024-08-08T10:10:57+0000 claudio4j I think this is slightly different. The goal is to load configuration without knowing the name of the secrets/configmaps ahead of time.']"
21035,Bug,Christoph Deppisch,Christoph Deppisch,4.x,4.8.0,2024-07-30T19:34:05+0000,1722368045,2024-08-06T13:00:18+0000,2024-08-06T13:00:18+0000,The property binding support for the ceOverride option on the Knative component always misses the first value that is being set via component/endpoint configurer.The ceOverride option is a map typed setting and users are able to set these values with OGNL style property keys (e.g. in application.properties).The 1st key-value pair initializes the ceOverride map during property binding but the value is missing in the resulting configuration map. The property binding support assumes that the target component uses the same map instance that is being initialized by the property binding support. But the Knative component configuration uses its on map instance in the setter with the given map instance as a parentThis makes the 1st value set via property binding disappear in the component configuration because the map instances are not the same.The 2nd value set via property binding support uses the right map instance of the component because it has already been initialized.,No comments found
21034,Bug,Claus Ibsen,Claude Mamo,4.6.0,4.8.0,2024-07-30T15:45:12+0000,1722354312,2024-08-05T15:25:24+0000,2024-08-05T15:25:24+0000,"I'm referencing a custom model reifier factory in META-INF/services/org/apache/camel/model-reifier-factory which is causing DefaultInjector to be used instead of the expected SpringInjector.SpringCamelContext creates the injector when loading a custom ModelReifierFactory. SpringInjector requires the application context, but since the application context hasn't yet been set on SpringCamelContext, the SpringInjector cannot be created so SpringCamelContext falls back to DefaultInjector.  I've attached the call stack of this behaviour.","['Claus Ibsen - 2024-08-05T06:56:48+0000 Why are you using a custom model reifier ?', ""Claude Mamo - 2024-08-05T08:53:51+0000 So far it's only for prototyping purposes but I'm  customising the route reifier to add a dummy output when none are defined on the route. Camel complains when a route consists of only a from(...) but this is might be a legitimate use case when the endpoint is a kamelet."", 'Claus Ibsen - 2024-08-05T09:01:03+0000 Okay so why do you need the spring injector as you said its chicken-and-egg. The factory is intended to be basic and not do a lot of fancy autowiring and dependency injection', ""Claude Mamo - 2024-08-05T09:20:27+0000 The problem is that the context's injector isn't changed later to SpringInjector, as I would expect, so beans registered in Spring are not injected into beans defined in Camel which means that @Autowired references remain null. I got around this by registering the following BeanPostProcessor:\npublic class CamelContextBeanPostProcessor implements BeanPostProcessor {\n\n    private final ConfigurableApplicationContext applicationContext;\n\n    public CamelContextBeanPostProcessor(ConfigurableApplicationContext applicationContext) {\n        this.applicationContext = applicationContext;\n    }\n\n    @Override\n    public Object postProcessBeforeInitialization(Object bean, String beanName) throws BeansException {\n        if (bean instanceof CamelContext) {\n            ((CamelContext) bean).setInjector(new SpringInjector(applicationContext));\n        }\n        return bean;\n    }\n\n    @Override\n    public Object postProcessAfterInitialization(Object bean, String beanName) throws BeansException {\n        return bean;\n    }\n}"", 'Claus Ibsen - 2024-08-05T09:50:45+0000 Ah okay, yeah we should make sure spring always sets the injector to spring based if its the default already']"
21033,Bug,Gaelle Fournier,Gaelle Fournier,"4.4.3,4.7.0","4.4.4,4.x",2024-07-30T13:49:07+0000,1722347347,2024-07-30T14:12:09+0000,2024-07-30T14:12:09+0000,The parsing oo run command trait does snake case to kebab case. As such it transforms `cpu`to `Cpu` when it should be `CPU` in the model : request-cpu shoudl match requestCPU.,"['Gaelle Fournier - 2024-07-30T14:11:43+0000 The code has been refactored, so it is already fixed from camel-jbang kubernetes plugin.']"
21032,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-30T12:53:13+0000,1722343993,2024-08-05T08:52:32+0000,2024-08-05T08:18:23+0000,"A plain jbang export comes with a health endpoint at 8080. In k8s export, we currently only generate a service when the route exposes an http service. Because we (currently) always have the health endpoint, we should also always have a service for it.","['Thomas Diesler - 2024-07-30T13:05:46+0000 PR: https://github.com/apache/camel/pull/14971', 'Thomas Diesler - 2024-07-31T13:23:16+0000 You can now do this ...\ngit clone https://github.com/tdiesler/camel-cloud-examples\ncd camel-cloud-examples/spring-boot/http-roll-dice\n\nmake package k8s-apply\n\nkubectl get svc\nNAME         TYPE        CLUSTER-IP     EXTERNAL-IP   PORT(S)        AGE\nkubernetes   ClusterIP   10.96.0.1      <none>        443/TCP        6d2h\nroll-dice    NodePort    10.110.21.17   <none>        80:32615/TCP   80s\n\ncurl localhost:32615/roll-dice\nroll: 6\n\ncurl localhost:32615/actuator/health\n{""status"":""UP"",""groups"":[""liveness"",""readiness""]}', 'Thomas Diesler - 2024-08-05T08:18:23+0000 Done', 'Claus Ibsen - 2024-08-05T08:40:42+0000 Thanks, is there a default fragement file or something for the health checks that jbang has or how does this work?', 'Thomas Diesler - 2024-08-05T08:52:02+0000 We are now (CAMEL-21039) using jkube generated fragments across all runtimes. The configuration comes from the container and service traits.\ni.e. From the traits (with sensible defaults) via JKube to the resulting k8s manifest - there is no need for fragment templates as of now.']"
21031,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-07-30T08:26:33+0000,1722327993,2025-01-27T08:01:28+0000,2024-07-30T08:27:58+0000,"Quoting Jakub from the PR:??Hi,
I'm using camel-aws-sqs-source-kafka-connector, and recently I've found that I'm unable to poll all the messages from SQS queue in time.
At first I wanted to increase the maximum number of messages polled in a single request.
By default the client is configured to receive only 1 message and the maximum messages allowed by AWS is 10.
Here I had to add maxMessagesPerPoll parameter to the Kamelet in order to configure it for the connector.
I'm mentioning the Kamelet because the parameter there has maximum: 10 but this change renders that constraint obsolete.Without the Kamelet there is a workaround to configure the queueNameOrArn with ?maxMessagesPerPoll=10& suffix, to sneak in the parameter to the endpoint.
But even with that and enabled greedy polling I was unable to keep up, and poll all messages in time.
Increasing the number of concurrent polling threads is an option here, but I'm interested in processing the messages in the correct order.Looking at the Spring implementation, I've found that they are invoking receive requests with multiple threads and then merging the results together:
https://github.com/awspring/spring-cloud-aws/blob/a81b879d1a6b46f8a26794b98a601f7450d84907/spring-cloud-aws-sqs/src/main/java/io/awspring/cloud/sqs/listener/source/AbstractSqsMessageSource.java#L194-L198I think a similar approach could be applied in Apache Camel, where the number of concurrent requests is calculated from ceil(maxMessagesPerPoll / 10D) formula.??",['Otavio Rodolfo Piske - 2024-07-30T08:27:58+0000 Resolved via https://github.com/apache/camel/pull/14926']
21030,New Feature,Guillaume Nodet,Guillaume Nodet,None,None,2024-07-30T07:34:49+0000,1722324889,2024-08-08T11:32:08+0000,,The java.io.File class should really only be used for compatibility.,['Claus Ibsen - 2024-08-08T11:32:08+0000 End users need stability of the existing camel-file component and how it works.\nSo be a big careful about any big refactor or changes.\nThere is the camel-file-watch component that uses a different mode for receiving files. This component is maybe more suitable for nio2 refactorings.']
21029,New Feature,Guillaume Nodet,Guillaume Nodet,None,None,2024-07-30T06:56:08+0000,1722322568,2024-09-13T07:07:08+0000,2024-09-13T07:07:08+0000,"Both SFTP and SCP protocols are built on top of SSH, but sftp is provided by camel-ftp (the FTP and SFTP protocols have nothing in common but their name), scp is provided by camel-jsch (both components leverage JSch).It may be worth extending the camel-ssh component to provide support for SFTP and SCP protocols, leveraging Apache Mina SSHD instead.",['Claus Ibsen - 2024-08-08T11:30:12+0000 No users need stability of the existing camel-ftp component and that we have been using jsch always as the library for SCP protocol.\nWe should keep this as-is.\nIt is not worth effort to attempt to build yet another library that are not much maintained or used (apache mina).\nThe Camel project has better things to work on.']
21028,New Feature,Guillaume Nodet,Guillaume Nodet,None,None,2024-07-30T06:41:47+0000,1722321707,2024-12-28T17:05:45+0000,,No description available,No comments found
21027,Improvement,Guillaume Nodet,Guillaume Nodet,None,4.x,2024-07-30T06:39:05+0000,1722321545,2024-12-28T17:06:08+0000,,The library (org.eclipse.mylyn.github:org.eclipse.egit.github.core) used by the camel-github component has not had any releases since 2013...,No comments found
21026,Improvement,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-07-29T11:36:22+0000,1722252982,2024-10-02T16:24:43+0000,2024-07-30T08:18:34+0000,"When receiving a PDF document as a byte array, users need to convert the data manually to a PDF document. For instance, consider a route like:Then, the convertBytesToPDFFile should contain something like:This makes designing routes that consume PDFs harder.",['Otavio Rodolfo Piske - 2024-07-29T11:39:02+0000 We can just add a type converter for it.']
21025,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-29T10:33:31+0000,1722249211,2024-07-31T05:36:58+0000,2024-07-31T05:36:58+0000,No description available,No comments found
21024,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-29T10:32:00+0000,1722249120,2024-07-29T14:22:08+0000,2024-07-29T14:06:15+0000,No description available,No comments found
21023,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-29T06:12:50+0000,1722233570,2024-08-05T04:52:18+0000,2024-08-05T04:52:18+0000,They're missing in the set.,No comments found
21022,Task,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-29T05:48:55+0000,1722232135,2024-07-29T06:13:10+0000,2024-07-29T06:13:10+0000,Website is failing the build,No comments found
21021,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-27T16:35:21+0000,1722098121,2024-07-31T05:37:12+0000,2024-07-31T05:37:12+0000,"Eventbridge could send events to SQS or SNS, we can choose SQS for convenience as default. It's far more reliable than waiting for events publish on Cloudtrail and we could be able to refresh the context faster.",No comments found
21020,Task,Karen Lease,Karen Lease,4.7.0,4.8.0,2024-07-26T14:55:42+0000,1722005742,2024-08-05T10:44:20+0000,2024-08-05T10:44:20+0000,"Some integration tests for the plugin use swagger (openapi 2.0) specs which are no longer supported after CAMEL-20547. Remove these and fix a couple of v3 tests.
Note: integration tests are currently disabled in the pom.xml.",No comments found
21019,New Feature,Tadayoshi Sato,Tadayoshi Sato,4.7.0,4.10.0,2024-07-26T08:42:08+0000,1721983328,2024-12-05T11:23:13+0000,2024-12-05T05:19:48+0000,"Running a TensorFlow model is already supported through Camel DJL component. However, Camel users might prefer to externalise inferencing to an external server instead of running it inside the Camel route. For TensorFlow models, it is generally done with TensorFlow Serving, which is a REST API server for inferencing with TensorFlow. Camel should provide a producer component that makes it easy to invoke the TensorFlow specific REST API from the routes.","['Claus Ibsen - 2024-12-05T06:19:02+0000 You may need to add this to camel-spring-boot also', 'Tadayoshi Sato - 2024-12-05T07:03:19+0000 davsclaus Yes, I will.']"
21018,New Feature,Tadayoshi Sato,Tadayoshi Sato,4.7.0,4.9.0,2024-07-26T08:38:40+0000,1721983120,2024-10-09T05:08:16+0000,2024-10-04T08:25:26+0000,"Running a PyTorch model is already supported through Camel DJL component. However, Camel users might prefer to externalise inferencing to an external server instead of running it inside the Camel route. For PyTorch models, it is generally done with TorchServe, which is a REST API server for inferencing with PyTorch. Camel should provide a producer component that makes it easy to invoke the PyTorch specific REST API from the routes.",No comments found
21017,Improvement,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-25T17:14:05+0000,1721927645,2024-07-30T19:09:31+0000,2024-07-30T19:09:19+0000,The export command defines the --open-api option to add OpenAPI specification to the exported project.In addition to this option the Kubernetes plugin export command provides the --open-api-spec option with a different behavior to configure a ConfigMap volume in the generated Kubernetes manifest.We should consolidate the options because having multiple options for OpenAPI is confusing.We should only have one --open-api option and the Kubernetes plugin may handle values with configmap: prefix and delegate other values to the parent export command.,No comments found
21016,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-25T12:21:15+0000,1721910075,2024-07-30T12:48:22+0000,2024-07-30T12:48:22+0000,"In camel-jbang export, I noticed that --additional-properties is a rather clumsy name for build time properties. How about --build-properties?Similar to --dep, I'd actually prefer []String (i.e. arity=0-N), in which case it could be called --build-property.Generally, should we always aim for []String rather then comma separated?","['Thomas Diesler - 2024-07-25T12:54:23+0000 We also have ...\n@CommandLine.Option(names = \\{ ""--repos"" },\ndescription = ""Additional maven repositories (Use commas to separate multiple repositories)"")\nprotected String repos;\n\n@CommandLine.Option(names = \\{ ""--exclude"" },\ndescription = ""Exclude files by name or pattern. Multiple names can be separated by comma."")\nString exclude;', 'Thomas Diesler - 2024-07-25T14:06:14+0000 You can now do ...\ncamel kubernetes export timer-log-route.yaml \\\n  --gav=examples:timer-log:1.0.0 \\\n  --trait container.imagePullPolicy=IfNotPresent \\\n  --build-property=jkube.enricher.jkube-service.type=NodePort \\\n  --runtime=spring-boot', 'Thomas Diesler - 2024-07-30T12:48:22+0000 Done']"
21015,Improvement,Claus Ibsen,Aurélien Pupier,4.7.0,4.8.0,2024-07-25T09:23:10+0000,1721899390,2024-08-08T09:57:14+0000,2024-08-08T09:57:14+0000,"When a plugin has been installed but is no more vailable (for instance when trying to use an older version of Camel Jbang), there is currently an error and the command is failing even if this plugin is not used.","['Claus Ibsen - 2024-08-05T07:01:18+0000 I think this has been fixed for 4.8 already, but try with SNAPSHOT', 'Claus Ibsen - 2024-08-08T09:57:14+0000 Ah okay so already released older versions of Camel JBang cannot be changed and they will fail as in your example.\nBut we have made 4.8 onwards to ignore if you have a plugin installed that does not exist for its version.']"
21014,Bug,Unassigned,Giacomo Carnevale,4.7.0,4.8.0,2024-07-24T15:38:47+0000,1721835527,2024-08-05T07:01:55+0000,2024-08-05T07:01:55+0000,"The doFinally clause with a route template always generates an exception.Route template uses TryDefinition.copyDefinition method  that uses this constructor:The checkInitialized always fails on this control:Using copyDefinition method output and finallyClause are always differnt.I created this pull request: https://github.com/apache/camel/pull/14913
{{}}c446202commit to reproduce the bug with TryDefinitionTesta1144f1commit to fix the bug with a finally clause counter",No comments found
21013,New Feature,Thomas Diesler,Thomas Diesler,4.8.0,None,2024-07-24T10:56:58+0000,1721818618,2024-10-23T09:03:27+0000,2024-10-23T09:03:27+0000,No description available,['Thomas Diesler - 2024-10-23T09:03:27+0000 Done']
21012,Task,Andrea Cosentino,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-07-24T09:59:25+0000,1721815165,2024-08-07T12:36:55+0000,2024-08-07T12:36:55+0000,"The embedding component and the Milvus component in Camel have different behaviors when it comes to handling actionsThe embedding component requires the action name to be specified as a header:However, this causes problems when using in combination with the Milvus embedding, because the transformer creates a InsertParam object.The problem is in the `private void upsert(Exchange exchange)` method from MilvusProducer.java. When we try to get the body of the message, we look for an `UpsertParam.class`.","[""Andrea Cosentino - 2024-07-26T10:29:29+0000 Can you provide an example of what you're doing? The transforms are aimend to be used with langchain-embeddings component only. So in the end you're not going to do an upsert, or at least the basic idea is to insert a new object."", ""Otavio Rodolfo Piske - 2024-07-26T11:38:46+0000 Sure. Thanks for looking at this one ... I messaged you privately, as I don't think I can share the route details publicly for this one.""]"
21011,Improvement,Aurélien Pupier,Aurélien Pupier,4.7.0,4.8.0,2024-07-24T09:55:46+0000,1721814946,2024-08-21T10:17:54+0000,2024-08-21T08:30:09+0000,currently the error message is:It is not suggesting that i might be a plugin that must be installed,"['Claus Ibsen - 2024-08-05T07:13:07+0000 I think this is jbang in general that reports this, and we cannot change that in camel-jbang.', 'Aurélien Pupier - 2024-08-20T13:17:35+0000 Picocli is reporting the error and allows to customize it https://picocli.info/#_handling_errors\ni think it would be possible to provide a custom message as we are calling new CommandLine(XX) in in our codebase', ""Claus Ibsen - 2024-08-21T08:59:04+0000 ❯ camel foo\nUnmatched argument at index 0: 'foo'\nDid you mean: camel transform?\nUsage: camel [-hV] [COMMAND]\nTry 'camel --help' for more information.\nMaybe a specific plugin must be installed?\nWe can maybe make the error text to help the user in the right direction\n-->\nMaybe a specific camel jbang plugin must be installed? (Try camel plugin --help' for more information)""]"
21010,Task,Andrea Cosentino,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-07-24T09:42:43+0000,1721814163,2024-08-07T13:07:59+0000,2024-08-07T13:07:59+0000,"The embedding component and the Milvus component in Camel have different behaviors when it comes to handling collection names.The embedding component requires the collection name to be specified as a header, while the Milvus component allows for a different collection name to be used.For instance:This inconsistency can lead to confusion and errors when trying to use both components together. It would be beneficial to standardize the behavior of these components so that they can work seamlessly with each other.","['Otavio Rodolfo Piske - 2024-07-24T09:54:32+0000 acosentino I did not look yet, but I suspect we might have a similar problem with Qdrant', ""Otavio Rodolfo Piske - 2024-07-24T10:08:08+0000 acosentino no we don't. Qdrant should be fine."", 'Andrea Cosentino - 2024-08-07T13:07:52+0000 There is no easy way of doing this because the library works differently in relation to Qdrant. We need to specify the collectionName at POJO level when doing insert/upsert. This means we have to pass it via an header. I think we should document this in the component doc.']"
21009,Bug,Andrea Cosentino,Andrea Cosentino,4.7.0,4.8.0,2024-07-24T09:30:09+0000,1721813409,2024-07-24T12:54:20+0000,2024-07-24T12:54:20+0000,No description available,No comments found
21008,Improvement,Unassigned,Aurélien Pupier,None,None,2024-07-23T13:52:55+0000,1721742775,2024-11-27T09:13:20+0000,,"DJL component is supporting several engine https://camel.apache.org/components/next/djl-component.html#_djl_engine_implementation 
An end-user might search for them instead of DJL when looking for the component.It would be nice to have a way to find DJL component when searching for pytorch, tensorflow or mxnet in the various tooling.this is a very similar issue with https://issues.apache.org/jira/browse/CAMEL-20871 but for another component.","[""Tadayoshi Sato - 2024-07-26T08:31:10+0000 apupier Interesting idea. What would be needed to make it more discoverable for the tooling? What's the ideal way to provide such metadata/information for them?"", 'Aurélien Pupier - 2024-07-26T08:43:02+0000 I proposed some ideas in the linked ticket which has similar structure and problem. here they are:\nadd protocol as category\nimprove catalog by adding ""search field""/""keywords"" but maybe too much redundant with category?\nhave tooling searching in documentation pages too (even if I do not see well how it can work easily)\nprovide Kamelets for each of the supported protocols. it has the benefit that we can also add the specific dependency\nprovide specific component for each protocol which are using djl under the hood also has the benefit that we can also add the specific dependency. Can be the best if there are specific parameter for a specific protocol. Will require to keep the generic one so that newly supported protocols can be sued without modifications.\nI did not had time to dig more on that and do a proper pros/cons analysis\nNote that I suspect that several other components are following the same structure and thus has the same kind of problematic.']"
21007,Improvement,Thomas Diesler,Thomas Diesler,None,None,2024-07-23T12:36:21+0000,1721738181,2024-07-23T15:31:13+0000,2024-07-23T15:31:13+0000,"Currently we build a multiarch image like this ...and later reference it in JKube like this ...We also need to explicitly set property `jkube.generator.name`, otherwise kubernetes.yml may not reference the correct image name.Perhaps this would better all be done by the JKube plugin",['Thomas Diesler - 2024-07-23T15:30:34+0000 Done as part of CAMEL-20990']
21006,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-23T07:00:56+0000,1721718056,2024-07-23T12:56:06+0000,2024-07-23T12:56:06+0000,Kubernetes export has an `--image-registry` parameter which defaults to `quay.io`. It is currently not possible to export a k8s project that uses an image name without registry prefix.I suggest to remove the arbitrary default and instead require this to be set explicitly when needed.,"[""Thomas Diesler - 2024-07-23T08:48:21+0000 AFAIK, docker push uses Docker Hub as the default registry when there is none given with the image name. I'd prefer to follow this convention instead of always requiring a registry part in the name or always defaulting to quay.io""]"
21005,Task,Thomas Diesler,Thomas Diesler,None,None,2024-07-23T06:23:32+0000,1721715812,2024-08-05T08:47:40+0000,2024-08-05T08:47:40+0000,https://github.com/fabric8io/fabric8-maven-plugin?tab=readme-ov-file#deprecation-note,"['Claus Ibsen - 2024-08-05T07:15:51+0000 Are we using this plugin anywhere ?', 'Thomas Diesler - 2024-08-05T08:47:26+0000 We are using the k8s client and some test support from fabric8, not actually the maven plugin.']"
21004,Bug,Claus Ibsen,Marat Gubaidullin,4.7.0,4.8.0,2024-07-22T14:50:24+0000,1721659824,2024-08-28T07:14:54+0000,2024-08-05T16:00:16+0000,In camel-jbang 4.7.0 export throws output The runtime option must be specified event runtime is specified in application.properties,No comments found
21003,Bug,James Netherton,James Netherton,4.7.0,4.8.0,2024-07-22T13:43:04+0000,1721655784,2024-07-23T13:03:23+0000,2024-07-23T13:03:23+0000,"Something I came across when working on this task:https://github.com/apache/camel-quarkus/issues/6083In Camel Quarkus we have some logic to suppress Camel resolving properties from property sources other then those used by MicroProfile Config:https://github.com/apache/camel-quarkus/blob/803e96645110ac555bec08e96d6723521c5487bf/extensions-core/core/runtime/src/main/java/org/apache/camel/quarkus/main/CamelMainRecorder.java#L46-L48And there's a check for it in camel-main here:https://github.com/apache/camel/blob/f911e2c1d6fa4561ffb88019889b2d530dd5a2b2/core/camel-main/src/main/java/org/apache/camel/main/BaseMainSupport.java#L398However, when the 'dev' profile is activated, this check fails because the locations string is concatenated with other info. It'd probably be enough to tweak the if condition to also check if locations ends with ',false'.",No comments found
21002,Dependency upgrade,Andrea Cosentino,Andrea Cosentino,None,4.8.0,2024-07-22T12:50:57+0000,1721652657,2024-07-22T13:14:06+0000,2024-07-22T13:14:06+0000,No description available,No comments found
21001,New Feature,Gaelle Fournier,Gaëlle Fournier,None,4.8.0,2024-07-22T12:34:35+0000,1721651675,2024-09-02T12:07:08+0000,2024-09-02T12:07:08+0000,We should enhance Camel JBang Kubernetes plugin with an Route trait that is capable of configuring the Kubenetes Route resource (from apiVersion route.openshift.io/v1) that should be part of the Kubernetes manifest.,"['Gaelle Fournier - 2024-09-02T07:55:05+0000 Hi ammachado !\nI see you added some files with some build to this issue. Can you give me some more context ?', 'Adriano Machado - 2024-09-02T08:45:54+0000 Hi Gaelle. I added the files accidentally, they were supposed to be added to another issue. I removed the files, and sorry for the inconvenience.', 'Gaelle Fournier - 2024-09-02T09:02:02+0000 No problem, thanks!', 'Claus Ibsen - 2024-09-02T12:07:08+0000 Thanks if you find more traits to add then you are welcome to create JIRA and send PRs']"
21000,New Feature,Gaelle Fournier,Gaëlle Fournier,None,4.8.0,2024-07-22T12:27:17+0000,1721651237,2024-08-13T06:52:23+0000,2024-08-13T06:52:23+0000,We should enhance Camel JBang Kubernetes plugin with an Ingress trait that is capable of configuring the Kubenetes Ingress resource that should be part of the Kubernetes manifest.,No comments found
20999,Bug,Unassigned,John Yin,4.4.2,4.x,2024-07-19T22:06:49+0000,1721426809,2024-08-08T11:42:21+0000,2024-08-08T11:42:21+0000,"Run the following route, the onException handler would be executed twice.  The counter will be 2.int counter = 0
from(""timer://testRoute2?repeatCount=1"").routeId('testRoute_timer2').autoStartup(true)
.onException(IllegalArgumentException).onWhen({it.getException().toString().contains('foo')})
.process().handled(false)
.end()
.log('in testRoute2')
.process()This would generate the following:2024-07-19 17:46:11.711 [Camel (camel-1) thread #31 - timer://testRoute2] testRoute_timer2 - in testRoute2
before throwing exception
print in onException foo 1
print in onException foo 2If the handled(true) is used, the handler would only run once.",No comments found
20998,Bug,Unassigned,Brice Frisco,"3.18.3,3.22.2,4.7.0",4.8.0,2024-07-19T20:46:27+0000,1721421987,2024-08-08T16:30:13+0000,2024-08-08T16:30:13+0000,"When using the Consumer and the Producer within the same route, the objectName can conflict with each other. Consider the following example:The expectation would be that the file `hello.txt` would be read, and then a separate file `hello2.txt` would be written. However, what actually happens is that the original file `hello.txt` is overwritten.WorkaroundA workaround is to add .removeHeaders(""*"") before writing the new file:ReproducerI have built a simple reproducer and steps to run it here: https://github.com/bricefrisco/camel-google-storage-bug-reproducer",['Brice Frisco - 2024-07-19T20:47:50+0000 I will work on the fix to this.']
20997,Task,Unassigned,Otavio Rodolfo Piske,4.8.0,None,2024-07-19T08:15:27+0000,1721376927,2024-07-19T08:15:45+0000,,"We have some tests blocking indefinitely by doing things like:Tests like this should be reviewed and adjusted to ensure that they don't block forever (or for very long). Other tests (manual, ""performance"", etc) should be reviewed and dealt accordingly (moved to camel-performance-tests, removed, etc).",No comments found
20996,New Feature,Otavio Rodolfo Piske,Otavio Rodolfo Piske,None,4.8.0,2024-07-19T07:56:51+0000,1721375811,2024-07-22T09:04:06+0000,2024-07-22T09:00:55+0000,"As part of CAMEL-19290, we have removed camel-solr. But recent updates on the libraries used to implement it now allow us to have this component in a way that is compatible with Camel 4. As such, this is a ticket for reviving the component and aligning it with Camel 4.",No comments found
20995,Bug,Andrea Cosentino,Hareesh Billa,"4.0.0,4.4.0,4.7.0","4.0.6,4.4.4,4.8.0",2024-07-19T03:45:26+0000,1721360726,2024-07-23T13:45:57+0000,2024-07-23T13:28:16+0000,"camel-azure-storage-blob uploadBlockBlob retry operation fails due to mark and reset issue / FluxDue to some of the issues Azure blob storage retrying for upload again, but it is failed to upload due to the input stream length is 0 which is not expected.As per the azure core/common bode Flux code suggestion it is suggested to make markAndreset request parameter to true, But the out camel component always send the parameter value as false.Solution: Instead of sending the default value to false, we can use inputStream.markSupported() method.Here I am adding traces and screenshots, for easy understanding.Thanks.","[""Hervé Dumont - 2024-07-19T12:09:51+0000 Issue introduced by CAMEL-18808.\nRetry was working with input stream that supported mark()/reset().\nIt's no longer working since CAMEL-18808 changes in BlobClientWrapper"", 'Hareesh Billa - 2024-07-23T13:45:57+0000 Your quick support is greatly appreciated, thank you all.\nacosentino:  Do you have any idea what the next versions (4.0.x and 4.4.x) release dates are?']"
20994,Bug,Claus Ibsen,Claudio Miranda,None,4.8.0,2024-07-18T18:35:18+0000,1721327718,2024-08-09T15:26:38+0000,2024-08-08T09:51:29+0000,Given the following integration route.There is no camel-quarkus-direct component in the generated pom.xmlI noticed it's related to the rest component. Replace it with timer then the export command adds the camel-quarkus-direct dependency to the pom.xml,"['Claus Ibsen - 2024-08-06T05:12:20+0000 Its because the rest-dsl will inline the rest routes', 'Thomas Diesler - 2024-08-07T08:44:02+0000 For \'camel kubernetes export\', we now always have \'camel-direct\' added. Even for a simple route like this ...\n- from:\n    uri: ""timer:yaml""\n    parameters:\n      period: ""1000""\n    steps:\n      - setBody:\n          simple: ""Hello Camel from ${routeId}""\n      - log: ""${body}""\nIt may have to do with the health (rest) endpoint\nIt breaks the spring-boot integration, presumedly because of ...\n        <dependency>\n            <groupId>org.apache.camel.springboot</groupId>\n            <artifactId>camel-cli-connector-starter</artifactId>\n        </dependency>\n        <dependency>\n            <groupId>org.apache.camel.springboot</groupId>\n            <artifactId>camel-direct-starter</artifactId>\n        </dependency>', 'Claus Ibsen - 2024-08-07T12:17:23+0000 What kind of break, what do you mean, those 2 artifcats above are correct names and would allow Camel to run, regardless if direct is in use or not', 'Claus Ibsen - 2024-08-07T12:41:34+0000 okay now we only include rest/direct if really in use', 'Thomas Diesler - 2024-08-07T13:26:57+0000 This dependency is still being added\n        <dependency>\n            <groupId>org.apache.camel.springboot</groupId>\n            <artifactId>camel-cli-connector-starter</artifactId>\n        </dependency>\nand it still prevents the timer route to start up for spring-boot\nYou can try it with this project\nhttps://github.com/tdiesler/camel-cloud-examples/tree/main/spring-boot/timer-log', 'Claus Ibsen - 2024-08-08T09:43:45+0000 I can run this example without any problems:\n~/Downloads/camel-cloud-examples/spring-boot/timer-log main ❯ mvn compile spring-boot:run\n[INFO] Scanning for projects...\n[INFO]\n[INFO] -------------------------< examples:timer-log >-------------------------\n[INFO] Building timer-log 1.0.0\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO]\n[INFO] --- resources:3.3.1:resources (default-resources) @ timer-log ---\n[INFO] Copying 1 resource from src/main/resources to target/classes\n[INFO] Copying 1 resource from src/main/resources to target/classes\n[INFO]\n[INFO] --- compiler:3.13.0:compile (default-compile) @ timer-log ---\n[INFO] Recompiling the module because of changed source code.\n[INFO] Compiling 1 source file with javac [debug parameters release 17] to target/classes\n[INFO]\n[INFO] >>> spring-boot:3.3.1:run (default-cli) > test-compile @ timer-log >>>\n[INFO]\n[INFO] --- resources:3.3.1:resources (default-resources) @ timer-log ---\n[INFO] Copying 1 resource from src/main/resources to target/classes\n[INFO] Copying 1 resource from src/main/resources to target/classes\n[INFO]\n[INFO] --- compiler:3.13.0:compile (default-compile) @ timer-log ---\n[INFO] Nothing to compile - all classes are up to date.\n[INFO]\n[INFO] --- resources:3.3.1:testResources (default-testResources) @ timer-log ---\n[INFO] skip non existing resourceDirectory /Users/davsclaus/Downloads/camel-cloud-examples/spring-boot/timer-log/src/test/resources\n[INFO]\n[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ timer-log ---\n[INFO] No sources to compile\n[INFO]\n[INFO] <<< spring-boot:3.3.1:run (default-cli) < test-compile @ timer-log <<<\n[INFO]\n[INFO]\n[INFO] --- spring-boot:3.3.1:run (default-cli) @ timer-log ---\n[INFO] Attaching agents: []\n\n  .   ____          _            __ _ _\n /\\\\ / ___\'_ __ _ _(_)_ __  __ _ \\ \\ \\ \\\n( ( )\\___ | \'_ | \'_| | \'_ \\/ _` | \\ \\ \\ \\\n \\\\/  ___)| |_)| | | | | || (_| |  ) ) ) )\n  \'  |____| .__|_| |_|_| |_\\__, | / / / /\n =========|_|==============|___/=/_/_/_/\n\n :: Spring Boot ::                (v3.3.1)\n\n2024-08-08T11:42:52.202+02:00  INFO 48774 --- [           main] examples.timerlog.CamelApplication       : Starting CamelApplication using Java 17.0.11 with PID 48774 (/Users/davsclaus/Downloads/camel-cloud-examples/spring-boot/timer-log/target/classes started by davsclaus in /Users/davsclaus/Downloads/camel-cloud-examples/spring-boot/timer-log)\n2024-08-08T11:42:52.204+02:00  INFO 48774 --- [           main] examples.timerlog.CamelApplication       : No active profile set, falling back to 1 default profile: ""default""\n2024-08-08T11:42:52.774+02:00  INFO 48774 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat initialized with port 8080 (http)\n2024-08-08T11:42:52.779+02:00  INFO 48774 --- [           main] o.apache.catalina.core.StandardService   : Starting service [Tomcat]\n2024-08-08T11:42:52.780+02:00  INFO 48774 --- [           main] o.apache.catalina.core.StandardEngine    : Starting Servlet engine: [Apache Tomcat/10.1.25]\n2024-08-08T11:42:52.843+02:00  INFO 48774 --- [           main] o.a.c.c.C.[Tomcat].[localhost].[/]       : Initializing Spring embedded WebApplicationContext\n2024-08-08T11:42:52.844+02:00  INFO 48774 --- [           main] w.s.c.ServletWebServerApplicationContext : Root WebApplicationContext: initialization completed in 619 ms\n2024-08-08T11:42:53.235+02:00  INFO 48774 --- [           main] o.s.b.a.e.web.EndpointLinksResolver      : Exposing 1 endpoint beneath base path \'/actuator\'\n2024-08-08T11:42:53.300+02:00  INFO 48774 --- [           main] o.s.b.w.embedded.tomcat.TomcatWebServer  : Tomcat started on port 8080 (http) with context path \'/\'\n2024-08-08T11:42:53.411+02:00  INFO 48774 --- [           main] o.a.c.impl.engine.AbstractCamelContext   : Apache Camel 4.8.0-SNAPSHOT (camel-1) is starting\n2024-08-08T11:42:53.415+02:00  INFO 48774 --- [           main] o.a.c.impl.engine.AbstractCamelContext   : Routes startup (total:1)\n2024-08-08T11:42:53.415+02:00  INFO 48774 --- [           main] o.a.c.impl.engine.AbstractCamelContext   :     Started route1 (timer://yaml)\n2024-08-08T11:42:53.415+02:00  INFO 48774 --- [           main] o.a.c.impl.engine.AbstractCamelContext   : Apache Camel 4.8.0-SNAPSHOT (camel-1) started in 3ms (build:0ms init:0ms start:3ms)\n2024-08-08T11:42:53.415+02:00  INFO 48774 --- [           main] examples.timerlog.CamelApplication       : Started CamelApplication in 1.363 seconds (process running for 1.509)\n2024-08-08T11:42:54.438+02:00  INFO 48774 --- [ - timer://yaml] route1                                   : Hello Camel from route1\n2024-08-08T11:42:55.426+02:00  INFO 48774 --- [ - timer://yaml] route1                                   : Hello Camel from route1\n2024-08-08T11:42:56.429+02:00  INFO 48774 --- [ - timer://yaml] route1                                   : Hello Camel from route1', 'Claus Ibsen - 2024-08-08T09:44:57+0000 Ah sorry that dependency was not included OOTB, yeah adding it seems to hang something.', 'Claus Ibsen - 2024-08-08T09:51:25+0000 Okay I have pushed a fix to main branch, now it works with the cli connector starter also', 'Thomas Diesler - 2024-08-09T15:25:36+0000 Yes, that repo contains the output of the last known good camel snapshot. In that way I see easily see what has changed in the generated projects.']"
20993,Bug,Luigi De Masi,Luigi De Masi,4.7.0,4.8.0,2024-07-18T15:07:00+0000,1721315220,2024-08-05T07:17:48+0000,2024-08-05T07:17:48+0000,"When a route fails, the route should be visible in the actuator/camelroutes endpoint and marked with the current status.  Currently it is not visible.For example the following routes:The ""bar"" route fails to start, but is not registered in the camelroutes endpoint.  Only the ""foo"" route is listed:",No comments found
20992,Bug,Dylan Piergies,Romain Pfund,"4.5.0,4.6.0,4.7.0",4.8.0,2024-07-18T09:20:08+0000,1721294408,2024-08-20T07:47:09+0000,2024-08-20T05:30:07+0000,"Here's the error message I get from camel 4.5.0 and above (tested with 4.7.0) in RECEIVE_AND_DELETE mode:Route end without failure, so the onComplete method is called:Route end with failure, so the onFailure method is calledenableDeadLettering: false:same with enableDeadLettering: true:There is no functional problem with that, the message is correctly consume from the subscription.
But we should avoid unnecessarily ERROR level log, so the abandon|complete|deadletter should not be call in RECEIVE_AND_DELETE mode","['Claus Ibsen - 2024-08-08T16:31:23+0000 Can you attach your sample route you used as it seems not to be attached', 'Romain Pfund - 2024-08-09T08:08:41+0000 Hi,\nDone, those are just tests route to demonstrate the behavior', 'Dylan Piergies - 2024-08-19T20:13:03+0000 Ought to have type: Bug.']"
20991,Bug,Claus Ibsen,Claudio Miranda,None,4.8.0,2024-07-17T23:08:10+0000,1721257690,2024-08-07T11:18:47+0000,2024-08-07T11:18:47+0000,"Trying to export the following route, with --ignore-loading-errorThere is an errorSomehow the --ignore-loading-error doesn't influence the KameletMain loading the kamelet.The workaround is to replace the placeholders in the kamelet endpoint with any value, then export, then add the placeholder back in the route in the exported file in src/main/java.","['Claus Ibsen - 2024-08-06T16:54:31+0000 You do have some options which are not configured, so when you export you will end up with a project that cannot run.\nYou should configure this value in application.properties.\nHowever as you say the ignore-loading-error option could maybe be how we would just ignore this and skip the option during export resolution and keep it in the source.', 'Claus Ibsen - 2024-08-07T07:35:33+0000 Okay I think its better to make the export a bit more flexible and attempt to export also if some property values has not been defined yet, so we can make your example export even without the --ignore option. However it would not be able to do that in case of compilation error, so the option can be useful there, but you risk that the export fail to detect a component in use due to the route was not compiled.']"
20990,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-17T10:36:02+0000,1721212562,2024-07-25T12:17:13+0000,2024-07-25T12:17:13+0000,In kubernetes quarkus we have,['Thomas Diesler - 2024-07-25T12:17:13+0000 Done']
20989,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-17T09:19:31+0000,1721207971,2024-07-23T14:12:27+0000,2024-07-23T14:11:54+0000,Add support for this type of selector in kubernetes spring-boot ...,['Thomas Diesler - 2024-07-23T14:11:54+0000 Out of date']
20988,Bug,Nikita_Konovalov,Otavio Rodolfo Piske,"4.4.3,4.7.0","4.0.6,4.4.4,4.8.0",2024-07-17T08:48:37+0000,1721206117,2024-07-24T08:05:00+0000,2024-07-24T08:05:00+0000,This is caused by incorrectly getting the value of an optional without checking if it is indeed present.Services with this problem:,['Otavio Rodolfo Piske - 2024-07-24T08:05:00+0000 Resolved with the linked PRs.']
20987,New Feature,Unassigned,Ryan Highley,None,4.8.0,2024-07-16T14:20:16+0000,1721139616,2024-08-26T08:44:04+0000,2024-08-26T08:44:04+0000,"Create a new component wrapping the Eclipse Tahu library to support the Sparkplug B specification.https://projects.eclipse.org/projects/iot.sparkplughttps://projects.eclipse.org/projects/iot.tahuI have come across a few client use cases requiring Sparkplug B compatibility on top of MQTT. While MQTT handles the messaging transport, the additional Sparkplug semantics are not addressed. The Eclipse Tahu library addresses these, both for edge nodes and a host applications.My intent is to wrap the Eclipse Tahu library as a Camel Component using a Producer to support edge nodes and a Consumer to support host applications. The Sparkplug TCK is used to verify specification compliance wherever possible for Component unit tests.","['Claus Ibsen - 2024-08-05T07:21:46+0000 You are welcome to work on such a new component', ""Ryan Highley - 2024-08-05T19:33:00+0000 Thanks, davsclaus \nI've been running into numerous testing consistency issues. Once I have those hammered out, I plan to submit a PR for review."", 'Claus Ibsen - 2024-08-22T10:55:25+0000 Added SB starter DONE']"
20986,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.x,4.8.0,2024-07-16T07:45:53+0000,1721115953,2024-09-03T13:31:47+0000,2024-09-03T13:31:47+0000,"Currently, when loading data into a VectorDB, applications have to implement chunking on their own. This is typically done as a processor (which then uses LangChain4J Document Splitter features or implement their own).We could make this simpler by implementing a specialized chunking DSL that abstracts this process and simplify loading the data to those databases.",['Otavio Rodolfo Piske - 2024-09-03T13:31:47+0000 Resolved with the linked PRs.']
20985,New Feature,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-16T07:27:39+0000,1721114859,2024-07-30T19:09:42+0000,2024-07-18T07:26:09+0000,The Camel JBang Kubernetes plugin is able to leverage the trait configuration options to generate a Kubernetes manifest during export.The plugin should support Camel K integrations and pipe resources as source of export. The integration and pipe may use trait configuration as part of the specification. These trait config options can be directly used to generate the Kubernetes manifest.This way users should be able to generate an arbitrary Quarkus/SpringBoot project with a normal Kubernetes manifest from the Camel K integration or pipe. The result can be deployed to a cluster where the Camel K operator is not present for some reason.,No comments found
20984,New Feature,Gaelle Fournier,Christoph Deppisch,None,4.8.0,2024-07-16T07:22:20+0000,1721114540,2024-07-30T19:09:56+0000,2024-07-26T07:39:25+0000,The Camel JBang Kubernetes plugin already configures the image container that is part of the Deployment in the Kubernetes manifest.We should enhance the container trait configuration with more options. As a reference see the Camel K container trait options.,No comments found
20983,New Feature,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-16T07:20:23+0000,1721114423,2024-07-30T19:10:15+0000,2024-07-25T17:14:59+0000,"When creating the Kubernetes manifest for Camel JBang export users should be able to choose and configure Knative service, trigger and sinkbinding resources.By default the manifest will create an arbitrary service but users should be able to choose a Knative service instead. Also when the Camel route connects to a Knative broker users should be able to automatically create Knative trigger and sinkbinding resources as part of the Kubernetes manifest.",No comments found
20982,New Feature,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-16T07:15:27+0000,1721114127,2024-07-30T19:10:25+0000,2024-07-22T11:53:08+0000,Service trait in Camel JBang Kubernetes plugin is capable of configuring the Kubenretes service resource that should be part of the Kubernetes manifest,No comments found
20981,Bug,Christoph Deppisch,Christoph Deppisch,None,4.8.0,2024-07-15T19:02:44+0000,1721070164,2024-07-16T07:10:09+0000,2024-07-16T07:10:09+0000,"The Knative component provides the option to override the CloudEvent attributes like ce-type or ce-source.Usually these attributes are set on the component configuration, endpoint URI or environment setting.When setting this ceOverride option via YAML DSL (e.g. in a Pipe) the problem arises that the CloudEvent attribute names are supposed to use dash style keys. The YAML DSL automatically converts key to camelCase style.This results in the situation that YAML DSL Pipe is not able to set ceOverride option for the Knative component.Also property placeholders are not resolved when setting these CloudEvent attributes.",No comments found
20980,New Feature,Unassigned,Alvin Kwekel,4.7.0,4.8.0,2024-07-15T17:41:24+0000,1721065284,2024-07-17T09:46:33+0000,2024-07-17T09:24:43+0000,"To be able to validate a very large (over 20.000.000 character) JSON string the Jackson object mapper needs to be configured with a custom `JsonFactory` with a `StreamReadConstraints` with a higher `maxStringLength`.The string length can't be configured via the Jackson deserialization features that are settable via the query parameters of the validator. There is a new ObjectMapper constructed in the doInit method of the `JsonValidatorEndpoint` so there is not way to override that.This feature is discussed in chat: 
https://camel.zulipchat.com/#narrow/stream/257301-camel-spring-boot/topic/Custom.20Jackson.20object.20mapper.20on.20the.20JSON.20Schema.20Validator",No comments found
20979,Improvement,Karen Lease,Federico Mariani,4.7.0,4.8.0,2024-07-15T10:16:23+0000,1721038583,2024-08-22T06:39:11+0000,2024-08-22T06:39:11+0000,"When using contract first rest dsl openapi the following yaml open api (taken from https://swagger.io/docs/specification/basic-structure/)generate the following log if missing routes are ignoredin particular, direct:null route has to be created, given that openrationId is not provided, is it expected? can route name be dynamically generated via $path + $verb?","['Claus Ibsen - 2024-08-05T07:23:14+0000 operationId string Unique string used to identify the operation. The id MUST be unique among all operations described in the API. The operationId value is case-sensitive. Tools and libraries MAY use the operationId to uniquely identify an operation, therefore, it is RECOMMENDED to follow common programming naming conventions.', 'Claus Ibsen - 2024-08-05T07:24:37+0000 Yeah we should see if we can generate some random uuid operation id, to link the operation to the route.']"
20978,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-12T15:50:07+0000,1720799407,2024-07-12T16:09:55+0000,2024-07-12T16:09:55+0000,"When a route fails for some reason to start/stop etc then we store last error. We should also store the timestamp. This allows tooling to know this, and can say how long ago this happened.","['Claus Ibsen - 2024-07-12T16:03:40+0000 ~/workspace ❯ camel get route --error\n PID   NAME     ID      FROM                                     REMOTE  STATUS  PHASE  AGO  MESSAGE\n 2222  MyKafka  route1  kafka://cheese?brokers=localhost:119092    x      Error  Start  14s  Invalid port in bootstrap.servers: localhost:119092', 'Claus Ibsen - 2024-07-12T16:03:54+0000 Here you can see that this error was just 14 seconds ago']"
20977,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-12T14:59:29+0000,1720796369,2024-07-12T15:10:26+0000,2024-07-12T15:10:26+0000,Its a bit harder to see why it failed. So lets WARN log this.The jbang command can show the error viacamel get route --error,['Claus Ibsen - 2024-07-12T15:00:43+0000 Without WARN logs you just see the route start and stop asap such as:\n2024-07-12 16:51:18.683  INFO 96867 --- [calCliConnector] ache.camel.component.kafka.KafkaConsumer : Starting Kafka consumer on topic: cheese with breakOnFirstError: false\n2024-07-12 16:51:18.690  INFO 96867 --- [calCliConnector] ache.camel.component.kafka.KafkaConsumer : Stopping Kafka consumer on topic: cheese']
20976,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-12T14:12:21+0000,1720793541,2024-07-17T09:28:26+0000,2024-07-17T09:28:26+0000,"Currently we have --dep, --deps and --dependency (in kubernetes). It should be possible to consolidate this to multiple --dep options. For backward compatibility, we could keep --deps which then internally maps to String[]","['Thomas Diesler - 2024-07-12T17:19:06+0000 You can now do ...\ncamel kubernetes export timer-log-route.yaml \\\n  --gav=examples:timer-log:1.0.0 \\\n  --deps=io.quarkus:quarkus-container-image-docker,io.quarkus:quarkus-minikube \\\n  --runtime=quarkus\nor\ncamel kubernetes export timer-log-route.yaml \\\n  --gav=examples:timer-log:1.0.0 \\\n  --dep=io.quarkus:quarkus-container-image-docker \\\n  --dep=io.quarkus:quarkus-minikube \\\n  --runtime=quarkus', 'Thomas Diesler - 2024-07-17T09:28:26+0000 Done']"
20975,Improvement,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-12T13:02:07+0000,1720789327,2024-07-22T07:37:50+0000,2024-07-22T07:37:50+0000,"Currently, we need to define the image group explicitly ...This could be derived from a given gav",['Thomas Diesler - 2024-07-22T07:37:50+0000 Done']
20974,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-12T08:47:04+0000,1720774024,2024-07-12T08:47:04+0000,,"When using netty as consumer (server vs client-mode) then it would be good to have a dev console that can show the state, such as the low-level connection channel is active / reconnecting or what happens.",No comments found
20973,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-11T19:26:22+0000,1720725982,2024-07-12T08:35:23+0000,2024-07-12T08:35:23+0000,"Today if you run in dev mode then it uses the source name:line. But we may want to be able to fully configure it globally via some configurationcamel.logger.format=${routeId}
camel.logger.format=${source}:${line}
camel.logger.format=${routeId}/${nodeId}",No comments found
20972,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-11T18:42:18+0000,1720723338,2024-07-11T18:43:28+0000,2024-07-11T18:43:28+0000,"If a route fails to start such as when being manually started, then the camel get route shows Error as status.To see full details you then need to use camel get route --error that will show only error details incl stacktrace.",['Claus Ibsen - 2024-07-11T18:42:58+0000 ~/workspace ❯ camel get route --error\n  PID   NAME     ID      FROM                                     REMOTE  STATUS  PHASE  MESSAGE\n 81814  MyKafka  route1  kafka://cheese?brokers=localhost:119092    x      Error  Start  Invalid port in bootstrap.servers: localhost:119092\n\n------------------------------------------------------------------------------------------------------------------------\n                                                       STACK-TRACE\n------------------------------------------------------------------------------------------------------------------------\n org.apache.kafka.common.config.ConfigException: Invalid port in bootstrap.servers: localhost:119092\n  at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:96)\n  at org.apache.kafka.clients.ClientUtils.parseAndValidateAddresses(ClientUtils.java:62)\n  at org.apache.camel.component.kafka.KafkaConsumer.doStart(KafkaConsumer.java:165)\n  at org.apache.camel.support.service.BaseService.start(BaseService.java:113)\n  at org.apache.camel.support.service.ServiceHelper.startService(ServiceHelper.java:126)\n  at org.apache.camel.impl.engine.AbstractCamelContext.startService(AbstractCamelContext.java:3170)\n  at org.apache.camel.impl.engine.InternalRouteStartupManager.doStartOrResumeRouteConsumers(InternalRouteStartupManager.java:415)\n  at org.apache.camel.impl.engine.InternalRouteStartupManager.doStartRouteConsumers(InternalRouteStartupManager.java:331)\n  at org.apache.camel.impl.engine.InternalRouteStartupManager.safelyStartRouteServices(InternalRouteStartupManager.java:217)\n  at org.apache.camel.impl.engine.InternalRouteStartupManager.safelyStartRouteServices(InternalRouteStartupManager.java:245)\n  at org.apache.camel.impl.engine.AbstractCamelContext.startRouteService(AbstractCamelContext.java:3217)\n  at org.apache.camel.impl.engine.AbstractCamelContext.startRoute(AbstractCamelContext.java:1114)\n  at org.apache.camel.impl.engine.InternalRouteController.startRoute(InternalRouteController.java:126)\n  at org.apache.camel.impl.engine.DefaultRouteController.startRoute(DefaultRouteController.java:133)\n  at org.apache.camel.cli.connector.LocalCliConnector.doActionRouteTask(LocalCliConnector.java:823)\n  at org.apache.camel.cli.connector.LocalCliConnector.actionTask(LocalCliConnector.java:237)\n  at org.apache.camel.cli.connector.LocalCliConnector.task(LocalCliConnector.java:220)\n  at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539)\n  at java.base/java.util.concurrent.FutureTask.runAndReset(FutureTask.java:305)\n  at java.base/java.util.concurrent.ScheduledThreadPoolExecutor$ScheduledFutureTask.run(ScheduledThreadPoolExecutor.java:305)\n  at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136)\n  at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635)\n  at java.base/java.lang.Thread.run(Thread.java:840)']
20971,New Feature,Claus Ibsen,Mark Wimpory,4.6.0,4.8.0,2024-07-11T15:38:33+0000,1720712313,2024-07-15T07:26:04+0000,2024-07-15T07:26:04+0000,I have spent some time trying to build a route that will read a message from SQS and then based on the content of the message read a file from S3.  This is a fairly typical triggering mechanism for S3 and we use it a lot.  So when a file arrives in S3 we trigger an SQS message that will process said file.With the keyname as a constant this works fine and I can retrieve a stream from S3.  However whenever I switch the keyname to a variable value I get a 'key not found' error.I will attach a route class as a reproducer.  Its worth noting that I have tried several approaches which will be commented out in the reproducer.,"['Claus Ibsen - 2024-07-11T16:36:10+0000 There is no support for dynamic keys.\nYou can compute the key before calling the to s3 endpoint\nsetHeader(s3key, simple(""xxxx""))', 'Mark Wimpory - 2024-07-12T09:59:47+0000 This does seem pretty limited as an endpoint.  Perhaps this can be moved to a feature request?', 'Claus Ibsen - 2024-07-12T15:13:21+0000 Yes if the key is a simple expression, then we can eval that - we do this in a few other places.', 'Claus Ibsen - 2024-07-12T15:47:40+0000 There is a PR here\nhttps://github.com/apache/camel/pull/14807', 'Claus Ibsen - 2024-07-12T15:48:52+0000 Because the key can be dynamic you want to know what the actual value is, so have to add PRODUCED_KEY header in the output that stores this information.']"
20970,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-11T12:01:44+0000,1720699304,2024-07-11T12:56:25+0000,2024-07-11T12:56:25+0000,"The listener is kicked in early so you have callbacks during bootstrap. It would be good to be able to configure a classname via camel.main.MainListener=com.foo.MyClass so it can be created early on startup, and you can do this without registering the listener via java code.",No comments found
20969,Bug,Thomas Diesler,Thomas Diesler,None,4.8.0,2024-07-11T11:31:52+0000,1720697512,2024-07-17T08:53:51+0000,2024-07-17T08:53:51+0000,"We currently use `quarkus-container-image-jib` by default. When a user (for some reason) wants to use `quarkus-container-image-docker` instead, it creates a mutually exclusive dependencies problem.Try this ...https://github.com/tdiesler/camel-cloud-examples/tree/main/timer-log",['Thomas Diesler - 2024-07-17T08:53:51+0000 done']
20968,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.9.0,2024-07-11T07:59:42+0000,1720684782,2025-01-03T10:35:25+0000,2025-01-03T10:35:25+0000,I was thinking of adding an option to enrich the prompt properly with content retrieved via a custom Camel RAG pipeline,"['Zineb Bendhiba - 2024-08-06T12:53:03+0000 Merged in main', 'Zineb Bendhiba - 2024-08-06T12:53:44+0000 sorry I closed the wrong one,']"
20967,Improvement,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-10T17:31:58+0000,1720632718,2024-07-11T05:22:00+0000,2024-07-11T05:22:00+0000,"camel.variable.sequence=0should be an interger/long
and true|false as boolean
and everything else string",No comments found
20966,Bug,Claus Ibsen,Bartosz Popiela,None,4.8.0,2024-07-10T14:27:45+0000,1720621665,2024-08-19T16:55:04+0000,2024-08-19T16:55:04+0000,"When calling a templated route (e.g. kamelet) and there is an environment property with the same name as a parameter, it will take precedence.","['Claus Ibsen - 2024-07-10T17:25:52+0000 That is standard that ENV take precedence. Can you come up with a use-case and explain your situation better with concrete examples.', 'Claus Ibsen - 2024-07-11T04:37:13+0000 What version of Camel do you use, and if possible try with latest releases.']"
20965,Bug,Unassigned,Bartosz Popiela,"4.4.3,4.6.0",4.7.0,2024-07-10T14:26:52+0000,1720621612,2024-07-17T01:42:41+0000,2024-07-17T01:42:41+0000,"InputStreamCache is reset after each step (org.apache.camel.impl.engine.CamelInternalProcessor.StreamCachingAdvice#after), and if there are two threads processing the same InputStreamCache (e.g. Seda), there may be a case where one thread invokes InputStreamCache#reset (org.apache.camel.support.MessageHelper#resetStreamCache) while another thread converts this InputStreamCache to String (org.apache.camel.util.IOHelper#toString(java.io.BufferedReader, long). It leads to java.io.ByteArrayInputStream#pos being reset and the target String having duplicate entries.",['Bartosz Popiela - 2024-07-16T11:21:01+0000 Fixed by the pr 14502.']
20964,New Feature,Gaelle Fournier,Christoph Deppisch,None,4.x,2024-07-10T08:48:29+0000,1720601309,2024-08-07T08:55:23+0000,2024-08-07T08:55:23+0000,The Camel JBang Kubernetes plugin provides traits to easily configure the Kubernetes manifest (kubernetes.yml) that is used to build and deploy the application on Kubernetes.The traits are configured via command line options (e.g. --trait container.port=8088)We should also support trait configuration via profile properties (e.g. application.properties) that get loaded during the export command.Properties may use a common prefix like camel.jbang.trait.* (e.g. camel.jbang.trait.container.port=8088),No comments found
20963,Improvement,Thomas Diesler,Christoph Deppisch,None,4.8.0,2024-07-10T08:41:39+0000,1720600899,2024-07-30T19:10:51+0000,2024-07-25T12:17:38+0000,Camel JBang export with camel-main runtime already provides a Kubernetes support to run the application on Kubernetes.The camel-main export adds and configures the JKube with resource fragments to build and deploy to Kubernetes.Recently we have added a Camel JBang Kubernetes plugin that deals with running Camel applications on Kubernetes. We should consolidate the export functionality and maybe move the camel-main Kubernetes support to the plugin.,"['Claus Ibsen - 2024-07-10T09:31:48+0000 Can you wait with this and do Spring Boot first.\ncamel-main should be last, and end users are depend on how it works now, and need time to adjust to the new plugin', 'Thomas Diesler - 2024-07-24T10:36:54+0000 You can test this here: https://github.com/tdiesler/camel-cloud-examples/tree/main/camel-main/timer-log', 'Thomas Diesler - 2024-07-25T12:17:38+0000 Done']"
20962,New Feature,Thomas Diesler,Christoph Deppisch,None,4.8.0,2024-07-10T08:33:58+0000,1720600438,2024-07-22T07:38:00+0000,2024-07-22T07:38:00+0000,"The Camel JBang Kubernetes plugin is able to run Camel applications on Kubenretes with Quarkus export, build and deploy.The user should be able to also select SpringBoot as a runtime.The Kubernetes plugin should also support SpringBoot export, build and deploy where users set runtime=spring-boot for the export/run command.Quarkus provides a Kubernetes extension that allows to configure and deploy the Kubernetes manifest (kubernetes.yml). A possible solution for SpringBoot would be JKube with resource fragments","['Thomas Diesler - 2024-07-17T11:09:21+0000 To test this, you can use the sample project here.', 'Thomas Diesler - 2024-07-22T07:38:00+0000 Done']"
20961,Bug,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-10T08:20:48+0000,1720599648,2024-07-10T08:33:44+0000,2024-07-10T08:33:44+0000,"~/.camel ❯ camel log --grep=chuck
java.lang.NullPointerException: Cannot invoke ""java.lang.CharSequence.length()"" because ""this.text"" is null
	at java.base/java.util.regex.Matcher.getTextLength(Matcher.java:1769)
	at java.base/java.util.regex.Matcher.reset(Matcher.java:415)
	at java.base/java.util.regex.Matcher.<init>(Matcher.java:252)
	at java.base/java.util.regex.Pattern.matcher(Pattern.java:1134)
	at org.apache.camel.dsl.jbang.core.commands.action.CamelLogAction.isValidGrep(CamelLogAction.java:485)
	at org.apache.camel.dsl.jbang.core.commands.action.CamelLogAction.tailLogFiles(CamelLogAction.java:429)
	at org.apache.camel.dsl.jbang.core.commands.action.CamelLogAction.doCall(CamelLogAction.java:152)
	at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
	at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
	at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
	at picocli.CommandLine.access$1500(CommandLine.java:148)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
	at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
	at picocli.CommandLine.execute(CommandLine.java:2174)
	at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:169)
	at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:61)
	at main.CamelJBang.main(CamelJBang.java:36)
~/.camel ❯",No comments found
20960,Bug,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-10T08:16:17+0000,1720599377,2024-07-10T11:08:41+0000,2024-07-10T11:08:41+0000,The last row with log1 is actually from the producer camel (pid = 53948),No comments found
20959,Task,Jiri Ondrusek,Jiri Ondrusek,None,4.x,2024-07-10T08:04:31+0000,1720598671,2024-07-23T08:01:56+0000,,"TBH I'm not sure what has to be done next.Here is the initial commit for the camel-upgrade-recipes repo.I think that we should release this library when this commit is merged.
Why?Once released, I can update draft PR for  quarkus-updates project  and leverage the camel-upgrade-recipes dependency.With some guiding from someone I can try to achieve some of the task.(It would be nice to have component in jira, which would represent upgrade-recipes.
The affects version/fix version does not make sense in the camel project, as the versioning might be different)","['Jiri Ondrusek - 2024-07-11T11:23:47+0000 davsclaus WDYT?', 'Claus Ibsen - 2024-07-11T11:32:32+0000 I will be on PTO for 3 weeks, but I think Andrea can help with doing a release.\nI wonder if the version should match the latest camel version it can upgrade too, as in this case its 4.4.x. So the release is 4.4.0.\nAnd if you then later add rules for 4.5 and 4.6, then it can be released as 4.6.0, and so on.', 'Jiri Ondrusek - 2024-07-11T12:06:30+0000 We can align to Camel versions, it will help navigate users which version is meant for which Camel version.\nBut perhaps we would need a smaller granularity, like what if we need to fix a recipe for migrating to Camel let say 4.7.0. In the time when upgrade-recipes project was already released for 4.7.0. The new version of recipes should be something like 4.7.0.1.\nOn the other hand if we have independent versioning, we can have i.e. 1.0.1\nI think that independent versions might present stronger arguments:\nQuarkus-updates is versioned in such way \nhypothetically in the future - we can present a tool (or add some options to the current CLI tools) to help with migrations. So the tool would hide versions for the users. (therefore having the same version would not be benefiting us)\nwhat if we let say with Camel 4.7.2 want to add some recipe for migration to 4.7.3, but the different stream like Camel 4.8.0 is already out. Therefore camel-recipes 4.8.0 already exists. What would be the release containing migration to 4.7.3?\nI think that having independent versions would helps to solve much more corner cases with recipes (like releasing in different time then Camel, or a recipe for a special Camel version, ..)', 'Claus Ibsen - 2024-07-12T09:04:22+0000 No its not on a patch level, only X.Y\nSo X.Y means that the recipies can go up to X.Y release, ie 4.7\nThe .Z does not matter. If the recipies needs a fix release then they do 4.7.1 4.7.2 and so on.\nSo if a user wants to upgrade to Camel 4.7, they grab the latest recipie release that are 4.7.x based. Or a higher like 4.8.\nForget about Quarkus - this is ASF and our projects should be ASF based.', 'Jiri Ondrusek - 2024-07-12T10:12:09+0000 Sure, then lets align to Camel. \n  I have no problem with it.', 'Claus Ibsen - 2024-07-12T13:00:55+0000 Maybe we can do the first release as 0.x to give us the time to make sure it becomes correct and as needed. Then after that we can find out if it should be its own version or follow the camel releases like most all other projects', 'Jiri Ondrusek - 2024-07-23T07:18:44+0000 Hi acosentino , may I ask for help? (with releasing version 0.1 of the https://github.com/apache/camel-upgrade-recipes)', 'Andrea Cosentino - 2024-07-23T08:01:56+0000 I can have a look']"
20958,Bug,Claus Ibsen,Mark Wimpory,4.6.0,4.8.0,2024-07-10T07:16:05+0000,1720595765,2024-08-21T06:23:40+0000,2024-08-21T06:23:40+0000,"When shards are merged the consumer reads any remaining messages from those shards and then notes that the shard has closed.  However it continuously loops as in the log exert below.  This continues on a restart.Note this occurs no matter what type of failure option (silent, fail etc)I have not tested so far what happens when the shard reaches its expired state (due to a localstack bug)2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-4] WARN o.a.c.c.a.k.Kinesis2Consumer - The shard with id=shardId-000000000000 on stream ingestion-death-stream reached CLOSE status
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-3] WARN o.a.c.c.a.k.Kinesis2Consumer - The shard with id=shardId-000000000001 on stream ingestion-death-stream reached CLOSE status
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-4] INFO o.a.c.c.a.k.c.KinesisDefaultResumeAdapter - Resuming from offset 49653759514412492265585802359002135113225509352150925314 for key ingestion-death-stream
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-3] INFO o.a.c.c.a.k.c.KinesisDefaultResumeAdapter - Resuming from offset 49653759514434793010784332982141252979858928386588016658 for key ingestion-death-stream
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-4] DEBUG o.a.c.c.a.k.Kinesis2Consumer - Obtained new ShardIterator AAAAAAAAAAFhGdwQ2Ac96sw4ScfsOEaTn+V+4vvB9RE9cnHLqD+s4rLMSSioedJLXVbHf47GfSV8ktk53sJmQXMFb+EZOOA/PaByEh66RTC7iBK+8BCZrrL5wb4wNHV7M1qtua1Cu7NrsqEZli3+HgagoG4V7bopK5xPcezzfDN9EWclJRCnlq3Z9nJRSmB4JCmIweWsX8VrM7SHnaVabQ3Kd8l9zoj7 for shard shardId-000000000000 on stream ingestion-death-stream
2024-07-09 12:01:43 [ForkJoinPool.commonPool-worker-3] DEBUG o.a.c.c.a.k.Kinesis2Consumer - Obtained new ShardIterator AAAAAAAAAAEGg3GnGpu+nfbhufxJ7/V1iSjlD7G24d03xeQATtF9pV1dK21qLxxKpdS8g/CLPdV3MZaJaZoXkthM0J4xNvLOAkCwPpEsl9ympInzr/3QgNqFHqhGopNBlGKMyCdQUYi0UErBuUJ8dPKCq+IYRNVQvhSGg4fF4zXAlDi7jsXC7HZ2X9Xo3Q4XF/E7yEhi1YnFKAmMOmzstDkUtJd+U3MO for shard shardId-000000000001 on stream ingestion-death-stream","['Mark Wimpory - 2024-07-10T07:17:14+0000 Readme.md contains additional steps to reproduce as it requires aws command', 'Claus Ibsen - 2024-08-08T11:44:07+0000 Okay so what should happen when the shard has CLOSED status. Should then consumer then just silently ignore that, and then keep attempting to read it in the future or what ?', 'Mark Wimpory - 2024-08-08T14:47:44+0000 Mmmm yes I can see what you mean, but when a shard is closed no new messages can be written to it.  So when you reach the end of the shard there is no need to continue asking for a new subscription.  So I would say on first start its fine, because we dont know we are at the end of the shard, and in fact the subscriber may want to read from the shard.  But once that finishes we can stop until the next restart.', 'Claus Ibsen - 2024-08-08T15:00:43+0000 Okay so maybe we can detect the CLOSED and do a WARN or INFO log and saying that its closed and that no new messages will be consumed, and then make the consumer a noop mode.\nYou are welcome to attempt to implement this and send a PR against the main branch', 'Claus Ibsen - 2024-08-20T07:52:29+0000 Okay so the ignore will keep WARN logging. And ignore will be silent, but yes the consumer will keep looping.\nYes we need to make the consumer (when closed) not attempt to do more AWS activity. The Camel route/consumer will keep being started but it wont do anything until restarted.']"
20957,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.x,2024-07-10T06:42:15+0000,1720593735,2024-07-10T06:42:43+0000,,"This was discussed in these tickets:Basically, we should investigate adding pausable consumers support via RoutePolicy instead of reinventing the wheel (as the API is not very easy to use, inadequate for low-code tools, etc).",No comments found
20956,New Feature,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-09T07:49:15+0000,1720511355,2024-07-10T10:20:48+0000,2024-07-10T09:44:58+0000,So we can see some kafka details more easily and also add a jbang command for this.,No comments found
20955,Task,Claus Ibsen,Christoph Deppisch,4.7.0,4.8.0,2024-07-09T07:11:18+0000,1720509078,2024-07-10T10:47:11+0000,2024-07-10T10:47:11+0000,Consider adding Camel JBang plugin modules to the Camel BOM. Current plugin modules are,No comments found
20954,Bug,Claus Ibsen,Antoine DESSAIGNE,3.20.0,"3.22.3,4.0.6,4.4.4,4.8.0",2024-07-08T16:32:15+0000,1720456335,2024-07-09T06:34:29+0000,2024-07-09T04:37:35+0000,"Hello everyone,Since CAMEL-18665, it's no longer possible to share a SSLContextParameters configuration between camel-kafka and other components.Now that the underlying JsseParameters uses the ResourceLoader you need to prefix your path with a ""file:"" and have something likeBut as camel-kafka copies the parameters directly it needs the path without the ""file:"" prefix, see extract from KafkaConfiguration.applySslConfigurationFromContext()I don't know what is the right move. Is it to change the JsseParameters class and try to read a file before asking the ResourceLoader or is it to modify the camel-kafka configuration to be able to handle resources?I appreciate your help on this matter and have a nice day,Antoine","['Claus Ibsen - 2024-07-08T17:14:04+0000 Yes kafka loads the itself so prefix before colon should be removed', 'Antoine DESSAIGNE - 2024-07-09T06:32:08+0000 Thank you for taking care of it so quickly.\nAs per the fix versions, maybe you meant ""4.4.4"" and not ""4.44"" (missing dot)', 'Claus Ibsen - 2024-07-09T06:34:29+0000 Thanks']"
20953,Bug,Claus Ibsen,Tadayoshi Sato,4.7.0,4.8.0,2024-07-08T08:26:34+0000,1720427194,2024-07-09T04:37:55+0000,2024-07-09T04:37:55+0000,"When we'd like to run a Camel script once and then immediately self-terminate it, we'd run the command:and it works just as expected. However, when we add --dev to the above command, it starts to fail to terminate the context and thus the process.The same issue goes for --max-idle-seconds and --max-seconds as well.Normally it wouldn't be an issue because it doesn't make much sense to use --max-* and --dev at the same time, but it becomes an issue when we run a Camel script on VS Code, where the Debug Adapter for Apache Camel always attaches --dev to the launcher command.","['Claus Ibsen - 2024-07-08T10:59:37+0000 Yeah so this was intended a bit on purpose, to let --dev keep the JVM running, and you can use --max-messages=10 to load in X messages and see what happens, and then let Camel ""sleep"" and do some code changes and it loads another 10 messages ... and so on.', 'Claus Ibsen - 2024-07-08T11:00:27+0000 You can configure --prop to override and tell Camel to shutdown\ncamel run hello.java --max-messages=1 --dev --prop=camel.main.durationMaxAction=shutdown', 'Tadayoshi Sato - 2024-07-09T01:11:37+0000 It solves the issue. Thanks.\ncamel run hello.java --max-messages=1 --dev --prop=camel.main.durationMaxAction=shutdown']"
20952,Task,Claus Ibsen,Claus Ibsen,None,4.8.0,2024-07-08T08:09:34+0000,1720426174,2024-07-08T08:18:26+0000,2024-07-08T08:18:26+0000,"[INFO] [ERROR] Failed to execute goal org.apache.maven.plugins:maven-javadoc-plugin:3.7.0:jar (attach-javadocs) on project camel-spring-xml: MavenReportException: Error while generating Javadoc:
[INFO] [ERROR] Exit code: 1
[INFO] [ERROR] warning: URL https://docs.oracle.com/javase/7/docs/api/element-list was redirected to https://docs.oracle.com/en/java/javase/22/ – Update the command-line options to suppress this warning.
[INFO] [ERROR] error: Error fetching URL: http://static.springsource.org/spring/docs/6.1.10/javadoc-api/ (java.io.IOException: Server returned HTTP response code: 504 for URL: https://static.springsource.org/spring/docs/6.1.10/javadoc-api/package-list)
[INFO] [ERROR] /Users/davsclaus/workspace/camel/components/camel-spring-xml/src/main/java/org/apache/camel/spring/xml/CamelContextFactoryBean.java:1245: warning: invalid usage of tag {@link org.apache.camel.spi.TypeConverterRegistry#getStatistics()#setTypeConverterStatisticsEnabled(Boolean)
[INFO] [ERROR]      *[INFO] [ERROR]        ^
[INFO] [ERROR] 1 error",No comments found
20951,Task,Unassigned,Samhitha,3.22.1,None,2024-07-08T07:28:51+0000,1720423731,2024-08-05T07:25:18+0000,2024-08-05T07:25:18+0000,"Observing performance degradation around 20% with Splitter EIP, once we have upgraded from camel 3.18.7 to camel 3.22.1. We are having similar implementation as below, where in data will be split by our logic in ""executeSplitter"".
 
from(""direct:source"")
.routeGroup(""group"")
.routeId(""splitterId"")
.split()
.method(splitter, ""executeSplitter"")
.shareUnitOfWork()
.stopOnException()
.toD(""direct:destination"");","['Claus Ibsen - 2024-07-08T08:07:43+0000 You need to do your own investigations more, try with 3.21, 3.20, 3.19 and narrow it down, as its a bigger jump between 3.18 and 3.22, and its your app. We dont active support 3.x anymore, all work is focused on 4.x and 3.x is going EOL by end of this year.']"
20950,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-06T08:28:23+0000,1720254503,2025-01-08T14:49:06+0000,2025-01-08T14:49:06+0000,"We have internal vs external counters. For example a timer is internal, and kafka is external. We should have this information in micrometer metrics so monitoring systems also would know this information.For example suppose you have a small Camel integration with 2 routes: (timer and kafka).
The timer is triggering every second, and kafka is remote and thus will only trigger when a message is received from Kafka.If you use `camel-jbang` you can easily see this information as follows:```bash
$ camel get
  PID   NAME    CAMEL  PLATFORM        PROFILE  READY  STATUS   RELOAD  AGE   ROUTE  MSG/S  TOTAL  FAIL  INFLIGHT  LAST  DELTA  SINCE-LAST
 42240  cheese  4.7.0  JBang v0.116.0  dev       1/1   Running       0  1m8s    2/2   1.01   1/65   0/0       0/0     0     1     1s/1s/
```Here the TOTAL, FAIL, INFLIGHT columns have been updated to show two numbers separated by slash.
The number `1/65` means that there has been only 1 remote message, and 65 in total, so that means the internal timer has triggered 64 times.",No comments found
20949,Bug,Claus Ibsen,Claus Ibsen,"4.5.0,4.6.0,4.7.0",4.7.0,2024-07-06T07:17:52+0000,1720250272,2024-07-07T10:25:30+0000,2024-07-06T08:58:43+0000,Reported on user mailing list,No comments found
20948,Improvement,Grzegorz Grzybek,Grzegorz Grzybek,4.7.0,4.7.0,2024-07-05T14:49:38+0000,1720190978,2024-07-09T11:35:05+0000,2024-07-05T15:11:31+0000,"I was checking Jolokia with different JSON libraries:and I decided to check davsclaus suggestion.I am using Artemis instance with Hawtio 4, Jolokia 2 and different JSON libraries. I have 10K queues (which means 20K MBeans for the queues alone) and I check Jolokia list() operation. Initially I got:but I quickly realized there's a problem about String / Writer handling in camel-util-json. PR pending.","['Grzegorz Grzybek - 2024-07-05T14:56:35+0000 PR: https://github.com/apache/camel/pull/14747', 'Grzegorz Grzybek - 2024-07-09T11:35:05+0000 Actually the same fix is in the original library: https://github.com/cliftonlabs/json-simple/commit/cbdd1fa3efd0af25671f29f877dcf70c76dfc4e4']"
20947,Improvement,Aurélien Pupier,Aurélien Pupier,None,4.8.0,2024-07-05T13:04:15+0000,1720184655,2024-08-09T11:07:02+0000,2024-08-09T11:07:02+0000,"What do you think about enabling Jolokia in the camel.debug profile of the generated project with Camel JBang?it will allow to do remote Camel debugging, so for instance with project deployed on Kubernetes or OpenShiftFor Quarkus project, this could be done with:",No comments found
20946,Bug,Aurélien Pupier,Aurélien Pupier,4.6.0,4.7.0,2024-07-05T12:20:47+0000,1720182047,2024-07-07T10:25:55+0000,2024-07-05T13:59:29+0000,"there are 2 new parameters required compared to initial implementation: 
-Dcamel.main.shutdownTimeout=30 -Dquarkus.camel.source-location-enabled=trueWithout the shutdown strategy, the suspend method is not working (even from jconsole)
Without the source-location-enabled, the breakpoints are not working (at least with Debug Adapter for Camel)see also https://github.com/apache/camel-quarkus/issues/6256",No comments found
20945,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-04T10:51:58+0000,1720090318,2024-07-07T10:25:23+0000,2024-07-06T09:43:50+0000,"Lets make it possible to run java code without having to put public class XXXX.This allows to quickly copy paste some sample java code route you find, and try and edit it also. If you want real java development with IDE support then of course it must be a public class.","['Claus Ibsen - 2024-07-06T09:35:22+0000 You need to use --code, such as\ncamel run --code=hello.java']"
20944,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-04T08:01:49+0000,1720080109,2024-07-05T05:16:55+0000,2024-07-05T05:16:55+0000,"You get a stracktrace, lets improve this to a nicer system error instead~/workspace/camel-kamelets-examples/jbang/open-api main *1 ❯ camel generate rest --input=greeting.json --output=code --dto
java.lang.IllegalArgumentException: document must be specified
	at org.apache.camel.util.ObjectHelper.notNull(ObjectHelper.java:153)
	at org.apache.camel.generator.openapi.RestDslGenerator.<init>(RestDslGenerator.java:54)
	at org.apache.camel.generator.openapi.RestDslYamlGenerator.<init>(RestDslYamlGenerator.java:65)
	at org.apache.camel.generator.openapi.RestDslGenerator.toYaml(RestDslGenerator.java:240)
	at org.apache.camel.dsl.jbang.core.commands.generate.CodeRestGenerator.doCall(CodeRestGenerator.java:86)
	at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:71)
	at org.apache.camel.dsl.jbang.core.commands.CamelCommand.call(CamelCommand.java:37)
	at picocli.CommandLine.executeUserObject(CommandLine.java:2045)
	at picocli.CommandLine.access$1500(CommandLine.java:148)
	at picocli.CommandLine$RunLast.executeUserObjectOfLastSubcommandWithSameParent(CommandLine.java:2465)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2457)
	at picocli.CommandLine$RunLast.handle(CommandLine.java:2419)
	at picocli.CommandLine$AbstractParseResultHandler.execute(CommandLine.java:2277)
	at picocli.CommandLine$RunLast.execute(CommandLine.java:2421)
	at picocli.CommandLine.execute(CommandLine.java:2174)
	at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:168)
	at org.apache.camel.dsl.jbang.core.commands.CamelJBangMain.run(CamelJBangMain.java:61)
	at main.CamelJBang.main(CamelJBang.java:36)",No comments found
20943,Test,Marco Carletti,Claus Ibsen,None,4.7.0,2024-07-04T07:55:53+0000,1720079753,2024-07-07T10:25:46+0000,2024-07-05T14:45:12+0000,The camel-jbang has a generate plugin (need to install) that can generate java source classes from an openapi spec.Having an integration test we can run in camel-jbang-it would be really good,No comments found
20942,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-04T07:49:49+0000,1720079389,2024-08-18T09:35:13+0000,,"The exchange may have a pre-configured avro schema then we should use this.
And as well set the schema on the exchange.Related to
https://camel.zulipchat.com/#narrow/stream/352237-camel-jbang/topic/parquetAvro.20format.20marshal.2Funmarshal",No comments found
20941,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-03T17:43:07+0000,1720028587,2024-07-03T17:44:29+0000,2024-07-03T17:44:29+0000,No description available,No comments found
20940,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-03T14:17:04+0000,1720016224,2024-08-18T09:35:04+0000,,Currently its hardcoded to a ListList<?> list = (List<?>) graph;It should instead be more accepting input as it can be a string/stream/byte[] of json data or something. Or something that can be iterated.,No comments found
20939,Bug,Claus Ibsen,Marco Carletti,4.6.0,4.7.0,2024-07-03T12:55:59+0000,1720011359,2024-07-03T13:42:38+0000,2024-07-03T13:38:32+0000,According to documentation it is possible to select profile and to use a specific configuration file but currently the commandfails with,"['Claus Ibsen - 2024-07-03T13:21:30+0000 We have harmonised profiles to be recommended to be only\ndev\ntest\nprod\nHowever in jbang you can name the profile anything you like\nAnd the NPE has been fixed for 4.7.0', 'Claus Ibsen - 2024-07-03T13:30:05+0000 Oh we may make `camel run` automatic detect the application-test.properties (there seems to be an issue still)', 'Claus Ibsen - 2024-07-03T13:42:02+0000 It works now for 4.7.0\n2024-07-03 15:38:09.633  INFO 47425 --- [4 - timer://xml] helloName.xml:35                         : Hello Camel from Jenna\n2024-07-03 15:38:10.619  INFO 47425 --- [4 - timer://xml] helloName.xml:35                         : Hello Camel from Jenna\n^C2024-07-03 15:38:10.762  INFO 47425 --- [           main] e.camel.impl.engine.AbstractCamelContext : Apache Camel 4.7.0-SNAPSHOT (helloName) is shutting down (timeout:45s)\n2024-07-03 15:38:10.770  INFO 47425 --- [           main] e.camel.impl.engine.AbstractCamelContext : Routes stopped (total:1)\n2024-07-03 15:38:10.770  INFO 47425 --- [           main] e.camel.impl.engine.AbstractCamelContext :     Stopped xml (timer://xml)\n2024-07-03 15:38:10.776  INFO 47425 --- [ntloop-thread-0] tform.http.vertx.VertxPlatformHttpServer : Vert.x HttpServer stopped\n2024-07-03 15:38:10.780  INFO 47425 --- [           main] e.camel.impl.engine.AbstractCamelContext : Apache Camel 4.7.0-SNAPSHOT (helloName) shutdown in 17ms (uptime:2s)\n2024-07-03 15:38:10.780  INFO 47425 --- [           main] org.apache.camel.main.MainSupport        : Apache Camel (JBang) 4.7.0-SNAPSHOT shutdown\n~/workspace/deleteme ❯ camel run helloName.xml --profile=test']"
20938,Bug,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.8.0",2024-07-03T06:53:59+0000,1719989639,2024-08-21T11:32:38+0000,2024-08-21T11:32:38+0000,Reported in mailing list.When running,"['Ryan Ikhlef - 2024-07-26T12:51:53+0000 Hello,\n  I tested the fix in Camel version 4.7.0, and I believe it doesn’t fully address the issue. While the error is no longer thrown, we still don’t receive a proper stream object when using the “disableStreamCache” option. Instead, the entire response is loaded into the Java heap, which is problematic for us when dealing with large API responses (exceeding 1 GB in size).\nUpon reviewing the code you committed for the fix, it appears that when Camel is in streaming mode, it consumes the stream and copies it into a byte array.\nI’ve included some screenshots from Visual VM for the same routes you provided to reproduce the issue. The only difference is that I’m not requesting a website like Camel docs; instead, I’m using an API with substantial response data (which I can’t share, but I can generate a similar-sized JSON if needed).\nIn the first screenshot, you can see the byte array built by Camel. As you’ll notice, the current size matches my data size:\n  In this second screenshot, I share the data inside the body’s exchange just before the .log(""${body}""). We found our byte array:\nFinally, I want to show you the heap of my small app:\n  Maybe I’m doing something wrong, but as it’s written in the Camel HTTP component documentation: ""If setting this option to true, then the producers will not cache the response body stream but use the response stream as-is as the message body."" I expected to get the stream in my body to consume it myself.\n  Best regards,', 'Claus Ibsen - 2024-08-21T09:14:10+0000 You cannot work with the input stream from http-client directly as it auto closes the stream asap, so any attempt from camel to read the content will causes a failure\norg.apache.hc.core5.http.io.entity.EntityUtils#consume', 'Claus Ibsen - 2024-08-21T10:08:37+0000 Okay I found a special executeOpen method in the http client we may be able to use']"
20937,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-07-03T06:42:57+0000,1719988977,2024-07-03T06:43:03+0000,,No description available,No comments found
20936,New Feature,Unassigned,Zineb Bendhiba,None,None,2024-07-02T15:15:47+0000,1719933347,2024-07-03T06:33:01+0000,,"We have the opportunity to run Ollama test containers using a Hugging Face LLM model as a file, rather than continuously pulling the model. This change could facilitate running tests on our CI environment.Here's an exampleBefore implementing this change, please verify which small model we can use or embed and ensure it complies with the Apache 2 license.",No comments found
20935,New Feature,Zineb Bendhiba,Zineb Bendhiba,None,4.8.0,2024-07-02T14:45:49+0000,1719931549,2024-08-06T12:52:42+0000,2024-08-06T12:52:42+0000,Create a new component to be able to perform a web search.It will use under the hood the langchain4j websearchEngineThis feature will benefit us from the possibility of creating a tool that could search additional information for the RAG pipeline,['Zineb Bendhiba - 2024-08-06T12:52:42+0000 Merged in Main']
20934,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-02T12:42:00+0000,1719924120,2024-07-02T16:01:45+0000,2024-07-02T16:01:45+0000,"Related to CAMEL-20493It seems that if the seda consumer is doing async processing, then the copy results is triggered before the exchange is done, and this can explain some concurrency issues in that linked jira.",No comments found
20933,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-07-02T11:07:56+0000,1719918476,2024-07-02T11:15:16+0000,2024-07-02T11:15:16+0000,Reported on user mailing list,No comments found
20932,Bug,Claus Ibsen,Claus Ibsen,4.4.3,"4.4.4,4.7.0",2024-07-02T05:03:24+0000,1719896604,2024-07-02T06:55:52+0000,2024-07-02T06:55:52+0000,The reifiers for error handler need to do template parameters in more places such as redelivery options.Report in chat at: https://camel.zulipchat.com/#narrow/stream/257301-camel-spring-boot/topic/templateParameter.20broken.20in.20OnExceptionDefinition,No comments found
20931,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-30T11:14:45+0000,1719746085,2024-07-01T06:02:51+0000,2024-07-01T06:02:51+0000,"Its common to clip in start or end of a payload, like first and last char or something.We can add a substring command to make this easier, and make it much easier to clip N last elements than today in pure Java String.substring(1) // clip first charsubstring(-1) // clip last charsubstring(1,-1) // clip first and last charSo numbers that are negative are from the tail endAnd it should silently ignore if the string is empty or shorter etc.",['Claus Ibsen - 2024-06-30T16:09:43+0000 TODO: doc\nTODO: csimple']
20930,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-30T08:00:40+0000,1719734440,2024-07-01T19:42:11+0000,2024-07-01T19:42:11+0000,"When you use bean DSL in yaml/xml to define beans for low-code integrations then these beans are configured via properties. And those can be from ENV / placeholders and whatnot.It would be good to have a dev console that shows the actual values of those beans so you can easily see ""how they are configured at runtime""",['Claus Ibsen - 2024-07-01T08:56:16+0000 TODO: jbang commands DONE']
20929,Bug,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-29T06:42:17+0000,1719643337,2024-06-30T05:56:54+0000,2024-06-30T05:56:54+0000,camel.component.properties.ignore-missing-property=trueShould also ignore if its a function such as ENV or VAULT etc,No comments found
20928,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-29T05:59:05+0000,1719640745,2024-06-30T07:29:44+0000,2024-06-30T07:29:44+0000,"You should be able to run export where some ENV configuration is specific to where you run the app, and that the export is part of a ci/cd pipeline and thus does not have those ENVsFor example a SQL database bean that we need for the SQL component",['Claus Ibsen - 2024-06-29T13:53:00+0000 We can make camel-kamelet-main add an ENV function that is optional placeholder for exporting']
20927,Improvement,Unassigned,Claus Ibsen,None,Future,2024-06-28T09:41:28+0000,1719567688,2024-06-28T12:29:58+0000,,See CAMEL-16829It may be better to reject tasks if thread pools are exhausted instead of stealing the current thread as it can lead to stuck threads in (advanced and special situations) or users not aware that their thread pools are not sized correctly and can cause system degration.,No comments found
20926,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-27T15:13:33+0000,1719501213,2024-06-28T05:42:22+0000,2024-06-28T05:42:22+0000,https://camel.zulipchat.com/#narrow/stream/257298-camel/topic/OutOfMemory.20because.20of.20BeanInfoCache,['Claus Ibsen - 2024-06-27T15:31:33+0000 TODO: add more new simple functions to csimple DONE']
20924,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-27T09:44:22+0000,1719481462,2024-06-27T10:52:20+0000,2024-06-27T10:52:20+0000,https://github.com/apache/camel-kafka-connector/issues/1647,No comments found
20923,Task,Gaelle Fournier,Otavio Rodolfo Piske,4.7.0,"4.8.1,4.9.0",2024-06-26T16:08:24+0000,1719418104,2024-10-22T05:24:29+0000,2024-10-22T05:24:29+0000,Camel JBang is unable to load langchain4j embeddingsThis can be triggered by something such as:,"['Claus Ibsen - 2024-06-27T07:06:33+0000 Yeah some libraries does some of their own classloading / resource loading or whatnot that can be tricky in a highly dynamic environment with jbang, where JARs can be loaded on the fly.\nIf you can dive into that source code and see what it does, that can help', 'Aurélien Pupier - 2024-09-20T09:19:14+0000 zbendhiba mentioned in a different conversations that:\nwe had same issue in camel-quarkus, not looking at those and had to add those services\nMETA-INF/services/org/apache/camel/tokenizer/langchain4j-character\nMETA-INF/services/org/apache/camel/tokenizer/langchain4j-line\nMETA-INF/services/org/apache/camel/tokenizer/langchain4j-word\nMETA-INF/services/org/apache/camel/tokenizer/langchain4j-sentence\nMETA-INF/services/org/apache/camel/tokenizer/langchain4j-paragraph\nwondering if this can be related', 'Gaelle Fournier - 2024-09-20T09:36:56+0000 There have been some issue raised in langchain4j github as well: https://github.com/langchain4j/langchain4j/issues/1579\napupier thanks I will check if something like that could help', 'Zineb Bendhiba - 2024-09-26T09:44:55+0000 we need to have a separate one for the tokenizer bits as they are different issues', 'Otavio Rodolfo Piske - 2024-09-26T10:27:55+0000 zbendhiba there is some work for the tokenizers on https://issues.apache.org/jira/browse/CAMEL-21269, is it a different issue than that one?', 'Gaelle Fournier - 2024-10-08T14:37:36+0000 It looks like it works with the CAMEL-21269 fix. I will update the documentation on the plugin installation mod.', 'Gaelle Fournier - 2024-10-14T14:32:44+0000 https://github.com/megacamelus/camel-jbang-plugin-explain/pull/7', ""Otavio Rodolfo Piske - 2024-10-16T12:16:17+0000 Thanks! It's on my TODO list to check this.""]"
20922,Improvement,Jiri Ondrusek,Jiri Ondrusek,None,4.7.0,2024-06-26T07:15:26+0000,1719386126,2024-06-26T11:04:41+0000,2024-06-26T11:04:41+0000,In order to run crypto component on FIPS systems we have to use BC-FIPS instead of standard bouncycastle.The new component with PGP data format should be called probably camel-crypto-pgp,No comments found
20921,Bug,Claus Ibsen,Adriano Machado,"4.0.3,4.4.2","4.4.4,4.7.0",2024-06-25T18:24:24+0000,1719339864,2024-06-26T05:17:36+0000,2024-06-26T05:17:27+0000,Route configurations are not loaded if they are being loaded from an XML file that uses the `camel` root tag.Please see the attached diff with a failing test.,['Claus Ibsen - 2024-06-26T05:17:36+0000 Thanks for reporting and the unit test']
20920,Bug,Claus Ibsen,Raymond,4.6.0,4.7.0,2024-06-25T15:54:24+0000,1719330864,2024-06-28T06:31:23+0000,2024-06-27T05:10:35+0000,"I load XML routes from String as follows:In the above code example, I created the resource from String using the ResourceHelper class:The fromString method has two parameters ""location"" and ""content"". As a String doesn't really have a location I just use ""dummy.xml"" or something with an ID like this ""123456.xml"".This works with correct code and when the content has a mistake like invalid XML code, it returns an error.This is as expected, however when loading the route again with the correct XML Code with the same location parameter the loading fails. The loader still returns the previous error. When the location is changed to another name to route loads correctly.","['Raymond - 2024-06-25T15:55:19+0000 Add a reproducer that reproduces the behavior as described in the issue.', 'Claus Ibsen - 2024-06-27T05:10:46+0000 Thanks for reporting and the reproducer', ""Raymond - 2024-06-28T06:31:23+0000 You're welcome. We are now moving our software to Camel 4. Currently, we have an alpha release running on 4.6.0, and soon will have a beta on 4.7.0. Plan is to go to production with 4.8.0 (LTS). Resolving this issue, and a few others in 4.7.0 are helping tremendous to achieve this goal.""]"
20919,New Feature,Unassigned,Adityakrishnan,None,4.x,2024-06-25T15:37:44+0000,1719329864,2025-01-03T10:48:45+0000,,"Producer based SFTP Health is not available for regular SFTPs, it is only accessible by some components (like AWS and Kafka). This has been a need from some time in work-spaces.When SFTPs have inconsistent down-times Observability and Monitoring comes handy for all those who uses Apache Camel. This Producer based Health Check should also be included in regular SFTPs.Consumer based and Producer based health check and alerting can prevent an outage before it occurs.","['Adityakrishnan - 2024-06-30T14:05:27+0000 davsclaus is there any forum, where we can have open discussion for the same?', 'Claus Ibsen - 2024-06-30T15:56:59+0000 Yeah there is the mailing lists or the zulip chat rooms\nhttps://camel.apache.org/community/support/', 'Claus Ibsen - 2024-07-08T19:18:54+0000 Did you find the chat room or the mailing list? If not you can also comment here. Its not so much that is needed.\nAdd a new producer health check class that does a FTP ping to see if the connection works.\nThen users can turn it on if needed.', ""Adityakrishnan - 2024-07-16T18:46:54+0000 Hey davsclaus, got a bit engaged the last week.\nI'd be dealing with the ticket the coming days.\nAs I'm a first time committer to Apache, It'd be good if I could get some guidance on the objectives I should follow during the process"", ""Adityakrishnan - 2024-07-16T19:37:24+0000 I've created the ProducerHealthCheck class inside camel-health, this file will ping the sftp for health checks.\ndavsclaus  Are there other objectives or validations I should be worried about for this change?"", 'Adityakrishnan - 2025-01-03T10:48:45+0000 davsclaus any specific reason it was deprioritized?']"
20918,Bug,Andrea Cosentino,Bartosz Popiela,"3.22.2,4.4.2,4.6.0",4.8.0,2024-06-25T10:45:15+0000,1719312315,2024-07-22T10:26:57+0000,2024-07-22T10:26:57+0000,"In February this year I raised a ticket CAMEL-20388 after observing that the SubscriptionHelper#handshake method was not being used, as the first thread to invoke it would hang in a deadlock state. After it was fixed there is no deadlock, but two other issues were introduced:In addition, because SubscriptionHelper#connectListener clears SubscriptionHelper#connectListener and subscriptionListener doesn't put the listeners back to the map if the subscription message fails, the Salesforce component will not be able to recover (SubscriptionHelper@listenerMap will be empty).Also, SalesforceComponent#REQUEST_TIMEOUT should be greater than 110 sec as this is the default Salesforce timeout for long-polling as per Clients and Timeouts and CometD#1142.Otherwise, java.util.concurrent.TimeoutException will be thrown if there are is no event before the timeout expires.","['Claus Ibsen - 2024-06-26T08:31:16+0000 Can you update the details about this. And give 4.4.3 a try when its released later this week', 'Claus Ibsen - 2024-07-03T10:46:09+0000 Can you add details ? Also try with 4.4.3 and 4.7.0 when its released', ""Bartosz Popiela - 2024-07-04T02:45:40+0000 davsclaus, yes, it still occurs with 4.4.3 and 4.7.0. I'll provide a fix this week."", 'Claus Ibsen - 2024-07-05T05:07:38+0000 Thanks for the details. The fix is welcome as PR or attached to this JIRA.', 'Bartosz Popiela - 2024-07-16T01:27:48+0000 davsclaus can I backport the fix to 4.7. We only use Camel LTS versions and this issue affects our integrations significantly.', ""Andrea Cosentino - 2024-07-16T05:17:33+0000 4.7.x is not an LTS release, it's a development release. The next LTS will be 4.8.0"", 'Bartosz Popiela - 2024-07-16T09:35:04+0000 Ok, thanks']"
20917,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.7.0,2024-06-25T10:14:20+0000,1719310460,2024-06-26T11:35:45+0000,2024-06-26T11:35:45+0000,"When trying to load a plugin defined as:Then adding it to JBang as:Then, JBang fails to load the plugin with the following error:This happens because the group and version are hard-coded in the PluginHelper class.","['Claus Ibsen - 2024-06-26T11:16:05+0000 I think this has been fixed now', 'Otavio Rodolfo Piske - 2024-06-26T11:35:36+0000 Yes it is. Let me close this one.', 'Otavio Rodolfo Piske - 2024-06-26T11:35:45+0000 Fixed with the linked PRs.']"
20916,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-25T09:39:01+0000,1719308341,2024-06-27T12:19:30+0000,2024-06-27T12:19:30+0000,No description available,No comments found
20915,Task,Unassigned,Otavio Rodolfo Piske,4.7.0,4.x,2024-06-25T08:51:34+0000,1719305494,2024-08-21T17:37:50+0000,,"We use a lot of containers as part of our tests. With time, they become outdated and we have to manually check for upgrades.This tasks is to create a script to automate checking for new versions of the containers.You can find all the containers used in Camel by running the following command:","['Aurélien Pupier - 2024-06-25T09:19:18+0000 I think we can try to follow the convention from github depdenabot which will provide automatic PR for the upgrade then https://github.blog/changelog/2024-01-24-dependabot-version-updates-support-devcontainers/', ""Otavio Rodolfo Piske - 2024-06-30T06:07:50+0000 apupier that's a good idea!"", 'Aurélien Pupier - 2024-08-12T09:45:48+0000 Note that these properties are used by testcontainers https://testcontainers.com/ which is not based on devcontainers specification.\nA better way would be to have Dependabot to support testcontainers, vote for https://github.com/dependabot/dependabot-core/issues/6893', 'Aurélien Pupier - 2024-08-21T17:37:50+0000 interesting workaround idea:\nhttps://testcontainers.slack.com/archives/C04RM836XUP/p1724255963491499?thread_ts=1724252316.421289&cid=C04RM836XUP\nPut the versions in Dockerfiles, point Dependabot to the Dockerfiles, and have your Java code parse the first line of the Dockerfile.']"
20914,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-25T07:38:23+0000,1719301103,2024-06-27T09:21:41+0000,2024-06-27T09:21:41+0000,No description available,No comments found
20913,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-25T07:33:10+0000,1719300790,2024-06-26T18:06:45+0000,2024-06-26T18:06:45+0000,No description available,No comments found
20912,Sub-task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-25T07:32:22+0000,1719300742,2024-06-26T18:06:56+0000,2024-06-26T18:06:56+0000,No description available,No comments found
20911,Bug,Claus Ibsen,Christoph Deppisch,4.7.0,4.7.0,2024-06-25T07:09:50+0000,1719299390,2024-06-26T05:41:22+0000,2024-06-26T05:41:22+0000,When Camel JBang exports code to a Quarkus Maven application the resulting build fails with:The code exported is Sample.java:The Camel JBang command used to export:Camel version: 4.7.0-SNAPSHOTThe Maven output when calling mvn package on the generated export project:Maven StackTrace:,"['Christoph Deppisch - 2024-06-25T07:17:21+0000 This seems to work with Camel 4.6.0 which uses Camel Quarkus 3.10.0. Camel 4.7.0 uses Camel Quarkus 3.11.0 which causes the error', 'Claus Ibsen - 2024-06-25T07:40:31+0000 Yes its a bug/issue in CEQ jamesnetherton is aware of this, and they will fix in upcoming CEQ releases.\nYou can set some property as workaround. James can tell more.', 'Claus Ibsen - 2024-06-25T07:43:54+0000 You can also try with exporting to quarkus 3.10.x version, via --quarkus-version flag.', 'Claus Ibsen - 2024-06-25T07:53:52+0000 I think they fixed it by setting a default value, you can do this in application.properties as workaround or as a --prop value\nhttps://github.com/apache/camel-quarkus/commit/a3338cf3a6c17849c980c1ebbc23dba506d25e83', 'Claus Ibsen - 2024-06-26T05:30:28+0000 Because CEQ 3.12 missed this fix, then lets try to add the workaround into camel-jbang so it would work nicely OOTB', 'Claus Ibsen - 2024-06-26T05:41:22+0000 Okay I added workaround in camel-jbang. Christoph if you rebuild code then it should work for you now as well.']"
20910,Task,Guillaume Nodet,Adriano Machado,4.6.0,4.x,2024-06-25T03:48:39+0000,1719287319,2024-12-27T11:09:07+0000,2024-12-27T11:09:07+0000,Build is failing using mvnd 1.0.0,"['Claus Ibsen - 2024-06-25T07:42:51+0000 Officially we only use support and use maven wrapper to build (.mvnw dir).\nBut of course it would be good to see if we can fix this for maven daemon.\ngnodet  can maybe help.', 'Guillaume Nodet - 2024-07-16T10:32:19+0000 See https://github.com/apache/maven-mvnd/issues/1031', 'Claus Ibsen - 2024-09-13T07:08:26+0000 Is there a new mvnd release that fixed this?', 'Claus Ibsen - 2024-12-27T11:08:58+0000 Works with\nApache Maven Daemon (mvnd) 1.0.2']"
20909,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-24T15:26:15+0000,1719242775,2024-06-27T12:19:38+0000,2024-06-27T12:19:38+0000,No description available,No comments found
20908,New Feature,Unassigned,Aurélien Pupier,None,4.x,2024-06-24T14:53:47+0000,1719240827,2025-01-03T10:49:18+0000,,"it would convenient for investigation to be able to pause all current route exchange at the nearest point (surely next step) to investigate what is going on with the routes.It would be convenient to be able to pause all exchanges and also to be able to pause for a Route definition or a Camel context.Currently, suspend is no more starting new routes but finishes the current exchanges. The stop is no more starting the routes and not finishing the current exchange.Technical:it would likely be some option you turn on|off to have this behaviour - we can debate whether it should be on as default (new) or off (like now). To checked that it is not breaking other flow, like in Hawt.io to use the new behavior as default.or a parameter on the suspend/stop methods?or create another one, as pause","['Claus Ibsen - 2024-06-24T18:38:34+0000 This will only be possible if camel-debug is included for Camel to have the debugger installed, as for production use, then to pause would just add overhead to the routing engine that is not need there.', 'Aurélien Pupier - 2024-06-24T20:10:38+0000 Agree that it must be only in debug mode and not in production']"
20907,Bug,Claus Ibsen,kangjian,3.18.0,4.x,2024-06-24T08:50:50+0000,1719219050,2024-06-26T04:16:50+0000,2024-06-25T10:19:16+0000,"Let's say I need to wait for an event notification and then pull an attachments email like this:Camel version 3.18.xSame code, works fine in Camel 3.14.x but doesn't work in Camel 3.18.x.After debugging, it was found that in Camel 3.16.x, the implementation of DefaultAttachmentMessage.java was upgraded.The key point is the CamelAttachmentObjects property in the ExchangeProperty, which is placed in the Exchange property in version 3.14.x, and in the ExtendedExchange property in version 3.16.x, which results in the loss of the CamelAttachmentObjects property between different Exchange.Details can be found in the link below line 274:https://github.com/apache/camel/commit/0125a133a11cbdff57d459634bac276c10963387I tried a solution as follows:Camel version 3.18.xThe above can solve the problem of not being able to get attachments, but there will be other properties missing.Can you help with this? If information is missing, please do not hesitate to contact.","['Claus Ibsen - 2024-06-24T09:15:44+0000 Only Camel 3.22.x is limited supported until end of this year. Try this release first.', ""kangjian - 2024-06-25T07:51:08+0000 davsclaus I tried to upgrade to version 3.22.x, but I still can't get the attachment to the email."", 'Claus Ibsen - 2024-06-25T08:41:36+0000 Okay if you can try with latest 4.4.x or 4.6.0 release.', 'Claus Ibsen - 2024-06-25T10:19:16+0000 It works in Camel v4\nhttps://github.com/apache/camel/blob/main/components/camel-mail/src/test/java/org/apache/camel/component/mail/MailAttachmentPollEnrichTest.java', ""kangjian - 2024-06-26T03:01:38+0000 Hi davsclaus , sorry, the 3.22.x version is no problem, it's the reason for my code, I found jiraCAMEL-19675 to fix this bug.\nThank you very much for your help.""]"
20906,Bug,Claus Ibsen,Aurélien Pupier,4.6.0,4.7.0,2024-06-24T08:20:23+0000,1719217223,2024-06-24T10:20:29+0000,2024-06-24T10:20:29+0000,not sure about steps to reproduce (yet) but surely related to suspending a route and doing a change of the file which is tried to be automatically reloaded,"['Claus Ibsen - 2024-06-24T09:42:06+0000 I cannot reproduce this either, but I am adding a WARN log and some NPE checks']"
20905,New Feature,Tadayoshi Sato,Tadayoshi Sato,4.6.0,4.7.0,2024-06-24T02:28:38+0000,1719196118,2024-07-05T11:26:34+0000,2024-07-05T11:26:34+0000,"Currently, the following applications are only supported:There are many more applications and the component should support them.",No comments found
20904,New Feature,Christoph Deppisch,Claus Ibsen,None,4.8.0,2024-06-21T09:13:06+0000,1718961186,2024-08-19T06:41:11+0000,2024-08-19T06:41:11+0000,"Lets see if we can make a command to camel-jbang that can build and deploy a standard Camel Spring Boot / Camel Quarkus (and potentially camel-main) to kubernetes.This would mean to export first, and then build and deploy via SB / Quarkus standard using how you would normally do this via their maven plugins.","[""Andrea Cosentino - 2024-06-21T09:17:40+0000 We need to add also a parameter in the export command to manage plugins section of the POM, because both Quarkus and Spring Boot will need to add some bits to make the deploy works.\nOtherwise we'll have to do this behind the curtain."", 'Claus Ibsen - 2024-06-21T09:21:52+0000 Yeah so export with camel-main has k8s support if you have jkube.xx values in application.properties.\nA similar logic can be done for export to quarkus or there is a new flag in the export to turn on k8s mode or something.', 'Claus Ibsen - 2024-06-21T09:22:40+0000 But you can create a standard quarkus app via code.quarkus.io and add the stuff needed to make it run and deploy to k8s.\nThen you can see what needs to be included in the pom.xml and application.properties.\nAnd then work backwards to improve the jbang exporter', 'Claus Ibsen - 2024-06-21T09:23:57+0000 see docs\nhttps://camel.apache.org/manual/camel-jbang.html#_exporting_to_camel_main_for_kubernetes', ""Andrea Cosentino - 2024-06-21T09:55:33+0000 I'll try to have a look."", 'Christoph Deppisch - 2024-06-27T09:35:18+0000 I did some experiments and the approach of a project export, then build and deploy via SB / Quarkus standards looks promising. In my POC I have generated a Kubernetes Manifest (kubernetes.yaml) as part of the export. The Manifest includes all required Kubernetes resources (e.g. Deployment, Service, ConfigMap, etc.) required to successfully run the Camel application on Kubernetes. Usually the Manifest gets added to the project in ""src/main/kubernetes"" folder. As soon as we have this Kubernetes Manifest generated as part of the Camel JBang project export the standard tooling in Quarkus and Spring Boot may take over to do the actual deployment to Kubernetes. So we complement with what developers already are doing when running Java apps on Kubernetes.\nAlso, I think the traits that Camel K operator provides can help with the Manifest generation, too. The traits represent an easy configuration entry point for users because they act as an abstraction layer for Kubernetes specific configuration. The user does not necessarily need to know much about Kubernetes details to add some configuration to the deployment (e.g. volume mounts, env vars, etc.). The Camel K JBang plugin already makes use of the trait config options. For instance the option in the command\ncamel k run sample.yaml --resource configmap:my-data\nresults in a volume mount configuration being added to the Kubernetes deployment container.\n  ---\napiVersion: apps/v1\nkind: Deployment\nmetadata:\n  name: sample\nspec:\n  selector:\n    matchLabels:\n      camel.apache.org/integration: sample\n  template:\n    metadata:\n      labels:\n        camel.apache.org/integration: sample\n    spec:\n      containers:\n      - image: quay.io/camel/sample:1.0-SNAPSHOT\n        name: sample\n        volumeMounts:\n        - mountPath: /etc/camel/resources.d/_configmaps/my-data\n          name: my-data\n          readOnly: true\n      volumes:\n      - configMap:\n          name: my-data\n        name: my-data\n  The trait options give us some syntactical sugar to generate the Kubernetes Manifest and it also gives us the opportunity to establish some best practices (e.g. how to use mount points and paths inside the Camel app container).\nUsually the trait logic is applied during the Camel K operator reconciliation loop, but we can think about also making this part of the Camel JBang tooling to generate the Kubernetes Manifest. IMO it would be a good idea to use the same logic on both Camel JBang and Camel K operator. There have been discussions already in Camel K community to have Camel JBang as the single source of truth because this is the natural entry point where developers start to write Camel applications. Of course we need to think about how the Camel K operator can reuse the trait logic once available in Camel JBang. The Camel K JBang plugin Http agent that is supposed to act as a sidecar to the Camel K operator is a promising solution for that IMO.', 'Christoph Deppisch - 2024-07-16T07:12:38+0000 acosentino I think we can resolve this as fixed. Or do you want to leave it open as an umbrella for the other related tasks?', 'Andrea Cosentino - 2024-07-16T07:45:24+0000 I think it makes sense to collect all the related tasks here and use the issue as epic.', ""Andrea Cosentino - 2024-07-23T13:01:54+0000 christophd I set you as assignee, since you've done most of the work with tdiesler"", 'Claus Ibsen - 2024-08-19T06:41:04+0000 Most of this work is done so lets resolve this ticket, and more new work can be tracked in new tickets']"
20903,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-20T18:41:02+0000,1718908862,2024-06-21T14:29:39+0000,2024-06-21T07:12:48+0000,if you install a plugin then its loaded always even if you dont execute its command.,No comments found
20902,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-20T13:41:35+0000,1718890895,2024-06-21T05:41:23+0000,2024-06-21T05:41:23+0000,"Running camel-jbang with camel 4.5.0 causesCaused by: org.eclipse.aether.transfer.ArtifactNotFoundException: Could not find artifact org.apache.camel:camel-jbang-plugin-generate:jar:4.5.0 in central (https://repo1.maven.org/maven2)
    at org.eclipse.aether.connector.basic.ArtifactTransportListener.transferFailed(ArtifactTransportListener.java:42) ~[maven-resolver-connector-basic-1.9.18.jar:1.9.18]
    at org.eclipse.aether.connector.basic.BasicRepositoryConnector$TaskRunner.run(BasicRepositoryConnector.java:417) ~[maven-resolver-connector-basic-1.9.18.jar:1.9.18]
    at org.eclipse.aether.connector.basic.BasicRepositoryConnector.get(BasicRepositoryConnector.java:260) ~[maven-resolver-connector-basic-1.9.18.jar:1.9.18]
    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.performDownloads(DefaultArtifactResolver.java:537) ~[maven-resolver-impl-1.9.18.jar:1.9.18]
    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolve(DefaultArtifactResolver.java:449) ~[maven-resolver-impl-1.9.18.jar:1.9.18]
    at org.eclipse.aether.internal.impl.DefaultArtifactResolver.resolveArtifacts(DefaultArtifactResolver.java:261) ~[maven-resolver-impl-1.9.18.jar:1.9.18]
    at org.eclipse.aether.internal.impl.DefaultRepositorySystem.resolveDependencies(DefaultRepositorySystem.java:353) ~[maven-resolver-impl-1.9.18.jar:1.9.18]
    at org.apache.camel.tooling.maven.MavenDownloaderImpl.resolveArtifacts(MavenDownloaderImpl.java:451) ~[camel-tooling-maven-4.5.0.jar:4.5.0]
    at org.apache.camel.main.download.MavenDependencyDownloader.resolveDependenciesViaAether(MavenDependencyDownloader.java:560) ~[camel-kamelet-main-4.5.0.jar:4.5.0]
    at org.apache.camel.main.download.MavenDependencyDownloader.lambda$doDownloadDependency$0(MavenDependencyDownloader.java:281) ~[camel-kamelet-main-4.5.0.jar:4.5.0]
    at java.base/java.util.concurrent.Executors$RunnableAdapter.call(Executors.java:539) ~[?:?]
    at java.base/java.util.concurrent.FutureTask.run(FutureTask.java:264) ~[?:?]
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
    at java.base/java.lang.Thread.run(Thread.java:833) ~[?:?]
ERROR: Failed to read file META-INF/services/org/apache/camel/camel-jbang-plugin/camel-jbang-plugin-generate in dependency org.apache.camel:camel-jbang-plugin-generate:4.5.0.","['Claus Ibsen - 2024-06-20T13:42:08+0000 This smells like the camel-jbang plugins for generate that is new in 4.7 seems to attempt to load it for older version which it should not do.', 'Claus Ibsen - 2024-06-21T05:41:02+0000 Okay so this is a known issue if you install a plugin then older versions can fail. We cannot do something about this as it requires code changes in these older versions.', 'Claus Ibsen - 2024-06-21T05:41:23+0000 This will work for 4.7 onwards.']"
20901,Improvement,James Netherton,James Netherton,None,4.7.0,2024-06-20T10:28:51+0000,1718879331,2024-06-24T11:50:11+0000,2024-06-24T11:50:11+0000,ArangoDB 7.7.1 made is possible to provide a custom Vertx instance for the ArangoDB client.This is useful for Camel Quarkus where there's already an existing managed Vertx. Currently the client will create its own Vert.x instance. Which is a waste of resources and causes some ugly log warnings.,No comments found
20900,Improvement,Christoph Deppisch,Gaëlle Fournier,"4.4.2,4.6.0",4.7.0,2024-06-20T09:01:38+0000,1718874098,2024-07-03T06:04:27+0000,2024-07-03T06:04:27+0000,The `kamel run` CLI command provide the following flag option that has not been added yet to the Camel K Jbang plugin :,No comments found
20899,Improvement,Christoph Deppisch,Gaëlle Fournier,"4.4.2,4.6.0",4.x,2024-06-20T08:05:25+0000,1718870725,2024-12-29T21:07:01+0000,2024-12-29T21:07:01+0000,"An good improvment would be to be able to define the camel-k-version configured by the plugin.The jbang camel k plugin is used as to run Camel routes with Camel K and as will replace the `kamel` CLI run command.To be able to create `Integration` CRDs it uses the following dependency and therefore depends on the camel-k-version set by default:Since the Camel K CRDs can change between Camel K versions, we might need to use another one than the default.While it can be done in the command with likeit would be nicer to be able to choose the Camel K version in configuration command with `camel config set xxxx` and use the simple command `camel k run files/Java.java`.",['Gaëlle Fournier - 2024-06-20T08:12:40+0000 This was discussed originally here: https://issues.apache.org/jira/browse/CAMEL-20645']
20898,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-19T12:38:41+0000,1718800721,2024-06-19T13:48:18+0000,2024-06-19T13:48:18+0000,"We need to do a deep copy when using route templates so they become fully isolated, and there is no side effects when creating multiple routes from the same template.",No comments found
20897,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-19T12:15:33+0000,1718799333,2024-06-21T09:37:24+0000,2024-06-21T09:37:24+0000,Seehttps://camel.zulipchat.com/#narrow/stream/257301-camel-spring-boot/topic/Adding.20.26.20in.20password.20in.20spring.20XML.20DSL,No comments found
20896,New Feature,Jiri Ondrusek,Jiri Ondrusek,None,4.8.0,2024-06-19T09:16:57+0000,1718788617,2024-10-10T16:00:57+0000,2024-10-10T16:00:57+0000,Quarkus introduced a migration tool in the past (see the documentation - https://quarkus.io/guides/update-quarkus). Camel Quarkus leveraged the tool and added support for migration of the camel-quarkus projects.Now is the right time to bring such migrations into plain Camel.Current status:I'd like to propose several improvements:,"['Jiri Ondrusek - 2024-06-19T11:29:43+0000 Email thread: https://lists.apache.org/thread/lf3nc3smrkvdfopmrgv4jk1rzhmj9nnp', 'Claus Ibsen - 2024-10-10T16:00:57+0000 https://camel.apache.org/blog/2024/10/camel-upgrade-recipes-release-4.8.0/']"
20895,Improvement,Tadayoshi Sato,Tadayoshi Sato,4.6.0,4.7.0,2024-06-19T08:06:27+0000,1718784387,2024-06-21T14:28:28+0000,2024-06-21T07:13:52+0000,"Currently, both ZooImageClassificationPredictor and CustomImageClassificationPredictor transform the resulted Classifications objects into maps of Map<String, Float>. However, the data type of Classifications is a map from the class name to probability with String -> Double, thus the precision is lost in the mapping.It doesn't seem to be a good transformation in the following points:In conclusion, I think it's better for ZooImageClassificationPredictor and CustomImageClassificationPredictor to simply return the output as Classifications.",No comments found
20894,Wish,Claus Ibsen,Raymond,4.6.0,4.7.0,2024-06-19T07:37:50+0000,1718782670,2024-06-22T07:08:14+0000,2024-06-21T08:43:19+0000,"I like to get all events of the step eip with the EventNotifier. However it seems that not all steps trigger events.To demonstrate this I created two integrations:Integration: Test1Integration: Test2For the first integration, every time the step is reached, I get an event. For the second integration, the mock endpoints are removed, and those steps don't trigger an event.I would like to that every step triggers an event, such as:Though maybe out of scope for this issue, it would even be practical to do something like this:This step doesn't have any child nodes, but could be used to catch events at various points in a route.","['Raymond - 2024-06-19T07:38:32+0000 Add a reproducer based on the main-xml example.', 'Claus Ibsen - 2024-06-20T11:32:46+0000 A step was intended to be a group of elements. It may be that when there is 1 element only then camel optimize this. But will need to check the source.', 'Raymond - 2024-06-21T10:11:41+0000 Great, can I test this with the 4.7.0-Snapshot next week?', 'Claus Ibsen - 2024-06-22T07:08:14+0000 Yes you can build locally or download form ASF snapshot maven repo']"
20893,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.7.0,2024-06-19T07:23:55+0000,1718781835,2024-06-27T06:51:18+0000,2024-06-27T06:51:16+0000,"The JmsRouteRequestReplyTest test is outdated and unnecessarily complex to the point of making it hard to do cleanups on other tests (not to mention the occasional flakiness).It needs to be refactored for simplicity, speed and ease of maintenance.",['Otavio Rodolfo Piske - 2024-06-27T06:51:16+0000 Fixed with https://github.com/apache/camel/pull/14585.']
20892,Improvement,Claus Ibsen,Christoph Deppisch,4.6.0,4.7.0,2024-06-19T06:17:25+0000,1718777845,2024-06-19T18:11:38+0000,2024-06-19T18:11:38+0000,"When a Camel route uses a Kamelet but misses a mandatory field for some reason the error message is quite misleading. The error reports a ""KameletNotFoundException"" in the StackTrace which is misleading because the real error is an ""IllegalArgumentException"" due to the missing mandatory field.The user needs to find the right part of the StackTrace to find out what is going on: ""Route template set-body-action the following mandatory parameters must be provided: value""The ""KameletNotFoundException"" is wrong anyways as the Kamelet has been part of the catalog in this case.",No comments found
20891,Improvement,Claus Ibsen,Lars Heinemann,4.6.0,4.7.0,2024-06-18T17:51:24+0000,1718733084,2024-06-20T11:22:28+0000,2024-06-20T11:22:28+0000,Improve the catalog documentation for Processor's Ref attribute. Currently it is this:However there are more options here. You could reference a key in the application.properties via `key` or you could also reference a bean with `#bean:myBeanId`. There might be even more options people would love to know about.,No comments found
20890,Bug,Claus Ibsen,Raymond,4.6.0,4.7.0,2024-06-18T15:42:55+0000,1718725375,2024-06-19T13:48:22+0000,2024-06-19T13:48:22+0000,"I like to use steps in my routeTemplates. This works, however when I want to specify the ID I cannot use template parameter:When I create 2 routes with the above template I get the following error:The step ID doesn't get interpolated and is used a the literal ""name"". I need to set the step id myself to get information about the specific route.Note that I run into when I was using kamelets with the step EIP, but this is a smaller example.","['Raymond - 2024-06-18T15:43:23+0000 Added reproducer', 'Raymond - 2024-06-19T09:24:30+0000 A sidenote:\nIn the reproducer I get the following error message:\nFailed to create route deux from template myTemplate because of duplicate id detected: name.\nBut when loading a kamelet I got something like the following error message\n  Failed to create route deux from template setbody-action because of duplicate id detected: one.\n  This puzzled me a bit, because the id ""one"" doesn\'t exist on route deux. Not as template parameter or value. It seems like it interpolates the parameter the first time, but then keeps it in memory somehow and use it again the second time.\nIt was also not fully clear that the id of the step was meant, instead of another id (like the route id). It would be nice to give a bit more information something like:\n  Failed to create route deux from template setbody-action because of duplicate id detected.\nDetails:\nid: one\nnode: step\nroute: deux\nalready used in route: one']"
20889,Bug,Luigi De Masi,Luigi De Masi,None,4.7.0,2024-06-18T10:26:34+0000,1718706394,2024-06-26T13:54:32+0000,2024-06-26T13:54:32+0000,"Having the following Camel route on Camel  2.xShows that the consumption of the message payload  in the processor viaBut if you run this same route from  Camel 3.x to the latest 4.x one,  you will get the following output:The problem is that on Camel 2.x, when
{{ exchange.getIn().getBody(String.class))}}
is called,  the org.apache.camel.converter.IOConverterOptimised is triggered to convert the body from org.apache.camel.converter.stream.InputStreamCache to java.lang.String, which at the beginning of the convertion, it reset the stream:From Camel 3.x, org.apache.camel.converter.IOConverterOptimised has been dropped, and org.apache.camel.converter.IOConverter is used instead, which doesn't reset the stream.","['Claus Ibsen - 2024-06-18T11:50:33+0000 See the documentation\n/**\n * Returns the body as the specified type\n * <p/>\n * Notice if the message body is stream based then calling this method multiple times may lead to the stream not\n * being able to be re-read again. You can enable stream caching and call the {@link StreamCache#reset()} method to\n * reset the stream to be able to re-read again (if possible). See more details about\n * <a href=""http://camel.apache.org/stream-caching.html"">stream caching</a>.\n *\n * @param  type                    the type that the body\n * @return                         the body of the message as the specified type, or <tt>null</tt> if no body exists\n * @throws TypeConversionException is thrown if error during type conversion\n */\n<T> T getBody(Class<T> type);', 'Claus Ibsen - 2024-06-18T12:04:22+0000 However we can consider to change camel 4.7 onwards to reset the stream in the following methods\n \n<T> T getBody(Class<T> type);\n<T> T getMandatoryBody(Class<T> type) throws InvalidPayloadException;\n \nSo before returning the result, the stream is reset. Then your example should work.\n \nAnd then the following methods should likely be changed as well to be consistent\n \nObject getBody();\nObject getMandatoryBody() throws InvalidPayloadException;\n \nAnd we would need to document this in the 4.7 upgrade guide, and change the javadoc of these methods.', ""Otavio Rodolfo Piske - 2024-06-18T12:39:29+0000 IMHO, we shouldn't change this, as it would incur a performance penalty for all the well-behaved applications that don't call the method twice."", 'Claus Ibsen - 2024-06-18T12:54:15+0000 Yeah its a trade-off and affect everyone else and hence why the documentation is also telling the user to reset the stream themselves if they get the body again.\n  Also you should not do as in that sample code, you get the body once in a local varaible and use that\nString myBody = exchange.getBody(String.class);\nAnd then use `myBody` if you need to access it again from the Processor', ""Otavio Rodolfo Piske - 2024-06-18T13:01:19+0000 I think we could discuss reworking the code so that read-operations don't have side effects, but that needs time and planning."", 'Claus Ibsen - 2024-06-19T05:20:11+0000 Yeah its a critical code path to get the body. The doc says you need to handle this by resetting yourself.\nWe could also consider adding methods on ExchangeHelper/MessageHelper that can do this. \nThen its not in the critical path, and users that want to get the body multiple times in a processor can/must use these methods.\n  String s = ExchangeHelper.getBodyAndResetStreamCache(exchange, String.class);\nOr \n  String s = ExchangeHelper.getBody(exchange, String.class);', 'Otavio Rodolfo Piske - 2024-06-19T05:31:52+0000 I like this idea with the ExchangeHelper. It would do the trick without polluting the API without impacting the performance on the critical path.']"
20888,Task,Aurélien Pupier,Aurélien Pupier,4.7.0,4.9.0,2024-06-18T08:08:29+0000,1718698109,2024-09-12T06:50:32+0000,2024-09-12T06:50:32+0000,Kotlin DSL was deprecated in 4.7.0,"['Claus Ibsen - 2024-08-05T12:05:31+0000 Yeah we should IMHO wait till after 4.8 LTS so end users have a chance to notice', 'Otavio Rodolfo Piske - 2024-09-09T08:53:14+0000 +1 for this. In the future, it might be better to wait for these new DSLs to gain traction outside the community before adding them (and, thus, causing overhead for the maintainers).', 'ASF GitHub Bot - 2024-09-10T11:54:06+0000 apupier opened a new pull request, #1225:\nURL: https://github.com/apache/camel-website/pull/1225\n(no comment)', 'ASF GitHub Bot - 2024-09-10T14:08:37+0000 github-actions[bot] commented on PR #1225:\nURL: https://github.com/apache/camel-website/pull/1225#issuecomment-2340931841\n🚀 Preview is available at https://pr-1225--camel.netlify.app', 'ASF GitHub Bot - 2024-09-10T14:09:51+0000 apupier merged PR #1225:\nURL: https://github.com/apache/camel-website/pull/1225', 'Claus Ibsen - 2024-09-11T11:45:11+0000 The 4.9 migration doc needs to have details about the removed JARs']"
20887,Bug,Zheng Feng,Zheng Feng,4.6.0,4.7.0,2024-06-18T07:53:05+0000,1718697185,2024-06-18T11:53:10+0000,2024-06-18T11:53:10+0000,"It is missing parseArtifact method in generatePojoBeanModel(). so when camel-qurakus genreated the catalog, it will miss the beans.",No comments found
20886,Task,Unassigned,Aurélien Pupier,None,4.x,2024-06-17T15:03:30+0000,1718636610,2024-12-28T17:06:58+0000,,"if we can use parallel Maven build, it could save a lot of time during build phase locally and on CIs.
Example on my locla machine with 8 cores with all dependencies downloaded:Different possibilities:","['Claus Ibsen - 2024-06-27T12:08:34+0000 Parallel build is standard in Maven, so I think at first we can add something in the docs.', 'Claus Ibsen - 2024-12-28T17:06:58+0000 You can use mvnd that can build quickly using parallel builds']"
20885,Task,Aurélien Pupier,Aurélien Pupier,None,4.7.0,2024-06-17T15:01:22+0000,1718636482,2024-09-09T08:51:55+0000,2024-06-18T11:41:35+0000,"kotlin API was provided as experimental but it was not picked by the community. The creator of it is no more active in the community. it is taking a fair part of the build time (without tests) between 10 and 20%.the idea is to deprecate the Kotlin API so that it can be removed in next version. it will reduce codebase size, improving maintainability and decrease build time on each PR and each build on CIs.",No comments found
20884,Task,Aurélien Pupier,Aurélien Pupier,None,4.7.0,2024-06-17T13:23:24+0000,1718630604,2024-06-20T14:49:14+0000,2024-06-20T14:49:14+0000,"The Camel package Maven plugin is used a lot during the build of Apache Camel. When build ding with -D quickly, it represents around 10% of the time spent. (on my local machine 1'11"" on a 11'31"" build)","['Aurélien Pupier - 2024-06-19T09:55:43+0000 after a first improvement on Velocity usage, we now have:', 'Aurélien Pupier - 2024-06-19T13:19:14+0000 After a second improvement on the use of a cache for Jandex index specified in jars, we now have:', 'Aurélien Pupier - 2024-06-20T07:32:53+0000 In Camel package Maven plugin next potential improvements identified (on a partial build as running out of instrumented class capacity fro the profiler so far, with profile configuration set to org.apache.camel.**):\nmainly EndpointSchemaGeneratorMojo', 'Aurélien Pupier - 2024-06-20T14:39:34+0000 Some profiling information (not for full build as it is crashing at the end, and so cannot share the profile file data ):\nhotspot:\n  Some calls:', 'Aurélien Pupier - 2024-06-20T14:49:14+0000 there is still room for improvements but no time investigate more right now. i provided the screenshots of last profiling results to give ideas where to look at next time someone when to look at it']"
20883,Task,Guillaume Nodet,Aurélien Pupier,None,4.10.0,2024-06-17T12:28:15+0000,1718627295,2025-01-10T14:45:23+0000,2025-01-10T14:45:23+0000,"in log there is 14 times:
```
14:00:33,645 [INFO] — plugin:3.13.1:addPluginArtifactMetadata (default-addPluginArtifactMetadata) @ camel-package-maven-plugin —
14:00:33,645 [INFO] This Mojo is not used in Maven version 3.9.0 and above
```In this case I think we need to upgrade the minimal Maven version (currently at 3.5.0): https://github.com/apache/camel/blob/07c502761c4d450f5b2b7bba19ce4f69f507212d/pom.xml#L915Is it fine to upgrade the minimal Maven version to 3.9.0?
I guess we are testing anyway only with the version which is defined by the Maven wrapper?Advantages:Drawback:","['Claus Ibsen - 2024-06-27T12:13:19+0000 Yes we use maven 3.9.x to build. We only support what we define in maven wrapper which is 3.9.x (ie 3.9.8) for next release.', 'Claus Ibsen - 2024-09-18T13:42:32+0000 I still see\n[INFO] — plugin:3.15.0:addPluginArtifactMetadata (default-addPluginArtifactMetadata) @ bom-generator-maven-plugin —\n[INFO] This Mojo is not used in Maven version 3.9.0 and above', 'Claus Ibsen - 2024-09-18T13:44:40+0000 It may be the bom-generator-maven-plugin and camel-package-maven-plugin plugins that are from Camel itself, may need some code updates / dependency cleanup etc.', 'Aurélien Pupier - 2024-09-18T15:02:31+0000 The upgrade to Maven 3.9 is only a prerequisite, there is effectively some work to do to remove the call done from the codebase']"
20882,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.4.3,2024-06-17T10:49:04+0000,1718621344,2024-06-20T13:21:07+0000,2024-06-20T13:21:07+0000,No description available,No comments found
20881,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-17T09:40:42+0000,1718617242,2024-06-17T12:11:57+0000,2024-06-17T12:11:57+0000,"When using log component then its base endpoint creates an instance of 
DefaultPollingConsumerPollStrategy which is only needed for consumers, so lets optimize this",No comments found
20880,Task,Andrea Cosentino,Andrea Cosentino,None,4.7.0,2024-06-17T07:11:56+0000,1718608316,2024-06-17T12:36:33+0000,2024-06-17T12:36:33+0000,No description available,No comments found
20879,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-15T19:09:04+0000,1718478544,2024-06-22T13:35:26+0000,2024-06-22T13:35:26+0000,"We may want to have a total counter for unique exchanges, as an exchange may during routing be splitted into sub exchanges, or wire tapped, or what else.We should think about how to count unique incoming exchanges.This is a ticket created a bit quickly to not forget about to look into this and research a bit first.","['Claus Ibsen - 2024-06-18T14:18:46+0000 With the new isRemote on endpoint, we could introduce a new counter to count external incoming exchanges. This would mean a timer/seda would be 0, as they are internal only. But a kafka/jms would be external and count.\nThis can give a more correct undersanding of how many messages the Camel application has received and processed, when you have a mix of timer and routes.', 'Claus Ibsen - 2024-06-22T10:55:23+0000 TODO: update jbang commands DONE']"
20878,New Feature,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-15T09:00:41+0000,1718442041,2024-06-15T14:22:35+0000,2024-06-15T14:22:24+0000,We can make a command that show the rest-dsl services via the new rest dev console,['Claus Ibsen - 2024-06-15T13:47:30+0000 TODO: code first vs contract first DONE']
20877,Bug,Claus Ibsen,Marat Gubaidullin,None,4.7.0,2024-06-14T17:55:35+0000,1718387735,2024-06-15T06:59:00+0000,2024-06-15T06:59:00+0000,"How to reporoduce:1. Set `camel.jbang.jib-maven-plugin-version=3.4.3` in `application.properties`
2. Run `jbang ""-Dcamel.jbang.version=4.6.0"" camel@apache/camel export --fresh`Result in pom.xmlExpected result:",No comments found
20876,New Feature,Andrea Cosentino,Andrea Cosentino,None,4.x,2024-06-14T13:04:31+0000,1718370271,2024-06-14T13:04:31+0000,,https://github.com/akeylesslabs/akeyless-java,No comments found
20875,Task,Unassigned,Aurélien Pupier,None,None,2024-06-13T11:58:10+0000,1718279890,2024-06-27T12:13:46+0000,,"Currently there is the possibility to trigger component test by providing a comment on a PR with /component-test.
it would be convenient to start the test automatically.
Maybe easier starting with Dependabot as there is the name of the updated dependency in the message.
Not necessarily easy to kno all of the component directly impacted. Currently what I'm doing manually is:Maybe as a first iteration, providing a link in the generated comment message to the search URL can help to save few clicks",No comments found
20874,Task,Unassigned,Aurélien Pupier,None,4.x,2024-06-13T11:52:03+0000,1718279523,2024-06-27T12:14:08+0000,,"Currently, it is possible to play unit tests for specific component/group of components by providing a comment /component-test on a Pull request.
It would be convenient to have the possibility to do it for Integration Tests; For instance with a comment: /compontent-it-testTechnical points:",No comments found
20873,Bug,James Netherton,James Netherton,None,"4.4.3,4.7.0",2024-06-13T10:55:25+0000,1718276125,2024-06-13T12:59:48+0000,2024-06-13T12:59:48+0000,"In VertxPlatformHttpSupport.writeResponse, the only exception that is handled is when fallback type conversion fails on the message body:https://github.com/apache/camel/blob/4621c36131a32fa340e6ab5975126d207a104fe5/components/camel-platform-http-vertx/src/main/java/org/apache/camel/component/platform/http/vertx/VertxPlatformHttpSupport.java#L179-L205However, it can potentially happen that other parts of processing the response, such as adding HTTP headers, can fail and cause an exception. In this case, the Vert.x promise is left unfulfilled and thus the response may not complete correctly.It is probably better to wrap all of the writeResponse method code in a try / catch block so the promise can be correctly set in a failed state.",No comments found
20872,New Feature,Unassigned,Federico Mariani,None,4.x,2024-06-13T09:01:10+0000,1718269270,2024-06-13T09:20:41+0000,,"It is common to use a database like a vault, where users store key/value secrets. It would be nice to have a PropertyFunction that can be used to retrieve that information, in particular, the user experience should be similar to the hashicorp-vault one. Given a table with the following structurethe PropertyFunction can be configured via system properties likeand the properties can be retrieved viafor exampleGiven that <returnColumn><table><keyColumn> should be constant, we may add those to system properties alaand the expression can beThis is just a first an hypothetical implementation, I am open to discussions.",['Claus Ibsen - 2024-06-13T09:03:45+0000 It should be in the camel-sql component only']
20871,Improvement,Unassigned,Aurélien Pupier,None,None,2024-06-13T08:36:34+0000,1718267794,2024-07-26T08:57:16+0000,,"Toolings are currently using the catalog to let user browse components. In the IoT space, users are often coming with protocol names, such as OPC UA, CANOpen and more. Currently when searching for these protocols, no component are showing up. But the component PLC4X is supporting them.Adding all of these protocols in the description of the component, which is part of the catalog, is making the description too long.Other ideas to improve discoverability:Note: initial discussion https://github.com/apache/camel/pull/14419",No comments found
20870,Task,Unassigned,Aurélien Pupier,None,None,2024-06-13T07:54:34+0000,1718265274,2024-09-17T11:17:01+0000,,"it is often that the camel-website is broken due to changes in documentation in other Camel repositories where the documentation is defined.
it will be convenient to have a PR check on each of these repositories to avoid being in this state.","['Aurélien Pupier - 2024-06-13T08:30:32+0000 on camel-website, the checks are done with: https://github.com/apache/camel-website/blob/8f76ab02be27d68403aa4eed01d0800c5707b179/package.json#L15-L18\n    ""check:html"": ""html-validate public"",\n    ""check:links"": ""deadlinks-linux public"",\n    ""check:redirects"": ""tests/redirect.sh -s"",\n    ""checks"": ""run-s -l check:links check:html check:redirects"",']"
20869,Improvement,Claus Ibsen,Lucas da Silva Lima,4.6.0,4.8.0,2024-06-12T17:38:47+0000,1718213927,2024-08-14T09:24:17+0000,2024-08-14T09:24:17+0000,"On new camel-spring-rabbitmq does not include ""skip"" options, like: skipDeclareQueue https://camel.apache.org/components/3.22.x/rabbitmq-component.html#_component_option_skipQueueDeclareIf we create a producer with only exchange and routingKey (and autoDeclareProducer), it will generate random queues:","['Lucas da Silva Lima - 2024-08-08T18:17:19+0000 Any update? :c', 'Claus Ibsen - 2024-08-09T13:55:38+0000 You are welcome to help with this and dive into the source code and see if you can find out how to do it, and send a PR', 'Claus Ibsen - 2024-08-14T09:24:17+0000 Added the skip options']"
20868,Improvement,John Poth,John Poth,None,4.7.0,2024-06-12T09:16:57+0000,1718183817,2024-06-12T12:22:39+0000,2024-06-12T12:02:21+0000,Would be cool if the camel-aws-xray-starter configured Camel out of the box. Thanks !,No comments found
20867,Bug,Unassigned,Barry Rawlinson,4.5.0,None,2024-06-12T07:09:27+0000,1718176167,2024-06-12T07:40:51+0000,2024-06-12T07:40:51+0000,"With camel-quarkus 3.9.5 (which uses camel 4.4.1) this routing works:After upgrading Quarkus to 3.10.0 (Camel 4.5.X)  or Quarkus 3.11.1 (Camel 4.6.0) I receive a DirectConsumerNotAvailableException for ""get-orders"" in the ""get-order"" route.","['Claus Ibsen - 2024-06-12T07:16:08+0000 See the upgrade guide\nhttps://camel.apache.org/manual/camel-4x-upgrade-guide-4_5.html#_rest_dsl', 'Barry Rawlinson - 2024-06-12T07:36:23+0000 Thanks davsclaus \n  restConfiguration().inlineRoutes(false);\n""Fixes"" it for me, but I don\'t understand what I am doing wrong. From the documentation:\nTo do this you MUST use direct endpoints, and each endpoint must be unique name per service\nBut my direct endpoints are unique : get-orders and get-order\nIs it because I am then branching to get-orders from get-order ?', 'Claus Ibsen - 2024-06-12T07:40:43+0000 The routes are inlined in the rest routes, so there are no form(""direct:xxx"") routes, and you cannot call it from another route.']"
20866,Bug,Claus Ibsen,Raymond,4.6.0,4.7.0,2024-06-12T06:32:20+0000,1718173940,2024-07-11T07:26:55+0000,2024-06-13T09:02:28+0000,"I have Camel 4.6 running on Java 21When I use the following curl:To test the following route:This works as expected and the result is Y.Now I changed the exchangepattern from 'InOut' to 'InOnly':When I call this flow with curl multiple times, I sometimes get the result:XAnd the other time:XXSo the result is returned twice or even more times. I would expect only to get the output X (which for example works this way when I use ActiveMQ).It may take more than 10 times before you can see the double responses, but this behavior can be easier reproduced by adding more SEDA endpoints:","['Raymond - 2024-06-12T06:33:13+0000 Reproducer add as discussed on Zulip:\nhttps://camel.zulipchat.com/#narrow/stream/257298-camel/topic/SEDA.20with.20exchangepattern.20inonly', 'Claus Ibsen - 2024-06-13T07:28:28+0000 Okay so this is a bit expected as the input is an input stream, and when you make seda InOnly it makes a shallow copy of the message; which means the body is the same object instance, and then you can have concurrent read from this in both routes.\nSo if I loop 100 times, then I get this sometimes\nx1\nx2\nxx3\nxx4\nx5\nx6\nxx7\nxx8\nxx9\nx10\nx11\nxx12\nx13\nxx14\nx15\nx16\nx17\nx18\nx19\nx20\nx21\nx22\nxx23\nx24\nxx25\nx26\nxx27\nxx28\nx29\nx30\nx31\nx32\nx33\nx34\nx35\nx36\nx37\nx38\nx39\nxx40\nx41\nx42\nx43\nx44\nx45\nx46\nx47\nx48\nx49\nx50\nx51\nxxx52\nxx53\nx54\nx55\nx56\nx57\nx58\nx59\nx60\nx61\nx62\nx63\nx64\nx65\nx66\nx67\nx68\nx69\nx70\nx71\nxx72\nx73\nx74\nx75\nx76\nx77\nx78\nx79\nx80\nx81\nx82\nx83\nx84\nx85\nx86\nx87\nx88\nx89\nx90\nx91\nx92\nx93\nx94\nx95\nx96\nx97\nx98\nx99\nx100', 'Claus Ibsen - 2024-06-13T07:29:57+0000 If I convert the payload to a byte[] before seda, then this will not happen\n        <from uri=""jetty:http://0.0.0.0:9001/test""/>\n        <convertBodyTo type=""byte[]""/>\n        <to uri=""seda:2?exchangePattern=InOnly""/>\n\nx1\nx2\nx3\nx4\nx5\nx6\nx7\nx8\nx9\nx10\nx11\nx12\nx13\nx14\nx15\nx16\nx17\nx18\nx19\nx20\nx21\nx22\nx23\nx24\nx25\nx26\nx27\nx28\nx29\nx30\nx31\nx32\nx33\nx34\nx35\nx36\nx37\nx38\nx39\nx40\nx41\nx42\nx43\nx44\nx45\nx46\nx47\nx48\nx49\nx50\nx51\nx52\nx53\nx54\nx55\nx56\nx57\nx58\nx59\nx60\nx61\nx62\nx63\nx64\nx65\nx66\nx67\nx68\nx69\nx70\nx71\nx72\nx73\nx74\nx75\nx76\nx77\nx78\nx79\nx80\nx81\nx82\nx83\nx84\nx85\nx86\nx87\nx88\nx89\nx90\nx91\nx92\nx93\nx94\nx95\nx96\nx97\nx98\nx99\nx100', 'Claus Ibsen - 2024-06-13T07:34:10+0000 We could consider letting Camel copy the message body as a new StreamCache body when its StreamCaching based. Then you would have individual objects and this will avoid this problem with concurrent read on the same instance. The overhead is that the payload is then also copied (ie in-memory buffer) and that its in camel-core so a central place in the routing engine.', 'Claus Ibsen - 2024-06-13T07:47:02+0000 We could make this for the following\nseda (in only)\ndisruptor (in only)\nwiretap (copy mode)\nas they are intended to execute the copied exchange independently\nthen we avoid doing this in a central place in the routing engine with overhead for normal use-cases', ""Raymond - 2024-06-13T13:21:56+0000 I suspected that this was as expected, that's why I first asked it on Zulip. I think this solution is nice though, because sometimes technically this can be logical, but still can be confusing from a functional perspective.""]"
20865,Improvement,James Netherton,James Netherton,None,4.7.0,2024-06-12T06:24:55+0000,1718173495,2024-06-12T07:08:19+0000,2024-06-12T07:08:19+0000,The elasticsearch-rest-client docs are a little thin on detail. It'd be good to do like the camel-elasticsearch component and have an overview of the supported operations and how they are used.,No comments found
20864,Bug,Claus Ibsen,Kartik,3.22.2,"3.21.5,3.22.3,4.0.6,4.4.3,4.7.0",2024-06-12T05:38:38+0000,1718170718,2024-06-17T07:39:11+0000,2024-06-12T17:43:02+0000,"In confluent kafka, we can register the topic against schema validation from the schema registry. When configured the confluent document says either we should have a pojo object defined in the code that is used for serialization/deserialization OR a custom ""ObjectNode"" can be created from their schema utils. Attaching the document belowhttps://docs.confluent.io/platform/current/schema-registry/fundamentals/serdes-develop/serdes-json.html#sending-a-jsonnode-payloadFor our case, we have a different schema registered and can't have all the POJO defined as schema registered at run time, so we are using the below code to generate an object from the schema.If the ""ObjectNode"" payload is directly written using kafka-client library it works. But when written using camel component, The ""KafkaProducer"" in camel component does ""isIterable"" check and if true sends each value and this doesn't work for confluent kafka as the custom ""io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer"" expects a whole object.The code in ""io.confluent.kafka.serializers.json.KafkaJsonSchemaSerializer expects whole object.Basically, in simple words, The ""envelope"" object created is no longer the same object but is iterated and values are iterated and sent independently resulting in schema validation error.","['Claus Ibsen - 2024-06-12T06:29:12+0000 Try with latest 4.4.x or 4.6.0 release and report back there thanks', 'Kartik - 2024-06-12T07:22:00+0000 davsclaus  I see the same issue in 4.6.0 on checking there is a code that checks whether the input payload is of type Iterable.', 'Claus Ibsen - 2024-06-12T07:29:14+0000 Thanks for checking', 'Claus Ibsen - 2024-06-12T12:23:49+0000 You can turn this off with useIterator=false', 'Kartik - 2024-06-17T05:06:46+0000 Thanks for the fix davsclaus But the challenge is for users, they will never understand why schema validation is failing [error message does not indicate about records sent as individual items] and it will be tough to find this flag and turn this off just be reading documentation.\nI think some additional doc should be added.', 'Claus Ibsen - 2024-06-17T07:38:55+0000 You are welcome to add docs, click ""edit this page"" in the top right\nhttps://camel.apache.org/components/next/kafka-component.html\n  And send the doc changes as PR']"
20863,Bug,Jiri Ondrusek,Jiri Ondrusek,4.7.0,4.7.0,2024-06-11T11:53:46+0000,1718106826,2024-06-11T14:17:52+0000,2024-06-11T14:17:52+0000,"If endpoint uses only a producer (example from camel-quarkus integration tests)
Producer for multiple messages requires  CamelToolExecutorCache.getInstance().getTools()  to return something (!= null) see code
I checked that only place which is adding something to the cache is a   consumer, which does not seem to be correct.",No comments found
20862,Task,Unassigned,Aurélien Pupier,4.7.0,None,2024-06-11T10:06:14+0000,1718100374,2024-06-12T07:00:42+0000,2024-06-12T07:00:42+0000,No description available,"['Nicolas Filotto - 2024-06-11T11:19:48+0000 Warning AFAIK fastinstall only exists in Camel 3 starting from Camel 4 we use quickly like in Quarkus and Camel Quarkus', 'Aurélien Pupier - 2024-06-11T11:41:58+0000 good point. The tests are not played when using -Dquickly', 'Claus Ibsen - 2024-06-11T14:18:55+0000 The tests does not run with fastinstall as there is some replacer that makes it as quickly\n  ~/workspace/camel/components/camel-kafka main *11 ❯ mvn clean install -P fastinstall\n[INFO] -Pfastinstall replaced by -Dquickly via AliasFastinstallEventSpy\n  [INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  4.345 s\n[INFO] Finished at: 2024-06-11T16:18:19+02:00\n[INFO] ------------------------------------------------------------------------', 'Aurélien Pupier - 2024-06-11T14:23:47+0000 apupier@localhost:~/git/camel3/components/camel-kafka$ mvn clean install -P fastinstall\n[INFO] -Pfastinstall replaced by -Dquickly via AliasFastinstallEventSpy\n[INFO] Scanning for projects...\n[INFO] ------------------------------------------------------------------------\n[INFO] Detecting the operating system and CPU architecture\n[INFO] ------------------------------------------------------------------------\n[INFO] os.detected.name: linux\n[INFO] os.detected.arch: x86_64\n[INFO] os.detected.bitness: 64\n[INFO] os.detected.version: 6.8\n[INFO] os.detected.version.major: 6\n[INFO] os.detected.version.minor: 8\n[INFO] os.detected.release: fedora\n[INFO] os.detected.release.version: 39\n[INFO] os.detected.release.like.fedora: true\n[INFO] os.detected.classifier: linux-x86_64\n[INFO] \n[INFO] --------------------< org.apache.camel:camel-kafka >--------------------\n[INFO] Building Camel :: Kafka 4.7.0-SNAPSHOT\n[INFO]   from pom.xml\n[INFO] --------------------------------[ jar ]---------------------------------\n[INFO] \n[INFO] --- clean:3.3.2:clean (default-clean) @ camel-kafka ---\n[INFO] Deleting /home/apupier/git/camel/components/camel-kafka/target\n[INFO] \n[INFO] --- build-helper:3.6.0:add-source (default) @ camel-kafka ---\n[INFO] Source directory: /home/apupier/git/camel/components/camel-kafka/src/generated/java added.\n[INFO] \n[INFO] --- build-helper:3.6.0:add-resource (default) @ camel-kafka ---\n[INFO] \n[INFO] --- resources:3.3.1:resources (default-resources) @ camel-kafka ---\n[INFO] skip non existing resourceDirectory /home/apupier/git/camel/components/camel-kafka/src/main/resources\n[INFO] Copying 12 resources from src/generated/resources to target/classes\n[INFO] \n[INFO] --- flatten:1.6.0:flatten (default-cli) @ camel-kafka ---\n[INFO] Generating flattened POM of project org.apache.camel:camel-kafka:jar:4.7.0-SNAPSHOT...\n[INFO] \n[INFO] --- compiler:3.13.0:compile (default-compile) @ camel-kafka ---\n[INFO] Recompiling the module because of changed source code.\n[INFO] Compiling 88 source files with javac [debug deprecation release 17] to target/classes\n[INFO] /home/apupier/git/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaProducer.java: Some input files use unchecked or unsafe operations.\n[INFO] /home/apupier/git/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaProducer.java: Recompile with -Xlint:unchecked for details.\n[INFO] \n[INFO] --- camel-package:4.7.0-SNAPSHOT:generate (generate) @ camel-kafka ---\n[INFO] No previous run data found, generating files.\n[INFO] Building index...\n[INFO] Generated bean.properties containing 1 Camel bean: KafkaIdempotentRepository\n[INFO] Generated components containing 1 Camel component: kafka\n[INFO] Validation complete\n[INFO] \n[INFO] --- compiler:3.13.0:compile (recompile) @ camel-kafka ---\n[INFO] Recompiling the module because of added or removed source files.\n[INFO] Compiling 88 source files with javac [debug deprecation release 17] to target/classes\n[INFO] /home/apupier/git/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaProducer.java: Some input files use unchecked or unsafe operations.\n[INFO] /home/apupier/git/camel/components/camel-kafka/src/main/java/org/apache/camel/component/kafka/KafkaProducer.java: Recompile with -Xlint:unchecked for details.\n[INFO] \n[INFO] --- resources:3.3.1:testResources (default-testResources) @ camel-kafka ---\n[INFO] Copying 3 resources from src/test/resources to target/test-classes\n[INFO] \n[INFO] --- compiler:3.13.0:testCompile (default-testCompile) @ camel-kafka ---\n[INFO] Recompiling the module because of changed dependency.\n[INFO] Compiling 71 source files with javac [debug deprecation release 17] to target/test-classes\n[INFO] Annotation processing is enabled because one or more processors were found\n  on the class path. A future release of javac may disable annotation processing\n  unless at least one processor is specified by name (-processor), or a search\n  path is specified (--processor-path, --processor-module-path), or annotation\n  processing is enabled explicitly (-proc:only, -proc:full).\n  Use -Xlint:-options to suppress this message.\n  Use -proc:none to disable annotation processing.\n[WARNING] /home/apupier/git/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/integration/KafkaConsumerIdempotentGroupIdIT.java:[43,15] KafkaIdempotentRepository(java.lang.String,java.lang.String,java.lang.String) in org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepository has been deprecated\n[INFO] /home/apupier/git/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java: Some input files use unchecked or unsafe operations.\n[INFO] /home/apupier/git/camel/components/camel-kafka/src/test/java/org/apache/camel/component/kafka/KafkaProducerTest.java: Recompile with -Xlint:unchecked for details.\n[INFO] \n[INFO] --- camel-package:4.7.0-SNAPSHOT:generate-postcompile (generate-postcompile) @ camel-kafka ---\n[INFO] Stale files detected, re-generating.\n[INFO] Stale files detected, re-generating index.\n[INFO] Building index...\n[INFO] \n[INFO] --- jar:3.4.1:jar (default-jar) @ camel-kafka ---\n[INFO] Building jar: /home/apupier/git/camel/components/camel-kafka/target/camel-kafka-4.7.0-SNAPSHOT.jar\n[INFO] \n[INFO] --- failsafe:3.2.5:integration-test (kafka-2) @ camel-kafka ---\n[INFO] Using auto detected provider org.apache.maven.surefire.junitplatform.JUnitPlatformProvider\n[INFO] \n[INFO] -------------------------------------------------------\n[INFO]  T E S T S\n[INFO] -------------------------------------------------------\n[INFO] Running org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepositoryEagerIT\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.67 s -- in org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepositoryEagerIT\n[INFO] Running org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepositoryNonEagerIT\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.436 s -- in org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepositoryNonEagerIT\n[INFO] Running org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepositoryPersistenceIT\n[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.314 s -- in org.apache.camel.processor.idempotent.kafka.KafkaIdempotentRepositoryPersistenceIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerIdempotentWithProcessorIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.904 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerIdempotentWithProcessorIT\n[INFO] Running org.apache.camel.component.kafka.integration.batching.KafkaBatchingProcessingManualCommitIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.85 s -- in org.apache.camel.component.kafka.integration.batching.KafkaBatchingProcessingManualCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.batching.KafkaBatchingProcessingAutoCommitErrorHandlingIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.71 s -- in org.apache.camel.component.kafka.integration.batching.KafkaBatchingProcessingAutoCommitErrorHandlingIT\n[INFO] Running org.apache.camel.component.kafka.integration.batching.KafkaBatchingProcessingAutoCommitI[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 17.74 s -- in org.apache.camel.component.kafka.integration.batching.KafkaBatchingProcessingAutoCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorOffUsingKafkaManualCommitIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.716 s -- in org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorOffUsingKafkaManualCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerBatchSizeIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.421 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerBatchSizeIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorReleaseResourcesIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 8.868 s -- in org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorReleaseResourcesIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorWithBatchUsingAsyncCommitManagerIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.464 s -- in org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorWithBatchUsingAsyncCommitManagerIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerIdempotentWithCustomSerializerIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.554 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerIdempotentWithCustomSerializerIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaProducerFullIT\n[INFO] Tests run: 9, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.204 s -- in org.apache.camel.component.kafka.integration.KafkaProducerFullIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerAsyncManualCommitIT\n[INFO] Tests run: 3, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.865 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerAsyncManualCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerStopIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.313 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerStopIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerLastRecordHeaderIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.421 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerLastRecordHeaderIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerAutoInstResumeRouteStrategyIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 10.24 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerAutoInstResumeRouteStrategyIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaToDIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.320 s -- in org.apache.camel.component.kafka.integration.KafkaToDIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerIdempotentGroupIdIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.220 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerIdempotentGroupIdIT\n[INFO] Running org.apache.camel.component.kafka.integration.pause.KafkaPausableConsumerIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 16.66 s -- in org.apache.camel.component.kafka.integration.pause.KafkaPausableConsumerIT\n[INFO] Running org.apache.camel.component.kafka.integration.pause.KafkaPausableConsumerCircuitBreakerIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 7.751 s -- in org.apache.camel.component.kafka.integration.pause.KafkaPausableConsumerCircuitBreakerIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerAuthInvalidIT\n[WARNING] Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerAuthInvalidIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerTopicIsPatternIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.060 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerTopicIsPatternIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorWithBatchUsingKafkaManualCommitIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.770 s -- in org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorWithBatchUsingKafkaManualCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerAuthInvalidWithReconnectIT\n[WARNING] Tests run: 2, Failures: 0, Errors: 0, Skipped: 2, Time elapsed: 0.001 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerAuthInvalidWithReconnectIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorSeekIssueIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 13.14 s -- in org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorSeekIssueIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorWithBatchUsingKafkaManualCommitRetryIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 0.377 s -- in org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorWithBatchUsingKafkaManualCommitRetryIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerRebalanceIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.389 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerRebalanceIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerFullIT\n[INFO] Tests run: 6, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 26.80 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerFullIT\n[INFO] Running org.apache.camel.component.kafka.integration.commit.KafkaConsumerSyncWithOffsetRepoCommitIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.763 s -- in org.apache.camel.component.kafka.integration.commit.KafkaConsumerSyncWithOffsetRepoCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.commit.KafkaConsumerNoopCommitIT\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 11.19 s -- in org.apache.camel.component.kafka.integration.commit.KafkaConsumerNoopCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.commit.KafkaConsumerAsyncWithOffsetRepoCommitIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.413 s -- in org.apache.camel.component.kafka.integration.commit.KafkaConsumerAsyncWithOffsetRepoCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.commit.KafkaConsumerSyncCommitIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 4.911 s -- in org.apache.camel.component.kafka.integration.commit.KafkaConsumerSyncCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.commit.KafkaConsumerAsyncCommitIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.410 s -- in org.apache.camel.component.kafka.integration.commit.KafkaConsumerAsyncCommitIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerAuthIT\n[WARNING] Tests run: 1, Failures: 0, Errors: 0, Skipped: 1, Time elapsed: 0 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerAuthIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaTransactionIT\n[INFO] Tests run: 2, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 3.715 s -- in org.apache.camel.component.kafka.integration.KafkaTransactionIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaConsumerCustomSubscribeAdapterIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 5.415 s -- in org.apache.camel.component.kafka.integration.KafkaConsumerCustomSubscribeAdapterIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaSagaIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 1.694 s -- in org.apache.camel.component.kafka.integration.KafkaSagaIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorWithBatchUsingSyncCommitManagerIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 2.822 s -- in org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorWithBatchUsingSyncCommitManagerIT\n[INFO] Running org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorReplayOldMessagesIT\n[INFO] Tests run: 1, Failures: 0, Errors: 0, Skipped: 0, Time elapsed: 9.620 s -- in org.apache.camel.component.kafka.integration.KafkaBreakOnFirstErrorReplayOldMessagesIT\n[INFO] \n[INFO] Results:\n[INFO] \n[WARNING] Tests run: 68, Failures: 0, Errors: 0, Skipped: 4\n[INFO] \n[INFO] \n[INFO] --- failsafe:3.2.5:verify (kafka-2) @ camel-kafka ---\n[INFO] \n[INFO] --- install:3.1.1:install (default-install) @ camel-kafka ---\n[INFO] Installing /home/apupier/git/camel/components/camel-kafka/target/camel-kafka-4.7.0-SNAPSHOT.pom to /home/apupier/.m2/repository/org/apache/camel/camel-kafka/4.7.0-SNAPSHOT/camel-kafka-4.7.0-SNAPSHOT.pom\n[INFO] Installing /home/apupier/git/camel/components/camel-kafka/target/camel-kafka-4.7.0-SNAPSHOT.jar to /home/apupier/.m2/repository/org/apache/camel/camel-kafka/4.7.0-SNAPSHOT/camel-kafka-4.7.0-SNAPSHOT.jar\n[INFO] ------------------------------------------------------------------------\n[INFO] BUILD SUCCESS\n[INFO] ------------------------------------------------------------------------\n[INFO] Total time:  04:34 min\n[INFO] Finished at: 2024-06-11T16:26:44+02:00\n[INFO] ------------------------------------------------------------------------', 'Claus Ibsen - 2024-06-12T07:00:42+0000 Yeah dont know why it runs tests for you, but you can use that quickly thingy']"
20861,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-11T09:02:38+0000,1718096558,2024-06-11T09:52:53+0000,2024-06-11T09:52:53+0000,To include this information during default tracer that logs,No comments found
20860,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-11T07:59:56+0000,1718092796,2024-06-12T06:54:50+0000,2024-06-12T06:54:50+0000,We have marked all components with remote = false | remote = true on the UriEndpoint that tooling can use. But it would be good to have this information in the Endpoint API so we know this from Camel runtime as well.,No comments found
20859,Bug,Claus Ibsen,Aurélien Pupier,4.6.0,4.7.0,2024-06-10T14:53:29+0000,1718031209,2024-06-11T06:01:04+0000,2024-06-11T06:00:43+0000,when calling something like:on a file named for instance demo.camel.yaml is genrating a demo.yaml file although i would expect a demo.xml (or even better a demo.camel.xml),No comments found
20858,Improvement,Unassigned,Aurélien Pupier,4.6.0,4.x,2024-06-10T14:47:00+0000,1718030820,2024-09-18T13:26:03+0000,,"When calling transform command, it would be convenient to have a message log mentioning the file transformed with initial name and final name and if it is a new file created aor one exists and it is appended",['Claus Ibsen - 2024-09-18T13:26:03+0000 We should look at printing more activity in the jbang commands when --verbose is enabled']
20857,Improvement,Claus Ibsen,Aurélien Pupier,4.6.0,4.7.0,2024-06-10T14:43:35+0000,1718030615,2024-06-11T06:01:11+0000,2024-06-11T06:01:11+0000,"If I have a demo.camel.xml file and try to transform it to yaml by specifying a folder, the generated filename is camel.yaml. it would be convenient to generate it with all the extensions, such as: demo.camel.yaml",No comments found
20856,Improvement,Unassigned,Claus Ibsen,None,4.7.0,2024-06-10T13:23:27+0000,1718025807,2024-06-10T14:31:29+0000,2024-06-10T14:31:29+0000,No description available,['Claus Ibsen - 2024-06-10T14:31:29+0000 Its not Camel as the pid is obtained via java apis that return a long value']
20855,Improvement,Unassigned,Aurélien Pupier,4.6.0,None,2024-06-10T12:07:47+0000,1718021267,2024-06-20T15:24:42+0000,2024-06-20T15:24:42+0000,it will be convenient to provide a 'pause' action to pause all current execution of routes.,"['Aurélien Pupier - 2024-06-20T15:24:42+0000 In fact, the suspend is currently provided at Camel context and Camel route levels. This should be enough for most cases.\nthere are:\norg.apache.camel.api.management.mbean.ManagedSuspendableRouteMBean.suspend()\norg.apache.camel.api.management.mbean.ManagedCamelContextMBean.suspend()']"
20854,Bug,Claus Ibsen,Billy Jaime Beltran,4.4.1,4.x,2024-06-10T11:35:12+0000,1718019312,2024-07-02T11:36:11+0000,2024-07-02T11:36:11+0000,"When upgrading a JAXB+CXF application from Camel 4.x to Camel 4.4.x we encountered a `jakarta.xml.bind.UnmarshalException` with a linked exception of `com.sun.istack.SAXParseException2` Namespace URIs and local names to the unmarshaller needs to be interned.Through bisection, we believe this change happens after the changes in Camel-14028 .When the inbound data in a CxfCachedPayload object is converted with the new non-stream cast unmarshal(), the method attempts to find a TypeConverter fail repeatedly until a fallback CXF converter is found that instantiates a WstxDOMWrappingReader (instance of XmlStreamReader) - however this one has a flag _cfgInternNames set to false which causes the exception above to be thrown.When we force the code to flow into the old InputStream path, we end up in `camel.converter.jaxp` where factory methods create a ValidatingStreamReader (instance of XmlStreamReader) to read a ByteArrayInputStream.The latter object contains the flag mInternStrings=true and works as in previous iterations of Camel.To continue working as before, the WstxDOMWrappingReader needs interning to be activated or have the CXFCachedPayload handled by the jaxp logic","['Claus Ibsen - 2024-06-10T11:38:08+0000 Can you put together a reproducer project that demonstrates this and attach as .zip or put on github etc.', ""Billy Jaime Beltran - 2024-07-01T14:52:02+0000 Hi, I've finally managed to write a sample project. I will attach it here: export.tar.gz"", 'Claus Ibsen - 2024-07-02T11:33:46+0000 You can just add\n                .convertBodyTo(byte[].class)\n                .unmarshal(dataFormat)']"
20853,Bug,Claus Ibsen,Teodor,4.6.0,4.7.0,2024-06-10T08:18:55+0000,1718007535,2024-06-13T11:52:31+0000,2024-06-13T11:52:31+0000,"A fully functional demo project was created and published on [GitHub|https://github.com/me0x847206/issue-camel].The issue can be seen as part of the following rest route configuration code:Because of the presence of the onException section, the rest:get:/say:/bye rest route does not belong to the API group.If the onException part is removed then, the rest:get:/say:/bye rest route becomes part of the API group as expected (and as it worked on previous versions).",['Claus Ibsen - 2024-06-13T11:28:39+0000 2024-06-13T13:28:14.193+02:00  INFO 80431 — [           main] c.me0x.issue.camel.CamelConfiguration    : Route Details: URI [rest:get:/say:/bye  ]; Group [API];\n2024-06-13T13:28:14.193+02:00  INFO 80431 — [           main] c.me0x.issue.camel.CamelConfiguration    : Route Details: URI [rest:get:/say:/hello]; Group [API];']
20852,Improvement,Unassigned,Alexander Friedrichs,None,"4.4.4,4.7.0",2024-06-09T20:15:28+0000,1717964128,2024-10-08T07:53:16+0000,2024-06-10T05:49:28+0000,New option to allow adding empty files to a zip. Keeping the default behaivior.,No comments found
20851,Improvement,James Netherton,James Netherton,None,"4.4.3,4.7.0",2024-06-07T14:28:37+0000,1717770517,2024-06-10T12:02:58+0000,2024-06-10T12:02:58+0000,Quoting from the ES client docs:It is important to close the Sniffer so that its background thread gets properly shutdown and all of its resources are released. The Sniffer object should have the same lifecycle as the RestClient and get closed right before the client,No comments found
20850,Bug,Nicolas Filotto,Timur,"4.0.3,4.2.0","4.0.6,4.4.3,4.7.0",2024-06-07T14:23:33+0000,1717770213,2024-06-11T17:16:59+0000,2024-06-11T17:16:59+0000,"We encountered an infinite loop while downloading files using the SFTP endpoint.
During our investigation, we discovered the InProgressRepository utilizing the SimpleLRUCache. This cache incorporates an unconventional eviction implementation that involves a changes tracking queue.Any attempt to modify the cache, even when putting the same element, results in an increase in the cache size, potentially causing eviction to occur even for a single element.
The code is as follows:In the provided code, the failure occurs when the number of inserts reaches 2.Utilize the LRU Cache limited only by the maximum size passed into it, rather than by some internal implementation limits.Implement a standard LRUCache, say, by leveraging a LRUMap from Apache Commons.
We may provide the PR later on.We need to use a dynamic SFTP route (the download parameters depend on some configuration passed from the outside). By default, this is impossible, so we will have to use pollEnrich:The pollEnrich takes only one element (see GenericFilePollingConsumer). The file consumer requests from the SFTP endpoint the list of all files, then takes the first, then gets the list again and takes the second file, and so on.The combination of InProgressRepository and idempotent consumer is used to avoid handling the same files again.
However, every time the SFTP endpoint lists files, the endpoints and polling consumers adjust the list in the InProgressRepository, thus affecting the SimpleLRUCache.
The number of elements in the cache doesn't grow, however, the number of changes grows with almost n^2 speed.With the limit of 50k files, the SimpleLRUCache is evicted already on ~600 files. This leads to an infinite loop while processing the files.","['Claus Ibsen - 2024-06-07T14:54:44+0000 What version of Camel do you use', 'Nicolas Filotto - 2024-06-07T15:35:53+0000 Thx for reporting let me check', 'Timur - 2024-06-07T18:05:45+0000 We use 4.2.0. I checked the latest version as well - the implementation is still the same.', 'Timur - 2024-06-07T18:14:31+0000 May I ask why the priority was set to Minor? Maybe not critical, as dynamic routes is not the most used case. Likely.\nBut at least where dynamic routes are needed, the issue leads to infinite loops and might cause severe problems in other components.\nAt least if our hypothesis is correct.', 'Nicolas Filotto - 2024-06-10T13:26:49+0000 Nizametdinov could you please test with the fix in this PR https://github.com/apache/camel/pull/14424 before I merge it? Or at least provide a use case to reproduce', 'Timur - 2024-06-10T18:23:22+0000 Actually, the snippet provided in the summary can be used as a reproducer.\nRegarding end-to-end scenarios, we tested the change and it works!\nThanks nfilotto!', 'Nicolas Filotto - 2024-06-11T06:31:49+0000 Good news, thx for the feedback', 'Nicolas Filotto - 2024-06-11T15:38:58+0000 Corresponding PRs:\n4.7 https://github.com/apache/camel/pull/14424\n4.4 https://github.com/apache/camel/pull/14482\n4.0 https://github.com/apache/camel/pull/14483']"
20849,Improvement,Guillaume Nodet,Guillaume Nodet,None,4.7.0,2024-06-07T07:29:09+0000,1717745349,2024-06-07T07:29:45+0000,2024-06-07T07:29:45+0000,No description available,No comments found
20848,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-06T20:30:55+0000,1717705855,2024-06-06T20:31:38+0000,2024-06-06T20:31:38+0000,Export to camel-main with only jib (vanilla docker) then dont include kubernetes stuff.,No comments found
20847,Bug,Claus Ibsen,Claus Ibsen,4.6.0,4.7.0,2024-06-06T14:01:13+0000,1717682473,2024-06-07T06:27:39+0000,2024-06-06T18:36:24+0000,"2024-06-06 15:59:35.592 ERROR 78029 — [ntloop-thread-0] io.vertx.ext.web.RoutingContext          : Unhandled exception in router
java.lang.NoSuchMethodError: 'org.json.simple.JSONObject org.jolokia.server.core.http.HttpRequestHandler.handleThrowable(java.lang.Throwable)'
    at org.apache.camel.component.platform.http.plugin.DefaultJolokiaPlatformHttpPlugin.lambda$createVertxHandler$0(DefaultJolokiaPlatformHttpPlugin.java:184) ~[camel-platform-http-jolokia-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]
    at io.vertx.ext.web.impl.BlockingHandlerDecorator.lambda$handle$0(BlockingHandlerDecorator.java:48) ~[vertx-web-4.5.7.jar:4.5.7]
    at io.vertx.core.impl.ContextImpl.lambda$executeBlocking$1(ContextImpl.java:191) ~[vertx-core-4.5.7.jar:4.5.7]
    at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:279) ~[vertx-core-4.5.7.jar:4.5.7]
    at io.vertx.core.impl.ContextImpl.lambda$internalExecuteBlocking$2(ContextImpl.java:210) ~[vertx-core-4.5.7.jar:4.5.7]
    at io.vertx.core.impl.TaskQueue.run(TaskQueue.java:76) ~[vertx-core-4.5.7.jar:4.5.7]
    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]
    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]
    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.108.Final.jar:4.1.108.Final]
    at java.base/java.lang.Thread.run(Thread.java:833) [?:?]","['Claus Ibsen - 2024-06-06T14:01:30+0000 camel run cheese.xml --console --prop=camel.server.jolokiaEnabled=true', 'Claus Ibsen - 2024-06-06T14:13:18+0000 Ah its because they shade the json so at runtime the class is not the same (see screenshot)', ""Grzegorz Grzybek - 2024-06-07T05:51:30+0000 The screenshot shows org.jolokia.shaded.org.json.simple.xxx references. But this shaded class is ONLY included in one specific artifact:\n        <dependency>\n            <groupId>org.jolokia</groupId>\n            <artifactId>jolokia-agent-jvm</artifactId>\n            <artifactId>jolokia-server-core</artifactId>\n            <version>${jolokia-version}</version>\n            <classifier>javaagent</classifier>\n        </dependency>\nThis is explained in https://jolokia.org/migration.html#jolokia_jvm_agent_module.\nPlain org.jolokia:jolokia-agent-jvm:jar:2.0.3:compile dependency (no classifier) simply depends on com.googlecode.json-simple:json-simple:jar:1.1.1:compile instead of shading it. Are you sure your classpath doesn't contain the javaagent version?"", 'Claus Ibsen - 2024-06-07T06:10:41+0000 Yes we include the java-agent because camel-jbang makes it possible to attach jolokia and also lanunch hawtio and view the running Camel integration\n<!-- jolokia -->\n<dependency>\n<groupId>org.jolokia</groupId>\n<artifactId>jolokia-agent-jvm</artifactId>\n<version>${jolokia-version}</version>\n<classifier>javaagent</classifier>\n</dependency>\n<!-- servlet for launching hawtio -->\n<dependency>\n<groupId>jakarta.servlet</groupId>\n<artifactId>jakarta.servlet-api</artifactId>\n<version>${jakarta-servlet-api-version}</version>\n</dependency>', ""Grzegorz Grzybek - 2024-06-07T06:27:39+0000 ok - so I recommend switching to non-classifier version (you'll get proper classpath) and use javaagent flavor ONLY as part of some assembly methods (like packaging jbang applications, with maven-assembly-plugin, ...). javaagent classifier flavor should NOT be used as Maven dependency.""]"
20846,Improvement,James Netherton,James Netherton,None,4.7.0,2024-06-06T12:55:47+0000,1717678547,2024-06-10T15:04:29+0000,2024-06-10T15:04:29+0000,"Currently, you can only configure camel-elasticsearch-rest-client using endpoint options. It'd be nice to do like camel-elasticsearch and have most of those options available as component options.",No comments found
20845,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-06T08:05:01+0000,1717661101,2024-06-07T07:06:29+0000,2024-06-07T07:06:29+0000,We should maybe add a simple function for replacing text to make it easierAs today you may fiddle with setting this especially when doing a single to double quote or vise versa.,No comments found
20844,Bug,Claus Ibsen,Eduard Gomoliako,4.4.0,4.8.0,2024-06-06T07:48:57+0000,1717660137,2024-08-19T11:09:22+0000,2024-08-19T11:09:22+0000,"I have the following problem: onCompletion processor on a route can’t find a caught exception in Exchange that occurred inside Split with UseOriginalAggregationStrategy aggregation strategy.
 
Long story short:Is this an expected behavior?
Should the UseOriginalAggregationStrategy copy the EXCEPTION_CAUGHT property as well? 
Or probably it would be better if OnCompletionProcessor sets it in case of clearing the exception, wouldn’t it?
 
Thank you in advance for sharing your thoughts.","['Claus Ibsen - 2024-06-06T08:01:33+0000 See the shareUnitOfWork option', ""Eduard Gomoliako - 2024-06-06T08:34:25+0000 Thank you davsclaus, will check it out.\nThough my question still stands considering that UseOriginalAggregationStrategy copies the exception, why the other related mechanism shouldn't work? \nThinking out loud: if the Unit of Work is the scope for failures, then why UseOriginalAggregationStrategy propagates the exception?"", 'Claus Ibsen - 2024-06-18T12:36:24+0000 Put together your sample code/project as that is easier to take a look at']"
20843,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.7.0,2024-06-06T07:42:07+0000,1717659727,2024-08-13T14:55:28+0000,2024-06-12T07:41:00+0000,"Over the course of years, multiple additions and changes to the CamelTestSupport class have made it extremely fragile, tightly coupled and hard to maintain.Among the problems of this class:To make things even worse, the wide open interfaces provided by this class have leaked to other projects (such as Camel Quarkus).The work on this ticket is related to extracting the common interface and code from CamelTestSupport so that other sub-projects can specialize the safe parts of it.",['Otavio Rodolfo Piske - 2024-06-12T07:41:00+0000 Resolved with the linked PR.']
20842,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-06T04:22:37+0000,1717647757,2024-06-11T09:02:45+0000,2024-06-10T14:20:38+0000,To include this information during the traced messages,"['Claus Ibsen - 2024-06-10T13:57:26+0000 You can now see endpoint service details in the backlog tracer and via camel-jbang\n  2024-06-10 15:55:07.835  10695 --- [) thread #5 - timer://foo]                              route1/*--> :   209 - Created\n  Endpoint    timer://foo?period=30000\n  Exchange    (DefaultExchange)  InOnly  6BB0EBF7A9BE4F1-0000000000000034\n  Message     (DefaultMessage)\n  Body        (null)\n2024-06-10 15:55:07.835  10695 --- [) thread #5 - timer://foo]                              route1/log1 :   210 - Processed (0ms)\n  Exchange    (DefaultExchange)  InOnly  6BB0EBF7A9BE4F1-0000000000000034\n  Message     (DefaultMessage)\n  Body        (null)\n2024-06-10 15:55:07.836  10695 --- [) thread #5 - timer://foo]                               route1/to1 :   211 - Processed (6ms)\n  Endpoint    activemq://test.MyQueue?clientId=123456&password=foo&username=abc\n  Service     tcp://localhost:61616?jms.useAsyncSend=false\n              (protocol=jms, clientId=123456, username=abc)\n  Exchange    (DefaultExchange)  InOnly  6BB0EBF7A9BE4F1-0000000000000034\n  Message     (DefaultMessage)\n  Body        (null)\n2024-06-10 15:55:07.835  10695 --- [) thread #5 - timer://foo]                              route1/*<-- :   212 - Completed (success) (7ms)\n  Endpoint    timer://foo?period=30000\n  Exchange    (DefaultExchange)  InOnly  6BB0EBF7A9BE4F1-0000000000000034\n  Message     (DefaultMessage)\n  Header      (String)       CamelJMSDestinationProduced  test.MyQueue\n  Body        (null)', 'Claus Ibsen - 2024-06-10T13:57:59+0000 Above you can see the `Service` rows that list this information, when Camel has sent a message to an endpoint that has service information.']"
20841,Bug,Unassigned,Rob Ratcliffe,"4.0-M1,4.6.0","4.4.3,4.7.0",2024-06-05T18:12:20+0000,1717611140,2024-06-28T22:04:36+0000,2024-06-07T04:39:05+0000,"Scenario:When there is a Camel/Spring Boot API project where there are a large amount of DataSonnet (DS) scripts
And when the application is under memory load or runs for a long time, some or ALL DS scripts are removed from the mapperCache
And once they are removed from the mapperCache, then a call to an API endpoint that contains that DS script will be unable to be evaluated and the API call will continue to fail because the expression isn't re-added to the mapperCacheWhat I expect to happen instead:The API is able to recover and re-add missing DS scripts.The error returned is:From what I can tell, Camel 3.7 didn't have this issue. It looks like the DS scripts have been stored in an LRUSoftCache for a long time and is designed this way so that expressions are removed to prevent OutOfMemoryError. However, in Camel 4 the mapper became pre-initialized and .lookup() was used instead of .computeIfMiss().
Camel 3.7: https://github.com/apache/camel/blob/camel-3.7.x/components/camel-datasonnet/src/main/java/org/apache/camel/language/datasonnet/DatasonnetExpression.java#L143
Camel 4: https://github.com/apache/camel/blob/main/components/camel-datasonnet/src/main/java/org/apache/camel/language/datasonnet/DatasonnetExpression.java#L137Project that replicates this error: https://github.com/rlratcliffe/replicate-ds-error","['Eugene Berman - 2024-06-20T21:52:12+0000 Is there any workaround for this? We are running into this very often, not only with Springboot, but Quarkus too,', ""Rob Ratcliffe - 2024-06-28T22:04:36+0000 I'm not sure about a workaround, but camel-datasonnet 4.4.3 includes this fix and was released yesterday, if that helps.""]"
20840,Bug,Otavio Rodolfo Piske,Mark Wimpory,4.6.0,4.7.0,2024-06-05T15:16:37+0000,1717600597,2024-06-16T06:47:36+0000,2024-06-16T06:47:36+0000,"When setting up the KinesisConsumer to use the KinesisResumeAdapter this error is thrown.java.lang.ClassCastException: Cannot cast org.apache.camel.support.resume.ResumeActionAwareAdapter to org.apache.camel.component.aws2.kinesis.consumer.KinesisResumeAdapter
    at java.base/java.lang.Class.cast(Class.java:3889)
    at org.apache.camel.resume.ResumeStrategy.getAdapter(ResumeStrategy.java:62)I have isolated this to the following problem.The KinesisConsumer DOES NOT override the default method in ResumeAware that specified the adapter name:
 
default String adapterFactoryService()This leads to a classpath clash with the camel-support jar that is also use the name adapter-factory.  In this case the factory service when called for Kinesis creates the wrong type of adapter as above.
 
Other Resumable consumers have renamed their factory files for instance the file consumer uses file-adapter-factory.
 
I have created a work around locally (that I dont like) by creating in my own classpath a duplicate of the adapter factory.  This is loaded in preference to the jar resources but is not a perm fix.
 
The fix required is to: * Change the Kinesis2Consumer to override the method above and return its own factory name such as kinesis-adapter-factory","['Claus Ibsen - 2024-06-15T07:04:42+0000 I assume this is fixed now', 'Otavio Rodolfo Piske - 2024-06-16T06:47:36+0000 Yes. This was fixed with the linked PR.']"
20839,Bug,Claus Ibsen,Claus Ibsen,4.6.0,4.7.0,2024-06-05T12:25:37+0000,1717590337,2024-06-06T07:59:39+0000,2024-06-06T07:59:39+0000,"To reproduce the issue use this example: https://github.com/apache/camel-kamelets-examples/tree/main/jbang/open-api and move greetings-api.json to a subfolder 'apis'. Then run 'camel run --open-api apis/greetings-api.json Greetings.java' and it throws: ""The given OpenApi specification cannot be loaded from: greetings-api.json ... Cannot invoke ""java.net.URI.toString()"" because the return value of ""org.apache.camel.spi.Resource.getURI()"" is null"" . It doesn't work even if I use quotes ""apis/greetings-api.json""",No comments found
20838,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,4.7.0,4.8.0,2024-06-05T08:25:08+0000,1717575908,2024-08-14T07:25:39+0000,2024-08-14T07:25:39+0000,"Over the course of years, multiple additions and changes to the CamelTestSupport class have made it extremely fragile, tightly coupled and hard to maintain.Among the problems of this class:To make things even worse, the wide open interfaces provided by this class have leaked to other projects (such as Camel Quarkus).The work on this ticket is prevent tests from abusing internal APIs from CamelTestSupport and related classes. As of 4.7.0 they have been marked as deprecated, but need to wait until the next LTS release is out before we can finish this.","['Marco Santarelli - 2024-06-21T09:14:52+0000 From the discussion on Zulip, I am getting the following error with 4.7.0-SNAPSHOT\njava.lang.NullPointerException: Cannot invoke ""org.apache.camel.test.junit5.CamelContextManager.setGlobalStore(org.junit.jupiter.api.extension.ExtensionContext$Store)"" because ""this.contextManager"" is null\n        at org.apache.camel.test.junit5.CamelTestSupport.beforeAll(CamelTestSupport.java:148)\n        at java.base/java.util.ArrayList.forEach(ArrayList.java:1596)\n        Suppressed: java.lang.NullPointerException: Cannot invoke ""org.apache.camel.test.junit5.CamelContextManager.stop()"" because ""this.contextManager"" is null\n                at org.apache.camel.test.junit5.CamelTestSupport.afterAll(CamelTestSupport.java:153)\n                ... 1 more\nMy test class just has the `@ExtendWith(CamelExtension.class)` annotation, nothing else special about this test. It is not calling any deprecated API.\n  It seems to be caused by this line in beforeAll:\ncontextManager.setGlobalStore(globalStore);\nit tries to access the contextManager, which in case there is no per-class lifecycle, is only instantiated in the beforeEach, which runs always after the beforeAll.\nI believe in order to fix this, the following lines should be moved from beforeEach to beforeAll:\nif (contextManager == null) {\nLOG.trace(""Creating a transient context manager for {}"", context.getDisplayName());\ncontextManager = contextManagerFactory.createContextManager(ContextManagerFactory.Type.BEFORE_EACH,\ntestConfigurationBuilder, camelContextConfiguration);\n}', 'Otavio Rodolfo Piske - 2024-08-14T07:25:39+0000 Implemented with the linked PRs.']"
20837,Task,Otavio Rodolfo Piske,Otavio Rodolfo Piske,"4.7.0,4.8.0",4.9.0,2024-06-05T08:20:15+0000,1717575615,2025-02-27T20:17:41+0000,2024-09-10T11:29:40+0000,"Over the course of years, multiple additions and changes to the CamelTestSupport class have made it extremely fragile, tightly coupled and hard to maintain.Among the problems of this class:To make things even worse, the wide open interfaces provided by this class have leaked to other projects (such as Camel Quarkus).The work on this ticket is related to transforming the ContextLifecycleManagers into full-blown JUnit extensions. As this is a breaking change in a few aspects, this work is planned for 4.9.0 (or whatever is the next release after the next LTS).","['Otavio Rodolfo Piske - 2024-09-10T11:29:40+0000 Resolved with the linked PR.', ""Suzanne Becker - 2025-02-25T23:57:22+0000 Hi, I have some tests that currently override `CamelTestSupport.startCamelContext()` in order to create a resource which needs access to the context before the context is started. The reason this resource needs access to the context is in order to disable auto-startup on certain routes, which is related to the behavior I'm testing. \n`startCamelContext()` was deprecated in Camel 4.7 but no suggested replacement was provided. How can I set up my test to get access to the context before it's started?"", 'Otavio Rodolfo Piske - 2025-02-26T06:23:06+0000 Hi, you can use the following: camelContextConfiguration.withCamelContextSupplier(this::myOwnSupplier)\n  Make sure to do that as part of the configureContext() method (more details here).', ""Suzanne Becker - 2025-02-26T18:20:37+0000 Thanks Otavio. I started trying to override `configureContext` as you suggested, but then found that `camelContextConfiguration.withCamelContextSupplier()` is a protected method that I can't access from within my test class. Is it supposed to be part of the public API instead?"", ""Otavio Rodolfo Piske - 2025-02-26T18:38:52+0000 I've just made this adjustment to the API: https://github.com/apache/camel/pull/17285. It should be available on the next version.\nIn the mean time, it's safe to continue to use the startCamelContext.\nThanks!"", 'Suzanne Becker - 2025-02-27T20:17:41+0000 As of Camel 4.7, it seems that startCamelContext is no longer invoked when running tests with CamelTestSupport. I put a breakpoint inside startCamelContext in my test and ran the test, and the breakpoint was not hit. \nThe tests run and pass as expected when using Camel 4.6.']"
20836,Improvement,James Netherton,James Netherton,None,4.7.0,2024-06-05T08:08:40+0000,1717574920,2024-06-05T09:23:00+0000,2024-06-05T09:23:00+0000,Minor thing I noticed while experimenting with camel-qdrant. There's no action to delete a collection. So currently you're forced to do it via the web UI or use the Qdrant client directly.,No comments found
20835,Bug,Claus Ibsen,Arthur Naseef,"3.10.0,4.6.0","3.22.3,4.0.6,4.4.3,4.7.0",2024-06-04T22:18:54+0000,1717539534,2024-11-12T08:21:25+0000,2024-06-17T10:19:39+0000,"Out Of Memory (OOM) occurs when using the Recipient List with a large number of dynamic URLs.  For example:
 
    .recipientList(simple(""http://downstream-server/employee/${header.emplId}""))
 
with a large number of values for ${header.emplId} leads to the OOM.
 
REPRODUCER:
=============
https://github.com/artnaseef/camel-recipient-list-oom-reproducerSee the README.md for instructions to reproduce and detect the problem
 
DETAILS
=======
 The MulticastProcessor, which RecipientListProcessor extends, has the following ""unlimited"" cache:
 
    private final ConcurrentMap<Processor, Processor> errorHandlers = new ConcurrentHashMap<>();
 
Entries are added to this map for every unique processor created - every unique URL generates a unique processor.  The entries themselves are wrapped processor instances for error handling IIUC (to support the custom error handling used by multicast and recipient-list).  Entries are only removed from this map on shutdown.  Ironically, there is an LRUCache for the processors themselves, with a default maximum size of 1000, so the wrapped processors may get recreated even though the error handler remains in the map indefinitely.
 
IMPACT VERSIONS:
================
Appears to impact versions >= 3.10.0COMMIT: 0d9227ff16fb00e047fdd087740c87cce01bb545
=======
It appears this commit introduced the use of the errorHandlers ""unlimited"" cache for recipient lists.
 
FOLLOW-UP
==========
I have ideas and questions for implemeting a fix:
    - IDEA 1: We can use an LRUCache for this data structure as well.
    - Does it make more sense to remove the entries from errorHandlers when the related Processor entry is removed from it's LRUCache?
    - IDEA 2: setting on recipient list to disable the errorHandler cache (for dyamic urls with little chance of duplicates, this could be the best)","['Arthur Naseef - 2024-06-04T22:21:55+0000 POC commits can be found here: https://github.com/apache/camel/compare/main...artnaseef:camel:asn/disable-error-handler-cache-setting', 'Claus Ibsen - 2024-06-17T08:09:51+0000 You should turn off the cache on recipient list / toD, or use a header with the HTTP_PATH and a static endpoint - when you essentially have unique endpoints', 'Claus Ibsen - 2024-06-17T08:48:48+0000 But yeah we should use a LRUCache with same cache size as recipient list out of the box. And also allow to turn it off, if you set the size to -1', 'Claus Ibsen - 2024-06-17T08:49:33+0000 But for unlimited HTTP endpoints then use toD which has special optimizations for this then it should work out of the box.', 'Claus Ibsen - 2024-06-17T09:07:32+0000 With a fix then Camel does not leak memory. The biggest objects are (after GC)\n 193:           239           5736  org.apache.camel.spi.TypeConvertible', 'Claus Ibsen - 2024-06-17T09:19:46+0000 And with 1000 as default cache size\n  26:          1000         224000  org.apache.camel.component.log.LogEndpoint\n  53:          1000          48000  org.apache.camel.support.processor.CamelLogProcessor\n  62:          1000          32000  org.apache.camel.component.log.LogProducer\n  74:          1044          25056  org.apache.camel.spi.CamelLogger\n  75:          1000          24000  org.apache.camel.support.cache.ServicePool$SinglePool\n 103:          1008          16128  org.apache.camel.support.NormalizedUri\n 105:          1000          16000  org.apache.camel.support.DefaultPollingConsumerPollStrategy']"
20834,Bug,Claus Ibsen,Jason,"4.5.0,4.6.0","4.0.6,4.4.3,4.7.0",2024-06-04T19:38:57+0000,1717529937,2024-07-04T02:44:37+0000,2024-06-18T11:56:24+0000,"It appears that when the SubscriptionHelper attempts to reconnect and resubscribe to a channel in Salesforce, that occasionally and at an unpredictable rate, the subscriptionListener instance in SubscriptionHelper.subscribe throws an NPE when attempting to get the SUBSCRIPTION_FIELD from the response message from Salesforce because in some cases that message does not contain a subscription property in the JSON response.This results in the component seeming toThis seems to be the offending line:
https://github.com/apache/camel/blob/main/components/camel-salesforce/camel-salesforce-component/src/main/java/org/apache/camel/component/salesforce/internal/streaming/SubscriptionHelper.java#L475The reconnection seem to happen, but never actually re-subscribes to the channel and therefore the flow of platform-events stops until the spring-boot application is restarted.Here is some of the associated logging:This bug is causing the flow of play for events to stop unpredictably.  We have some alerting around this logging event, but it seems like this should be handled in code. I have attempted to try to catch this exception in the Camel route, but have not been successful.The message the SubscriptionHelper is try to parse is:Based on the exception:This code:Is producing the NPE and interrupting the subscription process.",No comments found
20833,Improvement,Thomas Cunningham,Thomas Cunningham,4.6.0,4.7.0,2024-06-04T18:59:29+0000,1717527569,2024-06-10T04:57:56+0000,2024-06-10T04:57:56+0000,Add a recursive option to camel-smb,No comments found
20832,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-04T13:08:28+0000,1717506508,2024-06-10T11:26:20+0000,2024-06-10T08:06:56+0000,To make it pluggable to validate incoming message body if its valid according to a json schema / openapi contract in a light weight fashion.Should be pluggable to discover json validator JAR library to use,"['Claus Ibsen - 2024-06-05T10:14:18+0000 TODO: pluggable rest client validator api in camel-core DONE\nTODO: rest-dsl in core to use plugin api if present DONE\nTODO: camel-openapi-validator component that uses the Atlassian openapi validator library', 'Claus Ibsen - 2024-06-05T19:39:28+0000 The Atlassian library is not jakarta compatible, and you have classloading issues. Its sadly due to static initializers in their library that was released in 2020\n  java.lang.NoClassDefFoundError: javax/mail/internet/AddressException\n    at com.github.fge.jsonschema.library.format.CommonFormatAttributesDictionary.<clinit>(CommonFormatAttributesDictionary.java:56) ~[json-schema-validator-2.2.14.jar:?]\n    at com.github.fge.jsonschema.library.format.DraftV3FormatAttributesDictionary.<clinit>(DraftV3FormatAttributesDictionary.java:47) ~[json-schema-validator-2.2.14.jar:?]\n    at com.github.fge.jsonschema.library.DraftV3Library.<clinit>(DraftV3Library.java:36) ~[json-schema-validator-2.2.14.jar:?]\n    at com.github.fge.jsonschema.cfg.ValidationConfigurationBuilder.<clinit>(ValidationConfigurationBuilder.java:63) ~[json-schema-validator-2.2.14.jar:?]\n    at com.github.fge.jsonschema.cfg.ValidationConfiguration.newBuilder(ValidationConfiguration.java:97) ~[json-schema-validator-2.2.14.jar:?]\n    at com.github.fge.jsonschema.cfg.ValidationConfiguration.byDefault(ValidationConfiguration.java:107) ~[json-schema-validator-2.2.14.jar:?]\n    at com.github.fge.jsonschema.main.JsonSchemaFactoryBuilder.<init>(JsonSchemaFactoryBuilder.java:68) ~[json-schema-validator-2.2.14.jar:?]\n    at com.github.fge.jsonschema.main.JsonSchemaFactory.newBuilder(JsonSchemaFactory.java:123) ~[json-schema-validator-2.2.14.jar:?]\n    at com.atlassian.oai.validator.schema.SwaggerV20Library.schemaFactory(SwaggerV20Library.java:57) ~[swagger-request-validator-core-2.24.0.jar:?]\n    at com.atlassian.oai.validator.schema.SchemaValidator.<init>(SchemaValidator.java:92) ~[swagger-request-validator-core-2.24.0.jar:?]\n    at com.atlassian.oai.validator.OpenApiInteractionValidator.<init>(OpenApiInteractionValidator.java:154) ~[swagger-request-validator-core-2.24.0.jar:?]\n    at com.atlassian.oai.validator.OpenApiInteractionValidator.<init>(OpenApiInteractionValidator.java:46) ~[swagger-request-validator-core-2.24.0.jar:?]\n    at com.atlassian.oai.validator.OpenApiInteractionValidator$Builder.build(OpenApiInteractionValidator.java:607) ~[swagger-request-validator-core-2.24.0.jar:?]\n    at org.apache.camel.component.rest.openapi.validator.client.OpenApiRestClientRequestValidator.validate(OpenApiRestClientRequestValidator.java:59) ~[camel-openapi-validator-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at org.apache.camel.support.processor.RestBindingAdvice.unmarshal(RestBindingAdvice.java:230) ~[camel-support-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at org.apache.camel.support.processor.RestBindingAdvice.before(RestBindingAdvice.java:158) ~[camel-support-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at org.apache.camel.component.rest.openapi.DefaultRestOpenapiProcessorStrategy.process(DefaultRestOpenapiProcessorStrategy.java:194) ~[camel-rest-openapi-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at org.apache.camel.component.rest.openapi.RestOpenApiProcessor.process(RestOpenApiProcessor.java:126) ~[camel-rest-openapi-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at org.apache.camel.impl.engine.DefaultAsyncProcessorAwaitManager.process(DefaultAsyncProcessorAwaitManager.java:82) ~[camel-base-engine-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at org.apache.camel.support.AsyncProcessorSupport.process(AsyncProcessorSupport.java:32) ~[camel-support-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at org.apache.camel.component.platform.http.vertx.VertxPlatformHttpConsumer.processExchange(VertxPlatformHttpConsumer.java:246) ~[camel-platform-http-vertx-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at org.apache.camel.component.platform.http.vertx.VertxPlatformHttpConsumer.lambda$handleRequest$1(VertxPlatformHttpConsumer.java:214) ~[camel-platform-http-vertx-4.7.0-SNAPSHOT.jar:4.7.0-SNAPSHOT]\n    at io.vertx.core.impl.ContextImpl.lambda$executeBlocking$0(ContextImpl.java:178) ~[vertx-core-4.5.7.jar:4.5.7]\n    at io.vertx.core.impl.ContextInternal.dispatch(ContextInternal.java:279) ~[vertx-core-4.5.7.jar:4.5.7]\n    at io.vertx.core.impl.ContextImpl.lambda$internalExecuteBlocking$2(ContextImpl.java:210) ~[vertx-core-4.5.7.jar:4.5.7]\n    at java.base/java.util.concurrent.ThreadPoolExecutor.runWorker(ThreadPoolExecutor.java:1136) ~[?:?]\n    at java.base/java.util.concurrent.ThreadPoolExecutor$Worker.run(ThreadPoolExecutor.java:635) ~[?:?]\n    at io.netty.util.concurrent.FastThreadLocalRunnable.run(FastThreadLocalRunnable.java:30) [netty-common-4.1.108.Final.jar:4.1.108.Final]\n    at java.base/java.lang.Thread.run(Thread.java:833) [?:?]\nCaused by: java.lang.ClassNotFoundException: javax.mail.internet.AddressException\n    at java.base/jdk.internal.loader.BuiltinClassLoader.loadClass(BuiltinClassLoader.java:641) ~[?:?]\n    at java.base/jdk.internal.loader.ClassLoaders$AppClassLoader.loadClass(ClassLoaders.java:188) ~[?:?]\n    at java.base/java.lang.ClassLoader.loadClass(ClassLoader.java:520) ~[?:?]\n    ... 29 more', 'Claus Ibsen - 2024-06-05T19:40:17+0000 The Camel validator checks against the openapi operation and can validate - not sure what the value add of trying to use the Atlassian library will bring']"
20831,Bug,Unassigned,Alexander Anpilov,"4.4.2,4.6.0",4.x,2024-06-04T12:36:37+0000,1717504597,2024-06-18T10:16:52+0000,2024-06-18T10:16:52+0000,(428) #camel > Possible bug with camel-salesforce - camel - Zulip (zulipchat.com),"['Alexander Anpilov - 2024-06-04T12:47:22+0000 Attached camel-test maven project.\n""mvn test"" fails with ""BeanInstantiationException: Failed to instantiate [com.fasterxml.jackson.core.JsonGenerator]: Is it an abstract class?""\nIf renaming jndi.properties, it fails requiring clientId - that\'s OK because connection params not specified.\nI need jndi.properties for setup datasources for quartz and quickfix - they lookup DS via jndi', 'Claus Ibsen - 2024-06-05T05:25:31+0000 Can you past the full stacktrace here thanks, and use Camel 4.6.0', 'Alexander Anpilov - 2024-06-05T06:50:57+0000 Stacktrace file placed', 'Claus Ibsen - 2024-06-18T07:51:07+0000 Is there a special reason you want to use jndi.properties ? Its usually old tech used in JEE app servers and not in spring boot', 'Alexander Anpilov - 2024-06-18T08:05:03+0000 I need to specify datasources for quickfixj and quartz components.\nAs I can see, that components are looking up DataSources via JNDI only:\nConfiguring QuickFIX/J (quickfixj.org)\nQuartz Configuration Reference (quartz-scheduler.org)\nMost interested in quartz, because we are using it for triggering SF integrations and therefore should be configured in the same app', 'Claus Ibsen - 2024-06-18T10:00:50+0000 try set in application.properties\n \ncamel.component.salesforce.enabled = false\n \nTo turn off spring autowiring']"
20830,Dependency upgrade,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-04T10:00:01+0000,1717495201,2024-06-14T06:39:08+0000,2024-06-14T06:39:08+0000,"[ERROR] Tests run: 3, Failures: 0, Errors: 1, Skipped: 0, Time elapsed: 0.037 s <<< FAILURE! – in org.apache.camel.component.jetty.rest.RestJettyGetCorsTest
[ERROR] org.apache.camel.component.jetty.HttpsRouteWithSslConnectorPropertiesTest.testEndpoint – Time elapsed: 0.381 s <<< ERROR!
java.lang.IllegalStateException: Response does not exist (likely recycled)
    at org.eclipse.jetty.ee10.servlet.ServletChannel.getResponse(ServletChannel.java:297)
    at org.eclipse.jetty.ee10.servlet.ServletApiResponse.getResponse(ServletApiResponse.java:97)
    at org.eclipse.jetty.ee10.servlet.ServletApiResponse.toString(ServletApiResponse.java:520)
    at java.base/java.lang.String.valueOf(String.java:4218)
    at java.base/java.lang.StringBuilder.append(StringBuilder.java:173)
    at java.base/java.util.AbstractMap.toString(AbstractMap.java:555)
    at java.base/java.lang.StringConcatHelper.stringOf(StringConcatHelper.java:453)
    at java.base/java.lang.StringConcatHelper.simpleConcat(StringConcatHelper.java:408)
    at org.apache.camel.component.jetty.HttpsRouteTest.testEndpoint(HttpsRouteTest.java:142)
    at java.base/java.lang.reflect.Method.invoke(Method.java:568)
    at java.base/java.util.concurrent.RecursiveAction.exec(RecursiveAction.java:194)
    at java.base/java.util.concurrent.ForkJoinTask.doExec(ForkJoinTask.java:373)
    at java.base/java.util.concurrent.ForkJoinPool$WorkQueue.topLevelExec(ForkJoinPool.java:1182)
    at java.base/java.util.concurrent.ForkJoinPool.scan(ForkJoinPool.java:1655)
    at java.base/java.util.concurrent.ForkJoinPool.runWorker(ForkJoinPool.java:1622)
    at java.base/java.util.concurrent.ForkJoinWorkerThread.run(ForkJoinWorkerThread.java:165)12.0.8 works.Newer version fails.","['Claus Ibsen - 2024-06-07T07:07:27+0000 https://camel.zulipchat.com/#narrow/stream/257298-camel/topic/IllegalStateException.20on.20SpringBoot.203.2E3.2E0.20.2F.20Jetty.2012.2E0.2E9/near/443214766', 'Claus Ibsen - 2024-06-13T15:11:11+0000 We should remove CamelHttpServletResponse from header in the component as that cannot be written by jetty (should skip)']"
20829,Improvement,Guillaume Nodet,Guillaume Nodet,None,4.7.0,2024-06-04T06:08:50+0000,1717481330,2024-06-04T06:36:35+0000,2024-06-04T06:10:41+0000,No description available,['Guillaume Nodet - 2024-06-04T06:10:26+0000 Fixed with 3fe53e0']
20828,Improvement,Claus Ibsen,Claus Ibsen,4.7.0,4.7.0,2024-06-03T14:02:18+0000,1717423338,2024-06-04T09:18:12+0000,2024-06-04T09:18:12+0000,No description available,No comments found
20827,New Feature,Andrea Cosentino,Claus Ibsen,None,4.7.0,2024-06-03T12:19:13+0000,1717417153,2024-06-28T09:38:19+0000,2024-06-28T09:38:05+0000,No description available,"['Claus Ibsen - 2024-06-15T07:05:15+0000 how many are left for aws ?\nAnd it would be good to do azure afterwards', 'Andrea Cosentino - 2024-06-18T10:42:29+0000 AWS completed', 'Andrea Cosentino - 2024-06-21T09:28:46+0000 Azure completed', ""Andrea Cosentino - 2024-06-26T18:07:33+0000 I'll complete GCP this week."", 'Andrea Cosentino - 2024-06-28T09:38:01+0000 GCP complete']"
20826,Task,Hiram R. Chirino,Hiram R. Chirino,None,4.7.0,2024-06-02T20:03:26+0000,1717358606,2024-06-03T08:04:05+0000,2024-06-03T08:03:51+0000,"I’m testing on two machines, (osx jdk HotSpot 22.0.1+8-16), and (linux , jdk Red Hat 21.0.3+9).. in the /camel/core/camel-util dir of the main branch.  When I run:mvn clean process-classes && sha256sum target/classes/META-INF/jandex.idxon both I get different sha signatures.  But if I run something that should be equivalent:mvn clean compile io.smallrye:jandex-maven-plugin:3.1.7:jandex && sha256sum target/classes/META-INF/jandex.idxthen I get the same sha.",No comments found
20825,New Feature,Claus Ibsen,Claus Ibsen,4.6.0,4.7.0,2024-06-01T11:17:44+0000,1717240664,2024-06-03T14:02:42+0000,2024-06-01T13:21:48+0000,It returns an empty path sections,['Claus Ibsen - 2024-06-01T13:21:48+0000 This was not implemented before']
20824,Improvement,Claus Ibsen,Claus Ibsen,None,4.7.0,2024-06-01T08:13:31+0000,1717229611,2024-06-01T08:21:19+0000,2024-06-01T08:21:19+0000,This helps during debugging as you can see internal details such as batch sizes and whatnot,No comments found
20823,Bug,Thomas Cunningham,Thomas Cunningham,None,"4.4.3,4.7.0",2024-05-31T18:14:06+0000,1717179246,2024-06-12T12:01:46+0000,2024-06-01T08:12:43+0000,Getting the following error polling an SMB share that contains directories - I think we can do a check for folders and filter them out.,No comments found
20822,New Feature,Federico Mariani,Federico Mariani,None,4.7.0,2024-05-31T16:33:00+0000,1717173180,2024-06-05T05:24:51+0000,2024-06-05T05:24:51+0000,"Implement OpenAI Tool capabilities, so that camel consumer route can be used as Tool logic ala:",No comments found
20821,Improvement,Claus Ibsen,Claus Ibsen,None,"4.4.4,4.7.0",2024-05-31T11:22:07+0000,1717154527,2024-10-03T08:36:36+0000,2024-05-31T12:49:02+0000,To make it easy to enable tracing every processor in its own span,"['Claus Ibsen - 2024-05-31T11:22:19+0000 https://github.com/apache/camel-spring-boot/pull/1157', 'Claus Ibsen - 2024-05-31T12:51:57+0000 For CEQ\nhttps://github.com/apache/camel-quarkus/issues/6143']"
20820,Bug,Claus Ibsen,Claus Ibsen,None,"4.4.3,4.7.0",2024-05-31T09:55:27+0000,1717149327,2024-06-02T06:05:11+0000,2024-05-31T09:59:09+0000,Reported on user mailing list,No comments found
20819,Bug,Claus Ibsen,Claus Ibsen,4.6.0,"4.4.3,4.7.0",2024-05-30T17:53:11+0000,1717091591,2024-06-02T06:07:20+0000,2024-05-31T08:33:33+0000,camel-kamelets-examples/jbang/hello-yaml main❯ camel run hello.camel.yaml --dev --prop=camel.routecontroller.enabled=trueDoes not reload route on change due to using supervised,No comments found
20818,Bug,Claus Ibsen,Marat Gubaidullin,4.6.0,4.7.0,2024-05-30T17:07:07+0000,1717088827,2024-05-30T19:05:18+0000,2024-05-30T19:05:18+0000,The following codethrows,No comments found
20817,Improvement,Unassigned,Claus Ibsen,None,4.x,2024-05-30T11:12:37+0000,1717067557,2024-05-30T13:23:14+0000,,When using PluginManager then the plugins can be added but these plugins are not started when camel starts and thus they can be in invalid state.,No comments found
20816,Bug,Claus Ibsen,Andrej Vano,None,4.7.0,2024-05-30T11:08:32+0000,1717067312,2024-10-10T09:30:32+0000,2024-05-30T13:15:29+0000,"I want to export the integration as a quarkus maven project using jbangThere is an option to specify quarkusGroupId, however there is io.quarkus.platform hardcoded here that causes an issue when I want to use a downstream quarkus version.This works on camel-4.5.x branch as there is a catch block that ignores that exceptionSteps to reproduce:","['Claus Ibsen - 2024-05-30T11:13:22+0000 Report this to the vendor of that commercial product. This is community only.', 'Claus Ibsen - 2024-05-30T13:15:26+0000 I took a look and added back to ignore download catalog errors and to use the custom group id']"
20815,Bug,Claus Ibsen,Marat Gubaidullin,4.6.0,4.7.0,2024-05-29T15:34:17+0000,1716996857,2024-05-30T08:58:00+0000,2024-05-30T08:58:00+0000,This one does not work in custom processor:This one works fine:,"['Claus Ibsen - 2024-05-29T18:35:24+0000 That is not a bug, the getVariable on exchange is only for exchange scoped variables.\nSee the javadoc of the APIs', 'Claus Ibsen - 2024-05-29T18:36:31+0000 You can also use \n \nExchangeHelper.getVariable method that would support the repo id syntax', 'Claus Ibsen - 2024-05-30T08:41:57+0000 The doc was wrong, but lets make it possible via exchange anyway since then it better fits the docs and makes it possible to work with variables both global and exchange scoped everywhere']"
10597,Bug,Claus Ibsen,Bob Paulin,2.18.0,"2.17.5,2.18.2,2.19.0",2016-12-14T14:42:08+0000,1481726528,2016-12-15T14:26:13+0000,2016-12-14T15:31:58+0000,Assume I have rest pathAnd in the type ClassA contains a reference to ClassB.Within the Swagger Doc the path for ClassA renders as expected:However ClassB gets a string parameter schemeHowever I'd expect it to be:,"['ASF GitHub Bot - 2016-12-14T14:55:56+0000 GitHub user bobpaulin opened a pull request:\nhttps://github.com/apache/camel/pull/1348\nCAMEL-10597 - Allow addition of x-className to empty VendorExtensions\nYou can merge this pull request into a Git repository by running:\n$ git pull https://github.com/bobpaulin/camel CAMEL-10597\nAlternatively you can review and apply these changes as the patch at:\nhttps://github.com/apache/camel/pull/1348.patch\nTo close this pull request, make a commit to your master/trunk branch\nwith (at least) the following in the commit message:\nThis closes #1348', 'Bob Paulin - 2016-12-14T14:56:06+0000 PR included https://github.com/apache/camel/pull/1348', 'Claus Ibsen - 2016-12-14T15:31:58+0000 Thanks for the PR', 'ASF GitHub Bot - 2016-12-14T15:34:04+0000 Github user bobpaulin closed the pull request at:\nhttps://github.com/apache/camel/pull/1348', 'Andrea Cosentino - 2016-12-15T14:05:25+0000 2.17.x is affected too davsclaus', 'Claus Ibsen - 2016-12-15T14:26:13+0000 Thanks its backported now']"
